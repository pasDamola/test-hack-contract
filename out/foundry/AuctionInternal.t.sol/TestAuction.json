{
  "abi": [
    {
      "inputs": [],
      "name": "AssertionFailedCollatStateDontMatch",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "AssertionFailedLoanDontMatch",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "Ray",
          "name": "expected",
          "type": "uint256"
        },
        {
          "internalType": "Ray",
          "name": "actual",
          "type": "uint256"
        }
      ],
      "name": "AssertionFailedRayDontMatch",
      "type": "error"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "contract IERC20",
              "name": "assetToLend",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "loanToValue",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "duration",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "expirationDate",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "tranche",
              "type": "uint256"
            },
            {
              "components": [
                {
                  "internalType": "contract IERC721",
                  "name": "implem",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                }
              ],
              "internalType": "struct NFToken",
              "name": "collateral",
              "type": "tuple"
            }
          ],
          "internalType": "struct Offer",
          "name": "offer",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "contract IERC721",
              "name": "implem",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            }
          ],
          "internalType": "struct NFToken",
          "name": "providedNft",
          "type": "tuple"
        }
      ],
      "name": "BadCollateral",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "loanId",
          "type": "uint256"
        }
      ],
      "name": "BorrowerAlreadyClaimed",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "admin",
          "type": "address"
        }
      ],
      "name": "CallerIsNotOwner",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "endDate",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "loanId",
          "type": "uint256"
        }
      ],
      "name": "CollateralIsNotLiquidableYet",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "ERC20TransferFailed",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ERC721AddressZeroIsNotAValidOwner",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ERC721ApprovalToCurrentOwner",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ERC721ApproveToCaller",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ERC721CallerIsNotOwnerNorApproved",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ERC721CallerIsNotOwnerNorApprovedForAll",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ERC721InvalidTokenId",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ERC721MintToTheZeroAddress",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ERC721TokenAlreadyMinted",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ERC721TransferFromIncorrectOwner",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ERC721TransferToNonERC721ReceiverImplementer",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ERC721TransferToTheZeroAddress",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "firstRequested",
          "type": "address"
        },
        {
          "internalType": "contract IERC20",
          "name": "requested",
          "type": "address"
        }
      ],
      "name": "InconsistentAssetRequests",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "firstTrancheIdUsed",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "trancheIdFound",
          "type": "uint256"
        }
      ],
      "name": "InconsistentTranches",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "nbOfTranches",
          "type": "uint256"
        }
      ],
      "name": "InvalidTranche",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "loanId",
          "type": "uint256"
        }
      ],
      "name": "LoanAlreadyRepaid",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "loanId",
          "type": "uint256"
        }
      ],
      "name": "LoanNotRepaidOrLiquidatedYet",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "loanId",
          "type": "uint256"
        }
      ],
      "name": "NotBorrowerOfTheLoan",
      "type": "error"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "contract IERC20",
              "name": "assetToLend",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "loanToValue",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "duration",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "expirationDate",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "tranche",
              "type": "uint256"
            },
            {
              "components": [
                {
                  "internalType": "contract IERC721",
                  "name": "implem",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                }
              ],
              "internalType": "struct NFToken",
              "name": "collateral",
              "type": "tuple"
            }
          ],
          "internalType": "struct Offer",
          "name": "offer",
          "type": "tuple"
        },
        {
          "internalType": "uint256",
          "name": "expirationDate",
          "type": "uint256"
        }
      ],
      "name": "OfferHasExpired",
      "type": "error"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "contract IERC20",
              "name": "assetToLend",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "loanToValue",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "duration",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "expirationDate",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "tranche",
              "type": "uint256"
            },
            {
              "components": [
                {
                  "internalType": "contract IERC721",
                  "name": "implem",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                }
              ],
              "internalType": "struct NFToken",
              "name": "collateral",
              "type": "tuple"
            }
          ],
          "internalType": "struct Offer",
          "name": "offer",
          "type": "tuple"
        },
        {
          "internalType": "uint256",
          "name": "requested",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "lowerBound",
          "type": "uint256"
        }
      ],
      "name": "RequestedAmountIsUnderMinimum",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "requested",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "offered",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "contract IERC20",
              "name": "assetToLend",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "loanToValue",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "duration",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "expirationDate",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "tranche",
              "type": "uint256"
            },
            {
              "components": [
                {
                  "internalType": "contract IERC721",
                  "name": "implem",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                }
              ],
              "internalType": "struct NFToken",
              "name": "collateral",
              "type": "tuple"
            }
          ],
          "internalType": "struct Offer",
          "name": "offer",
          "type": "tuple"
        }
      ],
      "name": "RequestedAmountTooHigh",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Unauthorized",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "lent",
          "type": "uint256"
        }
      ],
      "name": "UnsafeAmountLent",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "minLoanToValue",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "maxLoanToValue",
          "type": "uint256"
        }
      ],
      "name": "UnsafeOfferLoanToValuesGap",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "loanId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "loan",
          "type": "bytes"
        }
      ],
      "name": "Borrow",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "loanId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "args",
          "type": "bytes"
        }
      ],
      "name": "Buy",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "claimant",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "claimed",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "loanId",
          "type": "uint256"
        }
      ],
      "name": "Claim",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "newAuctionDuration",
          "type": "uint256"
        }
      ],
      "name": "NewAuctionDuration",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "Ray",
          "name": "newAuctionPriceFactor",
          "type": "uint256"
        }
      ],
      "name": "NewAuctionPriceFactor",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "contract IERC20",
          "name": "currency",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "newLowerBound",
          "type": "uint256"
        }
      ],
      "name": "NewBorrowAmountPerOfferLowerBound",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "contract IERC20",
          "name": "currency",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "newMinOfferCost",
          "type": "uint256"
        }
      ],
      "name": "NewMininimumOfferCost",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "Ray",
          "name": "tranche",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "newTrancheId",
          "type": "uint256"
        }
      ],
      "name": "NewTranche",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "loanId",
          "type": "uint256"
        }
      ],
      "name": "Repay",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "log_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "log_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "log_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "name": "log_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "val",
          "type": "address"
        }
      ],
      "name": "log_named_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "val",
          "type": "bytes"
        }
      ],
      "name": "log_named_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "val",
          "type": "bytes32"
        }
      ],
      "name": "log_named_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        }
      ],
      "name": "log_named_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "val",
          "type": "string"
        }
      ],
      "name": "log_named_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "log_named_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "log_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "logs",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "IS_TEST",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "contract IERC721",
                  "name": "implem",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                }
              ],
              "internalType": "struct NFToken",
              "name": "nft",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "bytes",
                  "name": "signature",
                  "type": "bytes"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "components": [
                    {
                      "internalType": "contract IERC20",
                      "name": "assetToLend",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "loanToValue",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "duration",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "expirationDate",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "tranche",
                      "type": "uint256"
                    },
                    {
                      "components": [
                        {
                          "internalType": "contract IERC721",
                          "name": "implem",
                          "type": "address"
                        },
                        {
                          "internalType": "uint256",
                          "name": "id",
                          "type": "uint256"
                        }
                      ],
                      "internalType": "struct NFToken",
                      "name": "collateral",
                      "type": "tuple"
                    }
                  ],
                  "internalType": "struct Offer",
                  "name": "offer",
                  "type": "tuple"
                }
              ],
              "internalType": "struct OfferArg[]",
              "name": "args",
              "type": "tuple[]"
            }
          ],
          "internalType": "struct BorrowArg[]",
          "name": "args",
          "type": "tuple[]"
        }
      ],
      "name": "borrow",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "loanId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            }
          ],
          "internalType": "struct BuyArg[]",
          "name": "args",
          "type": "tuple[]"
        }
      ],
      "name": "buy",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "contract IERC20",
              "name": "assetToLend",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "loanToValue",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "duration",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "expirationDate",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "tranche",
              "type": "uint256"
            },
            {
              "components": [
                {
                  "internalType": "contract IERC721",
                  "name": "implem",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                }
              ],
              "internalType": "struct NFToken",
              "name": "collateral",
              "type": "tuple"
            }
          ],
          "internalType": "struct Offer",
          "name": "offer",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "contract IERC721",
              "name": "implem",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            }
          ],
          "internalType": "struct NFToken",
          "name": "providedNft",
          "type": "tuple"
        }
      ],
      "name": "checkCollateralExternal",
      "outputs": [],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "bytes",
              "name": "signature",
              "type": "bytes"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "components": [
                {
                  "internalType": "contract IERC20",
                  "name": "assetToLend",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "loanToValue",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "duration",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "expirationDate",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "tranche",
                  "type": "uint256"
                },
                {
                  "components": [
                    {
                      "internalType": "contract IERC721",
                      "name": "implem",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "id",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct NFToken",
                  "name": "collateral",
                  "type": "tuple"
                }
              ],
              "internalType": "struct Offer",
              "name": "offer",
              "type": "tuple"
            }
          ],
          "internalType": "struct OfferArg",
          "name": "arg",
          "type": "tuple"
        }
      ],
      "name": "checkOfferArgExternal",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256[]",
          "name": "positionIds",
          "type": "uint256[]"
        }
      ],
      "name": "claim",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "sent",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256[]",
          "name": "loanIds",
          "type": "uint256[]"
        }
      ],
      "name": "claimAsBorrower",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "sent",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "Ray",
          "name": "newTranche",
          "type": "uint256"
        }
      ],
      "name": "createTranche",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "newTrancheId",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeArtifacts",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "excludedArtifacts_",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeContracts",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "excludedContracts_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeSenders",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "excludedSenders_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "failed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "getLoan",
      "outputs": [
        {
          "components": [
            {
              "internalType": "contract IERC20",
              "name": "assetLent",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "lent",
              "type": "uint256"
            },
            {
              "internalType": "Ray",
              "name": "shareLent",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "startDate",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "endDate",
              "type": "uint256"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "duration",
                  "type": "uint256"
                },
                {
                  "internalType": "Ray",
                  "name": "priceFactor",
                  "type": "uint256"
                }
              ],
              "internalType": "struct Auction",
              "name": "auction",
              "type": "tuple"
            },
            {
              "internalType": "Ray",
              "name": "interestPerSecond",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "borrower",
              "type": "address"
            },
            {
              "components": [
                {
                  "internalType": "contract IERC721",
                  "name": "implem",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                }
              ],
              "internalType": "struct NFToken",
              "name": "collateral",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "paid",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "minInterestsToRepay",
                  "type": "uint256"
                },
                {
                  "internalType": "bool",
                  "name": "liquidated",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "borrowerClaimed",
                  "type": "bool"
                }
              ],
              "internalType": "struct Payment",
              "name": "payment",
              "type": "tuple"
            },
            {
              "internalType": "uint256",
              "name": "supplyPositionIndex",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "nbOfPositions",
              "type": "uint256"
            }
          ],
          "internalType": "struct Loan",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "currency",
          "type": "address"
        }
      ],
      "name": "getMinOfferCostAndBorrowableAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "minOfferCost",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "offerBorrowAmountLowerBound",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getParameters",
      "outputs": [
        {
          "internalType": "Ray",
          "name": "auctionPriceFactor",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "auctionDuration",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "nbOfLoans",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "nbOfTranches",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "getRateOfTranche",
      "outputs": [
        {
          "internalType": "Ray",
          "name": "rate",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "contract IERC20",
              "name": "assetToLend",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "loanToValue",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "duration",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "expirationDate",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "tranche",
              "type": "uint256"
            },
            {
              "components": [
                {
                  "internalType": "contract IERC721",
                  "name": "implem",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                }
              ],
              "internalType": "struct NFToken",
              "name": "collateral",
              "type": "tuple"
            }
          ],
          "internalType": "struct Offer",
          "name": "offer",
          "type": "tuple"
        }
      ],
      "name": "offerDigest",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "onERC721Received",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "position",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "Ray",
              "name": "share",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "loanId",
              "type": "uint256"
            }
          ],
          "internalType": "struct Provision",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "loanId",
          "type": "uint256"
        }
      ],
      "name": "price",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256[]",
          "name": "loanIds",
          "type": "uint256[]"
        }
      ],
      "name": "repay",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "contract IERC20",
              "name": "assetLent",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "lent",
              "type": "uint256"
            },
            {
              "internalType": "Ray",
              "name": "shareLent",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "startDate",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "endDate",
              "type": "uint256"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "duration",
                  "type": "uint256"
                },
                {
                  "internalType": "Ray",
                  "name": "priceFactor",
                  "type": "uint256"
                }
              ],
              "internalType": "struct Auction",
              "name": "auction",
              "type": "tuple"
            },
            {
              "internalType": "Ray",
              "name": "interestPerSecond",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "borrower",
              "type": "address"
            },
            {
              "components": [
                {
                  "internalType": "contract IERC721",
                  "name": "implem",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                }
              ],
              "internalType": "struct NFToken",
              "name": "collateral",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "paid",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "minInterestsToRepay",
                  "type": "uint256"
                },
                {
                  "internalType": "bool",
                  "name": "liquidated",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "borrowerClaimed",
                  "type": "bool"
                }
              ],
              "internalType": "struct Payment",
              "name": "payment",
              "type": "tuple"
            },
            {
              "internalType": "uint256",
              "name": "supplyPositionIndex",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "nbOfPositions",
              "type": "uint256"
            }
          ],
          "internalType": "struct Loan",
          "name": "loan",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "Ray",
              "name": "share",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "loanId",
              "type": "uint256"
            }
          ],
          "internalType": "struct Provision",
          "name": "provision",
          "type": "tuple"
        }
      ],
      "name": "sendInterestsExternal",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "contract IERC20",
              "name": "assetLent",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "lent",
              "type": "uint256"
            },
            {
              "internalType": "Ray",
              "name": "shareLent",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "startDate",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "endDate",
              "type": "uint256"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "duration",
                  "type": "uint256"
                },
                {
                  "internalType": "Ray",
                  "name": "priceFactor",
                  "type": "uint256"
                }
              ],
              "internalType": "struct Auction",
              "name": "auction",
              "type": "tuple"
            },
            {
              "internalType": "Ray",
              "name": "interestPerSecond",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "borrower",
              "type": "address"
            },
            {
              "components": [
                {
                  "internalType": "contract IERC721",
                  "name": "implem",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                }
              ],
              "internalType": "struct NFToken",
              "name": "collateral",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "paid",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "minInterestsToRepay",
                  "type": "uint256"
                },
                {
                  "internalType": "bool",
                  "name": "liquidated",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "borrowerClaimed",
                  "type": "bool"
                }
              ],
              "internalType": "struct Payment",
              "name": "payment",
              "type": "tuple"
            },
            {
              "internalType": "uint256",
              "name": "supplyPositionIndex",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "nbOfPositions",
              "type": "uint256"
            }
          ],
          "internalType": "struct Loan",
          "name": "loan",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "Ray",
              "name": "share",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "loanId",
              "type": "uint256"
            }
          ],
          "internalType": "struct Provision",
          "name": "provision",
          "type": "tuple"
        }
      ],
      "name": "sendShareOfSaleAsSupplierExternal",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newAuctionDuration",
          "type": "uint256"
        }
      ],
      "name": "setAuctionDuration",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "Ray",
          "name": "newAuctionPriceFactor",
          "type": "uint256"
        }
      ],
      "name": "setAuctionPriceFactor",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "currency",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "newLowerBound",
          "type": "uint256"
        }
      ],
      "name": "setBorrowAmountPerOfferLowerBound",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "currency",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "newMinOfferCost",
          "type": "uint256"
        }
      ],
      "name": "setMinOfferCost",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setUp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetArtifactSelectors",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes4[]",
              "name": "selectors",
              "type": "bytes4[]"
            }
          ],
          "internalType": "struct StdInvariant.FuzzSelector[]",
          "name": "targetedArtifactSelectors_",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetArtifacts",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "targetedArtifacts_",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetContracts",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "targetedContracts_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetSelectors",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes4[]",
              "name": "selectors",
              "type": "bytes4[]"
            }
          ],
          "internalType": "struct StdInvariant.FuzzSelector[]",
          "name": "targetedSelectors_",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetSenders",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "targetedSenders_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testFinalPrice",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testInitialPrice",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testPrice",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "bytes",
              "name": "signature",
              "type": "bytes"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "components": [
                {
                  "internalType": "contract IERC20",
                  "name": "assetToLend",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "loanToValue",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "duration",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "expirationDate",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "tranche",
                  "type": "uint256"
                },
                {
                  "components": [
                    {
                      "internalType": "contract IERC721",
                      "name": "implem",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "id",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct NFToken",
                  "name": "collateral",
                  "type": "tuple"
                }
              ],
              "internalType": "struct Offer",
              "name": "offer",
              "type": "tuple"
            }
          ],
          "internalType": "struct OfferArg[]",
          "name": "args",
          "type": "tuple[]"
        },
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "contract IERC721",
              "name": "implem",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            }
          ],
          "internalType": "struct NFToken",
          "name": "nft",
          "type": "tuple"
        }
      ],
      "name": "useCollateralExternal",
      "outputs": [
        {
          "components": [
            {
              "internalType": "contract IERC20",
              "name": "assetLent",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "lent",
              "type": "uint256"
            },
            {
              "internalType": "Ray",
              "name": "shareLent",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "startDate",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "endDate",
              "type": "uint256"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "duration",
                  "type": "uint256"
                },
                {
                  "internalType": "Ray",
                  "name": "priceFactor",
                  "type": "uint256"
                }
              ],
              "internalType": "struct Auction",
              "name": "auction",
              "type": "tuple"
            },
            {
              "internalType": "Ray",
              "name": "interestPerSecond",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "borrower",
              "type": "address"
            },
            {
              "components": [
                {
                  "internalType": "contract IERC721",
                  "name": "implem",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                }
              ],
              "internalType": "struct NFToken",
              "name": "collateral",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "paid",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "minInterestsToRepay",
                  "type": "uint256"
                },
                {
                  "internalType": "bool",
                  "name": "liquidated",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "borrowerClaimed",
                  "type": "bool"
                }
              ],
              "internalType": "struct Payment",
              "name": "payment",
              "type": "tuple"
            },
            {
              "internalType": "uint256",
              "name": "supplyPositionIndex",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "nbOfPositions",
              "type": "uint256"
            }
          ],
          "internalType": "struct Loan",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "bytes",
              "name": "signature",
              "type": "bytes"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "components": [
                {
                  "internalType": "contract IERC20",
                  "name": "assetToLend",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "loanToValue",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "duration",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "expirationDate",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "tranche",
                  "type": "uint256"
                },
                {
                  "components": [
                    {
                      "internalType": "contract IERC721",
                      "name": "implem",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "id",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct NFToken",
                  "name": "collateral",
                  "type": "tuple"
                }
              ],
              "internalType": "struct Offer",
              "name": "offer",
              "type": "tuple"
            }
          ],
          "internalType": "struct OfferArg",
          "name": "arg",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "Ray",
              "name": "matched",
              "type": "uint256"
            },
            {
              "internalType": "contract IERC20",
              "name": "assetLent",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tranche",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "minOfferDuration",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "minOfferLoanToValue",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxOfferLoanToValue",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "components": [
                {
                  "internalType": "contract IERC721",
                  "name": "implem",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                }
              ],
              "internalType": "struct NFToken",
              "name": "nft",
              "type": "tuple"
            },
            {
              "internalType": "uint256",
              "name": "loanId",
              "type": "uint256"
            }
          ],
          "internalType": "struct CollateralState",
          "name": "collatState",
          "type": "tuple"
        }
      ],
      "name": "useOfferExternal",
      "outputs": [
        {
          "components": [
            {
              "internalType": "Ray",
              "name": "matched",
              "type": "uint256"
            },
            {
              "internalType": "contract IERC20",
              "name": "assetLent",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tranche",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "minOfferDuration",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "minOfferLoanToValue",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxOfferLoanToValue",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "components": [
                {
                  "internalType": "contract IERC721",
                  "name": "implem",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                }
              ],
              "internalType": "struct NFToken",
              "name": "nft",
              "type": "tuple"
            },
            {
              "internalType": "uint256",
              "name": "loanId",
              "type": "uint256"
            }
          ],
          "internalType": "struct CollateralState",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x6101e060405260008054600160ff1991821681178355600480549092161790556022553480156200002f57600080fd5b506040518060400160405280601481526020017f4b6169726f73204c6f616e2070726f746f636f6c00000000000000000000000081525060405180604001604052806003815260200162302e3160e81b815250620000e06301e13380620000cc6004620000b8600a6b033b2e3c9fd0803ce800000062000b6160201b620024351790919060201c565b62000b7860201b620024411790919060201c565b62000b6160201b620024351790919060201c565b6080526040805160018082528183019092529060208083019080368337505081516200011492601b92506020019062000b86565b506001601b6000815481106200012e576200012e62000bed565b6000918252602090912001556040516001625e79b760e01b03198152620a11ce6004820152600080516020620061008339815191529063ffa1864990602401602060405180830381865afa1580156200018b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620001b1919062000c03565b6001600160a01b031660a0526040516001625e79b760e01b03198152610b0b6004820152600080516020620061008339815191529063ffa1864990602401602060405180830381865afa1580156200020d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000233919062000c03565b6001600160a01b031660c052604080516318caf8e360e31b81527333c40185e5db418a44ff63453d84f629163460c36004820152602481019190915260086044820152673137b93937bbb2b960c11b6064820152600080516020620061008339815191529063c657c71890608401600060405180830381600087803b158015620002bc57600080fd5b505af1158015620002d1573d6000803e3d6000fd5b5050604080516318caf8e360e31b81527302016836a56b71f0d02689e69e326f4f4c1b905760048201526024810191909152600560448201526437bbb732b960d91b606482015260008051602062006100833981519152925063c657c7189150608401600060405180830381600087803b1580156200034f57600080fd5b505af115801562000364573d6000803e3d6000fd5b505060a051604080516318caf8e360e31b81526001600160a01b0390921660048301526024820152600660448201526539b4b3b732b960d11b606482015260008051602062006100833981519152925063c657c7189150608401600060405180830381600087803b158015620003d957600080fd5b505af1158015620003ee573d6000803e3d6000fd5b505060c051604080516318caf8e360e31b81526001600160a01b0390921660048301526024820152600760448201526639b4b3b732b91960c91b606482015260008051602062006100833981519152925063c657c7189150608401600060405180830381600087803b1580156200046457600080fd5b505af115801562000479573d6000803e3d6000fd5b50505050620004a66040518060600160405280602981526020016200612060299139805160209091012090565b6001600160e01b03191660e0526040805160608101909152602f808252620004dd9190620061496020830139805160209091012090565b6001600160e01b031916610100526301e133804210156200055e576040516372eb5f8160e11b81526301e133806004820152600080516020620061008339815191529063e5d6bf0290602401600060405180830381600087803b1580156200054457600080fd5b505af115801562000559573d6000803e3d6000fd5b505050505b81516020808401919091208251918301919091206101808290526101a081905246610140527f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f620005f48184846040805160208101859052908101839052606081018290524660808201523060a082015260009060c0016040516020818303038152906040528051906020012090509392505050565b6101205230610160526101c0525050604080518082019091526001808252600160f81b6020808401919091527f84e508d57dadc535817af594804944c3bc341cdb6befa5a0747e20285912a7ec91909155608051600080527f84e508d57dadc535817af594804944c3bc341cdb6befa5a0747e20285912a7ef82527f3688c8c497ad780a463d983223e7feac1b5d43a89bdf2be494802ee6bf0824ad559092507f84e508d57dadc535817af594804944c3bc341cdb6befa5a0747e20285912a7eb9150620006dc906b033b2e3c9fd0803ce80000009060039062000b78811b6200244117901c565b60038201556203f4806002820155601e80546001600160a01b0319167362c4386b05def01bdda7f75de4204db813fd67da908117909155604051635a6b63c160e11b8152600080516020620061008339815191529163b4d6c78291620007489190869060040162000c35565b600060405180830381600087803b1580156200076357600080fd5b505af115801562000778573d6000803e3d6000fd5b5050601e54604080516318caf8e360e31b81526001600160a01b039092166004830152602482015260056044820152646d6f6e657960d81b606482015260008051602062006100833981519152925063c657c7189150608401600060405180830381600087803b158015620007ec57600080fd5b505af115801562000801573d6000803e3d6000fd5b5050601f80546001600160a01b03191673f01ddd9e071f32c3c4cb7c0ab117e392793b658e908117909155604051635a6b63c160e11b815260008051602062006100833981519152935063b4d6c7829250620008639190869060040162000c35565b600060405180830381600087803b1580156200087e57600080fd5b505af115801562000893573d6000803e3d6000fd5b5050601f54604080516318caf8e360e31b81526001600160a01b0390921660048301526024820152600660448201526536b7b732bc9960d11b606482015260008051602062006100833981519152925063c657c7189150608401600060405180830381600087803b1580156200090857600080fd5b505af11580156200091d573d6000803e3d6000fd5b5050602080546001600160a01b03191673d4012c96ff3e41834211c6855097b1198c4132d0908117909155604051635a6b63c160e11b815260008051602062006100833981519152935063b4d6c78292506200097f9190869060040162000c35565b600060405180830381600087803b1580156200099a57600080fd5b505af1158015620009af573d6000803e3d6000fd5b5050602054604080516318caf8e360e31b81526001600160a01b039092166004830152602482015260036044820152621b999d60ea1b606482015260008051602062006100833981519152925063c657c7189150608401600060405180830381600087803b15801562000a2157600080fd5b505af115801562000a36573d6000803e3d6000fd5b5050602180546001600160a01b031916731652741cbfd3d52d1855561158e475c32924d5bc908117909155604051635a6b63c160e11b815260008051602062006100833981519152935063b4d6c782925062000a989190869060040162000c35565b600060405180830381600087803b15801562000ab357600080fd5b505af115801562000ac8573d6000803e3d6000fd5b5050602154604080516318caf8e360e31b81526001600160a01b03909216600480840191909152602483019190915260448201526337333a1960e11b606482015260008051602062006100833981519152925063c657c7189150608401600060405180830381600087803b15801562000b4057600080fd5b505af115801562000b55573d6000803e3d6000fd5b50505050505062000cde565b600062000b6f828462000c95565b90505b92915050565b600062000b6f828462000cb8565b82805482825590600052602060002090810192821562000bc4579160200282015b8281111562000bc457825182559160200191906001019062000ba7565b5062000bd292915062000bd6565b5090565b5b8082111562000bd2576000815560010162000bd7565b634e487b7160e01b600052603260045260246000fd5b60006020828403121562000c1657600080fd5b81516001600160a01b038116811462000c2e57600080fd5b9392505050565b60018060a01b038316815260006020604081840152835180604085015260005b8181101562000c735785810183015185820160600152820162000c55565b506000606082860101526060601f19601f830116850101925050509392505050565b60008262000cb357634e487b7160e01b600052601260045260246000fd5b500490565b808202811582820484141762000b7257634e487b7160e01b600052601160045260246000fd5b60805160a05160c05160e05161010051610120516101405161016051610180516101a0516101c0516153aa62000d566000396000613870015260006138bf0152600061389a015260006137f30152600061381d01526000613847015260005050600050506000505060005050600050506153aa6000f3fe608060405234801561001057600080fd5b50600436106102f15760003560e01c80636ba4c1381161019d578063a5ea11da116100e9578063bbf1dd1d116100a2578063e985e9c51161007c578063e985e9c514610692578063f7a95a9e146106a5578063fa7626d4146106da578063ff9d3a77146106e757600080fd5b8063bbf1dd1d14610657578063e20c9f7114610677578063e7af8fed1461067f57600080fd5b8063a5ea11da146105e6578063ac9898191461060e578063b1ce7a6a14610621578063b5508aa914610634578063b88d4fde1461063c578063ba414fa61461064f57600080fd5b8063916a17c611610156578063980b13c511610130578063980b13c5146105a5578063981e27e6146105b8578063a22cb465146105c0578063a497e674146105d357600080fd5b8063916a17c61461058257806392eab80e1461058a57806395d89b411461059d57600080fd5b80636ba4c1381461050457806370a08231146105175780637660e1091461052a5780638335a17f1461053d57806385226c81146105455780638d116c7a1461055a57600080fd5b8063209068711161025c5780633f7286f411610215578063504006ca116101ef578063504006ca146104a95780636352211e146104c957806366d9a9a0146104dc5780636a974035146104f157600080fd5b80633f7286f41461048657806342842e0e1461048e578063457715c1146104a157600080fd5b8063209068711461041f57806323b872dd1461043257806326a49e37146104455780632efe69b3146104585780633d6fd5be1461046b5780633e5e3c231461047e57600080fd5b806314aab74f116102ae57806314aab74f1461038f578063150b7a02146103b057806318160ddd146103dc5780631a34c700146103e45780631ed7831c146103f75780631fbc8a741461040c57600080fd5b806301ffc9a7146102f657806306fdde031461031f578063081812fc14610334578063095ea7b31461035f5780630a9254e4146103745780630c72ad201461037c575b600080fd5b61030a610304366004614197565b50600090565b60405190151581526020015b60405180910390f35b6103276106fa565b6040516103169190614204565b610347610342366004614217565b61079b565b6040516001600160a01b039091168152602001610316565b61037261036d366004614250565b6107ac565b005b610372610838565b61037261038a366004614375565b61096f565b6103a261039d366004614217565b610b7d565b604051908152602001610316565b6103c36103be3660046143ff565b610b9b565b6040516001600160e01b03199091168152602001610316565b6103a2610be8565b6103726103f2366004614250565b610bfb565b6103ff610cec565b604051610316919061449d565b6103a261041a3660046145af565b610d4e565b61034761042d36600461469e565b610d61565b6103726104403660046146d2565b610d6c565b6103a2610453366004614217565b610d9e565b6103a2610466366004614803565b610e7b565b6103a2610479366004614932565b610fe8565b6103ff611176565b6103ff6111d6565b61037261049c3660046146d2565b611236565b610372611251565b6104bc6104b7366004614217565b6112d0565b6040516103169190614973565b6103476104d7366004614217565b6113ef565b6104e46113fa565b6040516103169190614a6e565b6103a26104ff366004614803565b6114e9565b6103a2610512366004614932565b61164d565b6103a2610525366004614b21565b6117de565b610372610538366004614250565b611833565b610372611924565b61054d6119b9565b6040516103169190614b3e565b61056d610568366004614b21565b611a89565b60408051928352602083019190915201610316565b6104e4611ac8565b6103a2610598366004614217565b611bae565b610327611cb1565b6103726105b3366004614ba0565b611cce565b610372611d0e565b6103726105ce366004614c54565b611d40565b6103726105e1366004614217565b611d4b565b6105ee611e21565b604080519485526020850193909352918301526060820152608001610316565b6104bc61061c366004614d20565b611e52565b61037261062f366004614932565b611e6f565b61054d611fc4565b61037261064a366004614d80565b612094565b61030a6120cd565b61066a610665366004614deb565b6121f8565b6040516103169190614eb9565b6103ff61220a565b61037261068d366004614217565b61226a565b61030a6106a0366004614f53565b612390565b6106b86106b3366004614217565b61239c565b6040805182518152602080840151908201529181015190820152606001610316565b60005461030a9060ff1681565b6103726106f5366004614f81565b61242b565b6060600061070661244d565b905080600001805461071790614fb7565b80601f016020809104026020016040519081016040528092919081815260200182805461074390614fb7565b80156107905780601f1061076557610100808354040283529160200191610790565b820191906000526020600020905b81548152906001019060200180831161077357829003601f168201915b505050505091505090565b60006107a682612471565b92915050565b60006107b7826113ef565b9050806001600160a01b0316836001600160a01b0316036107eb57604051630591db6d60e01b815260040160405180910390fd5b336001600160a01b0382161480159061080b57506108098133612390565b155b156108295760405163e495e68760e01b815260040160405180910390fd5b61083383836124be565b505050565b60006108426124ff565b905061084c612523565b602280546000908152600593840160209081526040808320855181546001600160a01b03199081166001600160a01b03928316178355878501516001808501919091558885015160028501556060808a0151600386015560808a0151600486015560a08a015180519b86019b909b5599860151600685015560c0890151600785015560e08901516008850180548416918516919091179055610100808a0151805160098701805490951695169490941790925591850151600a8401556101208801518051600b85015594850151600c84015584840151600d8401805496909a015161ffff1990961690151561ff001916179415150293909317909655610140850151600e87015561016090940151600f9095019490945590548152200154602355565b60006109796124ff565b905060008060008060005b8651811015610b74578560050160008883815181106109a5576109a5614ff1565b602002602001015181526020019081526020016000209450600085600b016000015411806109dc5750600d850154610100900460ff165b806109eb5750600d85015460ff165b15610a2f57868181518110610a0257610a02614ff1565b602002602001015160405163dae2c27360e01b8152600401610a2691815260200190565b60405180910390fd5b84600101549350610a6b610a61610a5a876003015442610a4f919061501d565b600789015490612441565b8690612538565b600c87015461255a565b9250610a778385615030565b600b8601819055600d8601805461ff0019166101001790558554909250610aa9906001600160a01b0316333085612570565b60098501546008860154600a870154604051632142170760e11b81526001600160a01b03938416936342842e0e93610aea9330939290911691600401615043565b600060405180830381600087803b158015610b0457600080fd5b505af1158015610b18573d6000803e3d6000fd5b50505050868181518110610b2e57610b2e614ff1565b60200260200101517fa6ffc78a660e4971a47a0f916a0abae483804e6f42c9292ed06aa64f8fe4623060405160405180910390a280610b6c81615067565b915050610984565b50505050505050565b6000610b876124ff565b600092835260040160205250604090205490565b600080610baa83850185615080565b9050610bd481886040518060400160405280336001600160a01b031681526020018981525061261b565b50630a85bd0160e11b979650505050505050565b6000610bf261244d565b60020154905090565b6000306001600160a01b0316638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610c3b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c5f91906150b4565b9050336001600160a01b03821614610c955760405163d4ed9a1760e01b81526001600160a01b0382166004820152602401610a26565b81610c9e6124ff565b6001600160a01b038516600081815260069290920160205260408083209390935591518492917f67c648fad0621d49c4ec46cd8bd0f732a5999eb456200b96b1ad475163d8672f91a3505050565b6060600d805480602002602001604051908101604052809291908181526020018280548015610d4457602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610d26575b5050505050905090565b60006107a6610d5c8361289a565b612942565b60006107a682612990565b610d763382612a7a565b610d9357604051636eb172ad60e11b815260040160405180910390fd5b610833838383612ad9565b600080610da96124ff565b600084815260059190910160205260408120600481015490925090610dce824261501d565b9050610dd985612bdf565b6005830154600090821015610e13576005840154610e0e90610dfc908490612c68565b676765c793fa10079d601b1b90612c80565b610e16565b60005b90506000610e4a610e3f8660020154676765c793fa10079d601b1b612c6890919063ffffffff16565b600187015490612538565b9050610e7082610e6a87600501600101548461253890919063ffffffff16565b90612538565b979650505050505050565b600080610e866124ff565b6000808052600582810160209081526040808420895181546001600160a01b03199081166001600160a01b039283161783558b85015160018401558b84015160028401556060808d0151600385015560808d0151600485015560a08d015180519785019790975595850151600684015560c08c0151600784015560e08c01516008840180548316918416919091179055610100808d0151805160098601805490941694169390931790915590840151600a8301556101208b01518051600b84015593840151600c83015591830151600d82018054949095015161ffff1990941690151561ff0019161792151590910291909117909155610140870151600e820155610160870151600f90910155909150610f9e61244d565b6000808052600782016020818152604080842089518155828a01516001820155818a015160028201556005880183529320919052919250610fdf9190612c8c565b95945050505050565b600080610ff36124ff565b905060008080805b8681101561116b5787878281811061101557611015614ff1565b6020908102929092013560008181526005890190935260409092206008810154909650919350506001600160a01b031633146110675760405163c250ea5d60e01b815260048101839052602401610a26565b600d840154610100900460ff16156110955760405163059803b760e21b815260048101839052602401610a26565b600d84015460ff16156110e457600d8401805461ff00191661010017905560028401546110dd906110d290676765c793fa10079d601b1b90612c80565b600b86015490612538565b9250611100565b6040516311653e5f60e21b815260048101839052602401610a26565b821561115957835461111c906001600160a01b03163385612d1d565b6111268387615030565b6040519096508290849033907f34fcbac0073d7c3d388e51312faf357774904998eeb8fca628b9e6f65ee1cbf790600090a45b8061116381615067565b915050610ffb565b505050505092915050565b6060600f805480602002602001604051908101604052809291908181526020018280548015610d44576020028201919060005260206000209081546001600160a01b03168152600190910190602001808311610d26575050505050905090565b6060600e805480602002602001604051908101604052809291908181526020018280548015610d44576020028201919060005260206000209081546001600160a01b03168152600190910190602001808311610d26575050505050905090565b61083383838360405180602001604052806000815250612094565b600061125b6124ff565b905061126d8160020160000154612dc6565b61128261127b602254610d9e565b6000612df4565b600281015461129b90611296906001615030565b612dc6565b6112a961127b602254610d9e565b60028101546112bf906112969062127500615030565b6112cd61127b602254610d9e565b50565b6112d8613ff8565b6112e06124ff565b60009283526005908101602090815260409384902084516101808101865281546001600160a01b039081168252600183015482850152600283015482880152600383015460608084019190915260048401546080808501919091528851808a018a5296850154875260068501548787015260a0840196909652600784015460c08401526008840154821660e08401528751808901895260098501549092168252600a840154828601526101008084019290925287519586018852600b8401548652600c84015494860194909452600d83015460ff80821615159887019890985204909516151591830191909152610120840191909152600e810154610140840152600f01546101608301525090565b60006107a682612f1b565b60606012805480602002602001604051908101604052809291908181526020016000905b828210156114e05760008481526020908190206040805180820182526002860290920180546001600160a01b031683526001810180548351818702810187019094528084529394919385830193928301828280156114c857602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b0319168152602001906004019060208260030104928301926001038202915080841161148a5790505b5050505050815250508152602001906001019061141e565b50505050905090565b6000806114f46124ff565b6000808052600582810160209081526040808420895181546001600160a01b03199081166001600160a01b039283161783558b85015160018401558b84015160028401556060808d0151600385015560808d0151600485015560a08d015180519785019790975595850151600684015560c08c0151600784015560e08c01516008840180548316918416919091179055610100808d0151805160098601805490941694169390931790915590840151600a8301556101208b01518051600b84015593840151600c83015591830151600d82018054949095015161ffff1990941690151561ff0019161792151590910291909117909155610140870151600e820155610160870151600f9091015590915061160c61244d565b6000808052600782016020818152604080842089518155828a01516001820155818a015160028201556005880183529320919052919250610fdf9190612f61565b6000806116586124ff565b9050600061166461244d565b905060008060008060005b888110156117d157611699338b8b8481811061168d5761168d614ff1565b90506020020135612a7a565b6116b657604051636eb172ad60e11b815260040160405180910390fd5b6116d78a8a838181106116cb576116cb614ff1565b90506020020135612f91565b8560070160008b8b848181106116ef576116ef614ff1565b905060200201358152602001908152602001600020935083600201549250866005016000848152602001908152602001600020945084600b0160020160009054906101000a900460ff161561174f576117488585612f61565b9150611784565b600b850154600003611777576040516311653e5f60e21b815260048101849052602401610a26565b6117818585612c8c565b91505b6040518390839033907f34fcbac0073d7c3d388e51312faf357774904998eeb8fca628b9e6f65ee1cbf790600090a46117bd8289615030565b9750806117c981615067565b91505061166f565b5050505050505092915050565b6000806117e961244d565b90506001600160a01b03831661181257604051630b505c1d60e11b815260040160405180910390fd5b6001600160a01b039092166000908152600490920160205250604090205490565b6000306001600160a01b0316638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611873573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061189791906150b4565b9050336001600160a01b038216146118cd5760405163d4ed9a1760e01b81526001600160a01b0382166004820152602401610a26565b816118d66124ff565b6001600160a01b038516600081815260079290920160205260408083209390935591518492917f146e1a257ecd0267c391070e1bc23a703eee64ed866c1ceb73cc8b2508f4a37191a3505050565b600061192e6124ff565b600381015460235491925060009161194591612538565b905061195e6002836002016000015461129691906150d1565b61197c61196c602254610d9e565b6119776002846150d1565b612df4565b600282015461199190611296906003906150d1565b6119b561199f602254610d9e565b6119aa6003846150d1565b6119779060026150f3565b5050565b60606011805480602002602001604051908101604052809291908181526020016000905b828210156114e05783829060005260206000200180546119fc90614fb7565b80601f0160208091040260200160405190810160405280929190818152602001828054611a2890614fb7565b8015611a755780601f10611a4a57610100808354040283529160200191611a75565b820191906000526020600020905b815481529060010190602001808311611a5857829003601f168201915b5050505050815260200190600101906119dd565b6000806000611a966124ff565b6001600160a01b0390941660009081526006850160209081526040808320546007909701909152902054939492505050565b60606013805480602002602001604051908101604052809291908181526020016000905b828210156114e05760008481526020908190206040805180820182526002860290920180546001600160a01b03168352600181018054835181870281018701909452808452939491938583019392830182828015611b9657602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b03191681526020019060040190602082600301049283019260010382029150808411611b585790505b50505050508152505081526020019060010190611aec565b600080306001600160a01b0316638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611bef573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c1391906150b4565b9050336001600160a01b03821614611c495760405163d4ed9a1760e01b81526001600160a01b0382166004820152602401610a26565b6000611c536124ff565b6001810180549192506000611c6783615067565b90915550600081815260048301602052604080822087905551919450849186917f6da37ad08550ba024c1448b799ac757c4f29bc9fb729b3f370a4fa2ab798fbd591a35050919050565b60606000611cbd61244d565b905080600101805461071790614fb7565b60005b81518110156119b557611cfc828281518110611cef57611cef614ff1565b602002602001015161300d565b80611d0681615067565b915050611cd1565b611d186000612dc6565b611d3e611d26602254610d9e565b611977611d316124ff565b6003015460235490612538565b565b6119b5338383613151565b6000306001600160a01b0316638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611d8b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611daf91906150b4565b9050336001600160a01b03821614611de55760405163d4ed9a1760e01b81526001600160a01b0382166004820152602401610a26565b81611dee6124ff565b6002015560405182907f99c234461abfab1095b48d0d9527ff204caa62038112f57c795cecb99503676290600090a25050565b6000806000806000611e316124ff565b60038101546002820154825460019093015491989097509195509350915050565b611e5a613ff8565b611e6584848461261b565b90505b9392505050565b60005b8181101561083357828282818110611e8c57611e8c614ff1565b9050602002810190611e9e919061510a565b611eac906020810190614b21565b6001600160a01b03166323b872dd3330868686818110611ece57611ece614ff1565b9050602002810190611ee0919061510a565b6040516001600160e01b031960e086901b168152611f079392916020013590600401615043565b600060405180830381600087803b158015611f2157600080fd5b505af1158015611f35573d6000803e3d6000fd5b50505050611fb1838383818110611f4e57611f4e614ff1565b9050602002810190611f60919061510a565b611f6e90604081019061512a565b611f7791615173565b33858585818110611f8a57611f8a614ff1565b9050602002810190611f9c919061510a565b611fac9036819003810190615180565b61261b565b5080611fbc81615067565b915050611e72565b60606010805480602002602001604051908101604052809291908181526020016000905b828210156114e057838290600052602060002001805461200790614fb7565b80601f016020809104026020016040519081016040528092919081815260200182805461203390614fb7565b80156120805780601f1061205557610100808354040283529160200191612080565b820191906000526020600020905b81548152906001019060200180831161206357829003601f168201915b505050505081526020019060010190611fe8565b61209e3383612a7a565b6120bb57604051636eb172ad60e11b815260040160405180910390fd5b6120c7848484846131c7565b50505050565b60008054610100900460ff16156120ed5750600054610100900460ff1690565b6000737109709ecfa91a80626ff3989d68f67f5b1dd12d3b156121f35760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b8284015282518083038401815260608301909352600092909161217b917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc49160800161519c565b60408051601f1981840301815290829052612195916151cd565b6000604051808303816000865af19150503d80600081146121d2576040519150601f19603f3d011682016040523d82523d6000602084013e6121d7565b606091505b50915050808060200190518101906121ef91906151df565b9150505b919050565b6122006140b5565b611e6883836131fa565b6060600c805480602002602001604051908101604052809291908181526020018280548015610d44576020028201919060005260206000209081546001600160a01b03168152600190910190602001808311610d26575050505050905090565b6000306001600160a01b0316638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156122aa573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906122ce91906150b4565b9050336001600160a01b038216146123045760405163d4ed9a1760e01b81526001600160a01b0382166004820152602401610a26565b61232e6123286002612322676765c793fa10079d601b1b6005612441565b90612435565b83101590565b6123545760405162461bcd60e51b81526020600482015260006024820152604401610a26565b8161235d6124ff565b6003015560405182907f1ce4b7127cce448c8a88c8a281145cece8c80a8e53693505547c31fabc92c44590600090a25050565b6000611e688383613462565b6123c060405180606001604052806000815260200160008152602001600081525090565b60006123ca61244d565b905080600201548311156123f15760405163089ba7e160e41b815260040160405180910390fd5b6000928352600701602090815260409283902083516060810185528154815260018201549281019290925260020154928101929092525090565b6119b5828261349f565b6000611e6882846150d1565b6000611e6882846150f3565b7f9dcac861a288165fa5a7e007597a30abcd2d73e174280cf7c6967f5a922a443990565b600061247c826134cf565b6124995760405163089ba7e160e41b815260040160405180910390fd5b6124a161244d565b60009283526005016020525060409020546001600160a01b031690565b60006124c861244d565b6000838152600582016020526040902080546001600160a01b0319166001600160a01b03861617905590506108336112cd83612f1b565b7f84e508d57dadc535817af594804944c3bc341cdb6befa5a0747e20285912a7eb90565b61252b613ff8565b6125336134fa565b905090565b6000676765c793fa10079d601b1b61255083856150f3565b611e6891906150d1565b60008183116125695781611e68565b5090919050565b6040516323b872dd60e01b81526001600160a01b038516906323b872dd906125a090869086908690600401615043565b6020604051808303816000875af11580156125bf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906125e391906151df565b6120c7576040516362fe41f360e01b81526001600160a01b038086166004830152808516602483015283166044820152606401610a26565b612623613ff8565b600061264a8560008151811061263b5761263b614ff1565b602002602001015185856135e8565b9050600061265661244d565b60020154612665906001615030565b86519091506000805b828110156126d85761269989828151811061268b5761268b614ff1565b6020026020010151866131fa565b94508881815181106126ad576126ad614ff1565b602002602001015160200151826126c49190615030565b9150806126d081615067565b91505061266e565b50701d6329f1c35ca4bfabb9f561000000000081111561270e5760405163a1b0082360e01b815260048101829052602401610a26565b61271c84888885858861368c565b9450846127276124ff565b6101008681018051600090815260059384016020908152604091829020865181546001600160a01b03199081166001600160a01b039283161783558884015160018401558885015160028401556060808a0151600385015560808a0151600485015560a08a015180519985019990995597840151600684015560c0890151600784015560e089015160088401805483169184169190911790558887015180516009850180549093169316929092179055820151600a8201556101208701518051600b83015580830151600c83015580840151600d83018054929098015161ffff1990921690151561ff0019161790151590950294909417909455610140850151600e84015561016090940151600f909201919091555191517fdca520d648f7d72e985ce218de7119aeca8bdd20abdb296f69ee74630fe79c7b9161286d91899101614973565b60408051601f198184030181529082905261288791614204565b60405180910390a2505050509392505050565b60007f2ac049b6467232d12ceb145e80f9890371b3f6a4ccb53cdc241cf1a1c6e9dd97826000015183602001518460400151856060015186608001516128e38860a001516137b1565b6040805160208101989098526001600160a01b03909616958701959095526060860193909352608085019190915260a084015260c083015260e0820152610100015b604051602081830303815290604052805190602001209050919050565b60006107a661294f6137e6565b8360405161190160f01b6020820152602281018390526042810182905260009060620160405160208183030381529060405280519060200120905092915050565b60008061299b6124ff565b90506129b46129ad8460400151610d4e565b845161390d565b604080850151516001600160a01b031660009081526007840160209081529190205490850151919350908110612a0b57836040015184602001518260405163889976c760e01b8152600401610a2693929190615255565b836040015160600151421115612a3f576040808501516060810151915163065a5c3b60e01b8152610a269290600401615276565b816001015484604001516080015110612a73578160010154604051632fac17ed60e11b8152600401610a2691815260200190565b5050919050565b600080612a8683612f1b565b9050806001600160a01b0316846001600160a01b03161480612aad5750612aad8185613462565b80612ad15750836001600160a01b0316612ac684612471565b6001600160a01b0316145b949350505050565b6000612ae361244d565b9050836001600160a01b0316612af883612f1b565b6001600160a01b031614612b1f5760405163e146af6f60e01b815260040160405180910390fd5b6001600160a01b038316612b46576040516338f646ff60e21b815260040160405180910390fd5b612b516000836124be565b6001600160a01b03841660009081526004820160205260408120805460019290612b7c90849061501d565b90915550506001600160a01b03831660009081526004820160205260408120805460019290612bac908490615030565b90915550506000828152600382016020526040902080546001600160a01b0319166001600160a01b0385161790556120c7565b6000612be96124ff565b600501600083815260200190815260200160002090508060040154421015612c315760048181015460405163ee9e72dd60e01b81529182015260248101839052604401610a26565b600b810154151580612c475750600d81015460ff165b156119b55760405163dae2c27360e01b815260048101839052602401610a26565b600081612550676765c793fa10079d601b1b856150f3565b6000611e68828461501d565b600080836001015484600b0160000154612ca6919061501d565b600c8501549091508103612cd657600f840154612cc390826150d1565b8354612ccf9190615030565b9150612d00565b60018401548354612ce790836150f3565b612cf191906150d1565b8354612cfd9190615030565b91505b8354612d16906001600160a01b03163384612d1d565b5092915050565b60405163a9059cbb60e01b81526001600160a01b0383811660048301526024820183905284169063a9059cbb906044016020604051808303816000875af1158015612d6c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612d9091906151df565b610833576040516362fe41f360e01b81526001600160a01b03808516600483015230602483015283166044820152606401610a26565b612dd0814261501d565b612dd86124ff565b6022546000908152600591909101602052604090206004015550565b8082146119b5577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f50604051612e659060208082526022908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b75696e604082015261745d60f01b606082015260800190565b60405180910390a160408051818152600a81830152690808080808081319599d60b21b60608201526020810184905290517fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a89181900360800190a160408051818152600a81830152690808080808149a59da1d60b21b60608201526020810183905290517fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a89181900360800190a16119b5613931565b600080612f2661244d565b60008481526003820160205260409020549091506001600160a01b031680611e685760405163089ba7e160e41b815260040160405180910390fd5b6001810154600b830154600091612f789190612538565b83549091506107a6906001600160a01b03163383612d1d565b6000612f9b61244d565b90506000612fa883612f1b565b9050612fb56000846124be565b6001600160a01b03811660009081526004830160205260408120805460019290612fe090849061501d565b90915550506000838152600383016020526040812080546001600160a01b03191690556108339082908583565b60006130176124ff565b8251600090815260059190910160205260409020825190915061303990612bdf565b60006130488360000151610d9e565b600d8301805460ff19166001179055600b83018190558254909150613078906001600160a01b0316333084612570565b60098201546020840151600a840154604051632142170760e11b81526001600160a01b03909316926342842e0e926130b4923092600401615043565b600060405180830381600087803b1580156130ce57600080fd5b505af11580156130e2573d6000803e3d6000fd5b505084516040805160208082018490528801516001600160a01b0316818301528151808203830181526060909101918290529193507f56fa56fac71c8ba176bf5af94ddd918100d0d8b56a12bbe5e94bac85eca114da92506131449190614204565b60405180910390a2505050565b600061315b61244d565b9050826001600160a01b0316846001600160a01b03160361318f57604051630b7b99b960e21b815260040160405180910390fd5b6001600160a01b0384811660009081526006830160209081526040808320938716835292905220805460ff19168315151790556120c7565b6131d2848484612ad9565b6131de84848484613a3d565b6120c757604051626b5e2960e61b815260040160405180910390fd5b6132026140b5565b600061320d84612990565b9050600083602001516001600160a01b03168560400151600001516001600160a01b03161461326d5760208401516040868101515190516346aac2a960e01b81526001600160a01b03928316600482015291166024820152604401610a26565b8360400151856040015160800151146132b2578360400151856040015160800151604051632ff7abc160e11b8152600401610a26929190918252602082015260400190565b6132c485604001518560e0015161349f565b6132e38560400151602001518660200151612c6890919063ffffffff16565b84519091506132f29082613b3e565b808552676765c793fa10079d601b1b1015613350576020850151845161332f9061332090610dfc9085612c80565b60408801516020015190612538565b86604001516040516352e84b3360e11b8152600401610a2693929190615292565b8360600151856040015160400151101561337257604080860151015160608501525b836080015185604001516020015110156133955760408501516020015160808501525b8360a0015185604001516020015111156133b85760408501516020015160a08501525b60808401516133c89060026150f3565b8460a0015111156133ff57608084015160a0850151604051633065b5b760e11b815260048101929092526024820152604401610a26565b61342b828560c00151876020015187602001516001600160a01b0316612570909392919063ffffffff16565b61345882604051806060016040528088602001518152602001848152602001876101000151815250613b4a565b5092949350505050565b600061346c61244d565b6001600160a01b039384166000908152600691909101602090815260408083209490951682529290925250205460ff1690565b60a08201516134ae9082613ba4565b6119b557818160405163d8ef221b60e01b8152600401610a269291906152ae565b6000806134da61244d565b6000938452600301602052505060409020546001600160a01b0316151590565b613502613ff8565b604080516080810182526000808252602082018190528183018190526060820152815161018081019092529080613537613bcd565b516001600160a01b03168152670de0b6b3a76400006020820152676765c793fa10079d601b1b6040820152606001613572621275004261501d565b81526020016135844262127500615030565b8152602001613591613c5e565b81526020016135a06000610b7d565b81527333c40185e5db418a44ff63453d84f629163460c360208201526040016135c7613bcd565b60a00151815260200182815260200160018152602001600181525091505090565b6135f06140b5565b604051806101200160405280600081526020018560400151600001516001600160a01b031681526020018560400151608001518152602001856040015160400151815260200185604001516020015181526020018560400151602001518152602001846001600160a01b0316815260200183815260200161366f6124ff565b805460009061367d90615067565b91829055509052949350505050565b613694613ff8565b600061369e6124ff565b905060008860600151426136b29190615030565b90506136e3604051806080016040528060008152602001600081526020016000151581526020016000151581525090565b6020808b01516001600160a01b0316600090815260068501909152604090205461370d90886150f3565b60208281019190915260408051610180810182528c8301516001600160a01b039081168252818401999099528c51818301524260608201526080810194909452805180820182526002860154815260038601548184015260a08501529a8b0151600090815260049094019052989091205460c08201529590921660e08601526101008501939093525061012083019390935261014082015261016081019190915290565b60007f8ee82799d3068521f828767217e880bf7d6bb6ec7d5dbcc3de1e3e4bbb39c9e9826040516020016129259291906152dd565b6000306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614801561383f57507f000000000000000000000000000000000000000000000000000000000000000046145b1561386957507f000000000000000000000000000000000000000000000000000000000000000090565b50604080517f00000000000000000000000000000000000000000000000000000000000000006020808301919091527f0000000000000000000000000000000000000000000000000000000000000000828401527f000000000000000000000000000000000000000000000000000000000000000060608301524660808301523060a0808401919091528351808403909101815260c0909201909252805191012090565b600080600061391c8585613c9c565b9150915061392981613ce1565b509392505050565b737109709ecfa91a80626ff3989d68f67f5b1dd12d3b15613a2c5760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b9282019290925260016060820152600091907f70ca10bbd0dbfd9020a9f4b13402c16cb120705e0d1c0aeab10fa353ae586fc49060800160408051601f19818403018152908290526139cb929160200161519c565b60408051601f19818403018152908290526139e5916151cd565b6000604051808303816000865af19150503d8060008114613a22576040519150601f19603f3d011682016040523d82523d6000602084013e613a27565b606091505b505050505b6000805461ff001916610100179055565b60006001600160a01b0384163b15613b3357604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290613a81903390899088908890600401615304565b6020604051808303816000875af1925050508015613abc575060408051601f3d908101601f19168201909252613ab991810190615341565b60015b613b19573d808015613aea576040519150601f19603f3d011682016040523d82523d6000602084013e613aef565b606091505b508051600003613b1157604051626b5e2960e61b815260040160405180910390fd5b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050612ad1565b506001949350505050565b6000611e688284615030565b600080613b5561244d565b90508060020160008154613b6890615067565b9182905550600081815260078301602090815260409182902086518155908601516001820155908501516002909101559150612d168483613e2b565b600081602001518360200151148015611e685750505190516001600160a01b0391821691161490565b613bd561412b565b6040805160c081018252601e546001600160a01b03168152678ac7230489e800006020820152621275009181019190915260608101613c1642611c20615030565b815260200160008152602001613c576040805180820182526000808252602091820152815180830190925280546001600160a01b0316825260019082015290565b9052919050565b6040805180820190915260008082526020820152604080518082019091526203f480815260208101613c57676765c793fa10079d601b1b6003612441565b6000808251604103613cd25760208301516040840151606085015160001a613cc687828585613e45565b94509450505050613cda565b506000905060025b9250929050565b6000816004811115613cf557613cf561535e565b03613cfd5750565b6001816004811115613d1157613d1161535e565b03613d5e5760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e617475726500000000000000006044820152606401610a26565b6002816004811115613d7257613d7261535e565b03613dbf5760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152606401610a26565b6003816004811115613dd357613dd361535e565b036112cd5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b6064820152608401610a26565b6119b5828260405180602001604052806000815250613f09565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0831115613e7c5750600090506003613f00565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015613ed0573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116613ef957600060019250925050613f00565b9150600090505b94509492505050565b613f138383613f3c565b613f206000848484613a3d565b61083357604051626b5e2960e61b815260040160405180910390fd5b6000613f4661244d565b90506001600160a01b038316613f6f576040516325bd6bd360e01b815260040160405180910390fd5b613f78826134cf565b15613f965760405163c5a8d37160e01b815260040160405180910390fd5b6001600160a01b03831660009081526004820160205260408120805460019290613fc1908490615030565b90915550506000828152600382016020526040812080546001600160a01b0319166001600160a01b03861617905561083390848483565b60405180610180016040528060006001600160a01b031681526020016000815260200160008152602001600081526020016000815260200161404d604051806040016040528060008152602001600081525090565b8152600060208201819052604082015260600161407a604080518082019091526000808252602082015290565b815260408051608081018252600080825260208281018290529282018190526060820152910190815260200160008152602001600081525090565b6040518061012001604052806000815260200160006001600160a01b031681526020016000815260200160008152602001600081526020016000815260200160006001600160a01b0316815260200161411e604080518082019091526000808252602082015290565b8152602001600081525090565b6040518060c0016040528060006001600160a01b031681526020016000815260200160008152602001600081526020016000815260200161417c604080518082019091526000808252602082015290565b905290565b6001600160e01b0319811681146112cd57600080fd5b6000602082840312156141a957600080fd5b8135611e6881614181565b60005b838110156141cf5781810151838201526020016141b7565b50506000910152565b600081518084526141f08160208601602086016141b4565b601f01601f19169290920160200192915050565b602081526000611e6860208301846141d8565b60006020828403121561422957600080fd5b5035919050565b6001600160a01b03811681146112cd57600080fd5b80356121f381614230565b6000806040838503121561426357600080fd5b823561426e81614230565b946020939093013593505050565b634e487b7160e01b600052604160045260246000fd5b604080519081016001600160401b03811182821017156142b4576142b461427c565b60405290565b604051606081016001600160401b03811182821017156142b4576142b461427c565b60405161018081016001600160401b03811182821017156142b4576142b461427c565b60405161012081016001600160401b03811182821017156142b4576142b461427c565b604051601f8201601f191681016001600160401b038111828210171561434a5761434a61427c565b604052919050565b60006001600160401b0382111561436b5761436b61427c565b5060051b60200190565b6000602080838503121561438857600080fd5b82356001600160401b0381111561439e57600080fd5b8301601f810185136143af57600080fd5b80356143c26143bd82614352565b614322565b81815260059190911b820183019083810190878311156143e157600080fd5b928401925b82841015610e70578335825292840192908401906143e6565b60008060008060006080868803121561441757600080fd5b853561442281614230565b9450602086013561443281614230565b93506040860135925060608601356001600160401b038082111561445557600080fd5b818801915088601f83011261446957600080fd5b81358181111561447857600080fd5b89602082850101111561448a57600080fd5b9699959850939650602001949392505050565b6020808252825182820181905260009190848201906040850190845b818110156144de5783516001600160a01b0316835292840192918401916001016144b9565b50909695505050505050565b6000604082840312156144fc57600080fd5b614504614292565b9050813561451181614230565b808252506020820135602082015292915050565b600060e0828403121561453757600080fd5b60405160c081018181106001600160401b03821117156145595761455961427c565b604052905080823561456a81614230565b80825250602083013560208201526040830135604082015260608301356060820152608083013560808201526145a38460a085016144ea565b60a08201525092915050565b600060e082840312156145c157600080fd5b611e688383614525565b600082601f8301126145dc57600080fd5b81356001600160401b038111156145f5576145f561427c565b614608601f8201601f1916602001614322565b81815284602083860101111561461d57600080fd5b816020850160208301376000918101602001919091529392505050565b6000610120828403121561464d57600080fd5b6146556142ba565b905081356001600160401b0381111561466d57600080fd5b614679848285016145cb565b825250602082013560208201526146938360408401614525565b604082015292915050565b6000602082840312156146b057600080fd5b81356001600160401b038111156146c657600080fd5b612ad18482850161463a565b6000806000606084860312156146e757600080fd5b83356146f281614230565b9250602084013561470281614230565b929592945050506040919091013590565b60006040828403121561472557600080fd5b61472d614292565b9050813581526020820135602082015292915050565b80151581146112cd57600080fd5b60006080828403121561476357600080fd5b604051608081018181106001600160401b03821117156147855761478561427c565b8060405250809150823581526020830135602082015260408301356147a981614743565b604082015260608301356147bc81614743565b6060919091015292915050565b6000606082840312156147db57600080fd5b6147e36142ba565b905081358152602082013560208201526040820135604082015292915050565b60008082840361028081121561481857600080fd5b6102208082121561482857600080fd5b6148306142dc565b915061483b85614245565b8252602085013560208301526040850135604083015260608501356060830152608085013560808301526148728660a08701614713565b60a083015260e085013560c083015261010061488f818701614245565b60e08401526101206148a3888289016144ea565b8285015261016091506148b888838901614751565b81850152506101e086013561014084015261020086013581840152508193506148e3868287016147c9565b925050509250929050565b60008083601f84011261490057600080fd5b5081356001600160401b0381111561491757600080fd5b6020830191508360208260051b8501011115613cda57600080fd5b6000806020838503121561494557600080fd5b82356001600160401b0381111561495b57600080fd5b614967858286016148ee565b90969095509350505050565b81516001600160a01b0316815261022081016020830151602083015260408301516040830152606083015160608301526080830151608083015260a08301516149c960a084018280518252602090810151910152565b5060c083015160e083015260e08301516101006149f0818501836001600160a01b03169052565b8401519050610120614a178482018380516001600160a01b03168252602090810151910152565b8401519050610160614a508482018380518252602081015160208301526040810151151560408301526060810151151560608301525050565b6101408501516101e085015280850151610200850152505092915050565b60006020808301818452808551808352604092508286019150828160051b8701018488016000805b84811015614b1257898403603f19018652825180516001600160a01b03168552880151888501889052805188860181905290890190839060608701905b80831015614afd5783516001600160e01b0319168252928b019260019290920191908b0190614ad3565b50978a01979550505091870191600101614a96565b50919998505050505050505050565b600060208284031215614b3357600080fd5b8135611e6881614230565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015614b9357603f19888603018452614b818583516141d8565b94509285019290850190600101614b65565b5092979650505050505050565b60006020808385031215614bb357600080fd5b82356001600160401b03811115614bc957600080fd5b8301601f81018513614bda57600080fd5b8035614be86143bd82614352565b81815260069190911b82018301908381019087831115614c0757600080fd5b928401925b82841015610e705760408489031215614c255760008081fd5b614c2d614292565b8435815285850135614c3e81614230565b8187015282526040939093019290840190614c0c565b60008060408385031215614c6757600080fd5b8235614c7281614230565b91506020830135614c8281614743565b809150509250929050565b6000614c9b6143bd84614352565b8381529050602080820190600585901b840186811115614cba57600080fd5b845b81811015614cf55780356001600160401b03811115614cdb5760008081fd5b614ce78982890161463a565b855250928201928201614cbc565b505050509392505050565b600082601f830112614d1157600080fd5b611e6883833560208501614c8d565b600080600060808486031215614d3557600080fd5b83356001600160401b03811115614d4b57600080fd5b614d5786828701614d00565b9350506020840135614d6881614230565b9150614d7785604086016144ea565b90509250925092565b60008060008060808587031215614d9657600080fd5b8435614da181614230565b93506020850135614db181614230565b92506040850135915060608501356001600160401b03811115614dd357600080fd5b614ddf878288016145cb565b91505092959194509250565b600080828403610160811215614e0057600080fd5b83356001600160401b03811115614e1657600080fd5b614e228682870161463a565b93505061014080601f1983011215614e3957600080fd5b614e416142ff565b915060208501358252614e5660408601614245565b6020830152606085013560408301526080850135606083015260a0850135608083015260c085013560a0830152614e8f60e08601614245565b60c0830152610100614ea3878288016144ea565b60e0840152940135938101939093525092909150565b6000610140820190508251825260018060a01b03602084015116602083015260408301516040830152606083015160608301526080830151608083015260a083015160a083015260c0830151614f1a60c08401826001600160a01b03169052565b5060e0830151614f4060e084018280516001600160a01b03168252602090810151910152565b5061010083015161012083015292915050565b60008060408385031215614f6657600080fd5b8235614f7181614230565b91506020830135614c8281614230565b6000806101208385031215614f9557600080fd5b614f9f8484614525565b9150614fae8460e085016144ea565b90509250929050565b600181811c90821680614fcb57607f821691505b602082108103614feb57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b818103818111156107a6576107a6615007565b808201808211156107a6576107a6615007565b6001600160a01b039384168152919092166020820152604081019190915260600190565b60006001820161507957615079615007565b5060010190565b60006020828403121561509257600080fd5b81356001600160401b038111156150a857600080fd5b612ad184828501614d00565b6000602082840312156150c657600080fd5b8151611e6881614230565b6000826150ee57634e487b7160e01b600052601260045260246000fd5b500490565b80820281158282048414176107a6576107a6615007565b60008235605e1983360301811261512057600080fd5b9190910192915050565b6000808335601e1984360301811261514157600080fd5b8301803591506001600160401b0382111561515b57600080fd5b6020019150600581901b3603821315613cda57600080fd5b6000611e68368484614c8d565b60006040828403121561519257600080fd5b611e6883836144ea565b6001600160e01b03198316815281516000906151bf8160048501602087016141b4565b919091016004019392505050565b600082516151208184602087016141b4565b6000602082840312156151f157600080fd5b8151611e6881614743565b60018060a01b0381511682526020810151602083015260408101516040830152606081015160608301526080810151608083015260a081015161083360a084018280516001600160a01b03168252602090810151910152565b610120810161526482866151fc565b60e08201939093526101000152919050565b610100810161528582856151fc565b8260e08301529392505050565b838152602081018390526101208101612ad160408301846151fc565b61012081016152bd82856151fc565b82516001600160a01b031660e08301526020830151610100830152611e68565b82815260608101611e68602083018480516001600160a01b03168252602090810151910152565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090615337908301846141d8565b9695505050505050565b60006020828403121561535357600080fd5b8151611e6881614181565b634e487b7160e01b600052602160045260246000fdfea26469706673582212206e28f15703d12d7efbd3674f4df5fbc19d48c61fd103ecb27bfc39241dc7b65f64736f6c634300081200330000000000000000000000007109709ecfa91a80626ff3989d68f67f5b1dd12d736166655472616e7366657246726f6d28616464726573732c616464726573732c75696e7432353629736166655472616e7366657246726f6d28616464726573732c616464726573732c75696e743235362c627974657329",
    "sourceMap": "360:1428:89:-:0;;;1572:26:28;;;1594:4;-1:-1:-1;;1572:26:28;;;;;;;3288:44:31;;;;;;;;;458:30:89;;360:1428;;;;;;;;;;2464:602:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2464:602:14;;;1665:32:104;1688:8;1665:18;1681:1;1665:11;1673:2;720:4:54;1665:7:104;;;;;;:11;;;;:::i;:::-;:15;;;;;;:18;;;;:::i;:::-;:22;;;;;;:32;;;;:::i;:::-;1650:47;;1720:16;;;1734:1;1720:16;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1707:29:104;;;;:10;;-1:-1:-1;1707:29:104;;;;:::i;:::-;;1762:1;1746:10;1757:1;1746:13;;;;;;;;:::i;:::-;;;;;;;;;;:17;1782:12;;-1:-1:-1;;;;;;1782:12:104;;1105:7;1782:12;;;424:25:112;-1:-1:-1;;;;;;;;;;;1782:7:104;;;397:18:112;;1782:12:104;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1773:21:104;;;1814:13;;-1:-1:-1;;;;;;1814:13:104;;1151:5;1814:13;;;424:25:112;-1:-1:-1;;;;;;;;;;;1814:7:104;;;397:18:112;;1814:13:104;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1804:23:104;;;1837:30;;;-1:-1:-1;;;1837:30:104;;1278:39;1837:30;;;967:51:112;1034:18;;;1027:30;;;;1093:1;1073:18;;;1066:29;-1:-1:-1;;;1111:18:112;;;1104:38;-1:-1:-1;;;;;;;;;;;1837:8:104;;;1159:19:112;;1837:30:104;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1877:24:104;;;-1:-1:-1;;;1877:24:104;;1357:36;1877:24;;;1401:51:112;1468:18;;;1461:30;;;;1527:1;1507:18;;;1500:29;-1:-1:-1;;;1545:18:112;;;1538:35;-1:-1:-1;;;;;;;;;;;1877:8:104;-1:-1:-1;1877:8:104;;-1:-1:-1;1590:19:112;;1877:24:104;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1920:6:104;;1911:26;;;-1:-1:-1;;;1911:26:104;;-1:-1:-1;;;;;1850:32:112;;;1911:26:104;;;1832:51:112;1899:18;;;1892:30;1958:1;1938:18;;;1931:29;-1:-1:-1;;;1976:18:112;;;1969:36;-1:-1:-1;;;;;;;;;;;1911:8:104;-1:-1:-1;1911:8:104;;-1:-1:-1;2022:19:112;;1911:26:104;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1956:7:104;;1947:28;;;-1:-1:-1;;;1947:28:104;;-1:-1:-1;;;;;2282:32:112;;;1947:28:104;;;2264:51:112;2331:18;;;2324:30;2390:1;2370:18;;;2363:29;-1:-1:-1;;;2408:18:112;;;2401:37;-1:-1:-1;;;;;;;;;;;1947:8:104;-1:-1:-1;1947:8:104;;-1:-1:-1;2455:19:112;;1947:28:104;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2018:56;;;;;;;;;;;;;;;;;;5319:23:84;;;;;;;;5235:111;2018:56:104;-1:-1:-1;;;;;;1985:89:104;;;2121:62;;;;;;;;;;;;;;;;;;;;;5319:23:84;;;;;;;;5235:111;2121:62:104;-1:-1:-1;;;;;;2084:99:104;;;2215:8;2197:15;:26;2193:74;;;2239:17;;-1:-1:-1;;;2239:17:104;;2247:8;2239:17;;;424:25:112;-1:-1:-1;;;;;;;;;;;2239:7:104;;;397:18:112;;2239:17:104;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2193:74;2550:22:14;;;;;;;;;;2606:25;;;;;;;;;2787;;;;2822:31;;;;2882:13;2863:32;;2660:117;2932:58;2660:117;2550:22;2606:25;3642:73;;;;;;5803:25:112;;;5844:18;;;5837:34;;;5887:18;;;5880:34;;;3686:13:14;5930:18:112;;;5923:34;3709:4:14;5973:19:112;;;5966:61;3606:7:14;;5775:19:112;;3642:73:14;;;;;;;;;;;;3632:84;;;;;;3625:91;;3466:257;;;;;;2932:58;2905:85;;3023:4;3000:28;;3038:21;;-1:-1:-1;;765:32:101;;;;;;;;;;;;;-1:-1:-1;;;765:32:101;;;;;;;;859:18;:22;;;;910:12;;-1:-1:-1;891:16:101;;:13;:16;;;:31;765:32;;-1:-1:-1;438:41:54;;-1:-1:-1;960:10:101;;720:4:54;;968:1:101;;960:7;;;;;:10;;:::i;:::-;932:25;;;:38;1005:6;932:13;;;980:31;1021:5;:64;;-1:-1:-1;;;;;;1021:64:101;1035:49;1021:64;;;;;;1095:34;;-1:-1:-1;;;1095:34:101;;-1:-1:-1;;;;;;;;;;;1095:7:101;;;:34;;1035:49;1119:9;;1095:34;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1156:5:101;;1139:33;;;-1:-1:-1;;;1139:33:101;;-1:-1:-1;;;;;1156:5:101;;;1139:33;;;3542:51:112;3609:18;;;3602:30;3668:1;3648:18;;;3641:29;-1:-1:-1;;;3686:18:112;;;3679:35;-1:-1:-1;;;;;;;;;;;1139:8:101;-1:-1:-1;1139:8:101;;-1:-1:-1;3731:19:112;;1139:33:101;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1182:6:101;:66;;-1:-1:-1;;;;;;1182:66:101;1197:50;1182:66;;;;;;1258:35;;-1:-1:-1;;;1258:35:101;;-1:-1:-1;;;;;;;;;;;1258:7:101;-1:-1:-1;1258:7:101;;-1:-1:-1;1258:35:101;;1197:50;1283:9;;1258:35;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1320:6:101;;1303:35;;;-1:-1:-1;;;1303:35:101;;-1:-1:-1;;;;;1320:6:101;;;1303:35;;;3973:51:112;4040:18;;;4033:30;4099:1;4079:18;;;4072:29;-1:-1:-1;;;4117:18:112;;;4110:36;-1:-1:-1;;;;;;;;;;;1303:8:101;-1:-1:-1;1303:8:101;;-1:-1:-1;4163:19:112;;1303:35:101;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1348:3:101;:58;;-1:-1:-1;;;;;;1348:58:101;1358:47;1348:58;;;;;;1416:32;;-1:-1:-1;;;1416:32:101;;-1:-1:-1;;;;;;;;;;;1416:7:101;-1:-1:-1;1416:7:101;;-1:-1:-1;1416:32:101;;1358:47;1438:9;;1416:32;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1475:3:101;;1458:29;;;-1:-1:-1;;;1458:29:101;;-1:-1:-1;;;;;1475:3:101;;;1458:29;;;4405:51:112;4472:18;;;4465:30;4531:1;4511:18;;;4504:29;-1:-1:-1;;;4549:18:112;;;4542:33;-1:-1:-1;;;;;;;;;;;1458:8:101;-1:-1:-1;1458:8:101;;-1:-1:-1;4592:19:112;;1458:29:101;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1497:4:101;:60;;-1:-1:-1;;;;;;1497:60:101;1508:48;1497:60;;;;;;1567:33;;-1:-1:-1;;;1567:33:101;;-1:-1:-1;;;;;;;;;;;1567:7:101;-1:-1:-1;1567:7:101;;-1:-1:-1;1567:33:101;;1508:48;1590:9;;1567:33;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1627:4:101;;1610:31;;;-1:-1:-1;;;1610:31:101;;-1:-1:-1;;;;;1627:4:101;;;1610:31;;;;4834:51:112;;;;4901:18;;;4894:30;;;;4940:18;;;4933:29;-1:-1:-1;;;4978:18:112;;;4971:34;-1:-1:-1;;;;;;;;;;;1610:8:101;-1:-1:-1;1610:8:101;;-1:-1:-1;5022:19:112;;1610:31:101;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;755:893;;360:1428:89;;1454:110:86;1508:3;1539:17;1555:1;1550;1539:17;:::i;:::-;1523:34;;1454:110;;;;;:::o;919:::-;973:3;1004:17;1020:1;1015;1004:17;:::i;360:1428:89:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;360:1428:89;;;-1:-1:-1;360:1428:89;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;146:127:112;207:10;202:3;198:20;195:1;188:31;238:4;235:1;228:15;262:4;259:1;252:15;460:290;530:6;583:2;571:9;562:7;558:23;554:32;551:52;;;599:1;596;589:12;551:52;625:16;;-1:-1:-1;;;;;670:31:112;;660:42;;650:70;;716:1;713;706:12;650:70;739:5;460:290;-1:-1:-1;;;460:290:112:o;2682:643::-;2886:1;2882;2877:3;2873:11;2869:19;2861:6;2857:32;2846:9;2839:51;2820:4;2909:2;2947;2942;2931:9;2927:18;2920:30;2979:6;2973:13;3022:6;3017:2;3006:9;3002:18;2995:34;3047:1;3057:140;3071:6;3068:1;3065:13;3057:140;;;3166:14;;;3162:23;;3156:30;3132:17;;;3151:2;3128:26;3121:66;3086:10;;3057:140;;;3061:3;3246:1;3241:2;3232:6;3221:9;3217:22;3213:31;3206:42;3316:2;3309;3305:7;3300:2;3292:6;3288:15;3284:29;3273:9;3269:45;3265:54;3257:62;;;;2682:643;;;;;:::o;5052:217::-;5092:1;5118;5108:132;;5162:10;5157:3;5153:20;5150:1;5143:31;5197:4;5194:1;5187:15;5225:4;5222:1;5215:15;5108:132;-1:-1:-1;5254:9:112;;5052:217::o;5274:265::-;5347:9;;;5378;;5395:15;;;5389:22;;5375:37;5365:168;;5455:10;5450:3;5446:20;5443:1;5436:31;5490:4;5487:1;5480:15;5518:4;5515:1;5508:15;5544:489;360:1428:89;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "",
    "sourceMap": "360:1428:89:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1405:76:62;;;;;;:::i;:::-;-1:-1:-1;1473:4:62;;1405:76;;;;565:14:112;;558:22;540:41;;528:2;513:18;1405:76:62;;;;;;;;2365:153;;;:::i;:::-;;;;;;;:::i;3070:121::-;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;1806:32:112;;;1788:51;;1776:2;1761:18;3070:121:62;1642:203:112;2687:377:62;;;;;;:::i;:::-;;:::i;:::-;;521:172:89;;;:::i;948:2304:59:-;;;;;;:::i;:::-;;:::i;759:124:58:-;;;;;;:::i;:::-;;:::i;:::-;;;5152:25:112;;;5140:2;5125:18;759:124:58;4981:202:112;1097:599:47;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;;6291:33:112;;;6273:52;;6261:2;6246:18;1097:599:47;6129:202:112;1123:114:61;;;:::i;3115:224:45:-;;;;;;:::i;:::-;;:::i;2161:134:34:-;;;:::i;:::-;;;;;;;:::i;1151:133:60:-;;;;;;:::i;:::-;;:::i;2876:126:101:-;;;;;;:::i;:::-;;:::i;3503:248:62:-;;;;;;:::i;:::-;;:::i;1444:1217:46:-;;;;;;:::i;:::-;;:::i;2112:353:101:-;;;;;;:::i;:::-;;:::i;2592:1347:50:-;;;;;;:::i;:::-;;:::i;2930:133:34:-;;;:::i;2631:141::-;;;:::i;3757:140:62:-;;;;;;:::i;:::-;;:::i;1244:391:89:-;;;:::i;1964:115:58:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;2246:113:62:-;;;;;;:::i;:::-;;:::i;2447:178:34:-;;;:::i;:::-;;;;;;;:::i;2471:399:101:-;;;;;;:::i;:::-;;:::i;1230:1113:50:-;;;;;;:::i;:::-;;:::i;1964:276:62:-;;;;;;:::i;:::-;;:::i;3567:263:45:-;;;;;;:::i;:::-;;:::i;860:378:89:-;;;:::i;2301:140:34:-;;;:::i;:::-;;;;;;;:::i;2527:352:58:-;;;;;;:::i;:::-;;:::i;:::-;;;;19614:25:112;;;19670:2;19655:18;;19648:34;;;;19587:18;2527:352:58;19440:248:112;2778:146:34;;;:::i;2084:296:45:-;;;;;;:::i;:::-;;:::i;2524:157:62:-;;;:::i;1137:143:46:-;;;;;;:::i;:::-;;:::i;699:155:89:-;;;:::i;3197:142:62:-;;;;;;:::i;:::-;;:::i;1180:200:45:-;;;;;;:::i;:::-;;:::i;1435:411:58:-;;;:::i;:::-;;;;21825:25:112;;;21881:2;21866:18;;21859:34;;;;21909:18;;;21902:34;21967:2;21952:18;;21945:34;21812:3;21797:19;1435:411:58;21569:416:112;1902:204:101;;;;;;:::i;:::-;;:::i;1904:275:47:-;;;;;;:::i;:::-;;:::i;1866:141:34:-;;;:::i;3903:280:62:-;;;;;;:::i;:::-;;:::i;1819:584:28:-;;;:::i;1699:197:101:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;2013:142:34:-;;;:::i;1581:342:45:-;;;;;;:::i;:::-;;:::i;3345:152:62:-;;;;;;:::i;:::-;;:::i;717:277:61:-;;;;;;:::i;:::-;;:::i;:::-;;;;27569:13:112;;27551:32;;27639:4;27627:17;;;27621:24;27599:20;;;27592:54;27690:17;;;27684:24;27662:20;;;27655:54;27539:2;27524:18;717:277:61;27349:366:112;1572:26:28;;;;;;;;;3008:147:101;;;;;;:::i;:::-;;:::i;2365:153:62:-;2410:13;2435:25;2463:23;:21;:23::i;:::-;2435:51;;2504:2;:7;;2497:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2365:153;:::o;3070:121::-;3137:7;3163:21;3176:7;3163:12;:21::i;:::-;3156:28;3070:121;-1:-1:-1;;3070:121:62:o;2687:377::-;2758:13;2774:16;2782:7;2774;:16::i;:::-;2758:32;;2810:5;-1:-1:-1;;;;;2804:11:62;:2;-1:-1:-1;;;;;2804:11:62;;2800:79;;2838:30;;-1:-1:-1;;;2838:30:62;;;;;;;;;;;2800:79;2892:10;-1:-1:-1;;;;;2892:19:62;;;;;;:59;;;2916:35;2933:5;2940:10;2916:16;:35::i;:::-;2915:36;2892:59;2888:138;;;2974:41;;-1:-1:-1;;;2974:41:62;;;;;;;;;;;2888:138;3036:21;3045:2;3049:7;3036:8;:21::i;:::-;2748:316;2687:377;;:::o;521:172:89:-;555:22;580:17;:15;:17::i;:::-;555:42;;633:9;:7;:9::i;:::-;619:10;;;608:22;;;;:10;;;;:22;;;;;;;;:34;;;;-1:-1:-1;;;;;;608:34:89;;;-1:-1:-1;;;;;608:34:89;;;;;;;;;;-1:-1:-1;608:34:89;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;608:34:89;;;;;;-1:-1:-1;;608:34:89;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;670:10;;659:22;;;:27;;652:4;:34;521:172::o;948:2304:59:-;1008:22;1033:17;:15;:17::i;:::-;1008:42;;1060:17;1087:12;1109:17;1136:15;1167:9;1162:2084;1186:7;:14;1182:1;:18;1162:2084;;;1228:5;:10;;:22;1239:7;1247:1;1239:10;;;;;;;;:::i;:::-;;;;;;;1228:22;;;;;;;;;;;1221:29;;1402:1;1382:4;:12;;:17;;;:21;:53;;;-1:-1:-1;1407:28:59;;;;;;;;;1382:53;:80;;;-1:-1:-1;1439:23:59;;;;;;1382:80;1378:155;;;1507:7;1515:1;1507:10;;;;;;;;:::i;:::-;;;;;;;1489:29;;-1:-1:-1;;;1489:29:59;;;;;;5152:25:112;;5140:2;5125:18;;4981:202;1489:29:59;;;;;;;;1378:155;1553:4;:9;;;1546:16;;1759:1123;2748:70;2757:60;2802:4;:14;;;2784:15;:32;;;;:::i;:::-;2757:22;;;;;:26;:60::i;:::-;2748:4;;:8;:70::i;:::-;2836:32;;;;1759:11;:1123::i;:::-;1747:1135;-1:-1:-1;2906:16:59;1747:1135;2906:4;:16;:::i;:::-;2936:12;;;:27;;;2977:28;;;:35;;-1:-1:-1;;2977:35:59;;;;;3026:14;;2896:26;;-1:-1:-1;3026:70:59;;-1:-1:-1;;;;;3026:14:59;3061:10;3081:4;2896:26;3026:34;:70::i;:::-;3110:15;;;:22;3165:13;;;;3180:18;;;;3110:89;;-1:-1:-1;;;3110:89:59;;-1:-1:-1;;;;;3110:22:59;;;;:39;;:89;;3158:4;;3165:13;;;;;3110:89;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3224:7;3232:1;3224:10;;;;;;;;:::i;:::-;;;;;;;3218:17;;;;;;;;;;1202:3;;;;:::i;:::-;;;;1162:2084;;;;998:2254;;;;;948:2304;:::o;759:124:58:-;820:8;847:17;:15;:17::i;:::-;:29;;;;:25;;:29;;-1:-1:-1;847:29:58;;;;;759:124::o;1097:599:47:-;1252:6;;1295:30;;;;1306:4;1295:30;:::i;:::-;1270:55;;1559:82;1573:4;1579:8;1589:51;;;;;;;;1614:10;-1:-1:-1;;;;;1589:51:47;;;;;1631:7;1589:51;;;1559:13;:82::i;:::-;-1:-1:-1;;;;1659:30:47;1097:599;-1:-1:-1;;;;;;;1097:599:47:o;1123:114:61:-;1169:7;1195:23;:21;:23::i;:::-;:35;;;1188:42;;1123:114;:::o;3115:224:45:-;858:13;898:4;-1:-1:-1;;;;;874:36:45;;:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;858:54;-1:-1:-1;926:10:45;-1:-1:-1;;;;;926:19:45;;;922:80;;968:23;;-1:-1:-1;;;968:23:45;;-1:-1:-1;;;;;1806:32:112;;968:23:45;;;1788:51:112;1761:18;;968:23:45;1642:203:112;922:80:45;3254:15:::1;3211:17;:15;:17::i;:::-;-1:-1:-1::0;;;;;3211:40:45;::::1;;::::0;;;:30:::1;::::0;;;::::1;:40;::::0;;;;;:58;;;;3284:48;;3316:15;;3211:40;3284:48:::1;::::0;::::1;770:249:::0;3115:224;;:::o;2161:134:34:-;2208:33;2272:16;2253:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2253:35:34;;;;;;;;;;;;;;;;;;;;;;;2161:134;:::o;1151:133:60:-;1213:7;1239:38;1256:20;1270:5;1256:13;:20::i;:::-;1239:16;:38::i;2876:126:101:-;2951:7;2977:18;2991:3;2977:13;:18::i;3503:248:62:-;3598:39;3617:10;3629:7;3598:18;:39::i;:::-;3593:113;;3660:35;;-1:-1:-1;;;3660:35:62;;;;;;;;;;;3593:113;3716:28;3726:4;3732:2;3736:7;3716:9;:28::i;1444:1217:46:-;1496:7;1515:17;1535;:15;:17::i;:::-;:30;;;;:22;;;;;:30;;;;;1597:12;;;;1535:30;;-1:-1:-1;1597:12:46;1649:29;1597:12;1649:15;:29;:::i;:::-;1619:59;;1689:23;1705:6;1689:15;:23::i;:::-;1936:12;;;:21;1890:20;;1913:44;;;:133;;2023:12;;;:21;1991:55;;1999:46;;:19;;:23;:46::i;:::-;-1:-1:-1;;;720:4:54;1991:7:46;:55::i;:::-;1913:133;;;789:1:54;1913:133:46;1890:156;;2320:22;2345:38;2359:23;2367:4;:14;;;-1:-1:-1;;;2359:7:46;;:23;;;;:::i;:::-;2345:9;;;;;:13;:38::i;:::-;2320:63;;2588:66;2637:16;2588:44;2607:4;:12;;:24;;;2588:14;:18;;:44;;;;:::i;:::-;:48;;:66::i;:::-;2581:73;1444:1217;-1:-1:-1;;;;;;;1444:1217:46:o;2112:353:101:-;2207:7;2226:22;2251:17;:15;:17::i;:::-;2278:13;;;;:10;;;;:13;;;;;;;;:20;;;;-1:-1:-1;;;;;;2278:20:101;;;-1:-1:-1;;;;;2278:20:101;;;;;;;;;;-1:-1:-1;2278:20:101;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2278:20:101;;;;;;-1:-1:-1;;2278:20:101;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:10;;-1:-1:-1;2336:23:101;:21;:23::i;:::-;2369:15;;;;:12;;;:15;;;;;;;;:27;;;;;;;;;;;;;;;;;;;;2427:10;;;:13;;;;2442:15;;;2308:51;;-1:-1:-1;2413:45:101;;2427:13;2413;:45::i;:::-;2406:52;2112:353;-1:-1:-1;;;;;2112:353:101:o;2592:1347:50:-;2663:12;2687:22;2712:17;:15;:17::i;:::-;2687:42;-1:-1:-1;2739:17:50;;;;2817:1116;2837:18;;;2817:1116;;;2885:7;;2893:1;2885:10;;;;;;;:::i;:::-;;;;;;;;;;2916:18;;;;:10;;;:18;;;;;;;2952:13;;;;2916:18;;-1:-1:-1;2885:10:50;;-1:-1:-1;;;;;;;2952:13:50;2969:10;2952:27;2948:101;;3006:28;;-1:-1:-1;;;3006:28:50;;;;;5152:25:112;;;5125:18;;3006:28:50;4981:202:112;2948:101:50;3066:28;;;;;;;;;3062:104;;;3121:30;;-1:-1:-1;;;3121:30:50;;;;;5152:25:112;;;5125:18;;3121:30:50;4981:202:112;3062:104:50;3183:23;;;;;;3179:346;;;3226:28;;;:35;;-1:-1:-1;;3226:35:50;;;;;:28;3412:14;;;3382:46;;3404:23;;-1:-1:-1;;;720:4:54;3404:7:50;:23::i;:::-;3382:12;;;:17;;:21;:46::i;:::-;3371:57;;3179:346;;;3474:36;;-1:-1:-1;;;3474:36:50;;;;;5152:25:112;;;5125:18;;3474:36:50;4981:202:112;3179:346:50;3542:12;;3538:385;;3764:14;;:52;;-1:-1:-1;;;;;3764:14:50;3795:10;3807:8;3764:30;:52::i;:::-;3834:16;3842:8;3834:16;;:::i;:::-;3873:35;;3834:16;;-1:-1:-1;3901:6:50;;3891:8;;3879:10;;3873:35;;;;;3538:385;2857:3;;;;:::i;:::-;;;;2817:1116;;;;2677:1262;;;;2592:1347;;;;:::o;2930:133:34:-;2976:33;3040:16;3021:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3021:35:34;;;;;;;;;;;;;;;;;;;;;;2930:133;:::o;2631:141::-;2679:35;2747:18;2726:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2726:39:34;;;;;;;;;;;;;;;;;;;;;;2631:141;:::o;3757:140:62:-;3851:39;3868:4;3874:2;3878:7;3851:39;;;;;;;;;;;;:16;:39::i;1244:391:89:-;1287:22;1312:17;:15;:17::i;:::-;1287:42;;1340:38;1355:5;:13;;:22;;;1340:14;:38::i;:::-;1388:36;1397:17;1403:10;;1397:5;:17::i;:::-;1416:7;1388:8;:36::i;:::-;1450:13;;;:22;1435:42;;1450:26;;1475:1;1450:26;:::i;:::-;1435:14;:42::i;:::-;1487:36;1496:17;1502:10;;1496:5;:17::i;1487:36::-;1549:13;;;:22;1534:48;;1549:32;;1574:7;1549:32;:::i;1534:48::-;1592:36;1601:17;1607:10;;1601:5;:17::i;1592:36::-;1277:358;1244:391::o;1964:115:58:-;2016:11;;:::i;:::-;2046:17;:15;:17::i;:::-;:26;;;;:22;;;;:26;;;;;;;;;2039:33;;;;;;;;;-1:-1:-1;;;;;2039:33:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2039:33:58;1964:115::o;2246:113:62:-;2309:7;2335:17;2344:7;2335:8;:17::i;2447:178:34:-;2503:48;2592:26;2563:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2563:55:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2563:55:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2447:178;:::o;2471:399:101:-;2600:7;2619:22;2644:17;:15;:17::i;:::-;2671:13;;;;:10;;;;:13;;;;;;;;:20;;;;-1:-1:-1;;;;;;2671:20:101;;;-1:-1:-1;;;;;2671:20:101;;;;;;;;;;-1:-1:-1;2671:20:101;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2671:20:101;;;;;;-1:-1:-1;;2671:20:101;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:10;;-1:-1:-1;2729:23:101;:21;:23::i;:::-;2762:15;;;;:12;;;:15;;;;;;;;:27;;;;;;;;;;;;;;;;;;;;2832:10;;;:13;;;;2847:15;;;2701:51;;-1:-1:-1;2806:57:101;;2832:13;2806:25;:57::i;1230:1113:50:-;1295:12;1319:22;1344:17;:15;:17::i;:::-;1319:42;;1371:25;1399:23;:21;:23::i;:::-;1371:51;;1432:17;1459:27;1496:14;1520:16;1552:9;1547:790;1567:22;;;1547:790;;;1615:46;1634:10;1646:11;;1658:1;1646:14;;;;;;;:::i;:::-;;;;;;;1615:18;:46::i;:::-;1610:128;;1688:35;;-1:-1:-1;;;1688:35:50;;;;;;;;;;;1610:128;1751:21;1757:11;;1769:1;1757:14;;;;;;;:::i;:::-;;;;;;;1751:5;:21::i;:::-;1798:2;:12;;:28;1811:11;;1823:1;1811:14;;;;;;;:::i;:::-;;;;;;;1798:28;;;;;;;;;;;1786:40;;1849:9;:16;;;1840:25;;1886:5;:10;;:18;1897:6;1886:18;;;;;;;;;;;1879:25;;1923:4;:12;;:23;;;;;;;;;;;;1919:324;;;1977:42;2003:4;2009:9;1977:25;:42::i;:::-;1966:53;;1919:324;;;2062:12;;;:17;;:22;2058:112;;2115:36;;-1:-1:-1;;;2115:36:50;;;;;5152:25:112;;;5125:18;;2115:36:50;4981:202:112;2058:112:50;2198:30;2212:4;2218:9;2198:13;:30::i;:::-;2187:41;;1919:324;2261:35;;2289:6;;2279:8;;2267:10;;2261:35;;;;;2310:16;2318:8;2310:16;;:::i;:::-;;-1:-1:-1;1591:3:50;;;;:::i;:::-;;;;1547:790;;;;1309:1034;;;;;;1230:1113;;;;:::o;1964:276:62:-;2027:7;2046:25;2074:23;:21;:23::i;:::-;2046:51;-1:-1:-1;;;;;;2112:19:62;;2108:92;;2154:35;;-1:-1:-1;;;2154:35:62;;;;;;;;;;;2108:92;-1:-1:-1;;;;;2216:17:62;;;;;;;:10;;;;:17;;-1:-1:-1;2216:17:62;;;;;1964:276::o;3567:263:45:-;858:13;898:4;-1:-1:-1;;;;;874:36:45;;:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;858:54;-1:-1:-1;926:10:45;-1:-1:-1;;;;;926:19:45;;;922:80;;968:23;;-1:-1:-1;;;968:23:45;;-1:-1:-1;;;;;1806:32:112;;968:23:45;;;1788:51:112;1761:18;;968:23:45;1642:203:112;922:80:45;3737:13:::1;3679:17;:15;:17::i;:::-;-1:-1:-1::0;;;;;3679:55:45;::::1;;::::0;;;:45:::1;::::0;;;::::1;:55;::::0;;;;;:71;;;;3765:58;;3809:13;;3679:55;3765:58:::1;::::0;::::1;770:249:::0;3567:263;;:::o;860:378:89:-;898:22;923:17;:15;:17::i;:::-;983:25;;;;974:4;;898:42;;-1:-1:-1;951:20:89;;974:35;;:8;:35::i;:::-;951:58;;1020:42;1060:1;1035:5;:13;;:22;;;:26;;;;:::i;1020:42::-;1072:45;1081:17;1087:10;;1081:5;:17::i;:::-;1100:16;1115:1;1100:12;:16;:::i;:::-;1072:8;:45::i;:::-;1143:13;;;:22;1128:42;;1143:26;;1168:1;;1143:26;:::i;1128:42::-;1180:51;1189:17;1195:10;;1189:5;:17::i;:::-;1209:16;1224:1;1209:12;:16;:::i;:::-;1208:22;;1229:1;1208:22;:::i;1180:51::-;888:350;;860:378::o;2301:140:34:-;2349:34;2416:18;2395:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2527:352:58;2625:20;2647:35;2694:22;2719:17;:15;:17::i;:::-;-1:-1:-1;;;;;2761:28:58;;;;;;;:18;;;:28;;;;;;;;;2829:33;;;;:43;;;;;;2761:28;;2527:352;-1:-1:-1;;;2527:352:58:o;2778:146:34:-;2826:40;2899:18;2878:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2878:39:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2878:39:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2084:296:45;2151:20;858:13;898:4;-1:-1:-1;;;;;874:36:45;;:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;858:54;-1:-1:-1;926:10:45;-1:-1:-1;;;;;926:19:45;;;922:80;;968:23;;-1:-1:-1;;;968:23:45;;-1:-1:-1;;;;;1806:32:112;;968:23:45;;;1788:51:112;1761:18;;968:23:45;1642:203:112;922:80:45;2183:22:::1;2208:17;:15;:17::i;:::-;2251:18;::::0;::::1;:20:::0;;2183:42;;-1:-1:-1;2251:18:45::1;:20;::::0;::::1;:::i;:::-;::::0;;;-1:-1:-1;2281:27:45::1;::::0;;;:13:::1;::::0;::::1;:27;::::0;;;;;:40;;;2337:36;2236:35;;-1:-1:-1;2236:35:45;;2311:10;;2337:36:::1;::::0;::::1;2173:207;770:249:::0;2084:296;;;:::o;2524:157:62:-;2571:13;2596:25;2624:23;:21;:23::i;:::-;2596:51;;2665:2;:9;;2658:16;;;;;:::i;1137:143:46:-;1196:9;1191:83;1215:4;:11;1211:1;:15;1191:83;;;1247:16;1255:4;1260:1;1255:7;;;;;;;;:::i;:::-;;;;;;;1247;:16::i;:::-;1228:3;;;;:::i;:::-;;;;1191:83;;699:155:89;744:17;759:1;744:14;:17::i;:::-;771:76;780:17;786:10;;780:5;:17::i;:::-;799:47;808:17;:15;:17::i;:::-;:37;;;799:4;;;:8;:47::i;771:76::-;699:155::o;3197:142:62:-;3282:50;3301:10;3313:8;3323;3282:18;:50::i;1180:200:45:-;858:13;898:4;-1:-1:-1;;;;;874:36:45;;:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;858:54;-1:-1:-1;926:10:45;-1:-1:-1;;;;;926:19:45;;;922:80;;968:23;;-1:-1:-1;;;968:23:45;;-1:-1:-1;;;;;1806:32:112;;968:23:45;;;1788:51:112;1761:18;;968:23:45;1642:203:112;922:80:45;1302:18:::1;1265:17;:15;:17::i;:::-;:25;;:55:::0;1335:38:::1;::::0;1354:18;;1335:38:::1;::::0;1265:34:::1;::::0;1335:38:::1;770:249:::0;1180:200;:::o;1435:411:58:-;1507:22;1531:23;1556:17;1575:20;1611:22;1636:17;:15;:17::i;:::-;1684:25;;;;:13;;;1737:22;1781:15;;1684:25;1821:18;;;;1684:25;;1737:22;;-1:-1:-1;1781:15:58;;-1:-1:-1;1821:18:58;-1:-1:-1;1435:411:58;-1:-1:-1;;1435:411:58:o;1902:204:101:-;2039:11;;:::i;:::-;2069:30;2083:4;2089;2095:3;2069:13;:30::i;:::-;2062:37;;1902:204;;;;;;:::o;1904:275:47:-;1971:9;1966:207;1986:15;;;1966:207;;;2022:4;;2027:1;2022:7;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;:18;;;;;;;:::i;:::-;-1:-1:-1;;;;;2022:31:47;;2054:10;2074:4;2081;;2086:1;2081:7;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;2022:74;;-1:-1:-1;;;;;;2022:74:47;;;;;;;;;;;2081:14;;;;2022:74;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2110:52;2124:4;;2129:1;2124:7;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;:12;;;;;;;:::i;:::-;2110:52;;;:::i;:::-;2138:10;2150:4;;2155:1;2150:7;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;2110:52;;;;;;;;;;:::i;:::-;:13;:52::i;:::-;-1:-1:-1;2003:3:47;;;;:::i;:::-;;;;1966:207;;1866:141:34;1915:34;1982:18;1961:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3903:280:62;4021:39;4040:10;4052:7;4021:18;:39::i;:::-;4016:113;;4083:35;;-1:-1:-1;;;4083:35:62;;;;;;;;;;;4016:113;4138:38;4152:4;4158:2;4162:7;4171:4;4138:13;:38::i;:::-;3903:280;;;;:::o;1819:584:28:-;1853:4;1873:7;;;;;;;1869:528;;;-1:-1:-1;1903:7:28;;;;;;;;1819:584::o;1869:528::-;1941:17;2997:42;2985:55;3066:16;1980:374;;2196:43;;;1671:64;2196:43;;;32428:51:112;;;-1:-1:-1;;;32495:18:112;;;32488:34;2196:43:28;;;;;;;;;32401:18:112;;;2196:43:28;;;-1:-1:-1;;1671:64:28;;2086:175;;2135:34;;2086:175;;;:::i;:::-;;;;-1:-1:-1;;2086:175:28;;;;;;;;;;2047:232;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2020:259;;;2323:7;2312:27;;;;;;;;;;;;:::i;:::-;2297:42;;2002:352;1980:374;2374:12;1819:584;-1:-1:-1;1819:584:28:o;1699:197:101:-;1822:22;;:::i;:::-;1863:26;1872:3;1877:11;1863:8;:26::i;2013:142:34:-;2062:35;2130:18;2109:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2109:39:34;;;;;;;;;;;;;;;;;;;;;;2013:142;:::o;1581:342:45:-;858:13;898:4;-1:-1:-1;;;;;874:36:45;;:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;858:54;-1:-1:-1;926:10:45;-1:-1:-1;;;;;926:19:45;;;922:80;;968:23;;-1:-1:-1;;;968:23:45;;-1:-1:-1;;;;;1806:32:112;;968:23:45;;;1788:51:112;1761:18;;968:23:45;1642:203:112;922:80:45;1737:44:::1;1763:17;1778:1;1763:10;-1:-1:-1::0;;;1771:1:45::1;1763:7;:10::i;:::-;:14:::0;::::1;:17::i;:::-;1737:21:::0;2445:30:86;;;2372:110;1737:44:45::1;1729:57;;;::::0;-1:-1:-1;;;1729:57:45;;33666:2:112;1729:57:45::1;::::0;::::1;33648:21:112::0;-1:-1:-1;33685:18:112;;;33678:29;33724:18;;1729:57:45::1;33464:284:112::0;1729:57:45::1;1836:21;1796:17;:15;:17::i;:::-;:37:::0;;:61;1872:44:::1;::::0;1894:21;;1872:44:::1;::::0;;;::::1;770:249:::0;1581:342;:::o;3345:152:62:-;3433:4;3456:34;3474:5;3481:8;3456:17;:34::i;717:277:61:-;775:16;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;775:16:61;803:25;831:23;:21;:23::i;:::-;803:51;;879:2;:14;;;869:7;:24;865:84;;;916:22;;-1:-1:-1;;;916:22:61;;;;;;;;;;;865:84;966:21;;;;:12;;:21;;;;;;;;;959:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;959:28:61;717:277::o;3008:147:101:-;3113:35;3129:5;3136:11;3113:15;:35::i;1454:110:86:-;1508:3;1539:17;1555:1;1550;1539:17;:::i;919:110::-;973:3;1004:17;1020:1;1015;1004:17;:::i;1221:215:54:-;510:48;;1221:215::o;5221:228:63:-;5283:7;5307:16;5315:7;5307;:16::i;:::-;5302:77;;5346:22;;-1:-1:-1;;;5346:22:63;;;;;;;;;;;5302:77;5396:23;:21;:23::i;:::-;:46;;;;:37;;:46;;-1:-1:-1;5396:46:63;;;;-1:-1:-1;;;;;5396:46:63;;5221:228::o;3901:219::-;3967:25;3995:23;:21;:23::i;:::-;4029:25;;;;:16;;;:25;;;;;:30;;-1:-1:-1;;;;;;4029:30:63;-1:-1:-1;;;;;4029:30:63;;;;;:16;-1:-1:-1;4069:44:63;4082:17;4029:25;4082:8;:17::i;1002:217:54:-;438:41;;1002:217::o;5770:97:104:-;5820:11;;:::i;:::-;5850:10;:8;:10::i;:::-;5843:17;;5770:97;:::o;1088:112:86:-;1142:7;-1:-1:-1;;;1169:17:86;1184:1;1169;:17;:::i;:::-;1168:25;;;;:::i;2768:104::-;2826:7;2856:1;2852;:5;:13;;2864:1;2852:13;;;-1:-1:-1;2860:1:86;;2768:104;-1:-1:-1;2768:104:86:o;237:230:83:-;349:39;;-1:-1:-1;;;349:39:83;;-1:-1:-1;;;;;349:21:83;;;;;:39;;371:4;;377:2;;381:6;;349:39;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;344:117;;411:39;;-1:-1:-1;;;411:39:83;;-1:-1:-1;;;;;34025:15:112;;;411:39:83;;;34007:34:112;34077:15;;;34057:18;;;34050:43;34129:15;;34109:18;;;34102:43;33942:18;;411:39:83;33753:398:112;5421:1155:49;5550:16;;:::i;:::-;5578:34;5615:46;5642:4;5647:1;5642:7;;;;;;;;:::i;:::-;;;;;;;5651:4;5657:3;5615:26;:46::i;:::-;5578:83;;5769:29;5801:23;:21;:23::i;:::-;:35;;;:39;;5839:1;5801:39;:::i;:::-;5871:11;;5769:71;;-1:-1:-1;5850:18:49;;5963:146;5987:10;5983:1;:14;5963:146;;;6032:30;6041:4;6046:1;6041:7;;;;;;;;:::i;:::-;;;;;;;6050:11;6032:8;:30::i;:::-;6018:44;;6084:4;6089:1;6084:7;;;;;;;;:::i;:::-;;;;;;;:14;;;6076:22;;;;;:::i;:::-;;-1:-1:-1;5999:3:49;;;;:::i;:::-;;;;5963:146;;;;6294:4;6287;:11;6283:71;;;6321:22;;-1:-1:-1;;;6321:22:49;;;;;5152:25:112;;;5125:18;;6321:22:49;4981:202:112;6283:71:49;6370:80;6386:11;6399:4;6405:3;6410:10;6422:4;6428:21;6370:15;:80::i;:::-;6363:87;;6505:4;6460:17;:15;:17::i;:::-;6483:18;;;;;;6460:42;;;;:22;;;;:42;;;;;;;;;:49;;;;-1:-1:-1;;;;;;6460:49:49;;;-1:-1:-1;;;;;6460:49:49;;;;;;;;;;-1:-1:-1;6460:49:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6460:49:49;;;;;;-1:-1:-1;;6460:49:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6532:18;6552:16;;6525:44;;6552:16;;6563:4;;6552:16;;:::i;:::-;;;;-1:-1:-1;;6552:16:49;;;;;;;;;;6525:44;;;:::i;:::-;;;;;;;;5568:1008;;;;5421:1155;;;;;:::o;1703:462:60:-;1769:7;454:220;1902:5;:17;;;1941:5;:17;;;1980:5;:14;;;2016:5;:20;;;2058:5;:13;;;2093:33;2109:5;:16;;;2093:15;:33::i;:::-;1834:310;;;;;;34708:25:112;;;;-1:-1:-1;;;;;34769:32:112;;;34749:18;;;34742:60;;;;34818:18;;;34811:34;;;;34861:18;;;34854:34;;;;34904:19;;;34897:35;34948:19;;;34941:35;34992:19;;;34985:35;34680:19;;1834:310:60;;;;;;;;;;;;;1807:351;;;;;;1788:370;;1703:462;;;:::o;4348:165:14:-;4425:7;4451:55;4473:20;:18;:20::i;:::-;4495:10;8470:57:13;;-1:-1:-1;;;8470:57:13;;;39740:27:112;39783:11;;;39776:27;;;39819:12;;;39812:28;;;8434:7:13;;39856:12:112;;8470:57:13;;;;;;;;;;;;8460:68;;;;;;8453:75;;8341:194;;;;;1077:1776:48;1144:14;1170:22;1195:17;:15;:17::i;:::-;1170:42;;1569:52;1583:22;1595:3;:9;;;1583:11;:22::i;:::-;1607:13;;1569;:52::i;:::-;2144:9;;;;;:21;-1:-1:-1;;;;;2110:56:48;2083:24;2110:56;;;:33;;;:56;;;;;;;;2183:10;;;;1560:61;;-1:-1:-1;2110:56:48;2183:29;-1:-1:-1;2177:140:48;;2266:3;:9;;;2277:3;:10;;;2289:16;2236:70;;-1:-1:-1;;;2236:70:48;;;;;;;;;;:::i;2177:140::-;2481:3;:9;;;:24;;;2463:15;:42;2459:132;;;2544:9;;;;;2555:24;;;;2528:52;;-1:-1:-1;;;2528:52:48;;;;2555:24;2528:52;;;:::i;2459:132::-;2761:5;:18;;;2740:3;:9;;;:17;;;:39;2736:111;;2817:5;:18;;;2802:34;;-1:-1:-1;;;2802:34:48;;;;;;5152:25:112;;5140:2;5125:18;;4981:202;2736:111:48;1160:1693;;1077:1776;;;:::o;4966:249:63:-;5051:4;5067:13;5083:17;5092:7;5083:8;:17::i;:::-;5067:33;;5129:5;-1:-1:-1;;;;;5118:16:63;:7;-1:-1:-1;;;;;5118:16:63;;:53;;;;5138:33;5156:5;5163:7;5138:17;:33::i;:::-;5118:89;;;;5200:7;-1:-1:-1;;;;;5175:32:63;:21;5188:7;5175:12;:21::i;:::-;-1:-1:-1;;;;;5175:32:63;;5118:89;5110:98;4966:249;-1:-1:-1;;;;4966:249:63:o;3328:567::-;3409:25;3437:23;:21;:23::i;:::-;3409:51;;3496:4;-1:-1:-1;;;;;3475:25:63;:17;3484:7;3475:8;:17::i;:::-;-1:-1:-1;;;;;3475:25:63;;3471:97;;3523:34;;-1:-1:-1;;;3523:34:63;;;;;;;;;;;3471:97;-1:-1:-1;;;;;3581:16:63;;3577:86;;3620:32;;-1:-1:-1;;;3620:32:63;;;;;;;;;;;3577:86;3724:29;3741:1;3745:7;3724:8;:29::i;:::-;-1:-1:-1;;;;;3764:16:63;;;;;;:10;;;:16;;;;;:21;;3784:1;;3764:16;:21;;3784:1;;3764:21;:::i;:::-;;;;-1:-1:-1;;;;;;;3795:14:63;;;;;;:10;;;:14;;;;;:19;;3813:1;;3795:14;:19;;3813:1;;3795:19;:::i;:::-;;;;-1:-1:-1;;3824:17:63;;;;:8;;;:17;;;;;:22;;-1:-1:-1;;;;;;3824:22:63;-1:-1:-1;;;;;3824:22:63;;;;;3857:31;2687:377:62;3506:371:46;3571:17;3591;:15;:17::i;:::-;:22;;:30;3614:6;3591:30;;;;;;;;;;;3571:50;;3654:4;:12;;;3636:15;:30;3632:118;;;3718:12;;;;;3689:50;;-1:-1:-1;;;3689:50:46;;;;;19614:25:112;19655:18;;;19648:34;;;19587:18;;3689:50:46;19440:248:112;3632:118:46;3763:12;;;:17;:22;;;:49;;-1:-1:-1;3789:23:46;;;;;;3763:49;3759:112;;;3835:25;;-1:-1:-1;;;3835:25:46;;;;;5152::112;;;5125:18;;3835:25:46;4981:202:112;1804:110:86;1862:3;1905:1;1894:7;-1:-1:-1;;;1894:1:86;:7;:::i;557:118::-;607:3;638:29;665:1;649;638:29;:::i;4159:815:50:-;4248:12;4272:17;4312:4;:9;;;4292:4;:12;;:17;;;:29;;;;:::i;:::-;4348:32;;;;4272:49;;-1:-1:-1;4335:45:50;;4331:579;;4604:18;;;;4592:30;;:9;:30;:::i;:::-;4572:16;;:51;;;;:::i;:::-;4565:58;;4331:579;;;4890:9;;;;4869:16;;4856:30;;:9;:30;:::i;:::-;4855:44;;;;:::i;:::-;4836:16;;:63;;;;:::i;:::-;4829:70;;4331:579;4919:14;;:48;;-1:-1:-1;;;;;4919:14:50;4950:10;4962:4;4919:30;:48::i;:::-;4262:712;4159:815;;;;:::o;473:211:83:-;567:29;;-1:-1:-1;;;567:29:83;;-1:-1:-1;;;;;32446:32:112;;;567:29:83;;;32428:51:112;32495:18;;;32488:34;;;567:17:83;;;;;32401:18:112;;567:29:83;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;562:116;;619:48;;-1:-1:-1;;;619:48:83;;-1:-1:-1;;;;;34025:15:112;;;619:48:83;;;34007:34:112;657:4:83;34057:18:112;;;34050:43;34129:15;;34109:18;;;34102:43;33942:18;;619:48:83;33753:398:112;1641:145:89;1750:29;1768:11;1750:15;:29;:::i;:::-;1705:17;:15;:17::i;:::-;1728:10;;1705:34;;;;:22;;;;;:34;;;;;:42;;:74;-1:-1:-1;1641:145:89:o;5209:262:28:-;5271:1;5266;:6;5262:203;;5293:41;;;;;36685:2:112;36667:21;;;36724:2;36704:18;;;36697:30;36763:34;36758:2;36743:18;;36736:62;-1:-1:-1;;;36829:2:112;36814:18;;36807:32;36871:3;36856:19;;36483:398;5293:41:28;;;;;;;;5353:31;;;37098:21:112;;;37155:2;37135:18;;;37128:30;-1:-1:-1;;;37189:2:112;37174:18;;37167:40;37274:4;37259:20;;37252:36;;;5353:31:28;;;;;;;37239:3:112;5353:31:28;;;5403;;;37511:21:112;;;37568:2;37548:18;;;37541:30;-1:-1:-1;;;37602:2:112;37587:18;;37580:40;37687:4;37672:20;;37665:36;;;5403:31:28;;;;;;;37652:3:112;5403:31:28;;;5448:6;:4;:6::i;4671:289:63:-;4729:7;4748:25;4776:23;:21;:23::i;:::-;4810:13;4826:17;;;:8;;;:17;;;;;;4748:51;;-1:-1:-1;;;;;;4826:17:63;;4853:79;;4899:22;;-1:-1:-1;;;4899:22:63;;;;;;;;;;;5227:373:50;5519:15;;;;5497:12;;;:17;5350:12;;5497:38;;:17;:21;:38::i;:::-;5545:14;;5490:45;;-1:-1:-1;5545:48:50;;-1:-1:-1;;;;;5545:14:50;5576:10;5490:45;5545:30;:48::i;2984:338:63:-;3035:25;3063:23;:21;:23::i;:::-;3035:51;;3097:13;3113:17;3122:7;3113:8;:17::i;:::-;3097:33;;3168:29;3185:1;3189:7;3168:8;:29::i;:::-;-1:-1:-1;;;;;3208:17:63;;;;;;:10;;;:17;;;;;:22;;3229:1;;3208:17;:22;;3229:1;;3208:22;:::i;:::-;;;;-1:-1:-1;;3247:17:63;;;;:8;;;:17;;;;;3240:24;;-1:-1:-1;;;;;;3240:24:63;;;3275:40;;3288:5;;3256:7;3275:40;:::i;2758:635:46:-;2813:17;2833;:15;:17::i;:::-;2856:10;;2833:34;;;;:22;;;;;:34;;;;;2894:10;;2833:34;;-1:-1:-1;2878:27:46;;:15;:27::i;:::-;2915:13;2931:17;2937:3;:10;;;2931:5;:17::i;:::-;3103:23;;;:30;;-1:-1:-1;;3103:30:46;3129:4;3103:30;;;:12;;;3143:25;;;3178:14;;2915:33;;-1:-1:-1;3178:68:46;;-1:-1:-1;;;;;3178:14:46;3213:10;3233:4;2915:33;3178:34;:68::i;:::-;3256:15;;;:22;3311:6;;;;3319:18;;;;3256:82;;-1:-1:-1;;;3256:82:46;;-1:-1:-1;;;;;3256:22:46;;;;:39;;:82;;3304:4;;3256:82;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3358:10:46;;3370:15;;;;;;;37908:32:112;;;37988:17;;37982:24;-1:-1:-1;;;;;37978:50:112;37956:20;;;37949:80;3370:15:46;;;;;;;;;37881:18:112;;;;3370:15:46;;;;3358:10;;-1:-1:-1;3354:32:46;;-1:-1:-1;3354:32:46;;3370:15;3354:32;:::i;:::-;;;;;;;;2803:590;;2758:635;:::o;4126:353:63:-;4221:25;4249:23;:21;:23::i;:::-;4221:51;;4296:8;-1:-1:-1;;;;;4287:17:63;:5;-1:-1:-1;;;;;4287:17:63;;4283:78;;4327:23;;-1:-1:-1;;;4327:23:63;;;;;;;;;;;4283:78;-1:-1:-1;;;;;4370:26:63;;;;;;;:19;;;:26;;;;;;;;:36;;;;;;;;;:47;;-1:-1:-1;;4370:47:63;;;;;;;4427:45;2687:377:62;1910:280:63;2014:28;2024:4;2030:2;2034:7;2014:9;:28::i;:::-;2057:47;2080:4;2086:2;2090:7;2099:4;2057:22;:47::i;:::-;2052:132;;2127:46;;-1:-1:-1;;;2127:46:63;;;;;;;;;;;1424:3701:49;1539:22;;:::i;:::-;1573:14;1590:18;1604:3;1590:13;:18::i;:::-;1573:35;;1618:16;1674:11;:21;;;-1:-1:-1;;;;;1649:46:49;:3;:9;;;:21;;;-1:-1:-1;;;;;1649:46:49;;1645:232;;1821:21;;;;1844:9;;;;;:21;1795:71;;-1:-1:-1;;;1795:71:49;;-1:-1:-1;;;;;38298:15:112;;;1795:71:49;;;38280:34:112;38350:15;;38330:18;;;38323:43;38215:18;;1795:71:49;38040:332:112;1645:232:49;1911:11;:19;;;1890:3;:9;;;:17;;;:40;1886:231;;2067:11;:19;;;2088:3;:9;;;:17;;;2046:60;;-1:-1:-1;;;2046:60:49;;;;;;;;19614:25:112;;;19670:2;19655:18;;19648:34;19602:2;19587:18;;19440:248;1886:231:49;2127:43;2143:3;:9;;;2154:11;:15;;;2127;:43::i;:::-;2314:37;2329:3;:9;;;:21;;;2314:3;:10;;;:14;;:37;;;;:::i;:::-;2383:19;;2299:52;;-1:-1:-1;2383:37:49;;2299:52;2383:23;:37::i;:::-;2361:59;;;-1:-1:-1;;;;2660:247:49;;;2754:10;;;;2816:19;;2782:73;;2808:46;;2816:37;;2840:12;2816:23;:37::i;2808:46::-;2782:9;;;;:21;;;;:25;:73::i;:::-;2873:3;:9;;;2714:182;;-1:-1:-1;;;2714:182:49;;;;;;;;;;:::i;2660:247::-;3050:11;:28;;;3029:3;:9;;;:18;;;:49;3025:129;;;3125:9;;;;;:18;;3094:28;;;:49;3025:129;3191:11;:31;;;3167:3;:9;;;:21;;;:55;3163:141;;;3272:9;;;;:21;;;3238:31;;;:55;3163:141;3341:11;:31;;;3317:3;:9;;;:21;;;:55;3313:141;;;3422:9;;;;:21;;;3388:31;;;:55;3313:141;4522:31;;;;:35;;4556:1;4522:35;:::i;:::-;4488:11;:31;;;:69;4484:245;;;4624:31;;;;4673;;;;4580:138;;-1:-1:-1;;;4580:138:49;;;;;19614:25:112;;;;19655:18;;;19648:34;19587:18;;4580:138:49;19440:248:112;4484:245:49;4814:79;4856:6;4864:11;:16;;;4882:3;:10;;;4814:11;:21;;;-1:-1:-1;;;;;4814:41:49;;;:79;;;;;;:::i;:::-;4990:98;4999:6;5007:80;;;;;;;;5026:3;:10;;;5007:80;;;;5045:12;5007:80;;;;5067:11;:18;;;5007:80;;;4990:8;:98::i;:::-;-1:-1:-1;5106:11:49;;1424:3701;-1:-1:-1;;;;1424:3701:49:o;5455:170:63:-;5538:4;5561:23;:21;:23::i;:::-;-1:-1:-1;;;;;5561:47:63;;;;;;;:40;;;;;:47;;;;;;;;:57;;;;;;;;;;-1:-1:-1;5561:57:63;;;;;5455:170::o;3076:301:48:-;3272:16;;;;:32;;3292:11;3272:19;:32::i;:::-;3267:104;;3341:5;3348:11;3327:33;;-1:-1:-1;;;3327:33:48;;;;;;;;;:::i;4485:180:63:-;4542:4;4558:25;4586:23;:21;:23::i;:::-;4656:1;4627:17;;;:8;;:17;;-1:-1:-1;;4627:17:63;;;;-1:-1:-1;;;;;4627:17:63;:31;;;4485:180::o;5116:648:104:-;5159:11;;:::i;:::-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;5233:524:104;;;;;;;;-1:-1:-1;5233:524:104;5267:10;:8;:10::i;:::-;:22;-1:-1:-1;;;;;5233:524:104;;;5313:7;5233:524;;;;-1:-1:-1;;;5233:524:104;;;;;;5381:25;5399:7;5381:15;:25;:::i;:::-;5233:524;;;;5433:25;:15;5451:7;5433:25;:::i;:::-;5233:524;;;;5485:12;:10;:12::i;:::-;5233:524;;;;5534:13;5545:1;5534:10;:13::i;:::-;5233:524;;1278:39;5233:524;;;;;;5613:10;:8;:10::i;:::-;:21;;;5233:524;;;;5701:7;5233:524;;;;5673:1;5233:524;;;;5741:1;5233:524;;;5214:543;;;5116:648;:::o;7022:763:49:-;7171:22;;:::i;:::-;7224:554;;;;;;;;7276:1;7224:554;;;;7307:13;:19;;;:31;;;-1:-1:-1;;;;;7224:554:49;;;;;7365:13;:19;;;:27;;;7224:554;;;;7428:13;:19;;;:28;;;7224:554;;;;7495:13;:19;;;:31;;;7224:554;;;;7565:13;:19;;;:31;;;7224:554;;;;7620:4;-1:-1:-1;;;;;7224:554:49;;;;;7647:3;7224:554;;;;7678:17;:15;:17::i;:::-;7676:29;;7678:27;;7676:29;;;:::i;:::-;;;;;-1:-1:-1;7224:554:49;;7205:573;7022:763;-1:-1:-1;;;;7022:763:49:o;8319:2665::-;8556:11;;:::i;:::-;8579:22;8604:17;:15;:17::i;:::-;8579:42;;8769:15;8805:11;:28;;;8787:15;:46;;;;:::i;:::-;8769:64;;8843:22;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8843:22:49;9589:21;;;;;-1:-1:-1;;;;;9570:41:49;;;;;:18;;;:41;;;;;;;9557:54;;:10;:54;:::i;:::-;9527:27;;;;:84;;;;9641:1336;;;;;;;;9675:21;;;;-1:-1:-1;;;;;9641:1336:49;;;;;;;;;;;;9753:19;;9641:1336;;;;9801:15;9641:1336;;;;;;;;;;;10195:83;;;;;;;10214:13;;;:22;10195:83;;10251:25;;;;10195:83;;;;9641:1336;;;;10524:19;;;;-1:-1:-1;10510:34:49;;;:13;;;;:34;;;;;;;9641:1336;;;;;;;;;;;;;;;;;;;-1:-1:-1;9641:1336:49;;;;;;;;;;;;;;;;;;;8319:2665::o;1421:145:60:-;1489:7;762:47;1554:3;1525:33;;;;;;;;;:::i;3152:308:14:-;3205:7;3236:4;-1:-1:-1;;;;;3245:12:14;3228:29;;:66;;;;;3278:16;3261:13;:33;3228:66;3224:230;;;-1:-1:-1;3317:24:14;;3152:308::o;3224:230::-;-1:-1:-1;3642:73:14;;;3401:10;3642:73;;;;41236:25:112;;;;3413:12:14;41277:18:112;;;41270:34;3427:15:14;41320:18:112;;;41313:34;3686:13:14;41363:18:112;;;41356:34;3709:4:14;41406:19:112;;;;41399:61;;;;3642:73:14;;;;;;;;;;41208:19:112;;;;3642:73:14;;;3632:84;;;;;;5770:97:104:o;3661:227:13:-;3739:7;3759:17;3778:18;3800:27;3811:4;3817:9;3800:10;:27::i;:::-;3758:69;;;;3837:18;3849:5;3837:11;:18::i;:::-;-1:-1:-1;3872:9:13;3661:227;-1:-1:-1;;;3661:227:13:o;2409:432:28:-;2997:42;2985:55;3066:16;2452:359;;2652:67;;;1671:64;2652:67;;;40081:51:112;;;-1:-1:-1;;;40148:18:112;;;40141:34;;;;2712:4:28;40191:18:112;;;40184:34;2489:11:28;;1671:64;2586:43;;40054:18:112;;2652:67:28;;;-1:-1:-1;;2652:67:28;;;;;;;;;;2541:196;;;2652:67;2541:196;;:::i;:::-;;;;-1:-1:-1;;2541:196:28;;;;;;;;;;2506:245;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;2452:359:28;2820:7;:14;;-1:-1:-1;;2820:14:28;;;;;2409:432::o;1035:869:63:-;1185:4;-1:-1:-1;;;;;1205:13:63;;1465:19:10;:23;1201:697:63;;1240:69;;-1:-1:-1;;;1240:69:63;;-1:-1:-1;;;;;1240:36:63;;;;;:69;;1277:10;;1289:4;;1295:7;;1304:4;;1240:69;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1240:69:63;;;;;;;;-1:-1:-1;;1240:69:63;;;;;;;;;;;;:::i;:::-;;;1236:610;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1506:6;:13;1523:1;1506:18;1502:330;;1555:46;;-1:-1:-1;;;1555:46:63;;;;;;;;;;;1502:330;1784:6;1778:13;1769:6;1765:2;1761:15;1754:38;1236:610;-1:-1:-1;;;;;;1389:51:63;-1:-1:-1;;;1389:51:63;;-1:-1:-1;1382:58:63;;1201:697;-1:-1:-1;1883:4:63;1035:869;;;;;;:::o;380:118:86:-;430:3;461:29;488:1;472;461:29;:::i;678:273:64:-;754:15;781:25;809:23;:21;:23::i;:::-;781:51;;855:2;:14;;;853:16;;;;;:::i;:::-;;;;;-1:-1:-1;879:21:64;;;;:12;;;:21;;;;;;;;;:33;;;;;;;;;;;;;;;;;;;;;853:16;-1:-1:-1;922:22:64;932:2;853:16;922:9;:22::i;245:139:85:-;316:4;348:1;:4;;;340:1;:4;;;:12;:36;;;;-1:-1:-1;;368:8:85;356;;-1:-1:-1;;;;;356:20:85;;;;;;;245:139::o;6808:349:104:-;6851:12;;:::i;:::-;6894:256;;;;;;;;6931:5;;-1:-1:-1;;;;;6931:5:104;6894:256;;6967:8;6894:256;;;;7003:7;6894:256;;;;;;;;;;7044:25;:15;7062:7;7044:25;:::i;:::-;6894:256;;;;7096:1;6894:256;;;;7127:8;-1:-1:-1;;;;;;;;;;;;;;;;;4768:29:104;;;;;;;;4785:3;;-1:-1:-1;;;;;4785:3:104;4768:29;;4785:3;4768:29;;;;;4691:113;7127:8;6894:256;;6875:275;6808:349;-1:-1:-1;6808:349:104:o;4896:137::-;-1:-1:-1;;;;;;;;;;;;;;;;;4974:52:104;;;;;;;;;4993:6;4974:52;;;;;5014:10;-1:-1:-1;;;5022:1:104;5014:7;:10::i;2145:730:13:-;2226:7;2235:12;2263:9;:16;2283:2;2263:22;2259:610;;2599:4;2584:20;;2578:27;2648:4;2633:20;;2627:27;2705:4;2690:20;;2684:27;2301:9;2676:36;2746:25;2757:4;2676:36;2578:27;2627;2746:10;:25::i;:::-;2739:32;;;;;;;;;2259:610;-1:-1:-1;2818:1:13;;-1:-1:-1;2822:35:13;2259:610;2145:730;;;;;:::o;570:511::-;647:20;638:5;:29;;;;;;;;:::i;:::-;;634:441;;570:511;:::o;634:441::-;743:29;734:5;:38;;;;;;;;:::i;:::-;;730:345;;788:34;;-1:-1:-1;;;788:34:13;;41805:2:112;788:34:13;;;41787:21:112;41844:2;41824:18;;;41817:30;41883:26;41863:18;;;41856:54;41927:18;;788:34:13;41603:348:112;730:345:13;852:35;843:5;:44;;;;;;;;:::i;:::-;;839:236;;903:41;;-1:-1:-1;;;903:41:13;;42158:2:112;903:41:13;;;42140:21:112;42197:2;42177:18;;;42170:30;42236:33;42216:18;;;42209:61;42287:18;;903:41:13;41956:355:112;839:236:13;974:30;965:5;:39;;;;;;;;:::i;:::-;;961:114;;1020:44;;-1:-1:-1;;;1020:44:13;;42518:2:112;1020:44:13;;;42500:21:112;42557:2;42537:18;;;42530:30;42596:34;42576:18;;;42569:62;-1:-1:-1;;;42647:18:112;;;42640:32;42689:19;;1020:44:13;42316:398:112;2196:100:63;2263:26;2273:2;2277:7;2263:26;;;;;;;;;;;;:9;:26::i;5069:1494:13:-;5195:7;;6119:66;6106:79;;6102:161;;;-1:-1:-1;6217:1:13;;-1:-1:-1;6221:30:13;6201:51;;6102:161;6374:24;;;6357:14;6374:24;;;;;;;;;42946:25:112;;;43019:4;43007:17;;42987:18;;;42980:45;;;;43041:18;;;43034:34;;;43084:18;;;43077:34;;;6374:24:13;;42918:19:112;;6374:24:13;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6374:24:13;;-1:-1:-1;;6374:24:13;;;-1:-1:-1;;;;;;;6412:20:13;;6408:101;;6464:1;6468:29;6448:50;;;;;;;6408:101;6527:6;-1:-1:-1;6535:20:13;;-1:-1:-1;5069:1494:13;;;;;;;;:::o;2302:258:63:-;2388:18;2394:2;2398:7;2388:5;:18::i;:::-;2421:53;2452:1;2456:2;2460:7;2469:4;2421:22;:53::i;:::-;2416:138;;2497:46;;-1:-1:-1;;;2497:46:63;;;;;;;;;;;2566:412;2629:25;2657:23;:21;:23::i;:::-;2629:51;-1:-1:-1;;;;;;2695:16:63;;2691:82;;2734:28;;-1:-1:-1;;;2734:28:63;;;;;;;;;;;2691:82;2786:16;2794:7;2786;:16::i;:::-;2782:80;;;2825:26;;-1:-1:-1;;;2825:26:63;;;;;;;;;;;2782:80;-1:-1:-1;;;;;2872:14:63;;;;;;:10;;;:14;;;;;:19;;2890:1;;2872:14;:19;;2890:1;;2872:19;:::i;:::-;;;;-1:-1:-1;;2901:17:63;;;;:8;;;:17;;;;;:22;;-1:-1:-1;;;;;;2901:22:63;-1:-1:-1;;;;;2901:22:63;;;;;2934:37;;2901:22;:17;2934:37;:::i;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;14:131:112:-;-1:-1:-1;;;;;;88:32:112;;78:43;;68:71;;135:1;132;125:12;150:245;208:6;261:2;249:9;240:7;236:23;232:32;229:52;;;277:1;274;267:12;229:52;316:9;303:23;335:30;359:5;335:30;:::i;592:250::-;677:1;687:113;701:6;698:1;695:13;687:113;;;777:11;;;771:18;758:11;;;751:39;723:2;716:10;687:113;;;-1:-1:-1;;834:1:112;816:16;;809:27;592:250::o;847:271::-;889:3;927:5;921:12;954:6;949:3;942:19;970:76;1039:6;1032:4;1027:3;1023:14;1016:4;1009:5;1005:16;970:76;:::i;:::-;1100:2;1079:15;-1:-1:-1;;1075:29:112;1066:39;;;;1107:4;1062:50;;847:271;-1:-1:-1;;847:271:112:o;1123:220::-;1272:2;1261:9;1254:21;1235:4;1292:45;1333:2;1322:9;1318:18;1310:6;1292:45;:::i;1348:180::-;1407:6;1460:2;1448:9;1439:7;1435:23;1431:32;1428:52;;;1476:1;1473;1466:12;1428:52;-1:-1:-1;1499:23:112;;1348:180;-1:-1:-1;1348:180:112:o;1850:131::-;-1:-1:-1;;;;;1925:31:112;;1915:42;;1905:70;;1971:1;1968;1961:12;1986:134;2054:20;;2083:31;2054:20;2083:31;:::i;2125:315::-;2193:6;2201;2254:2;2242:9;2233:7;2229:23;2225:32;2222:52;;;2270:1;2267;2260:12;2222:52;2309:9;2296:23;2328:31;2353:5;2328:31;:::i;:::-;2378:5;2430:2;2415:18;;;;2402:32;;-1:-1:-1;;;2125:315:112:o;2445:127::-;2506:10;2501:3;2497:20;2494:1;2487:31;2537:4;2534:1;2527:15;2561:4;2558:1;2551:15;2577:257;2649:4;2643:11;;;2681:17;;-1:-1:-1;;;;;2713:34:112;;2749:22;;;2710:62;2707:88;;;2775:18;;:::i;:::-;2811:4;2804:24;2577:257;:::o;2839:253::-;2911:2;2905:9;2953:4;2941:17;;-1:-1:-1;;;;;2973:34:112;;3009:22;;;2970:62;2967:88;;;3035:18;;:::i;3097:255::-;3169:2;3163:9;3211:6;3199:19;;-1:-1:-1;;;;;3233:34:112;;3269:22;;;3230:62;3227:88;;;3295:18;;:::i;3357:255::-;3429:2;3423:9;3471:6;3459:19;;-1:-1:-1;;;;;3493:34:112;;3529:22;;;3490:62;3487:88;;;3555:18;;:::i;3617:275::-;3688:2;3682:9;3753:2;3734:13;;-1:-1:-1;;3730:27:112;3718:40;;-1:-1:-1;;;;;3773:34:112;;3809:22;;;3770:62;3767:88;;;3835:18;;:::i;:::-;3871:2;3864:22;3617:275;;-1:-1:-1;3617:275:112:o;3897:183::-;3957:4;-1:-1:-1;;;;;3982:6:112;3979:30;3976:56;;;4012:18;;:::i;:::-;-1:-1:-1;4057:1:112;4053:14;4069:4;4049:25;;3897:183::o;4085:891::-;4169:6;4200:2;4243;4231:9;4222:7;4218:23;4214:32;4211:52;;;4259:1;4256;4249:12;4211:52;4299:9;4286:23;-1:-1:-1;;;;;4324:6:112;4321:30;4318:50;;;4364:1;4361;4354:12;4318:50;4387:22;;4440:4;4432:13;;4428:27;-1:-1:-1;4418:55:112;;4469:1;4466;4459:12;4418:55;4505:2;4492:16;4528:60;4544:43;4584:2;4544:43;:::i;:::-;4528:60;:::i;:::-;4622:15;;;4704:1;4700:10;;;;4692:19;;4688:28;;;4653:12;;;;4728:19;;;4725:39;;;4760:1;4757;4750:12;4725:39;4784:11;;;;4804:142;4820:6;4815:3;4812:15;4804:142;;;4886:17;;4874:30;;4837:12;;;;4924;;;;4804:142;;5188:936;5285:6;5293;5301;5309;5317;5370:3;5358:9;5349:7;5345:23;5341:33;5338:53;;;5387:1;5384;5377:12;5338:53;5426:9;5413:23;5445:31;5470:5;5445:31;:::i;:::-;5495:5;-1:-1:-1;5552:2:112;5537:18;;5524:32;5565:33;5524:32;5565:33;:::i;:::-;5617:7;-1:-1:-1;5671:2:112;5656:18;;5643:32;;-1:-1:-1;5726:2:112;5711:18;;5698:32;-1:-1:-1;;;;;5779:14:112;;;5776:34;;;5806:1;5803;5796:12;5776:34;5844:6;5833:9;5829:22;5819:32;;5889:7;5882:4;5878:2;5874:13;5870:27;5860:55;;5911:1;5908;5901:12;5860:55;5951:2;5938:16;5977:2;5969:6;5966:14;5963:34;;;5993:1;5990;5983:12;5963:34;6038:7;6033:2;6024:6;6020:2;6016:15;6012:24;6009:37;6006:57;;;6059:1;6056;6049:12;6006:57;5188:936;;;;-1:-1:-1;5188:936:112;;-1:-1:-1;6090:2:112;6082:11;;6112:6;5188:936;-1:-1:-1;;;5188:936:112:o;6852:658::-;7023:2;7075:21;;;7145:13;;7048:18;;;7167:22;;;6994:4;;7023:2;7246:15;;;;7220:2;7205:18;;;6994:4;7289:195;7303:6;7300:1;7297:13;7289:195;;;7368:13;;-1:-1:-1;;;;;7364:39:112;7352:52;;7459:15;;;;7424:12;;;;7400:1;7318:9;7289:195;;;-1:-1:-1;7501:3:112;;6852:658;-1:-1:-1;;;;;;6852:658:112:o;7515:355::-;7569:5;7617:4;7605:9;7600:3;7596:19;7592:30;7589:50;;;7635:1;7632;7625:12;7589:50;7657:22;;:::i;:::-;7648:31;;7716:9;7703:23;7735:33;7760:7;7735:33;:::i;:::-;7791:7;7784:5;7777:22;;7859:2;7848:9;7844:18;7831:32;7826:2;7819:5;7815:14;7808:56;7515:355;;;;:::o;7875:829::-;7927:5;7975:4;7963:9;7958:3;7954:19;7950:30;7947:50;;;7993:1;7990;7983:12;7947:50;8026:2;8020:9;8068:4;8060:6;8056:17;8139:6;8127:10;8124:22;-1:-1:-1;;;;;8091:10:112;8088:34;8085:62;8082:88;;;8150:18;;:::i;:::-;8186:2;8179:22;8219:6;-1:-1:-1;8219:6:112;8249:23;;8281:33;8249:23;8281:33;:::i;:::-;8338:7;8330:6;8323:23;;8407:2;8396:9;8392:18;8379:32;8374:2;8366:6;8362:15;8355:57;8473:2;8462:9;8458:18;8445:32;8440:2;8432:6;8428:15;8421:57;8539:2;8528:9;8524:18;8511:32;8506:2;8498:6;8494:15;8487:57;8606:3;8595:9;8591:19;8578:33;8572:3;8564:6;8560:16;8553:59;8646:51;8693:3;8687;8676:9;8672:19;8646:51;:::i;:::-;8640:3;8632:6;8628:16;8621:77;;7875:829;;;;:::o;8709:225::-;8792:6;8845:3;8833:9;8824:7;8820:23;8816:33;8813:53;;;8862:1;8859;8852:12;8813:53;8885:43;8920:7;8909:9;8885:43;:::i;9121:530::-;9163:5;9216:3;9209:4;9201:6;9197:17;9193:27;9183:55;;9234:1;9231;9224:12;9183:55;9270:6;9257:20;-1:-1:-1;;;;;9292:2:112;9289:26;9286:52;;;9318:18;;:::i;:::-;9362:55;9405:2;9386:13;;-1:-1:-1;;9382:27:112;9411:4;9378:38;9362:55;:::i;:::-;9442:2;9433:7;9426:19;9488:3;9481:4;9476:2;9468:6;9464:15;9460:26;9457:35;9454:55;;;9505:1;9502;9495:12;9454:55;9570:2;9563:4;9555:6;9551:17;9544:4;9535:7;9531:18;9518:55;9618:1;9593:16;;;9611:4;9589:27;9582:38;;;;9597:7;9121:530;-1:-1:-1;;;9121:530:112:o;9656:493::-;9711:5;9759:6;9747:9;9742:3;9738:19;9734:32;9731:52;;;9779:1;9776;9769:12;9731:52;9801:22;;:::i;:::-;9792:31;;9859:9;9846:23;-1:-1:-1;;;;;9884:6:112;9881:30;9878:50;;;9924:1;9921;9914:12;9878:50;9951:45;9992:3;9983:6;9972:9;9968:22;9951:45;:::i;:::-;9944:5;9937:60;;10057:2;10046:9;10042:18;10029:32;10024:2;10017:5;10013:14;10006:56;10094:48;10138:3;10133:2;10122:9;10118:18;10094:48;:::i;:::-;10089:2;10082:5;10078:14;10071:72;9656:493;;;;:::o;10154:348::-;10240:6;10293:2;10281:9;10272:7;10268:23;10264:32;10261:52;;;10309:1;10306;10299:12;10261:52;10349:9;10336:23;-1:-1:-1;;;;;10374:6:112;10371:30;10368:50;;;10414:1;10411;10404:12;10368:50;10437:59;10488:7;10479:6;10468:9;10464:22;10437:59;:::i;10507:456::-;10584:6;10592;10600;10653:2;10641:9;10632:7;10628:23;10624:32;10621:52;;;10669:1;10666;10659:12;10621:52;10708:9;10695:23;10727:31;10752:5;10727:31;:::i;:::-;10777:5;-1:-1:-1;10834:2:112;10819:18;;10806:32;10847:33;10806:32;10847:33;:::i;:::-;10507:456;;10899:7;;-1:-1:-1;;;10953:2:112;10938:18;;;;10925:32;;10507:456::o;10968:282::-;11022:5;11070:4;11058:9;11053:3;11049:19;11045:30;11042:50;;;11088:1;11085;11078:12;11042:50;11110:22;;:::i;:::-;11101:31;;11168:9;11155:23;11148:5;11141:38;11239:2;11228:9;11224:18;11211:32;11206:2;11199:5;11195:14;11188:56;10968:282;;;;:::o;11255:118::-;11341:5;11334:13;11327:21;11320:5;11317:32;11307:60;;11363:1;11360;11353:12;11378:744;11432:5;11480:4;11468:9;11463:3;11459:19;11455:30;11452:50;;;11498:1;11495;11488:12;11452:50;11531:2;11525:9;11573:4;11565:6;11561:17;11644:6;11632:10;11629:22;-1:-1:-1;;;;;11596:10:112;11593:34;11590:62;11587:88;;;11655:18;;:::i;:::-;11695:10;11691:2;11684:22;;11724:6;11715:15;;11767:9;11754:23;11746:6;11739:39;11839:2;11828:9;11824:18;11811:32;11806:2;11798:6;11794:15;11787:57;11896:2;11885:9;11881:18;11868:32;11909:30;11931:7;11909:30;:::i;:::-;11967:2;11955:15;;11948:32;12032:2;12017:18;;12004:32;12045:30;12004:32;12045:30;:::i;:::-;12103:2;12091:15;;;;12084:32;11378:744;;-1:-1:-1;;11378:744:112:o;12127:349::-;12183:5;12231:4;12219:9;12214:3;12210:19;12206:30;12203:50;;;12249:1;12246;12239:12;12203:50;12271:22;;:::i;:::-;12262:31;;12329:9;12316:23;12309:5;12302:38;12400:2;12389:9;12385:18;12372:32;12367:2;12360:5;12356:14;12349:56;12465:2;12454:9;12450:18;12437:32;12432:2;12425:5;12421:14;12414:56;12127:349;;;;:::o;12481:1356::-;12600:6;12608;12652:9;12643:7;12639:23;12682:3;12678:2;12674:12;12671:32;;;12699:1;12696;12689:12;12671:32;12722:6;12748:2;12744;12740:11;12737:31;;;12764:1;12761;12754:12;12737:31;12790:22;;:::i;:::-;12777:35;;12835:29;12854:9;12835:29;:::i;:::-;12828:5;12821:44;12925:2;12914:9;12910:18;12897:32;12892:2;12885:5;12881:14;12874:56;12990:2;12979:9;12975:18;12962:32;12957:2;12950:5;12946:14;12939:56;13055:2;13044:9;13040:18;13027:32;13022:2;13015:5;13011:14;13004:56;13121:3;13110:9;13106:19;13093:33;13087:3;13080:5;13076:15;13069:58;13160:55;13207:7;13201:3;13190:9;13186:19;13160:55;:::i;:::-;13154:3;13147:5;13143:15;13136:80;13278:3;13267:9;13263:19;13250:33;13243:4;13236:5;13232:16;13225:59;13303:3;13339:38;13373:2;13362:9;13358:18;13339:38;:::i;:::-;13333:3;13326:5;13322:15;13315:63;13397:3;13432:54;13478:7;13473:2;13462:9;13458:18;13432:54;:::i;:::-;13427:2;13420:5;13416:14;13409:78;13506:3;13496:13;;13541:54;13587:7;13582:2;13571:9;13567:18;13541:54;:::i;:::-;13536:2;13529:5;13525:14;13518:78;;13660:3;13649:9;13645:19;13632:33;13623:6;13616:5;13612:18;13605:61;13726:3;13715:9;13711:19;13698:33;13693:2;13686:5;13682:14;13675:57;;13751:5;13741:15;;13775:56;13823:7;13818:2;13807:9;13803:18;13775:56;:::i;:::-;13765:66;;;;12481:1356;;;;;:::o;13842:367::-;13905:8;13915:6;13969:3;13962:4;13954:6;13950:17;13946:27;13936:55;;13987:1;13984;13977:12;13936:55;-1:-1:-1;14010:20:112;;-1:-1:-1;;;;;14042:30:112;;14039:50;;;14085:1;14082;14075:12;14039:50;14122:4;14114:6;14110:17;14098:29;;14182:3;14175:4;14165:6;14162:1;14158:14;14150:6;14146:27;14142:38;14139:47;14136:67;;;14199:1;14196;14189:12;14214:437;14300:6;14308;14361:2;14349:9;14340:7;14336:23;14332:32;14329:52;;;14377:1;14374;14367:12;14329:52;14417:9;14404:23;-1:-1:-1;;;;;14442:6:112;14439:30;14436:50;;;14482:1;14479;14472:12;14436:50;14521:70;14583:7;14574:6;14563:9;14559:22;14521:70;:::i;:::-;14610:8;;14495:96;;-1:-1:-1;14214:437:112;-1:-1:-1;;;;14214:437:112:o;15285:1250::-;15497:13;;-1:-1:-1;;;;;1599:31:112;1587:44;;15465:3;15450:19;;15578:4;15570:6;15566:17;15560:24;15553:4;15542:9;15538:20;15531:54;15641:4;15633:6;15629:17;15623:24;15616:4;15605:9;15601:20;15594:54;15704:4;15696:6;15692:17;15686:24;15679:4;15668:9;15664:20;15657:54;15767:4;15759:6;15755:17;15749:24;15742:4;15731:9;15727:20;15720:54;15821:4;15813:6;15809:17;15803:24;15836:61;15891:4;15880:9;15876:20;15862:12;14729;;14717:25;;14791:4;14780:16;;;14774:23;14758:14;;14751:47;14656:148;15836:61;;15953:4;15945:6;15941:17;15935:24;15928:4;15917:9;15913:20;15906:54;16009:4;16001:6;15997:17;15991:24;16034:6;16049:54;16099:2;16088:9;16084:18;16068:14;-1:-1:-1;;;;;1599:31:112;1587:44;;1533:104;16049:54;16140:15;;16134:22;;-1:-1:-1;16175:6:112;16190:61;16232:18;;;16134:22;14886:12;;-1:-1:-1;;;;;14882:38:112;14870:51;;14970:4;14959:16;;;14953:23;14937:14;;14930:47;14809:174;16190:61;16288:15;;16282:22;;-1:-1:-1;16323:6:112;16338:61;16380:18;;;16282:22;15067:5;15061:12;15056:3;15049:25;15123:4;15116:5;15112:16;15106:23;15099:4;15094:3;15090:14;15083:47;15193:4;15186:5;15182:16;15176:23;15169:31;15162:39;15155:4;15150:3;15146:14;15139:63;15265:4;15258:5;15254:16;15248:23;15241:31;15234:39;15227:4;15222:3;15218:14;15211:63;;;14988:292;16338:61;16457:6;16449;16445:19;16439:26;16430:6;16419:9;16415:22;16408:58;16524:2;16516:6;16512:15;16506:22;16497:6;16486:9;16482:22;16475:54;;;15285:1250;;;;:::o;16540:1569::-;16744:4;16773:2;16813;16802:9;16798:18;16843:2;16832:9;16825:21;16866:6;16901;16895:13;16932:6;16924;16917:22;16958:2;16948:12;;16991:2;16980:9;16976:18;16969:25;;17053:2;17043:6;17040:1;17036:14;17025:9;17021:30;17017:39;17091:2;17083:6;17079:15;17112:1;17133;17143:937;17159:6;17154:3;17151:15;17143:937;;;17228:22;;;-1:-1:-1;;17224:36:112;17212:49;;17284:13;;17371:9;;-1:-1:-1;;;;;17367:35:112;17352:51;;17442:11;;17436:18;17474:15;;;17467:27;;;17555:19;;17324:15;;;17587:24;;;17677:21;;;;17722:1;;17645:2;17633:15;;;17736:236;17752:8;17747:3;17744:17;17736:236;;;17833:15;;-1:-1:-1;;;;;;17829:42:112;17815:57;;17941:17;;;;17780:1;17771:11;;;;;17898:14;;;;17736:236;;;-1:-1:-1;18058:12:112;;;;17995:5;-1:-1:-1;;;18023:15:112;;;;17185:1;17176:11;17143:937;;;-1:-1:-1;18097:6:112;;16540:1569;-1:-1:-1;;;;;;;;;16540:1569:112:o;18114:247::-;18173:6;18226:2;18214:9;18205:7;18201:23;18197:32;18194:52;;;18242:1;18239;18232:12;18194:52;18281:9;18268:23;18300:31;18325:5;18300:31;:::i;18366:803::-;18528:4;18557:2;18597;18586:9;18582:18;18627:2;18616:9;18609:21;18650:6;18685;18679:13;18716:6;18708;18701:22;18754:2;18743:9;18739:18;18732:25;;18816:2;18806:6;18803:1;18799:14;18788:9;18784:30;18780:39;18766:53;;18854:2;18846:6;18842:15;18875:1;18885:255;18899:6;18896:1;18893:13;18885:255;;;18992:2;18988:7;18976:9;18968:6;18964:22;18960:36;18955:3;18948:49;19020:40;19053:6;19044;19038:13;19020:40;:::i;:::-;19010:50;-1:-1:-1;19118:12:112;;;;19083:15;;;;18921:1;18914:9;18885:255;;;-1:-1:-1;19157:6:112;;18366:803;-1:-1:-1;;;;;;;18366:803:112:o;19903:1274::-;20012:6;20043:2;20086;20074:9;20065:7;20061:23;20057:32;20054:52;;;20102:1;20099;20092:12;20054:52;20142:9;20129:23;-1:-1:-1;;;;;20167:6:112;20164:30;20161:50;;;20207:1;20204;20197:12;20161:50;20230:22;;20283:4;20275:13;;20271:27;-1:-1:-1;20261:55:112;;20312:1;20309;20302:12;20261:55;20348:2;20335:16;20371:60;20387:43;20427:2;20387:43;:::i;20371:60::-;20465:15;;;20547:1;20543:10;;;;20535:19;;20531:28;;;20496:12;;;;20571:19;;;20568:39;;;20603:1;20600;20593:12;20568:39;20627:11;;;;20647:500;20663:6;20658:3;20655:15;20647:500;;;20745:4;20739:3;20730:7;20726:17;20722:28;20719:118;;;20791:1;20820:2;20816;20809:14;20719:118;20863:22;;:::i;:::-;20925:3;20912:17;20905:5;20898:32;20980:2;20975:3;20971:12;20958:26;20997:33;21022:7;20997:33;:::i;:::-;21050:14;;;21043:31;21087:18;;20689:4;20680:14;;;;;21125:12;;;;20647:500;;21182:382;21247:6;21255;21308:2;21296:9;21287:7;21283:23;21279:32;21276:52;;;21324:1;21321;21314:12;21276:52;21363:9;21350:23;21382:31;21407:5;21382:31;:::i;:::-;21432:5;-1:-1:-1;21489:2:112;21474:18;;21461:32;21502:30;21461:32;21502:30;:::i;:::-;21551:7;21541:17;;;21182:382;;;;;:::o;21990:792::-;22077:5;22106:64;22122:47;22162:6;22122:47;:::i;22106:64::-;22204:21;;;22097:73;-1:-1:-1;22244:4:112;22264:14;;;;22317:1;22313:14;;;22301:27;;22340:15;;;22337:35;;;22368:1;22365;22358:12;22337:35;22392:6;22407:369;22423:6;22418:3;22415:15;22407:369;;;22509:3;22496:17;-1:-1:-1;;;;;22532:11:112;22529:35;22526:125;;;22605:1;22634:2;22630;22623:14;22526:125;22676:57;22729:3;22715:11;22707:6;22703:24;22676:57;:::i;:::-;22664:70;;-1:-1:-1;22754:12:112;;;;22440;;22407:369;;;22411:3;;;;21990:792;;;;;:::o;22787:260::-;22849:5;22902:3;22895:4;22887:6;22883:17;22879:27;22869:55;;22920:1;22917;22910:12;22869:55;22942:99;23037:3;23028:6;23015:20;23008:4;23000:6;22996:17;22942:99;:::i;23052:635::-;23207:6;23215;23223;23276:3;23264:9;23255:7;23251:23;23247:33;23244:53;;;23293:1;23290;23283:12;23244:53;23333:9;23320:23;-1:-1:-1;;;;;23358:6:112;23355:30;23352:50;;;23398:1;23395;23388:12;23352:50;23421:69;23482:7;23473:6;23462:9;23458:22;23421:69;:::i;:::-;23411:79;;;23540:2;23529:9;23525:18;23512:32;23553:31;23578:5;23553:31;:::i;:::-;23603:5;-1:-1:-1;23627:54:112;23673:7;23668:2;23653:18;;23627:54;:::i;:::-;23617:64;;23052:635;;;;;:::o;24164:665::-;24259:6;24267;24275;24283;24336:3;24324:9;24315:7;24311:23;24307:33;24304:53;;;24353:1;24350;24343:12;24304:53;24392:9;24379:23;24411:31;24436:5;24411:31;:::i;:::-;24461:5;-1:-1:-1;24518:2:112;24503:18;;24490:32;24531:33;24490:32;24531:33;:::i;:::-;24583:7;-1:-1:-1;24637:2:112;24622:18;;24609:32;;-1:-1:-1;24692:2:112;24677:18;;24664:32;-1:-1:-1;;;;;24708:30:112;;24705:50;;;24751:1;24748;24741:12;24705:50;24774:49;24815:7;24806:6;24795:9;24791:22;24774:49;:::i;:::-;24764:59;;;24164:665;;;;;;;:::o;24834:1208::-;24963:6;24971;25015:9;25006:7;25002:23;25045:3;25041:2;25037:12;25034:32;;;25062:1;25059;25052:12;25034:32;25102:9;25089:23;-1:-1:-1;;;;;25127:6:112;25124:30;25121:50;;;25167:1;25164;25157:12;25121:50;25190:59;25241:7;25232:6;25221:9;25217:22;25190:59;:::i;:::-;25180:69;;;25268:6;25308:2;25302;25298:7;25294:2;25290:16;25286:25;25283:45;;;25324:1;25321;25314:12;25283:45;25350:22;;:::i;:::-;25337:35;;25423:2;25412:9;25408:18;25395:32;25388:5;25381:47;25460:38;25494:2;25483:9;25479:18;25460:38;:::i;:::-;25455:2;25448:5;25444:14;25437:62;25559:2;25548:9;25544:18;25531:32;25526:2;25519:5;25515:14;25508:56;25624:3;25613:9;25609:19;25596:33;25591:2;25584:5;25580:14;25573:57;25691:3;25680:9;25676:19;25663:33;25657:3;25650:5;25646:15;25639:58;25758:3;25747:9;25743:19;25730:33;25724:3;25717:5;25713:15;25706:58;25797:39;25831:3;25820:9;25816:19;25797:39;:::i;:::-;25791:3;25784:5;25780:15;25773:64;25856:3;25892:54;25938:7;25933:2;25922:9;25918:18;25892:54;:::i;:::-;25886:3;25875:15;;25868:79;25992:18;;25979:32;25963:14;;;25956:56;;;;-1:-1:-1;24834:1208:112;25879:5;;-1:-1:-1;24834:1208:112:o;26047:904::-;26207:4;26249:3;26238:9;26234:19;26226:27;;26286:6;26280:13;26269:9;26262:32;26379:1;26375;26370:3;26366:11;26362:19;26354:4;26346:6;26342:17;26336:24;26332:50;26325:4;26314:9;26310:20;26303:80;26439:4;26431:6;26427:17;26421:24;26414:4;26403:9;26399:20;26392:54;26502:4;26494:6;26490:17;26484:24;26477:4;26466:9;26462:20;26455:54;26565:4;26557:6;26553:17;26547:24;26540:4;26529:9;26525:20;26518:54;26628:4;26620:6;26616:17;26610:24;26603:4;26592:9;26588:20;26581:54;26682:4;26674:6;26670:17;26664:24;26697:54;26745:4;26734:9;26730:20;26716:12;-1:-1:-1;;;;;1599:31:112;1587:44;;1533:104;26697:54;;26800:4;26792:6;26788:17;26782:24;26815:63;26872:4;26861:9;26857:20;26841:14;14886:12;;-1:-1:-1;;;;;14882:38:112;14870:51;;14970:4;14959:16;;;14953:23;14937:14;;14930:47;14809:174;26815:63;;26936:6;26928;26924:19;26918:26;26909:6;26898:9;26894:22;26887:58;26047:904;;;;:::o;26956:388::-;27024:6;27032;27085:2;27073:9;27064:7;27060:23;27056:32;27053:52;;;27101:1;27098;27091:12;27053:52;27140:9;27127:23;27159:31;27184:5;27159:31;:::i;:::-;27209:5;-1:-1:-1;27266:2:112;27251:18;;27238:32;27279:33;27238:32;27279:33;:::i;27720:342::-;27838:6;27846;27899:3;27887:9;27878:7;27874:23;27870:33;27867:53;;;27916:1;27913;27906:12;27867:53;27939:43;27974:7;27963:9;27939:43;:::i;:::-;27929:53;;28001:55;28048:7;28042:3;28031:9;28027:19;28001:55;:::i;:::-;27991:65;;27720:342;;;;;:::o;28067:380::-;28146:1;28142:12;;;;28189;;;28210:61;;28264:4;28256:6;28252:17;28242:27;;28210:61;28317:2;28309:6;28306:14;28286:18;28283:38;28280:161;;28363:10;28358:3;28354:20;28351:1;28344:31;28398:4;28395:1;28388:15;28426:4;28423:1;28416:15;28280:161;;28067:380;;;:::o;28452:127::-;28513:10;28508:3;28504:20;28501:1;28494:31;28544:4;28541:1;28534:15;28568:4;28565:1;28558:15;28584:127;28645:10;28640:3;28636:20;28633:1;28626:31;28676:4;28673:1;28666:15;28700:4;28697:1;28690:15;28716:128;28783:9;;;28804:11;;;28801:37;;;28818:18;;:::i;28849:125::-;28914:9;;;28935:10;;;28932:36;;;28948:18;;:::i;28979:375::-;-1:-1:-1;;;;;29237:15:112;;;29219:34;;29289:15;;;;29284:2;29269:18;;29262:43;29336:2;29321:18;;29314:34;;;;29169:2;29154:18;;28979:375::o;29359:135::-;29398:3;29419:17;;;29416:43;;29439:18;;:::i;:::-;-1:-1:-1;29486:1:112;29475:13;;29359:135::o;29499:383::-;29610:6;29663:2;29651:9;29642:7;29638:23;29634:32;29631:52;;;29679:1;29676;29669:12;29631:52;29719:9;29706:23;-1:-1:-1;;;;;29744:6:112;29741:30;29738:50;;;29784:1;29781;29774:12;29738:50;29807:69;29868:7;29859:6;29848:9;29844:22;29807:69;:::i;29887:251::-;29957:6;30010:2;29998:9;29989:7;29985:23;29981:32;29978:52;;;30026:1;30023;30016:12;29978:52;30058:9;30052:16;30077:31;30102:5;30077:31;:::i;30143:217::-;30183:1;30209;30199:132;;30253:10;30248:3;30244:20;30241:1;30234:31;30288:4;30285:1;30278:15;30316:4;30313:1;30306:15;30199:132;-1:-1:-1;30345:9:112;;30143:217::o;30365:168::-;30438:9;;;30469;;30486:15;;;30480:22;;30466:37;30456:71;;30507:18;;:::i;30538:327::-;30634:4;30692:11;30679:25;30786:2;30782:7;30771:8;30755:14;30751:29;30747:43;30727:18;30723:68;30713:96;;30805:1;30802;30795:12;30713:96;30826:33;;;;;30538:327;-1:-1:-1;;30538:327:112:o;31138:574::-;31260:4;31266:6;31326:11;31313:25;31420:2;31416:7;31405:8;31389:14;31385:29;31381:43;31361:18;31357:68;31347:96;;31439:1;31436;31429:12;31347:96;31466:33;;31518:20;;;-1:-1:-1;;;;;;31550:30:112;;31547:50;;;31593:1;31590;31583:12;31547:50;31626:4;31614:17;;-1:-1:-1;31677:1:112;31673:14;;;31657;31653:35;31643:46;;31640:66;;;31702:1;31699;31692:12;31717:299;31889:9;31926:84;31995:14;31987:6;31980:5;31926:84;:::i;32021:228::-;32106:6;32159:2;32147:9;32138:7;32134:23;32130:32;32127:52;;;32175:1;32172;32165:12;32127:52;32198:45;32235:7;32224:9;32198:45;:::i;32533:384::-;-1:-1:-1;;;;;;32718:33:112;;32706:46;;32775:13;;32688:3;;32797:74;32775:13;32860:1;32851:11;;32844:4;32832:17;;32797:74;:::i;:::-;32891:16;;;;32909:1;32887:24;;32533:384;-1:-1:-1;;;32533:384:112:o;32922:287::-;33051:3;33089:6;33083:13;33105:66;33164:6;33159:3;33152:4;33144:6;33140:17;33105:66;:::i;33214:245::-;33281:6;33334:2;33322:9;33313:7;33309:23;33305:32;33302:52;;;33350:1;33347;33340:12;33302:52;33382:9;33376:16;33401:28;33423:5;33401:28;:::i;35031:456::-;35137:1;35133;35128:3;35124:11;35120:19;35112:5;35106:12;35102:38;35097:3;35090:51;35190:4;35183:5;35179:16;35173:23;35166:4;35161:3;35157:14;35150:47;35246:4;35239:5;35235:16;35229:23;35222:4;35217:3;35213:14;35206:47;35302:4;35295:5;35291:16;35285:23;35278:4;35273:3;35269:14;35262:47;35358:4;35351:5;35347:16;35341:23;35334:4;35329:3;35325:14;35318:47;35411:4;35404:5;35400:16;35394:23;35426:55;35475:4;35470:3;35466:14;35452:12;14886;;-1:-1:-1;;;;;14882:38:112;14870:51;;14970:4;14959:16;;;14953:23;14937:14;;14930:47;14809:174;35492:387;35730:3;35715:19;;35743:42;35719:9;35767:6;35743:42;:::i;:::-;35816:3;35801:19;;35794:35;;;;35860:3;35845:19;35838:35;35492:387;;-1:-1:-1;35492:387:112:o;35884:315::-;36094:3;36079:19;;36107:42;36083:9;36131:6;36107:42;:::i;:::-;36186:6;36180:3;36169:9;36165:19;36158:35;35884:315;;;;;:::o;38377:385::-;38628:25;;;38684:2;38669:18;;38662:34;;;38615:3;38600:19;;38705:51;38752:2;38737:18;;38729:6;38705:51;:::i;38767:386::-;39029:3;39014:19;;39042:42;39018:9;39066:6;39042:42;:::i;:::-;14886:12;;-1:-1:-1;;;;;14882:38:112;39142:3;39127:19;;14870:51;14970:4;14959:16;;14953:23;14937:14;;;14930:47;39093:54;14809:174;39158:319;39384:25;;;39372:2;39357:18;;39418:53;39467:2;39452:18;;39444:6;14886:12;;-1:-1:-1;;;;;14882:38:112;14870:51;;14970:4;14959:16;;;14953:23;14937:14;;14930:47;14809:174;40229:489;-1:-1:-1;;;;;40498:15:112;;;40480:34;;40550:15;;40545:2;40530:18;;40523:43;40597:2;40582:18;;40575:34;;;40645:3;40640:2;40625:18;;40618:31;;;40423:4;;40666:46;;40692:19;;40684:6;40666:46;:::i;:::-;40658:54;40229:489;-1:-1:-1;;;;;;40229:489:112:o;40723:249::-;40792:6;40845:2;40833:9;40824:7;40820:23;40816:32;40813:52;;;40861:1;40858;40851:12;40813:52;40893:9;40887:16;40912:30;40936:5;40912:30;:::i;41471:127::-;41532:10;41527:3;41523:20;41520:1;41513:31;41563:4;41560:1;41553:15;41587:4;41584:1;41577:15",
    "linkReferences": {},
    "immutableReferences": {
      "3083": [
        {
          "start": 14407,
          "length": 32
        }
      ],
      "3085": [
        {
          "start": 14365,
          "length": 32
        }
      ],
      "3087": [
        {
          "start": 14323,
          "length": 32
        }
      ],
      "3089": [
        {
          "start": 14490,
          "length": 32
        }
      ],
      "3091": [
        {
          "start": 14527,
          "length": 32
        }
      ],
      "3093": [
        {
          "start": 14448,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "IS_TEST()": "fa7626d4",
    "approve(address,uint256)": "095ea7b3",
    "balanceOf(address)": "70a08231",
    "borrow(((address,uint256),(bytes,uint256,(address,uint256,uint256,uint256,uint256,(address,uint256)))[])[])": "b1ce7a6a",
    "buy((uint256,address)[])": "980b13c5",
    "checkCollateralExternal((address,uint256,uint256,uint256,uint256,(address,uint256)),(address,uint256))": "ff9d3a77",
    "checkOfferArgExternal((bytes,uint256,(address,uint256,uint256,uint256,uint256,(address,uint256))))": "20906871",
    "claim(uint256[])": "6ba4c138",
    "claimAsBorrower(uint256[])": "3d6fd5be",
    "createTranche(uint256)": "92eab80e",
    "excludeArtifacts()": "b5508aa9",
    "excludeContracts()": "e20c9f71",
    "excludeSenders()": "1ed7831c",
    "failed()": "ba414fa6",
    "getApproved(uint256)": "081812fc",
    "getLoan(uint256)": "504006ca",
    "getMinOfferCostAndBorrowableAmount(address)": "8d116c7a",
    "getParameters()": "a5ea11da",
    "getRateOfTranche(uint256)": "14aab74f",
    "isApprovedForAll(address,address)": "e985e9c5",
    "name()": "06fdde03",
    "offerDigest((address,uint256,uint256,uint256,uint256,(address,uint256)))": "1fbc8a74",
    "onERC721Received(address,address,uint256,bytes)": "150b7a02",
    "ownerOf(uint256)": "6352211e",
    "position(uint256)": "f7a95a9e",
    "price(uint256)": "26a49e37",
    "repay(uint256[])": "0c72ad20",
    "safeTransferFrom(address,address,uint256)": "42842e0e",
    "safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
    "sendInterestsExternal((address,uint256,uint256,uint256,uint256,(uint256,uint256),uint256,address,(address,uint256),(uint256,uint256,bool,bool),uint256,uint256),(uint256,uint256,uint256))": "2efe69b3",
    "sendShareOfSaleAsSupplierExternal((address,uint256,uint256,uint256,uint256,(uint256,uint256),uint256,address,(address,uint256),(uint256,uint256,bool,bool),uint256,uint256),(uint256,uint256,uint256))": "6a974035",
    "setApprovalForAll(address,bool)": "a22cb465",
    "setAuctionDuration(uint256)": "a497e674",
    "setAuctionPriceFactor(uint256)": "e7af8fed",
    "setBorrowAmountPerOfferLowerBound(address,uint256)": "7660e109",
    "setMinOfferCost(address,uint256)": "1a34c700",
    "setUp()": "0a9254e4",
    "supportsInterface(bytes4)": "01ffc9a7",
    "symbol()": "95d89b41",
    "targetArtifactSelectors()": "66d9a9a0",
    "targetArtifacts()": "85226c81",
    "targetContracts()": "3f7286f4",
    "targetSelectors()": "916a17c6",
    "targetSenders()": "3e5e3c23",
    "testFinalPrice()": "457715c1",
    "testInitialPrice()": "981e27e6",
    "testPrice()": "8335a17f",
    "totalSupply()": "18160ddd",
    "transferFrom(address,address,uint256)": "23b872dd",
    "useCollateralExternal((bytes,uint256,(address,uint256,uint256,uint256,uint256,(address,uint256)))[],address,(address,uint256))": "ac989819",
    "useOfferExternal((bytes,uint256,(address,uint256,uint256,uint256,uint256,(address,uint256))),(uint256,address,uint256,uint256,uint256,uint256,address,(address,uint256),uint256))": "bbf1dd1d"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AssertionFailedCollatStateDontMatch\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"AssertionFailedLoanDontMatch\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"Ray\",\"name\":\"expected\",\"type\":\"uint256\"},{\"internalType\":\"Ray\",\"name\":\"actual\",\"type\":\"uint256\"}],\"name\":\"AssertionFailedRayDontMatch\",\"type\":\"error\"},{\"inputs\":[{\"components\":[{\"internalType\":\"contract IERC20\",\"name\":\"assetToLend\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"loanToValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expirationDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tranche\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"contract IERC721\",\"name\":\"implem\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"internalType\":\"struct NFToken\",\"name\":\"collateral\",\"type\":\"tuple\"}],\"internalType\":\"struct Offer\",\"name\":\"offer\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"contract IERC721\",\"name\":\"implem\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"internalType\":\"struct NFToken\",\"name\":\"providedNft\",\"type\":\"tuple\"}],\"name\":\"BadCollateral\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"loanId\",\"type\":\"uint256\"}],\"name\":\"BorrowerAlreadyClaimed\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"CallerIsNotOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"endDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"loanId\",\"type\":\"uint256\"}],\"name\":\"CollateralIsNotLiquidableYet\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"ERC20TransferFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC721AddressZeroIsNotAValidOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC721ApprovalToCurrentOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC721ApproveToCaller\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC721CallerIsNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC721CallerIsNotOwnerNorApprovedForAll\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC721InvalidTokenId\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC721MintToTheZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC721TokenAlreadyMinted\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC721TransferFromIncorrectOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC721TransferToNonERC721ReceiverImplementer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC721TransferToTheZeroAddress\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"firstRequested\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"requested\",\"type\":\"address\"}],\"name\":\"InconsistentAssetRequests\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"firstTrancheIdUsed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"trancheIdFound\",\"type\":\"uint256\"}],\"name\":\"InconsistentTranches\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"nbOfTranches\",\"type\":\"uint256\"}],\"name\":\"InvalidTranche\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"loanId\",\"type\":\"uint256\"}],\"name\":\"LoanAlreadyRepaid\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"loanId\",\"type\":\"uint256\"}],\"name\":\"LoanNotRepaidOrLiquidatedYet\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"loanId\",\"type\":\"uint256\"}],\"name\":\"NotBorrowerOfTheLoan\",\"type\":\"error\"},{\"inputs\":[{\"components\":[{\"internalType\":\"contract IERC20\",\"name\":\"assetToLend\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"loanToValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expirationDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tranche\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"contract IERC721\",\"name\":\"implem\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"internalType\":\"struct NFToken\",\"name\":\"collateral\",\"type\":\"tuple\"}],\"internalType\":\"struct Offer\",\"name\":\"offer\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"expirationDate\",\"type\":\"uint256\"}],\"name\":\"OfferHasExpired\",\"type\":\"error\"},{\"inputs\":[{\"components\":[{\"internalType\":\"contract IERC20\",\"name\":\"assetToLend\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"loanToValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expirationDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tranche\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"contract IERC721\",\"name\":\"implem\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"internalType\":\"struct NFToken\",\"name\":\"collateral\",\"type\":\"tuple\"}],\"internalType\":\"struct Offer\",\"name\":\"offer\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"requested\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lowerBound\",\"type\":\"uint256\"}],\"name\":\"RequestedAmountIsUnderMinimum\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"requested\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"offered\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"contract IERC20\",\"name\":\"assetToLend\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"loanToValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expirationDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tranche\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"contract IERC721\",\"name\":\"implem\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"internalType\":\"struct NFToken\",\"name\":\"collateral\",\"type\":\"tuple\"}],\"internalType\":\"struct Offer\",\"name\":\"offer\",\"type\":\"tuple\"}],\"name\":\"RequestedAmountTooHigh\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Unauthorized\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"lent\",\"type\":\"uint256\"}],\"name\":\"UnsafeAmountLent\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"minLoanToValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxLoanToValue\",\"type\":\"uint256\"}],\"name\":\"UnsafeOfferLoanToValuesGap\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"loanId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"loan\",\"type\":\"bytes\"}],\"name\":\"Borrow\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"loanId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"args\",\"type\":\"bytes\"}],\"name\":\"Buy\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"claimant\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"claimed\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"loanId\",\"type\":\"uint256\"}],\"name\":\"Claim\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"newAuctionDuration\",\"type\":\"uint256\"}],\"name\":\"NewAuctionDuration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"Ray\",\"name\":\"newAuctionPriceFactor\",\"type\":\"uint256\"}],\"name\":\"NewAuctionPriceFactor\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IERC20\",\"name\":\"currency\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"newLowerBound\",\"type\":\"uint256\"}],\"name\":\"NewBorrowAmountPerOfferLowerBound\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IERC20\",\"name\":\"currency\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"newMinOfferCost\",\"type\":\"uint256\"}],\"name\":\"NewMininimumOfferCost\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"Ray\",\"name\":\"tranche\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"newTrancheId\",\"type\":\"uint256\"}],\"name\":\"NewTranche\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"loanId\",\"type\":\"uint256\"}],\"name\":\"Repay\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"log_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"log_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"log_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"name\":\"log_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"val\",\"type\":\"address\"}],\"name\":\"log_named_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"val\",\"type\":\"bytes\"}],\"name\":\"log_named_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"val\",\"type\":\"bytes32\"}],\"name\":\"log_named_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"}],\"name\":\"log_named_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"val\",\"type\":\"string\"}],\"name\":\"log_named_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"log_named_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"log_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"logs\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"IS_TEST\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"contract IERC721\",\"name\":\"implem\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"internalType\":\"struct NFToken\",\"name\":\"nft\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"contract IERC20\",\"name\":\"assetToLend\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"loanToValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expirationDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tranche\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"contract IERC721\",\"name\":\"implem\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"internalType\":\"struct NFToken\",\"name\":\"collateral\",\"type\":\"tuple\"}],\"internalType\":\"struct Offer\",\"name\":\"offer\",\"type\":\"tuple\"}],\"internalType\":\"struct OfferArg[]\",\"name\":\"args\",\"type\":\"tuple[]\"}],\"internalType\":\"struct BorrowArg[]\",\"name\":\"args\",\"type\":\"tuple[]\"}],\"name\":\"borrow\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"loanId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"internalType\":\"struct BuyArg[]\",\"name\":\"args\",\"type\":\"tuple[]\"}],\"name\":\"buy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"contract IERC20\",\"name\":\"assetToLend\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"loanToValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expirationDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tranche\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"contract IERC721\",\"name\":\"implem\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"internalType\":\"struct NFToken\",\"name\":\"collateral\",\"type\":\"tuple\"}],\"internalType\":\"struct Offer\",\"name\":\"offer\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"contract IERC721\",\"name\":\"implem\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"internalType\":\"struct NFToken\",\"name\":\"providedNft\",\"type\":\"tuple\"}],\"name\":\"checkCollateralExternal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"contract IERC20\",\"name\":\"assetToLend\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"loanToValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expirationDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tranche\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"contract IERC721\",\"name\":\"implem\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"internalType\":\"struct NFToken\",\"name\":\"collateral\",\"type\":\"tuple\"}],\"internalType\":\"struct Offer\",\"name\":\"offer\",\"type\":\"tuple\"}],\"internalType\":\"struct OfferArg\",\"name\":\"arg\",\"type\":\"tuple\"}],\"name\":\"checkOfferArgExternal\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"positionIds\",\"type\":\"uint256[]\"}],\"name\":\"claim\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"sent\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"loanIds\",\"type\":\"uint256[]\"}],\"name\":\"claimAsBorrower\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"sent\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"Ray\",\"name\":\"newTranche\",\"type\":\"uint256\"}],\"name\":\"createTranche\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"newTrancheId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeArtifacts\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"excludedArtifacts_\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"excludedContracts_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeSenders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"excludedSenders_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"failed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"getLoan\",\"outputs\":[{\"components\":[{\"internalType\":\"contract IERC20\",\"name\":\"assetLent\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"lent\",\"type\":\"uint256\"},{\"internalType\":\"Ray\",\"name\":\"shareLent\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endDate\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"internalType\":\"Ray\",\"name\":\"priceFactor\",\"type\":\"uint256\"}],\"internalType\":\"struct Auction\",\"name\":\"auction\",\"type\":\"tuple\"},{\"internalType\":\"Ray\",\"name\":\"interestPerSecond\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"contract IERC721\",\"name\":\"implem\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"internalType\":\"struct NFToken\",\"name\":\"collateral\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"paid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minInterestsToRepay\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"liquidated\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"borrowerClaimed\",\"type\":\"bool\"}],\"internalType\":\"struct Payment\",\"name\":\"payment\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"supplyPositionIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nbOfPositions\",\"type\":\"uint256\"}],\"internalType\":\"struct Loan\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"currency\",\"type\":\"address\"}],\"name\":\"getMinOfferCostAndBorrowableAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"minOfferCost\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"offerBorrowAmountLowerBound\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getParameters\",\"outputs\":[{\"internalType\":\"Ray\",\"name\":\"auctionPriceFactor\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"auctionDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nbOfLoans\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nbOfTranches\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"getRateOfTranche\",\"outputs\":[{\"internalType\":\"Ray\",\"name\":\"rate\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"contract IERC20\",\"name\":\"assetToLend\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"loanToValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expirationDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tranche\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"contract IERC721\",\"name\":\"implem\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"internalType\":\"struct NFToken\",\"name\":\"collateral\",\"type\":\"tuple\"}],\"internalType\":\"struct Offer\",\"name\":\"offer\",\"type\":\"tuple\"}],\"name\":\"offerDigest\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"position\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"Ray\",\"name\":\"share\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"loanId\",\"type\":\"uint256\"}],\"internalType\":\"struct Provision\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"loanId\",\"type\":\"uint256\"}],\"name\":\"price\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"loanIds\",\"type\":\"uint256[]\"}],\"name\":\"repay\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"contract IERC20\",\"name\":\"assetLent\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"lent\",\"type\":\"uint256\"},{\"internalType\":\"Ray\",\"name\":\"shareLent\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endDate\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"internalType\":\"Ray\",\"name\":\"priceFactor\",\"type\":\"uint256\"}],\"internalType\":\"struct Auction\",\"name\":\"auction\",\"type\":\"tuple\"},{\"internalType\":\"Ray\",\"name\":\"interestPerSecond\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"contract IERC721\",\"name\":\"implem\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"internalType\":\"struct NFToken\",\"name\":\"collateral\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"paid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minInterestsToRepay\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"liquidated\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"borrowerClaimed\",\"type\":\"bool\"}],\"internalType\":\"struct Payment\",\"name\":\"payment\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"supplyPositionIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nbOfPositions\",\"type\":\"uint256\"}],\"internalType\":\"struct Loan\",\"name\":\"loan\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"Ray\",\"name\":\"share\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"loanId\",\"type\":\"uint256\"}],\"internalType\":\"struct Provision\",\"name\":\"provision\",\"type\":\"tuple\"}],\"name\":\"sendInterestsExternal\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"contract IERC20\",\"name\":\"assetLent\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"lent\",\"type\":\"uint256\"},{\"internalType\":\"Ray\",\"name\":\"shareLent\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endDate\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"internalType\":\"Ray\",\"name\":\"priceFactor\",\"type\":\"uint256\"}],\"internalType\":\"struct Auction\",\"name\":\"auction\",\"type\":\"tuple\"},{\"internalType\":\"Ray\",\"name\":\"interestPerSecond\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"contract IERC721\",\"name\":\"implem\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"internalType\":\"struct NFToken\",\"name\":\"collateral\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"paid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minInterestsToRepay\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"liquidated\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"borrowerClaimed\",\"type\":\"bool\"}],\"internalType\":\"struct Payment\",\"name\":\"payment\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"supplyPositionIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nbOfPositions\",\"type\":\"uint256\"}],\"internalType\":\"struct Loan\",\"name\":\"loan\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"Ray\",\"name\":\"share\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"loanId\",\"type\":\"uint256\"}],\"internalType\":\"struct Provision\",\"name\":\"provision\",\"type\":\"tuple\"}],\"name\":\"sendShareOfSaleAsSupplierExternal\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newAuctionDuration\",\"type\":\"uint256\"}],\"name\":\"setAuctionDuration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"Ray\",\"name\":\"newAuctionPriceFactor\",\"type\":\"uint256\"}],\"name\":\"setAuctionPriceFactor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"newLowerBound\",\"type\":\"uint256\"}],\"name\":\"setBorrowAmountPerOfferLowerBound\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"newMinOfferCost\",\"type\":\"uint256\"}],\"name\":\"setMinOfferCost\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setUp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetArtifactSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzSelector[]\",\"name\":\"targetedArtifactSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetArtifacts\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"targetedArtifacts_\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targetedContracts_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzSelector[]\",\"name\":\"targetedSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetSenders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targetedSenders_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testFinalPrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testInitialPrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testPrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"contract IERC20\",\"name\":\"assetToLend\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"loanToValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expirationDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tranche\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"contract IERC721\",\"name\":\"implem\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"internalType\":\"struct NFToken\",\"name\":\"collateral\",\"type\":\"tuple\"}],\"internalType\":\"struct Offer\",\"name\":\"offer\",\"type\":\"tuple\"}],\"internalType\":\"struct OfferArg[]\",\"name\":\"args\",\"type\":\"tuple[]\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"contract IERC721\",\"name\":\"implem\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"internalType\":\"struct NFToken\",\"name\":\"nft\",\"type\":\"tuple\"}],\"name\":\"useCollateralExternal\",\"outputs\":[{\"components\":[{\"internalType\":\"contract IERC20\",\"name\":\"assetLent\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"lent\",\"type\":\"uint256\"},{\"internalType\":\"Ray\",\"name\":\"shareLent\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endDate\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"internalType\":\"Ray\",\"name\":\"priceFactor\",\"type\":\"uint256\"}],\"internalType\":\"struct Auction\",\"name\":\"auction\",\"type\":\"tuple\"},{\"internalType\":\"Ray\",\"name\":\"interestPerSecond\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"contract IERC721\",\"name\":\"implem\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"internalType\":\"struct NFToken\",\"name\":\"collateral\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"paid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minInterestsToRepay\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"liquidated\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"borrowerClaimed\",\"type\":\"bool\"}],\"internalType\":\"struct Payment\",\"name\":\"payment\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"supplyPositionIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nbOfPositions\",\"type\":\"uint256\"}],\"internalType\":\"struct Loan\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"contract IERC20\",\"name\":\"assetToLend\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"loanToValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expirationDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tranche\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"contract IERC721\",\"name\":\"implem\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"internalType\":\"struct NFToken\",\"name\":\"collateral\",\"type\":\"tuple\"}],\"internalType\":\"struct Offer\",\"name\":\"offer\",\"type\":\"tuple\"}],\"internalType\":\"struct OfferArg\",\"name\":\"arg\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"Ray\",\"name\":\"matched\",\"type\":\"uint256\"},{\"internalType\":\"contract IERC20\",\"name\":\"assetLent\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tranche\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minOfferDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minOfferLoanToValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxOfferLoanToValue\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"contract IERC721\",\"name\":\"implem\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"internalType\":\"struct NFToken\",\"name\":\"nft\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"loanId\",\"type\":\"uint256\"}],\"internalType\":\"struct CollateralState\",\"name\":\"collatState\",\"type\":\"tuple\"}],\"name\":\"useOfferExternal\",\"outputs\":[{\"components\":[{\"internalType\":\"Ray\",\"name\":\"matched\",\"type\":\"uint256\"},{\"internalType\":\"contract IERC20\",\"name\":\"assetLent\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tranche\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minOfferDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minOfferLoanToValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxOfferLoanToValue\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"contract IERC721\",\"name\":\"implem\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"internalType\":\"struct NFToken\",\"name\":\"nft\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"loanId\",\"type\":\"uint256\"}],\"internalType\":\"struct CollateralState\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Borrow(uint256,bytes)\":{\"params\":{\"loan\":\"the loan created\",\"loanId\":\"id of the loan\"}},\"Buy(uint256,bytes)\":{\"params\":{\"args\":\"arguments NFT sold\",\"loanId\":\"identifier of the loan previously backed by the sold collateral\"}},\"Claim(address,uint256,uint256)\":{\"params\":{\"claimant\":\"who received the liquidity\",\"claimed\":\"amount sent\",\"loanId\":\"loan identifier where the claim rights come from\"}},\"NewAuctionDuration(uint256)\":{\"params\":{\"newAuctionDuration\":\"duration of liquidation for new loans\"}},\"NewAuctionPriceFactor(uint256)\":{\"params\":{\"newAuctionPriceFactor\":\"factor of loan to value setting initial price of auctions\"}},\"NewBorrowAmountPerOfferLowerBound(address,uint256)\":{\"params\":{\"currency\":\"the erc20 on which a new borrow amount lower bound is taking effect\",\"newLowerBound\":\"the new lower bound\"}},\"NewMininimumOfferCost(address,uint256)\":{\"params\":{\"currency\":\"the erc20 on which a new minimum borrow cost is taking effect\",\"newMinOfferCost\":\"the new minimum amount that will need to be repaid per loan offer used\"}},\"NewTranche(uint256,uint256)\":{\"params\":{\"newTrancheId\":\"identifier of the new tranche\",\"tranche\":\"the interest rate of the new tranche, in multiplier per second\"}},\"Repay(uint256)\":{\"params\":{\"loanId\":\"loan identifier\"}},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"borrow(((address,uint256),(bytes,uint256,(address,uint256,uint256,uint256,uint256,(address,uint256)))[])[])\":{\"params\":{\"args\":\"list of arguments specifying at which terms each collateral should be used\"}},\"buy((uint256,address)[])\":{\"params\":{\"args\":\"arguments on what and how to buy\"}},\"claim(uint256[])\":{\"params\":{\"positionIds\":\"identifiers of one or multiple supply position to burn\"},\"returns\":{\"sent\":\"amount sent\"}},\"claimAsBorrower(uint256[])\":{\"params\":{\"loanIds\":\"loan identifiers of one or multiple loans where the borrower wants to claim liquidation share\"},\"returns\":{\"sent\":\"amount sent\"}},\"createTranche(uint256)\":{\"params\":{\"newTranche\":\"the interest rate of the new tranche\"}},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"getLoan(uint256)\":{\"params\":{\"id\":\"loan identifier\"},\"returns\":{\"_0\":\"loan the corresponding loan\"}},\"getMinOfferCostAndBorrowableAmount(address)\":{\"params\":{\"currency\":\"the erc20 asset lent on which the parameters apply\"},\"returns\":{\"minOfferCost\":\"the minimal amount to repay per offer used in loan\",\"offerBorrowAmountLowerBound\":\" minimum amount to borrow per offer used in loan\"}},\"getParameters()\":{\"returns\":{\"auctionDuration\":\"number of seconds after the auction start when the price hits 0\",\"auctionPriceFactor\":\"factor multiplied with the loan to value of a loan to get initial price         of a collateral on sale\",\"nbOfLoans\":\"total number of loans ever issued (active and ended)\",\"nbOfTranches\":\"total number of interest rates tranches ever created (active and inactive)\"}},\"getRateOfTranche(uint256)\":{\"params\":{\"id\":\"rate identifier\"},\"returns\":{\"rate\":\"the rate of the tranche, as a Ray, multiplier per second of the amount to repay (non compounding)         I.e lent * time since loan start * tranche = interests to repay\"}},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"offerDigest((address,uint256,uint256,uint256,uint256,(address,uint256)))\":{\"params\":{\"offer\":\"the loan offer signed/to sign by a supplier\"},\"returns\":{\"_0\":\"digest the digest, ecdsa sign as is to produce a valid loan offer signature\"}},\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"param data must be of format OfferArg[]\",\"params\":{\"data\":\"abi encoded arguments for the loan\",\"operator\":\"account that initialized the transfer action according to the NFT implementation contract\",\"tokenId\":\"token identifier of the NFT sent according to the NFT implementation contract\"},\"returns\":{\"_0\":\"selector `this.onERC721Received.selector` ERC721-compliant response, signaling compatibility\"}},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"position(uint256)\":{\"params\":{\"tokenId\":\"token identifier of the supply position\"},\"returns\":{\"_0\":\"provision metadata\"}},\"price(uint256)\":{\"params\":{\"loanId\":\"identifier of the loan\"},\"returns\":{\"_0\":\"price computed price\"}},\"repay(uint256[])\":{\"details\":\"repay on behalf is activated, the collateral goes to the original borrower\",\"params\":{\"loanIds\":\"identifiers of loans to repay\"}},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setAuctionDuration(uint256)\":{\"params\":{\"newAuctionDuration\":\"number of seconds of the duration\"}},\"setAuctionPriceFactor(uint256)\":{\"params\":{\"newAuctionPriceFactor\":\"the new factor multiplied to the loan to value\"}},\"setBorrowAmountPerOfferLowerBound(address,uint256)\":{\"params\":{\"currency\":\"the erc20 on which a new borrow amount lower bound is taking effect\",\"newLowerBound\":\"the new lower bound\"}},\"setMinOfferCost(address,uint256)\":{\"params\":{\"currency\":\"the erc20 on which a new minimum borrow cost will take effect\",\"newMinOfferCost\":\"the new minimum amount that will need to be repaid per loan offer used\"}},\"supportsInterface(bytes4)\":{\"details\":\"don't use this method for inclusion in the facet function selectors     prefer the LibDiamond implementation for this method     it is included here for IERC721-compliance\"},\"totalSupply()\":{\"returns\":{\"_0\":\"totalSupply the number\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"events\":{\"Borrow(uint256,bytes)\":{\"notice\":\"one loan has been initiated\"},\"Buy(uint256,bytes)\":{\"notice\":\"a NFT collateral has been sold as part of a liquidation\"},\"Claim(address,uint256,uint256)\":{\"notice\":\"some liquidity has been claimed as principal plus interests or share of liquidation\"},\"NewAuctionDuration(uint256)\":{\"notice\":\"duration of future auctions has been updated\"},\"NewAuctionPriceFactor(uint256)\":{\"notice\":\"initial price factor of future auctions has been updated\"},\"NewBorrowAmountPerOfferLowerBound(address,uint256)\":{\"notice\":\"the borrow amount lower bound per offer has been updated\"},\"NewMininimumOfferCost(address,uint256)\":{\"notice\":\"the minimum cost to repay per used loan offer     when borrowing a certain currency has been updated\"},\"NewTranche(uint256,uint256)\":{\"notice\":\"a new interest rate tranche has been created\"},\"Repay(uint256)\":{\"notice\":\"a loan has been repaid with interests by its borrower\"}},\"kind\":\"user\",\"methods\":{\"borrow(((address,uint256),(bytes,uint256,(address,uint256,uint256,uint256,uint256,(address,uint256)))[])[])\":{\"notice\":\"take loans, take ownership of NFTs specified as collateral, sends borrowed money to caller\"},\"buy((uint256,address)[])\":{\"notice\":\"buy one or multiple NFTs in liquidation\"},\"claim(uint256[])\":{\"notice\":\"claims principal plus interests or liquidation share due as a supplier\"},\"claimAsBorrower(uint256[])\":{\"notice\":\"claims share of liquidation due to a borrower who's collateral has been sold\"},\"createTranche(uint256)\":{\"notice\":\"creates a new tranche at a new identifier for lenders to provide offers for\"},\"getLoan(uint256)\":{\"notice\":\"get loan metadata\"},\"getMinOfferCostAndBorrowableAmount(address)\":{\"notice\":\"get the minimal amount to repay per offer used in loan and minimum amount to borrow per offer.     Gives currently active settings, may not concern loans already issued.\"},\"getParameters()\":{\"notice\":\"gets current values of parameters impacting loans behavior and total number of loans (active and ended)\"},\"getRateOfTranche(uint256)\":{\"notice\":\"gets the rate of tranche `id`\"},\"offerDigest((address,uint256,uint256,uint256,uint256,(address,uint256)))\":{\"notice\":\"computes EIP-712 compliant digest of a loan offer\"},\"onERC721Received(address,address,uint256,bytes)\":{\"notice\":\"borrow using sent NFT as collateral without needing approval through transfer callback\"},\"position(uint256)\":{\"notice\":\"get metadata on provision linked to the supply position\"},\"price(uint256)\":{\"notice\":\"gets the price to buy the underlying collateral of the loan\"},\"repay(uint256[])\":{\"notice\":\"repay one or multiple loans, gives collaterals back\"},\"setAuctionDuration(uint256)\":{\"notice\":\"sets the time it takes to auction prices to fall to 0 for future loans\"},\"setAuctionPriceFactor(uint256)\":{\"notice\":\"sets the factor applied to the loan to value setting initial price of auction for future loans\"},\"setBorrowAmountPerOfferLowerBound(address,uint256)\":{\"notice\":\"updates the borrow amount lower bound per offer for one currency\"},\"setMinOfferCost(address,uint256)\":{\"notice\":\"updates the minimum amount to repay per used loan offer when borrowing a certain currency\"},\"totalSupply()\":{\"notice\":\"total number of supply positions ever minted (counting burned ones)\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"test/Auction/AuctionInternal.t.sol\":\"TestAuction\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/=node_modules/@openzeppelin/\",\":diamond/=node_modules/diamond/\",\":ds-test/=node_modules/ds-test/src/\",\":forge-std/=node_modules/forge-std/src/\",\":solmate/=node_modules/solmate/\"]},\"sources\":{\"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x4ffc0547c02ad22925310c585c0f166f8759e2648a09e9b489100c42f15dd98d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15f52f51413a9de1ff191e2f6367c62178e1df7806d7880fe857a98b0b66253d\",\"dweb:/ipfs/QmaQG1fwfgUt5E9nu2cccFiV47B2V78MM1tCy1qB7n4MsH\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x1e854874c68bec05be100dc0092cb5fbbc71253d370ae98ddef248bbfc3fe118\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef0fb6e809779426dc2ac201149bbad4aecdc5810874f2843b050e8b5fef8d30\",\"dweb:/ipfs/QmPDRjaNxmcyxLUKvv8Fxk5eWcf7xvC5S9JpbtqvE7Cadu\"]},\"node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xab28a56179c1db258c9bf5235b382698cb650debecb51b23d12be9e241374b68\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://daae589a9d6fa7e55f99f86c0a16796ca490f243fb3693632c3711c0646c1d56\",\"dweb:/ipfs/QmR3zpd7wNw3rcUdekwiv6FYHJqksuTCXLVioTxu6Fbxk3\"]},\"node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"node_modules/@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":{\"keccak256\":\"0xa8796bd16014cefb8c26449413981a49c510f92a98d6828494f5fd046223ced3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://63a5e0bb5a7d182e0d0eef87033f78115eab791de3626a929bc98c157087880a\",\"dweb:/ipfs/QmetkXAu2CJKS4qrZtEQPU8okAPwUwa6HL4XYwk8vrYMk8\"]},\"node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol\":{\"keccak256\":\"0xd1556954440b31c97a142c6ba07d5cade45f96fafd52091d33a14ebe365aecbf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://26fef835622b46a5ba08b3ef6b46a22e94b5f285d0f0fb66b703bd30217d2c34\",\"dweb:/ipfs/QmZ548qdwfL1qF7aXz3xh1GCdTiST81kGGuKRqVUfYmPZR\"]},\"node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"node_modules/@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269\",\"dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj\"]},\"node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"node_modules/@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c969013129ba9e651a20735ef659fef6d8a1139ea3607bd4b26ddea2d645634\",\"dweb:/ipfs/QmVhVa6LGuzAcB8qgDtVHRkucn4ihj5UZr8xBLcJkP6ucb\"]},\"node_modules/@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xda898fa084aa1ddfdb346e6a40459e00a59d87071cce7c315a46d648dd71d0ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ce501a941f4aa1555c04dabb5e07992503bb6a9b32ff8f7cdcefdb4a742210cb\",\"dweb:/ipfs/QmeScPrUpdrGYs9BytV3Z5ZWJcBXtuAgCW4BLHua4xFUxx\"]},\"node_modules/@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x948d8b2d18f38141ec78c5229d770d950ebc781ed3f44cc9e3ccbb9fded5846a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7311ac950ed2d81f3ccf1784a926efbfc82a86dcb5c98d41eb3792c0cac63a2f\",\"dweb:/ipfs/QmRRwCUHewkPmehx8QRYENFoWyLNx8UEZGULxWYUeSZdTS\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"node_modules/@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b\",\"dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz\"]},\"node_modules/diamond/contracts/facets/OwnershipFacet.sol\":{\"keccak256\":\"0x6502a171801d68e68de6c5a2b879d5e12a3a1539cdc568c2bfcc268fbdf6c5a9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e8094a53d216df365a5cbdaa0e4292c6faae493e88c62e7a616ccb4b5440c097\",\"dweb:/ipfs/QmNXspNxT83mcL1mynUiUrfj94aVe8rz2UyZUJJn7gfWWe\"]},\"node_modules/diamond/contracts/interfaces/IDiamond.sol\":{\"keccak256\":\"0x37be579b243559c0c16a8de037d2c428e8fafdfdd9cde69fa165a07f5adfda2c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0f16b9edb01e35edf96566f6460c4986fcc3fb9bff6291fab5be17d256cd0fd2\",\"dweb:/ipfs/Qmdq869cYabBjfnYZgcF5BSHsFQXT1EZNg2umHMAxZqWEH\"]},\"node_modules/diamond/contracts/interfaces/IDiamondCut.sol\":{\"keccak256\":\"0x9ecd4a637b7cb44c26a4ab7760766defce42a6dc36a355b92dfeef9ce4391fee\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cd0e7ad69374bc41bc62c90428f9795c8a06360599c4c6b06e76bd8a1b91e28f\",\"dweb:/ipfs/QmfZk5ZiKQQaudjYf3qEumVsW87gELxcYMNRu3AHSLuk4n\"]},\"node_modules/diamond/contracts/interfaces/IDiamondLoupe.sol\":{\"keccak256\":\"0x10884024af2c0f7deca0fac4ddf84e76da5dba35b6e02fabeac8ea54c1a5c6f7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df3404a4aed3bbda2f5e441d7035b354237d8c9d7c27b149ccf66d13a1d81d45\",\"dweb:/ipfs/QmZvHWgRCge8tLJ3x3Lf3JQkbNTgAN6LzwCGBabbgk8tew\"]},\"node_modules/diamond/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x7541f7408d0f74162bc4664d5e012427f2ceaab2abadca0353269ef15ee03d8b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a8e7a34b3ea39f4c0dfa6f5ace5d9415e4d0c90cb3f4264e6946b808f2d4011c\",\"dweb:/ipfs/QmWdcRF4krMMb1ua3hmV8avdHKYa4XXt1iw7sxx1ntsEJa\"]},\"node_modules/diamond/contracts/interfaces/IERC173.sol\":{\"keccak256\":\"0x001e07b0fbc894300b939d496ffb005abe398b5bc609802d319b8cdeafe5d36b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e59f66879ef993892410cbe834b1d2dd34891f47066b7be601ff825b0748361\",\"dweb:/ipfs/QmZedQ668we8ohPPZF5tPP5gKpJ5n22h3FDFkoFT5VXpEu\"]},\"node_modules/diamond/contracts/libraries/LibDiamond.sol\":{\"keccak256\":\"0x4090c1e2191d081ff33e1631eabbebfb69e29ac1bf67516d7f4430bb2e0b2983\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3c66e113d032be747262abe642abcec8c132400fe156414721590412d9af6485\",\"dweb:/ipfs/QmfLg3p9wZ748cSDrfh4TmxCuMU8oVZU9BzAGhJSFQysWM\"]},\"node_modules/ds-test/src/test.sol\":{\"keccak256\":\"0x8758531bbac3972efcf1fa46383dbe1d276406fe527bc7abb2f236486278e83b\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://1f64264d61506847acf8761e84aff690cebe830958eac00bac7924d8be569240\",\"dweb:/ipfs/QmSekDJvJ82MZAmr63n7YvfLzQ7gS4NLSHPmHL3GN3rw8k\"]},\"node_modules/forge-std/src/Base.sol\":{\"keccak256\":\"0x609e3a00319169988cc8272e837f350a9ba77cf8f8f62e4897a8e4a8a5f0fb27\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b24435e35ba5b080ebd6e8976c23fb735c7212d042be8462ffd2ea50c5250363\",\"dweb:/ipfs/QmPeVvN7FS4oMmCuYAeRdZihTfrG4tA7Vvunuvv59a6wre\"]},\"node_modules/forge-std/src/StdAssertions.sol\":{\"keccak256\":\"0xdb05fd11858f232b8b5c6c9175229bdd061c277c34f13b0bdc64d333bcbd2617\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08ae865564d9c1fa1012b61db77a2da2844ac1ae0a216b16c9fe9ab65ddf80af\",\"dweb:/ipfs/QmfFfmkjb2Qfc5dPJvwQgjTMbeQ12dTPFeAQ8Gb944U44g\"]},\"node_modules/forge-std/src/StdChains.sol\":{\"keccak256\":\"0x097b75f7171af89f433407e040d11b22fc26e2fe03793c2cfe18cad390d7af8b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://19d1dca7b398e517499ffa65ad44df69cdd016f37dc57e2d07d50279d3ddee17\",\"dweb:/ipfs/QmfMFR25367GB5PoBi1KZxWs1hZcJtC3eANiioG3dKj8ah\"]},\"node_modules/forge-std/src/StdCheats.sol\":{\"keccak256\":\"0x3c536209b4d4e1879adc4d91b12e237985f0f8f91e71828dacd8fca3bdf2fa99\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://65adfc61088d242dbab8faa738d104005531e3a52ed993329b54fa7ee45e53ab\",\"dweb:/ipfs/QmP1d4thtELTT2vup4XmrCSKXZ91Eq756pgKq1z5hq2NGP\"]},\"node_modules/forge-std/src/StdError.sol\":{\"keccak256\":\"0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6\",\"dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj\"]},\"node_modules/forge-std/src/StdInvariant.sol\":{\"keccak256\":\"0xd855e1fea6247f1bef118e2bee9f0039832988b7173fd17766bba4014ae26a3c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c58c0f0b66852dfd3c76fb7958d8b023489d7a874c7cb1ad4f2021f9ec8ab477\",\"dweb:/ipfs/Qmd3MX9HAkNUhPddL29ekwhqgRnjAobZ35UzchaJZNACCN\"]},\"node_modules/forge-std/src/StdJson.sol\":{\"keccak256\":\"0x9e2a7521190c462a0667706385f1c52a816220a9813ca8ac520fba7ba45d660b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d23017fe6570b28130a731b86179352b93a5fb5af32f11559837afc1186293c\",\"dweb:/ipfs/QmR3p6zG5Kmcr8gKocFCSopLHfXv1AziPJbH17nKyMxwxV\"]},\"node_modules/forge-std/src/StdMath.sol\":{\"keccak256\":\"0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92\",\"dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC\"]},\"node_modules/forge-std/src/StdStorage.sol\":{\"keccak256\":\"0xd1517df281f973dba8b7ba52c02d3df552b60d91b8f47e4669049da648778673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://52e43264f58a5dcfd985f3c99aa81064805aa8f1c2b4c6521fd63d45cdbba8d5\",\"dweb:/ipfs/QmUMTF6cRjt5tCQrrgQDXVRmHQLjevNsTvLFdaA1m9TBj9\"]},\"node_modules/forge-std/src/StdStyle.sol\":{\"keccak256\":\"0x2882555b0f58e48144e46e9aa5118a506b31ad7485327d54e8f681e8b414c337\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2850bcb1322de9d9dd87ded42debbe0e8fc4048173788d4c00c98b50e5f76985\",\"dweb:/ipfs/QmUiPKnj7GZLLQbJGY7bVDu79Q9jGEYNjR5ZBgwFy8mH97\"]},\"node_modules/forge-std/src/StdUtils.sol\":{\"keccak256\":\"0x6584855fecbe5b6a9f8ebdb26b37c58532c5bc5cc6e1737dfa7c8a045087be55\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40a35a4d292b4fed02e11d5f25fb474f10a7c4eb99f75b5383dc23fcb6e55d3c\",\"dweb:/ipfs/QmYZ2nz1EmNh4xLWf4YybZoa1Da1z3Wq3w4pneMhkouMi4\"]},\"node_modules/forge-std/src/Test.sol\":{\"keccak256\":\"0xddf16afce2bb7bbb69ed868d4c7ee8b4ea4ffbf8929427fe799682f107534945\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://52f6ebde2a4cb9d08aea5fb3d62b2f15961bb9a29d6d9e30dd0859d0d631cabf\",\"dweb:/ipfs/QmeJ9Dp1GYUggzjGiwTZkxCfB15NfyfgcyrNZL5tyWZbVZ\"]},\"node_modules/forge-std/src/Vm.sol\":{\"keccak256\":\"0xdd9f518aade851117d3ca3122cae6ed413a8b8355d43d69db336e94da3214a96\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://939ede17edec5c78176379839f4c68851b1316e8f5789efb2f01cbdae09b88ef\",\"dweb:/ipfs/QmYiBBb7Nyuse7HoEFkCeauUwcpef9S33ozZYDqXCEXEtH\"]},\"node_modules/forge-std/src/console.sol\":{\"keccak256\":\"0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70\",\"dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec\"]},\"node_modules/forge-std/src/console2.sol\":{\"keccak256\":\"0xcd5706f5a7025825d9fd389c89b49bf571f9abaea8a062dc4048320b5b43bf46\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c066485a7d4bd18d44efb4c89274b0959e8066b9a480383a2ce07d7f31555f88\",\"dweb:/ipfs/QmckeYfA5FtAjcxaytq69Dpj6uY57tbQ61kNPPxXi9kgbW\"]},\"node_modules/forge-std/src/interfaces/IMulticall3.sol\":{\"keccak256\":\"0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0\",\"dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2\"]},\"src/AdminFacet.sol\":{\"keccak256\":\"0x1a2d8498fd8fd33bdda336678927e9f541b02b454d82994cd4a650f1f3a2942a\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://53f331f3125c77de8a8efa62288c88b9e72f93763cf7b255ee039a661198e936\",\"dweb:/ipfs/QmPvkNQKNyRf3BVyjet6YmWmzhBKC5tFq3BZTx66U167u2\"]},\"src/AuctionFacet.sol\":{\"keccak256\":\"0x41a60f4e0ea36dd4a1acb8845d07f8eee2e788aa0acc7eeea3c3443448231f22\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://049a623687b02d8ceb7f933cdad6b6de5f28d826cb7eb828c1b2ecfba1b02b48\",\"dweb:/ipfs/QmRSjXjDZqys1KWaK2YbWhuMju5A45KLETF9KtjzHVFGbM\"]},\"src/BorrowFacet.sol\":{\"keccak256\":\"0x960ac7f5ddc23fd9c9b87481451b47022b85ce53eefc1c46fe9cdbd34481e2fc\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://3c17390c85d849708b4489909ab63f11ceb8652d2c2f465e2c0b42b7a71fed94\",\"dweb:/ipfs/QmZNQ9RdZhk9QAxQkws1Fsv5UMwfJpra77HokJCxM8wERH\"]},\"src/BorrowLogic/BorrowCheckers.sol\":{\"keccak256\":\"0x023dce239e7e6d534db05e6364715ebb3399c3c9dccf894e9076712ab779745d\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://cfabb6dbacbb9d09ee26887d755e88d9761d266a3daa68a54c070ff967bf2aa8\",\"dweb:/ipfs/QmbdtPZcZ5QSB8LKQMEy6wU5jDZSSkMJvtGVDpEDuN3bz4\"]},\"src/BorrowLogic/BorrowHandlers.sol\":{\"keccak256\":\"0x41dbb5b648ea50541ab227e77e8850607731ad7ebd8171f5d0d96eb829246301\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://780b77c00afd5fa5d97ba16f3d3a7e83bb909608fb54f5f38f19120a16d5bb18\",\"dweb:/ipfs/QmTPZ47VbeFxbWdou6hFMkk86PStsLuh2uNZfhJVoGjyBX\"]},\"src/ClaimFacet.sol\":{\"keccak256\":\"0x06a664d0d467d20ffc78de21c78670a08f134752f4872db55d5dc587e76ecec2\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://e1312cb1cff9ba34218db3219647e9d63685e32a88ed5007858d8af76b440653\",\"dweb:/ipfs/QmbazoYdTrS6FaMjbXM5eWWaz41JGV9QzazuxXAVdDsk1K\"]},\"src/DataStructure/ERC721Errors.sol\":{\"keccak256\":\"0x0ee13f898a2d61d6662ef236db05001d14086ff4431bef2ae89c1979819d38d0\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://2e1878fe70994d02159dbf4a5a9c79b3665feaae0d08ff420b3f00cb8ed6355a\",\"dweb:/ipfs/QmNYJDoien8bUQFYuc75GyVGVTYuiUagF4RRUSGTTmZNH7\"]},\"src/DataStructure/Errors.sol\":{\"keccak256\":\"0x6c4db7ebc787971449c92a004a1742a0ebed90b3073de98ac677a7471696f8c5\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://b650ca8195bbdf7e6010ec51248ea3beb4a255730fb8e6404196b1680d5f1433\",\"dweb:/ipfs/QmbU8dkitPbxtTkUWgqL4Rgx3KdDzDgkYESY48muSmcTop\"]},\"src/DataStructure/Global.sol\":{\"keccak256\":\"0x9596c1bdf1271dd447db6a8f26ca493253674e252c9f63a7bc13c8689a7b6e49\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://3ff822127c6c674400e9730466eb6832d19a72eaf991f3bbf62d251a6e2b49d5\",\"dweb:/ipfs/QmZPGbWwS7rTPF3NiyjivxDseeBW64GhfkGvVNuaCbnzDv\"]},\"src/DataStructure/Objects.sol\":{\"keccak256\":\"0x251dd6c3f36c5a2c8a6a867aa29c9ba8b4bb7f2ec1a7321d630fea19f6bbd83a\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://a7f620222a6b6d909e8aa2d7191200b312345b6c704eecdf40729982e238f44e\",\"dweb:/ipfs/QmTikrgA5SKJrsJanid1atHw1M7opEvwuGKNRQTbjeM4sq\"]},\"src/DataStructure/Storage.sol\":{\"keccak256\":\"0x8f99f5f94641c826d0b4bd2dadb065745ff877b195fb1eb7392362a026d01380\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://f2c2362ee8472e6076f7f18a51264c96e63a346e61da6a7234abe5e3c034de38\",\"dweb:/ipfs/QmW59HJM49LDieB2svjKnYzo7hdYKG24rLKgb7AfiXht4z\"]},\"src/ProtocolFacet.sol\":{\"keccak256\":\"0x9c1c8deb2d61a8e39028c31154e51f6f4acccd71d4995cd82442e5addd9a5916\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://9e1d0cfcefa35601756a9f9aec29fcd1a072dc3e5e37d78def17d72ace29909d\",\"dweb:/ipfs/QmeCgh2tqzoz5Nf8X6UGY7ZeKTiyrvgoxZdzU3P9ua4JKX\"]},\"src/RepayFacet.sol\":{\"keccak256\":\"0x5b5c777a189495808271068b7757f73542bbc27b6141599752eaf4bef63c8e89\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://d6b289c89769655e173cecb2c20d8147d48ada74c5c6596060b70df7eed4b609\",\"dweb:/ipfs/Qmas7puaEDtvyLhMPUZGouNnVvky3gRKZCLemCxdLWALsF\"]},\"src/Signature.sol\":{\"keccak256\":\"0x37073550ae20735f42ae719377540c0bedd633aad9ce97d40e0facb965e4d137\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://d57bda44ce2f1e48f227c8b97cb23cd166d3b92421a3436835c81c1bc42a60ca\",\"dweb:/ipfs/QmU5yS6t3d6nhfUeGmwZnFsbo8LZe7MHED738pZBaUkPna\"]},\"src/SupplyPositionFacet.sol\":{\"keccak256\":\"0xd96da66c04a30bc8d665bdbec2eebbf23998aff501e00f64fc26d7ed0c4df780\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://bc62b16dbddf140812eb18fc39e7af0618c0b38c2b83ba9ee3efb67974963ad5\",\"dweb:/ipfs/QmYV7aBahd6EqmcjFK1Lncp27XeG2AKnLtQRFRnGsGu9Mz\"]},\"src/SupplyPositionLogic/DiamondERC721.sol\":{\"keccak256\":\"0xdb5734014944ffbfc70b937c0cb2ab310d15c7ceb93e852bf5c6aef64c24584b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://51bc9d846048e67e83c9e708aedd5f68ce240bd87c1c4a68526ee224553c0279\",\"dweb:/ipfs/QmUWcdYokYYxTNpJtSwM22Q4WBKxJEjfhtyAU97NFh1VdZ\"]},\"src/SupplyPositionLogic/NFTUtils.sol\":{\"keccak256\":\"0xc1fdc762292d11504da9d1b999d6364d8c76b721c8f6f7369e0030c9dae9af13\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dc9d2a3636065c11ad95bc669381dae82218909711ed54e31ee3085671ade192\",\"dweb:/ipfs/QmfX1zJes16PDd9NUGcSNYBMRvaykMhyaEMEQsmMugVtP4\"]},\"src/SupplyPositionLogic/SafeMint.sol\":{\"keccak256\":\"0xfe55649875c4f7c6fa65c01b8abf9e0f6564cab19ec24fb895bdce6dde90764d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5b0e86c734cce67187b23816bbba38c9eaab5e2154606de75866637f4774fd99\",\"dweb:/ipfs/QmPuJk6rhpUNjhftEAzbm26DA5tZw8sHybzYZ6G4PuWG8G\"]},\"src/interface/IAdminFacet.sol\":{\"keccak256\":\"0xfc9606029a4ef8d26d8c86c377d77c3caf1e26335f3e155f279581e487bcc640\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://5a04932fe22d016e66e172bff16c0611abcb8804e1039f99678a5d22e130daee\",\"dweb:/ipfs/QmUKzRKB5CPD3tE81Pbn8HHesuY1j64L5Xfbi4E8xsja8h\"]},\"src/interface/IAuctionFacet.sol\":{\"keccak256\":\"0x142cf5565d929cf20c8b042f791360b7b76289620efcd42c90a37f2d8179e49f\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://3aa1107c4c11a419c7340aff9624e3f539196759ffbe4eed5fde26cbbf1b4567\",\"dweb:/ipfs/QmfS88KKuQskg2RQP6GoVEbk9uUhbmVYH6Fps7yNUpfMCc\"]},\"src/interface/IBorrowCheckers.sol\":{\"keccak256\":\"0x581d912358ce65c74e7e3f089486d5c2cc7f45be7cb02ef5ee26a293c9ba1f18\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://18d4d2dee4cf9ccbeb8a33b037dc0021b1315fd3fca864a2127834f36cb6aaba\",\"dweb:/ipfs/QmUWvZMWUqv2DJpooXCHmQuBcr4kTzBhwApQniouAKdEJn\"]},\"src/interface/IBorrowFacet.sol\":{\"keccak256\":\"0xc2351fa73840199deb8c9ecd663294517ce6e457e198d699d53d651b72f1fe43\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://2094053b1d81f799877ee2ccd44a38601d80b97f93d54a14e0dfbc8ba8f3aba7\",\"dweb:/ipfs/QmZwEsKquQgH1H5tnKCQuBEeU9mRcnNBPC2bXZGt8XVuHF\"]},\"src/interface/IBorrowHandlers.sol\":{\"keccak256\":\"0x420bed3254df51bff3c728e252b74a9603fa3f834330c1edf0f0d257444f03ce\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://200955bcca9610fd1a0e3230f761ade89a12285bf60c91a758ef4045f5b55f54\",\"dweb:/ipfs/QmV9vYWeLVvo5ykdi8x6scgK4QDwYuPkhd4KETKWPA5tMv\"]},\"src/interface/IClaimFacet.sol\":{\"keccak256\":\"0xa797f893096a5828eb1614b941df05b54afcf72ff1fde42a106976bf70d5e71c\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://19be4abca0237cf076fb66e9d4fa9119c7bd9004a9e34a39c162cc3a1bb8e0cc\",\"dweb:/ipfs/QmaLkzLvZLwbcWn8CXmL9JYwVYPHeNWsMKD9JPMRozDBSQ\"]},\"src/interface/IOwnershipFacet.sol\":{\"keccak256\":\"0x505b2f2d275a0aa2861d08564f6d03e44e8d10cd8a1c6fbdea1105383e0e9a4d\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://4ca7e3a48787d056da5f3569965f9c2015e65d8ceb124e9346cf73d55e55c8b2\",\"dweb:/ipfs/QmWJmUsegbVtaJ71yCJZiEpedEvhSuw73NyjBfRFCkxt2z\"]},\"src/interface/IProtocolFacet.sol\":{\"keccak256\":\"0x41ef10bad154ed0a98a1fa46046869d6d6ab744953186caa287ced95b80ddc4a\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://8a45399f560a088b94d3d5e14a104a3cbc02cec1083cf1eec5a8b135341c7d53\",\"dweb:/ipfs/QmcCDJmFCkRZoeHojqmvaMsavwZXcBeZV54i5eAfxmjcH5\"]},\"src/interface/IRepayFacet.sol\":{\"keccak256\":\"0x932b0a489b740c46361e4cd5f5103c765b954cedfd41a823dd0549f435f0b7d4\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://fddbb0a0401cd79a17b794c9caaa6f3c2e9381a1a3fd6ea04c43e2148786c572\",\"dweb:/ipfs/QmUKSTezv4twtFPVCXRSQZBfKNW5Zkd22w4HWFfJrV7VyQ\"]},\"src/interface/ISignature.sol\":{\"keccak256\":\"0x6dadc10c64bc681b36624c2937fd3e108e87ca0056d311510e53a25cd009d065\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://a813951b3d9f26315a9363a779c745c58ad261ee9fa8a997727ea7ddc6c90da1\",\"dweb:/ipfs/QmR8G8XQDm7xjKzPH29PmYw2LnHakapvkdavJXZCT3vKFT\"]},\"src/mock/Money.sol\":{\"keccak256\":\"0x5e3ad642d66b67ba5606b3e566bd6d61aaf1fb041f65b147c8f73abdf502d8d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ae809b748f38d9d9e4a4bd8d211e7b30c8d56b5e632204cc27654daf995e5c3\",\"dweb:/ipfs/QmUKMtSDrZG3QHFWRUAh5FPAxGXpSGZsafStRhoESxxL52\"]},\"src/mock/NFT.sol\":{\"keccak256\":\"0xc9930007614632c7dc1393745990ec87c310b4178f387f1cbe52b50f4016fb64\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://b1bd12749aec08d1d0f5d2d4d8d32259c9c23ab243f1aa16b0106d89955f4e50\",\"dweb:/ipfs/QmRohEtgT3y7kTbeSbzQkxBTJemznmkxJey2vTKmZCBvFT\"]},\"src/mock/TestCurrency.sol\":{\"keccak256\":\"0xea5129d4a21ac381a780017790fc8f0c888aa8354314bd97d396056f4bdd20f0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://98c46c988468539ee172a1bad7e9e666707bec019b62c90207c552679a644960\",\"dweb:/ipfs/QmexsmkJdB934t2Tc6x9oPE64NbdYNjLMz8r3CituThgnB\"]},\"src/utils/Erc20CheckedTransfer.sol\":{\"keccak256\":\"0x03a0041ce856ecca1d5d2b67443dca5f2acab9fe38cd592b2d3e897eaa3955d0\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://10515dcb2700e1b01b00f50c704ffc7daba221080221e056d498da890c586c82\",\"dweb:/ipfs/QmRW2ycAG7nsk2YXnp6nk8s56RqTV1EVCuPkLgQsUHyGeW\"]},\"src/utils/FuncSelectors.h.sol\":{\"keccak256\":\"0xa79f6e8531c9a91f3e26e48ef5d7b0c8327e17b5352400668880cc1a98f36ddc\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://518f86fef198ec19ccba9d2438c8f490581f326cb2bdba8d3e6634c4797cebc0\",\"dweb:/ipfs/Qmb1NGp72szB8owp5MjaFWF7zngPtQ6EHUUMy38tn3BCqi\"]},\"src/utils/NFTokenUtils.sol\":{\"keccak256\":\"0x886dbd7a03bf3a8fd4739b86bc4eba01014e7683029dd485993369ad0a0473c5\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://02591fc4c94a10c37a9132dfbd9f1222f62c919ef5ba7b76a1ca1c1e2dc1d105\",\"dweb:/ipfs/QmVkSSvA12C2gu8gEv8CxBHpKY242THHAy7eNfzHpXdhtT\"]},\"src/utils/RayMath.sol\":{\"keccak256\":\"0x234068d17599aefc86ca6f5febb25be32bb71c0b45326c24936b23dd9cc876ac\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://421375b2a164c6ffa1e018c533e2a231395fc4f582acc3a43672a24e51fbe328\",\"dweb:/ipfs/QmUFEZi7BjELW2fDZuUpeDCTrNw1YhMmeqJvoMk2MfuxDU\"]},\"test/Auction/AuctionInternal.t.sol\":{\"keccak256\":\"0x7b50d5c8ddc7338e4d3c9513c234c9a701fb3e525de4816c5112b62decc796a2\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://9055f5af0ded43a5a309b8c62b71258febea95384cab590bd2de21cf9ddb7119\",\"dweb:/ipfs/Qmf3sdG3ZC9RXkvAQ9AefzQHzQcNhW4mgM1RQGEEpAa2yb\"]},\"test/Commons/BigKairos.sol\":{\"keccak256\":\"0xe5e4959e7dca0aa52e2d35459a1f71b91a2af9a70fbb1465c31a98b53823eddc\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://25e44dd8b518574592079f2137651440fd7ce1360cfe5ad35d8c6993e8c4622a\",\"dweb:/ipfs/QmcqGbDvgGu2oHqD17PURL2matovxNPyuGgYajw57Q6SCj\"]},\"test/Commons/Internal.sol\":{\"keccak256\":\"0x12507426f01169802f333a2fb704fd70c35659ff2854c66d928a901673fca132\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://7ee48041714fd79f61fd382d6d9427732be1af960af57aff862432129ecac4e6\",\"dweb:/ipfs/QmT9p8LiAYfH2622zT7FD9UmcvTmywmG6N7CKyuPJjL3nj\"]},\"test/Commons/Loggers.sol\":{\"keccak256\":\"0x5ad09ea0e54173023d712d84e06faa58267cadc7b34404adabc1c11c28c0f238\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://dfd5aafd6dca411217e0928b82f211b16a9b8e937389838cadd307db638b83eb\",\"dweb:/ipfs/QmbB4vPdgPrrVhb4W9z9UeLQPBzU7xXQ1dkk2zzQNkwX85\"]},\"test/Commons/TestCommons.sol\":{\"keccak256\":\"0x661e48bcca61c615c6b5f082c744281af6a886b3d4de4d0607fce24a1be2d565\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://95556855c33b1be5e827c505e6ab6fa54534c0bc4e8610986cd0361e59c5a1bf\",\"dweb:/ipfs/QmY4VKfqcLa8hAN9C3L1N4hTyAfc74nPkUxCAUZm9nw2N1\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.18+commit.87f61d96"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "type": "error",
          "name": "AssertionFailedCollatStateDontMatch"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "AssertionFailedLoanDontMatch"
        },
        {
          "inputs": [
            {
              "internalType": "Ray",
              "name": "expected",
              "type": "uint256"
            },
            {
              "internalType": "Ray",
              "name": "actual",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "AssertionFailedRayDontMatch"
        },
        {
          "inputs": [
            {
              "internalType": "struct Offer",
              "name": "offer",
              "type": "tuple",
              "components": [
                {
                  "internalType": "contract IERC20",
                  "name": "assetToLend",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "loanToValue",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "duration",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "expirationDate",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "tranche",
                  "type": "uint256"
                },
                {
                  "internalType": "struct NFToken",
                  "name": "collateral",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "contract IERC721",
                      "name": "implem",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "id",
                      "type": "uint256"
                    }
                  ]
                }
              ]
            },
            {
              "internalType": "struct NFToken",
              "name": "providedNft",
              "type": "tuple",
              "components": [
                {
                  "internalType": "contract IERC721",
                  "name": "implem",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                }
              ]
            }
          ],
          "type": "error",
          "name": "BadCollateral"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "loanId",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "BorrowerAlreadyClaimed"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "admin",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "CallerIsNotOwner"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "endDate",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "loanId",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "CollateralIsNotLiquidableYet"
        },
        {
          "inputs": [
            {
              "internalType": "contract IERC20",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "ERC20TransferFailed"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ERC721AddressZeroIsNotAValidOwner"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ERC721ApprovalToCurrentOwner"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ERC721ApproveToCaller"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ERC721CallerIsNotOwnerNorApproved"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ERC721CallerIsNotOwnerNorApprovedForAll"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ERC721InvalidTokenId"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ERC721MintToTheZeroAddress"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ERC721TokenAlreadyMinted"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ERC721TransferFromIncorrectOwner"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ERC721TransferToNonERC721ReceiverImplementer"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ERC721TransferToTheZeroAddress"
        },
        {
          "inputs": [
            {
              "internalType": "contract IERC20",
              "name": "firstRequested",
              "type": "address"
            },
            {
              "internalType": "contract IERC20",
              "name": "requested",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "InconsistentAssetRequests"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "firstTrancheIdUsed",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "trancheIdFound",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "InconsistentTranches"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "nbOfTranches",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "InvalidTranche"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "loanId",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "LoanAlreadyRepaid"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "loanId",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "LoanNotRepaidOrLiquidatedYet"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "loanId",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "NotBorrowerOfTheLoan"
        },
        {
          "inputs": [
            {
              "internalType": "struct Offer",
              "name": "offer",
              "type": "tuple",
              "components": [
                {
                  "internalType": "contract IERC20",
                  "name": "assetToLend",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "loanToValue",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "duration",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "expirationDate",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "tranche",
                  "type": "uint256"
                },
                {
                  "internalType": "struct NFToken",
                  "name": "collateral",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "contract IERC721",
                      "name": "implem",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "id",
                      "type": "uint256"
                    }
                  ]
                }
              ]
            },
            {
              "internalType": "uint256",
              "name": "expirationDate",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "OfferHasExpired"
        },
        {
          "inputs": [
            {
              "internalType": "struct Offer",
              "name": "offer",
              "type": "tuple",
              "components": [
                {
                  "internalType": "contract IERC20",
                  "name": "assetToLend",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "loanToValue",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "duration",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "expirationDate",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "tranche",
                  "type": "uint256"
                },
                {
                  "internalType": "struct NFToken",
                  "name": "collateral",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "contract IERC721",
                      "name": "implem",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "id",
                      "type": "uint256"
                    }
                  ]
                }
              ]
            },
            {
              "internalType": "uint256",
              "name": "requested",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "lowerBound",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "RequestedAmountIsUnderMinimum"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "requested",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "offered",
              "type": "uint256"
            },
            {
              "internalType": "struct Offer",
              "name": "offer",
              "type": "tuple",
              "components": [
                {
                  "internalType": "contract IERC20",
                  "name": "assetToLend",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "loanToValue",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "duration",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "expirationDate",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "tranche",
                  "type": "uint256"
                },
                {
                  "internalType": "struct NFToken",
                  "name": "collateral",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "contract IERC721",
                      "name": "implem",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "id",
                      "type": "uint256"
                    }
                  ]
                }
              ]
            }
          ],
          "type": "error",
          "name": "RequestedAmountTooHigh"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Unauthorized"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "lent",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "UnsafeAmountLent"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "minLoanToValue",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxLoanToValue",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "UnsafeOfferLoanToValuesGap"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "approved",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Approval",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bool",
              "name": "approved",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ApprovalForAll",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "loanId",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "bytes",
              "name": "loan",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Borrow",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "loanId",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "bytes",
              "name": "args",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Buy",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "claimant",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "claimed",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "loanId",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Claim",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "newAuctionDuration",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "NewAuctionDuration",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "Ray",
              "name": "newAuctionPriceFactor",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "NewAuctionPriceFactor",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "contract IERC20",
              "name": "currency",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "newLowerBound",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "NewBorrowAmountPerOfferLowerBound",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "contract IERC20",
              "name": "currency",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "newMinOfferCost",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "NewMininimumOfferCost",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "Ray",
              "name": "tranche",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "newTrancheId",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "NewTranche",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "loanId",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Repay",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Transfer",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256",
              "name": "",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "val",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "val",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "val",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "val",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "logs",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "IS_TEST",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "approve"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct BorrowArg[]",
              "name": "args",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "struct NFToken",
                  "name": "nft",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "contract IERC721",
                      "name": "implem",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "id",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "struct OfferArg[]",
                  "name": "args",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "bytes",
                      "name": "signature",
                      "type": "bytes"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "struct Offer",
                      "name": "offer",
                      "type": "tuple",
                      "components": [
                        {
                          "internalType": "contract IERC20",
                          "name": "assetToLend",
                          "type": "address"
                        },
                        {
                          "internalType": "uint256",
                          "name": "loanToValue",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "duration",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "expirationDate",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "tranche",
                          "type": "uint256"
                        },
                        {
                          "internalType": "struct NFToken",
                          "name": "collateral",
                          "type": "tuple",
                          "components": [
                            {
                              "internalType": "contract IERC721",
                              "name": "implem",
                              "type": "address"
                            },
                            {
                              "internalType": "uint256",
                              "name": "id",
                              "type": "uint256"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "borrow"
        },
        {
          "inputs": [
            {
              "internalType": "struct BuyArg[]",
              "name": "args",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "loanId",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "buy"
        },
        {
          "inputs": [
            {
              "internalType": "struct Offer",
              "name": "offer",
              "type": "tuple",
              "components": [
                {
                  "internalType": "contract IERC20",
                  "name": "assetToLend",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "loanToValue",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "duration",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "expirationDate",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "tranche",
                  "type": "uint256"
                },
                {
                  "internalType": "struct NFToken",
                  "name": "collateral",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "contract IERC721",
                      "name": "implem",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "id",
                      "type": "uint256"
                    }
                  ]
                }
              ]
            },
            {
              "internalType": "struct NFToken",
              "name": "providedNft",
              "type": "tuple",
              "components": [
                {
                  "internalType": "contract IERC721",
                  "name": "implem",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                }
              ]
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "checkCollateralExternal"
        },
        {
          "inputs": [
            {
              "internalType": "struct OfferArg",
              "name": "arg",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes",
                  "name": "signature",
                  "type": "bytes"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "struct Offer",
                  "name": "offer",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "contract IERC20",
                      "name": "assetToLend",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "loanToValue",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "duration",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "expirationDate",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "tranche",
                      "type": "uint256"
                    },
                    {
                      "internalType": "struct NFToken",
                      "name": "collateral",
                      "type": "tuple",
                      "components": [
                        {
                          "internalType": "contract IERC721",
                          "name": "implem",
                          "type": "address"
                        },
                        {
                          "internalType": "uint256",
                          "name": "id",
                          "type": "uint256"
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "checkOfferArgExternal",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "positionIds",
              "type": "uint256[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "claim",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "sent",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "loanIds",
              "type": "uint256[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "claimAsBorrower",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "sent",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "Ray",
              "name": "newTranche",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "createTranche",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "newTrancheId",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeArtifacts",
          "outputs": [
            {
              "internalType": "string[]",
              "name": "excludedArtifacts_",
              "type": "string[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeContracts",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "excludedContracts_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeSenders",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "excludedSenders_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "failed",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getApproved",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getLoan",
          "outputs": [
            {
              "internalType": "struct Loan",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "contract IERC20",
                  "name": "assetLent",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "lent",
                  "type": "uint256"
                },
                {
                  "internalType": "Ray",
                  "name": "shareLent",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "startDate",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "endDate",
                  "type": "uint256"
                },
                {
                  "internalType": "struct Auction",
                  "name": "auction",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "duration",
                      "type": "uint256"
                    },
                    {
                      "internalType": "Ray",
                      "name": "priceFactor",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "Ray",
                  "name": "interestPerSecond",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "borrower",
                  "type": "address"
                },
                {
                  "internalType": "struct NFToken",
                  "name": "collateral",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "contract IERC721",
                      "name": "implem",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "id",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "struct Payment",
                  "name": "payment",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "paid",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "minInterestsToRepay",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bool",
                      "name": "liquidated",
                      "type": "bool"
                    },
                    {
                      "internalType": "bool",
                      "name": "borrowerClaimed",
                      "type": "bool"
                    }
                  ]
                },
                {
                  "internalType": "uint256",
                  "name": "supplyPositionIndex",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "nbOfPositions",
                  "type": "uint256"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract IERC20",
              "name": "currency",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getMinOfferCostAndBorrowableAmount",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "minOfferCost",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "offerBorrowAmountLowerBound",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getParameters",
          "outputs": [
            {
              "internalType": "Ray",
              "name": "auctionPriceFactor",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "auctionDuration",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "nbOfLoans",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "nbOfTranches",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRateOfTranche",
          "outputs": [
            {
              "internalType": "Ray",
              "name": "rate",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isApprovedForAll",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct Offer",
              "name": "offer",
              "type": "tuple",
              "components": [
                {
                  "internalType": "contract IERC20",
                  "name": "assetToLend",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "loanToValue",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "duration",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "expirationDate",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "tranche",
                  "type": "uint256"
                },
                {
                  "internalType": "struct NFToken",
                  "name": "collateral",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "contract IERC721",
                      "name": "implem",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "id",
                      "type": "uint256"
                    }
                  ]
                }
              ]
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "offerDigest",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "onERC721Received",
          "outputs": [
            {
              "internalType": "bytes4",
              "name": "",
              "type": "bytes4"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "ownerOf",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "position",
          "outputs": [
            {
              "internalType": "struct Provision",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "Ray",
                  "name": "share",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "loanId",
                  "type": "uint256"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "loanId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "price",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "loanIds",
              "type": "uint256[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "repay"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "safeTransferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "safeTransferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "struct Loan",
              "name": "loan",
              "type": "tuple",
              "components": [
                {
                  "internalType": "contract IERC20",
                  "name": "assetLent",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "lent",
                  "type": "uint256"
                },
                {
                  "internalType": "Ray",
                  "name": "shareLent",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "startDate",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "endDate",
                  "type": "uint256"
                },
                {
                  "internalType": "struct Auction",
                  "name": "auction",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "duration",
                      "type": "uint256"
                    },
                    {
                      "internalType": "Ray",
                      "name": "priceFactor",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "Ray",
                  "name": "interestPerSecond",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "borrower",
                  "type": "address"
                },
                {
                  "internalType": "struct NFToken",
                  "name": "collateral",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "contract IERC721",
                      "name": "implem",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "id",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "struct Payment",
                  "name": "payment",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "paid",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "minInterestsToRepay",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bool",
                      "name": "liquidated",
                      "type": "bool"
                    },
                    {
                      "internalType": "bool",
                      "name": "borrowerClaimed",
                      "type": "bool"
                    }
                  ]
                },
                {
                  "internalType": "uint256",
                  "name": "supplyPositionIndex",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "nbOfPositions",
                  "type": "uint256"
                }
              ]
            },
            {
              "internalType": "struct Provision",
              "name": "provision",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "Ray",
                  "name": "share",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "loanId",
                  "type": "uint256"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "sendInterestsExternal",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct Loan",
              "name": "loan",
              "type": "tuple",
              "components": [
                {
                  "internalType": "contract IERC20",
                  "name": "assetLent",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "lent",
                  "type": "uint256"
                },
                {
                  "internalType": "Ray",
                  "name": "shareLent",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "startDate",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "endDate",
                  "type": "uint256"
                },
                {
                  "internalType": "struct Auction",
                  "name": "auction",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "duration",
                      "type": "uint256"
                    },
                    {
                      "internalType": "Ray",
                      "name": "priceFactor",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "Ray",
                  "name": "interestPerSecond",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "borrower",
                  "type": "address"
                },
                {
                  "internalType": "struct NFToken",
                  "name": "collateral",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "contract IERC721",
                      "name": "implem",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "id",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "struct Payment",
                  "name": "payment",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "paid",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "minInterestsToRepay",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bool",
                      "name": "liquidated",
                      "type": "bool"
                    },
                    {
                      "internalType": "bool",
                      "name": "borrowerClaimed",
                      "type": "bool"
                    }
                  ]
                },
                {
                  "internalType": "uint256",
                  "name": "supplyPositionIndex",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "nbOfPositions",
                  "type": "uint256"
                }
              ]
            },
            {
              "internalType": "struct Provision",
              "name": "provision",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "Ray",
                  "name": "share",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "loanId",
                  "type": "uint256"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "sendShareOfSaleAsSupplierExternal",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "approved",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setApprovalForAll"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "newAuctionDuration",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setAuctionDuration"
        },
        {
          "inputs": [
            {
              "internalType": "Ray",
              "name": "newAuctionPriceFactor",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setAuctionPriceFactor"
        },
        {
          "inputs": [
            {
              "internalType": "contract IERC20",
              "name": "currency",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "newLowerBound",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setBorrowAmountPerOfferLowerBound"
        },
        {
          "inputs": [
            {
              "internalType": "contract IERC20",
              "name": "currency",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "newMinOfferCost",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setMinOfferCost"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setUp"
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetArtifactSelectors",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzSelector[]",
              "name": "targetedArtifactSelectors_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes4[]",
                  "name": "selectors",
                  "type": "bytes4[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetArtifacts",
          "outputs": [
            {
              "internalType": "string[]",
              "name": "targetedArtifacts_",
              "type": "string[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetContracts",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "targetedContracts_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetSelectors",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzSelector[]",
              "name": "targetedSelectors_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes4[]",
                  "name": "selectors",
                  "type": "bytes4[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetSenders",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "targetedSenders_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testFinalPrice"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testInitialPrice"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testPrice"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "struct OfferArg[]",
              "name": "args",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "bytes",
                  "name": "signature",
                  "type": "bytes"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "struct Offer",
                  "name": "offer",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "contract IERC20",
                      "name": "assetToLend",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "loanToValue",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "duration",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "expirationDate",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "tranche",
                      "type": "uint256"
                    },
                    {
                      "internalType": "struct NFToken",
                      "name": "collateral",
                      "type": "tuple",
                      "components": [
                        {
                          "internalType": "contract IERC721",
                          "name": "implem",
                          "type": "address"
                        },
                        {
                          "internalType": "uint256",
                          "name": "id",
                          "type": "uint256"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "struct NFToken",
              "name": "nft",
              "type": "tuple",
              "components": [
                {
                  "internalType": "contract IERC721",
                  "name": "implem",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "useCollateralExternal",
          "outputs": [
            {
              "internalType": "struct Loan",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "contract IERC20",
                  "name": "assetLent",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "lent",
                  "type": "uint256"
                },
                {
                  "internalType": "Ray",
                  "name": "shareLent",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "startDate",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "endDate",
                  "type": "uint256"
                },
                {
                  "internalType": "struct Auction",
                  "name": "auction",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "duration",
                      "type": "uint256"
                    },
                    {
                      "internalType": "Ray",
                      "name": "priceFactor",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "Ray",
                  "name": "interestPerSecond",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "borrower",
                  "type": "address"
                },
                {
                  "internalType": "struct NFToken",
                  "name": "collateral",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "contract IERC721",
                      "name": "implem",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "id",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "struct Payment",
                  "name": "payment",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "paid",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "minInterestsToRepay",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bool",
                      "name": "liquidated",
                      "type": "bool"
                    },
                    {
                      "internalType": "bool",
                      "name": "borrowerClaimed",
                      "type": "bool"
                    }
                  ]
                },
                {
                  "internalType": "uint256",
                  "name": "supplyPositionIndex",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "nbOfPositions",
                  "type": "uint256"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct OfferArg",
              "name": "arg",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes",
                  "name": "signature",
                  "type": "bytes"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "struct Offer",
                  "name": "offer",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "contract IERC20",
                      "name": "assetToLend",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "loanToValue",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "duration",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "expirationDate",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "tranche",
                      "type": "uint256"
                    },
                    {
                      "internalType": "struct NFToken",
                      "name": "collateral",
                      "type": "tuple",
                      "components": [
                        {
                          "internalType": "contract IERC721",
                          "name": "implem",
                          "type": "address"
                        },
                        {
                          "internalType": "uint256",
                          "name": "id",
                          "type": "uint256"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "internalType": "struct CollateralState",
              "name": "collatState",
              "type": "tuple",
              "components": [
                {
                  "internalType": "Ray",
                  "name": "matched",
                  "type": "uint256"
                },
                {
                  "internalType": "contract IERC20",
                  "name": "assetLent",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tranche",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "minOfferDuration",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "minOfferLoanToValue",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxOfferLoanToValue",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "struct NFToken",
                  "name": "nft",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "contract IERC721",
                      "name": "implem",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "id",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "uint256",
                  "name": "loanId",
                  "type": "uint256"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "useOfferExternal",
          "outputs": [
            {
              "internalType": "struct CollateralState",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "Ray",
                  "name": "matched",
                  "type": "uint256"
                },
                {
                  "internalType": "contract IERC20",
                  "name": "assetLent",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tranche",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "minOfferDuration",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "minOfferLoanToValue",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxOfferLoanToValue",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "struct NFToken",
                  "name": "nft",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "contract IERC721",
                      "name": "implem",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "id",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "uint256",
                  "name": "loanId",
                  "type": "uint256"
                }
              ]
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "approve(address,uint256)": {
            "details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
          },
          "balanceOf(address)": {
            "details": "Returns the number of tokens in ``owner``'s account."
          },
          "borrow(((address,uint256),(bytes,uint256,(address,uint256,uint256,uint256,uint256,(address,uint256)))[])[])": {
            "params": {
              "args": "list of arguments specifying at which terms each collateral should be used"
            }
          },
          "buy((uint256,address)[])": {
            "params": {
              "args": "arguments on what and how to buy"
            }
          },
          "claim(uint256[])": {
            "params": {
              "positionIds": "identifiers of one or multiple supply position to burn"
            },
            "returns": {
              "sent": "amount sent"
            }
          },
          "claimAsBorrower(uint256[])": {
            "params": {
              "loanIds": "loan identifiers of one or multiple loans where the borrower wants to claim liquidation share"
            },
            "returns": {
              "sent": "amount sent"
            }
          },
          "createTranche(uint256)": {
            "params": {
              "newTranche": "the interest rate of the new tranche"
            }
          },
          "getApproved(uint256)": {
            "details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
          },
          "getLoan(uint256)": {
            "params": {
              "id": "loan identifier"
            },
            "returns": {
              "_0": "loan the corresponding loan"
            }
          },
          "getMinOfferCostAndBorrowableAmount(address)": {
            "params": {
              "currency": "the erc20 asset lent on which the parameters apply"
            },
            "returns": {
              "minOfferCost": "the minimal amount to repay per offer used in loan",
              "offerBorrowAmountLowerBound": " minimum amount to borrow per offer used in loan"
            }
          },
          "getParameters()": {
            "returns": {
              "auctionDuration": "number of seconds after the auction start when the price hits 0",
              "auctionPriceFactor": "factor multiplied with the loan to value of a loan to get initial price         of a collateral on sale",
              "nbOfLoans": "total number of loans ever issued (active and ended)",
              "nbOfTranches": "total number of interest rates tranches ever created (active and inactive)"
            }
          },
          "getRateOfTranche(uint256)": {
            "params": {
              "id": "rate identifier"
            },
            "returns": {
              "rate": "the rate of the tranche, as a Ray, multiplier per second of the amount to repay (non compounding)         I.e lent * time since loan start * tranche = interests to repay"
            }
          },
          "isApprovedForAll(address,address)": {
            "details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
          },
          "offerDigest((address,uint256,uint256,uint256,uint256,(address,uint256)))": {
            "params": {
              "offer": "the loan offer signed/to sign by a supplier"
            },
            "returns": {
              "_0": "digest the digest, ecdsa sign as is to produce a valid loan offer signature"
            }
          },
          "onERC721Received(address,address,uint256,bytes)": {
            "details": "param data must be of format OfferArg[]",
            "params": {
              "data": "abi encoded arguments for the loan",
              "operator": "account that initialized the transfer action according to the NFT implementation contract",
              "tokenId": "token identifier of the NFT sent according to the NFT implementation contract"
            },
            "returns": {
              "_0": "selector `this.onERC721Received.selector` ERC721-compliant response, signaling compatibility"
            }
          },
          "ownerOf(uint256)": {
            "details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
          },
          "position(uint256)": {
            "params": {
              "tokenId": "token identifier of the supply position"
            },
            "returns": {
              "_0": "provision metadata"
            }
          },
          "price(uint256)": {
            "params": {
              "loanId": "identifier of the loan"
            },
            "returns": {
              "_0": "price computed price"
            }
          },
          "repay(uint256[])": {
            "details": "repay on behalf is activated, the collateral goes to the original borrower",
            "params": {
              "loanIds": "identifiers of loans to repay"
            }
          },
          "safeTransferFrom(address,address,uint256)": {
            "details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
          },
          "safeTransferFrom(address,address,uint256,bytes)": {
            "details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
          },
          "setAuctionDuration(uint256)": {
            "params": {
              "newAuctionDuration": "number of seconds of the duration"
            }
          },
          "setAuctionPriceFactor(uint256)": {
            "params": {
              "newAuctionPriceFactor": "the new factor multiplied to the loan to value"
            }
          },
          "setBorrowAmountPerOfferLowerBound(address,uint256)": {
            "params": {
              "currency": "the erc20 on which a new borrow amount lower bound is taking effect",
              "newLowerBound": "the new lower bound"
            }
          },
          "setMinOfferCost(address,uint256)": {
            "params": {
              "currency": "the erc20 on which a new minimum borrow cost will take effect",
              "newMinOfferCost": "the new minimum amount that will need to be repaid per loan offer used"
            }
          },
          "supportsInterface(bytes4)": {
            "details": "don't use this method for inclusion in the facet function selectors     prefer the LibDiamond implementation for this method     it is included here for IERC721-compliance"
          },
          "totalSupply()": {
            "returns": {
              "_0": "totalSupply the number"
            }
          },
          "transferFrom(address,address,uint256)": {
            "details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "borrow(((address,uint256),(bytes,uint256,(address,uint256,uint256,uint256,uint256,(address,uint256)))[])[])": {
            "notice": "take loans, take ownership of NFTs specified as collateral, sends borrowed money to caller"
          },
          "buy((uint256,address)[])": {
            "notice": "buy one or multiple NFTs in liquidation"
          },
          "claim(uint256[])": {
            "notice": "claims principal plus interests or liquidation share due as a supplier"
          },
          "claimAsBorrower(uint256[])": {
            "notice": "claims share of liquidation due to a borrower who's collateral has been sold"
          },
          "createTranche(uint256)": {
            "notice": "creates a new tranche at a new identifier for lenders to provide offers for"
          },
          "getLoan(uint256)": {
            "notice": "get loan metadata"
          },
          "getMinOfferCostAndBorrowableAmount(address)": {
            "notice": "get the minimal amount to repay per offer used in loan and minimum amount to borrow per offer.     Gives currently active settings, may not concern loans already issued."
          },
          "getParameters()": {
            "notice": "gets current values of parameters impacting loans behavior and total number of loans (active and ended)"
          },
          "getRateOfTranche(uint256)": {
            "notice": "gets the rate of tranche `id`"
          },
          "offerDigest((address,uint256,uint256,uint256,uint256,(address,uint256)))": {
            "notice": "computes EIP-712 compliant digest of a loan offer"
          },
          "onERC721Received(address,address,uint256,bytes)": {
            "notice": "borrow using sent NFT as collateral without needing approval through transfer callback"
          },
          "position(uint256)": {
            "notice": "get metadata on provision linked to the supply position"
          },
          "price(uint256)": {
            "notice": "gets the price to buy the underlying collateral of the loan"
          },
          "repay(uint256[])": {
            "notice": "repay one or multiple loans, gives collaterals back"
          },
          "setAuctionDuration(uint256)": {
            "notice": "sets the time it takes to auction prices to fall to 0 for future loans"
          },
          "setAuctionPriceFactor(uint256)": {
            "notice": "sets the factor applied to the loan to value setting initial price of auction for future loans"
          },
          "setBorrowAmountPerOfferLowerBound(address,uint256)": {
            "notice": "updates the borrow amount lower bound per offer for one currency"
          },
          "setMinOfferCost(address,uint256)": {
            "notice": "updates the minimum amount to repay per used loan offer when borrowing a certain currency"
          },
          "totalSupply()": {
            "notice": "total number of supply positions ever minted (counting burned ones)"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin/=node_modules/@openzeppelin/",
        ":diamond/=node_modules/diamond/",
        ":ds-test/=node_modules/ds-test/src/",
        ":forge-std/=node_modules/forge-std/src/",
        ":solmate/=node_modules/solmate/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "test/Auction/AuctionInternal.t.sol": "TestAuction"
      },
      "libraries": {}
    },
    "sources": {
      "node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol": {
        "keccak256": "0x4ffc0547c02ad22925310c585c0f166f8759e2648a09e9b489100c42f15dd98d",
        "urls": [
          "bzz-raw://15f52f51413a9de1ff191e2f6367c62178e1df7806d7880fe857a98b0b66253d",
          "dweb:/ipfs/QmaQG1fwfgUt5E9nu2cccFiV47B2V78MM1tCy1qB7n4MsH"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b",
        "urls": [
          "bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34",
          "dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "keccak256": "0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca",
        "urls": [
          "bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd",
          "dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol": {
        "keccak256": "0x1e854874c68bec05be100dc0092cb5fbbc71253d370ae98ddef248bbfc3fe118",
        "urls": [
          "bzz-raw://ef0fb6e809779426dc2ac201149bbad4aecdc5810874f2843b050e8b5fef8d30",
          "dweb:/ipfs/QmPDRjaNxmcyxLUKvv8Fxk5eWcf7xvC5S9JpbtqvE7Cadu"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol": {
        "keccak256": "0xab28a56179c1db258c9bf5235b382698cb650debecb51b23d12be9e241374b68",
        "urls": [
          "bzz-raw://daae589a9d6fa7e55f99f86c0a16796ca490f243fb3693632c3711c0646c1d56",
          "dweb:/ipfs/QmR3zpd7wNw3rcUdekwiv6FYHJqksuTCXLVioTxu6Fbxk3"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
        "keccak256": "0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da",
        "urls": [
          "bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708",
          "dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol": {
        "keccak256": "0xa8796bd16014cefb8c26449413981a49c510f92a98d6828494f5fd046223ced3",
        "urls": [
          "bzz-raw://63a5e0bb5a7d182e0d0eef87033f78115eab791de3626a929bc98c157087880a",
          "dweb:/ipfs/QmetkXAu2CJKS4qrZtEQPU8okAPwUwa6HL4XYwk8vrYMk8"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol": {
        "keccak256": "0xd1556954440b31c97a142c6ba07d5cade45f96fafd52091d33a14ebe365aecbf",
        "urls": [
          "bzz-raw://26fef835622b46a5ba08b3ef6b46a22e94b5f285d0f0fb66b703bd30217d2c34",
          "dweb:/ipfs/QmZ548qdwfL1qF7aXz3xh1GCdTiST81kGGuKRqVUfYmPZR"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
        "keccak256": "0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9",
        "urls": [
          "bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146",
          "dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Address.sol": {
        "keccak256": "0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1",
        "urls": [
          "bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269",
          "dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Strings.sol": {
        "keccak256": "0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a",
        "urls": [
          "bzz-raw://8c969013129ba9e651a20735ef659fef6d8a1139ea3607bd4b26ddea2d645634",
          "dweb:/ipfs/QmVhVa6LGuzAcB8qgDtVHRkucn4ihj5UZr8xBLcJkP6ucb"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/cryptography/ECDSA.sol": {
        "keccak256": "0xda898fa084aa1ddfdb346e6a40459e00a59d87071cce7c315a46d648dd71d0ba",
        "urls": [
          "bzz-raw://ce501a941f4aa1555c04dabb5e07992503bb6a9b32ff8f7cdcefdb4a742210cb",
          "dweb:/ipfs/QmeScPrUpdrGYs9BytV3Z5ZWJcBXtuAgCW4BLHua4xFUxx"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/cryptography/EIP712.sol": {
        "keccak256": "0x948d8b2d18f38141ec78c5229d770d950ebc781ed3f44cc9e3ccbb9fded5846a",
        "urls": [
          "bzz-raw://7311ac950ed2d81f3ccf1784a926efbfc82a86dcb5c98d41eb3792c0cac63a2f",
          "dweb:/ipfs/QmRRwCUHewkPmehx8QRYENFoWyLNx8UEZGULxWYUeSZdTS"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol": {
        "keccak256": "0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b",
        "urls": [
          "bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d",
          "dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1",
        "urls": [
          "bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f",
          "dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/math/Math.sol": {
        "keccak256": "0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6",
        "urls": [
          "bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b",
          "dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz"
        ],
        "license": "MIT"
      },
      "node_modules/diamond/contracts/facets/OwnershipFacet.sol": {
        "keccak256": "0x6502a171801d68e68de6c5a2b879d5e12a3a1539cdc568c2bfcc268fbdf6c5a9",
        "urls": [
          "bzz-raw://e8094a53d216df365a5cbdaa0e4292c6faae493e88c62e7a616ccb4b5440c097",
          "dweb:/ipfs/QmNXspNxT83mcL1mynUiUrfj94aVe8rz2UyZUJJn7gfWWe"
        ],
        "license": "MIT"
      },
      "node_modules/diamond/contracts/interfaces/IDiamond.sol": {
        "keccak256": "0x37be579b243559c0c16a8de037d2c428e8fafdfdd9cde69fa165a07f5adfda2c",
        "urls": [
          "bzz-raw://0f16b9edb01e35edf96566f6460c4986fcc3fb9bff6291fab5be17d256cd0fd2",
          "dweb:/ipfs/Qmdq869cYabBjfnYZgcF5BSHsFQXT1EZNg2umHMAxZqWEH"
        ],
        "license": "MIT"
      },
      "node_modules/diamond/contracts/interfaces/IDiamondCut.sol": {
        "keccak256": "0x9ecd4a637b7cb44c26a4ab7760766defce42a6dc36a355b92dfeef9ce4391fee",
        "urls": [
          "bzz-raw://cd0e7ad69374bc41bc62c90428f9795c8a06360599c4c6b06e76bd8a1b91e28f",
          "dweb:/ipfs/QmfZk5ZiKQQaudjYf3qEumVsW87gELxcYMNRu3AHSLuk4n"
        ],
        "license": "MIT"
      },
      "node_modules/diamond/contracts/interfaces/IDiamondLoupe.sol": {
        "keccak256": "0x10884024af2c0f7deca0fac4ddf84e76da5dba35b6e02fabeac8ea54c1a5c6f7",
        "urls": [
          "bzz-raw://df3404a4aed3bbda2f5e441d7035b354237d8c9d7c27b149ccf66d13a1d81d45",
          "dweb:/ipfs/QmZvHWgRCge8tLJ3x3Lf3JQkbNTgAN6LzwCGBabbgk8tew"
        ],
        "license": "MIT"
      },
      "node_modules/diamond/contracts/interfaces/IERC165.sol": {
        "keccak256": "0x7541f7408d0f74162bc4664d5e012427f2ceaab2abadca0353269ef15ee03d8b",
        "urls": [
          "bzz-raw://a8e7a34b3ea39f4c0dfa6f5ace5d9415e4d0c90cb3f4264e6946b808f2d4011c",
          "dweb:/ipfs/QmWdcRF4krMMb1ua3hmV8avdHKYa4XXt1iw7sxx1ntsEJa"
        ],
        "license": "MIT"
      },
      "node_modules/diamond/contracts/interfaces/IERC173.sol": {
        "keccak256": "0x001e07b0fbc894300b939d496ffb005abe398b5bc609802d319b8cdeafe5d36b",
        "urls": [
          "bzz-raw://8e59f66879ef993892410cbe834b1d2dd34891f47066b7be601ff825b0748361",
          "dweb:/ipfs/QmZedQ668we8ohPPZF5tPP5gKpJ5n22h3FDFkoFT5VXpEu"
        ],
        "license": "MIT"
      },
      "node_modules/diamond/contracts/libraries/LibDiamond.sol": {
        "keccak256": "0x4090c1e2191d081ff33e1631eabbebfb69e29ac1bf67516d7f4430bb2e0b2983",
        "urls": [
          "bzz-raw://3c66e113d032be747262abe642abcec8c132400fe156414721590412d9af6485",
          "dweb:/ipfs/QmfLg3p9wZ748cSDrfh4TmxCuMU8oVZU9BzAGhJSFQysWM"
        ],
        "license": "MIT"
      },
      "node_modules/ds-test/src/test.sol": {
        "keccak256": "0x8758531bbac3972efcf1fa46383dbe1d276406fe527bc7abb2f236486278e83b",
        "urls": [
          "bzz-raw://1f64264d61506847acf8761e84aff690cebe830958eac00bac7924d8be569240",
          "dweb:/ipfs/QmSekDJvJ82MZAmr63n7YvfLzQ7gS4NLSHPmHL3GN3rw8k"
        ],
        "license": "GPL-3.0-or-later"
      },
      "node_modules/forge-std/src/Base.sol": {
        "keccak256": "0x609e3a00319169988cc8272e837f350a9ba77cf8f8f62e4897a8e4a8a5f0fb27",
        "urls": [
          "bzz-raw://b24435e35ba5b080ebd6e8976c23fb735c7212d042be8462ffd2ea50c5250363",
          "dweb:/ipfs/QmPeVvN7FS4oMmCuYAeRdZihTfrG4tA7Vvunuvv59a6wre"
        ],
        "license": "MIT"
      },
      "node_modules/forge-std/src/StdAssertions.sol": {
        "keccak256": "0xdb05fd11858f232b8b5c6c9175229bdd061c277c34f13b0bdc64d333bcbd2617",
        "urls": [
          "bzz-raw://08ae865564d9c1fa1012b61db77a2da2844ac1ae0a216b16c9fe9ab65ddf80af",
          "dweb:/ipfs/QmfFfmkjb2Qfc5dPJvwQgjTMbeQ12dTPFeAQ8Gb944U44g"
        ],
        "license": "MIT"
      },
      "node_modules/forge-std/src/StdChains.sol": {
        "keccak256": "0x097b75f7171af89f433407e040d11b22fc26e2fe03793c2cfe18cad390d7af8b",
        "urls": [
          "bzz-raw://19d1dca7b398e517499ffa65ad44df69cdd016f37dc57e2d07d50279d3ddee17",
          "dweb:/ipfs/QmfMFR25367GB5PoBi1KZxWs1hZcJtC3eANiioG3dKj8ah"
        ],
        "license": "MIT"
      },
      "node_modules/forge-std/src/StdCheats.sol": {
        "keccak256": "0x3c536209b4d4e1879adc4d91b12e237985f0f8f91e71828dacd8fca3bdf2fa99",
        "urls": [
          "bzz-raw://65adfc61088d242dbab8faa738d104005531e3a52ed993329b54fa7ee45e53ab",
          "dweb:/ipfs/QmP1d4thtELTT2vup4XmrCSKXZ91Eq756pgKq1z5hq2NGP"
        ],
        "license": "MIT"
      },
      "node_modules/forge-std/src/StdError.sol": {
        "keccak256": "0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77",
        "urls": [
          "bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6",
          "dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj"
        ],
        "license": "MIT"
      },
      "node_modules/forge-std/src/StdInvariant.sol": {
        "keccak256": "0xd855e1fea6247f1bef118e2bee9f0039832988b7173fd17766bba4014ae26a3c",
        "urls": [
          "bzz-raw://c58c0f0b66852dfd3c76fb7958d8b023489d7a874c7cb1ad4f2021f9ec8ab477",
          "dweb:/ipfs/Qmd3MX9HAkNUhPddL29ekwhqgRnjAobZ35UzchaJZNACCN"
        ],
        "license": "MIT"
      },
      "node_modules/forge-std/src/StdJson.sol": {
        "keccak256": "0x9e2a7521190c462a0667706385f1c52a816220a9813ca8ac520fba7ba45d660b",
        "urls": [
          "bzz-raw://7d23017fe6570b28130a731b86179352b93a5fb5af32f11559837afc1186293c",
          "dweb:/ipfs/QmR3p6zG5Kmcr8gKocFCSopLHfXv1AziPJbH17nKyMxwxV"
        ],
        "license": "MIT"
      },
      "node_modules/forge-std/src/StdMath.sol": {
        "keccak256": "0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2",
        "urls": [
          "bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92",
          "dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC"
        ],
        "license": "MIT"
      },
      "node_modules/forge-std/src/StdStorage.sol": {
        "keccak256": "0xd1517df281f973dba8b7ba52c02d3df552b60d91b8f47e4669049da648778673",
        "urls": [
          "bzz-raw://52e43264f58a5dcfd985f3c99aa81064805aa8f1c2b4c6521fd63d45cdbba8d5",
          "dweb:/ipfs/QmUMTF6cRjt5tCQrrgQDXVRmHQLjevNsTvLFdaA1m9TBj9"
        ],
        "license": "MIT"
      },
      "node_modules/forge-std/src/StdStyle.sol": {
        "keccak256": "0x2882555b0f58e48144e46e9aa5118a506b31ad7485327d54e8f681e8b414c337",
        "urls": [
          "bzz-raw://2850bcb1322de9d9dd87ded42debbe0e8fc4048173788d4c00c98b50e5f76985",
          "dweb:/ipfs/QmUiPKnj7GZLLQbJGY7bVDu79Q9jGEYNjR5ZBgwFy8mH97"
        ],
        "license": "MIT"
      },
      "node_modules/forge-std/src/StdUtils.sol": {
        "keccak256": "0x6584855fecbe5b6a9f8ebdb26b37c58532c5bc5cc6e1737dfa7c8a045087be55",
        "urls": [
          "bzz-raw://40a35a4d292b4fed02e11d5f25fb474f10a7c4eb99f75b5383dc23fcb6e55d3c",
          "dweb:/ipfs/QmYZ2nz1EmNh4xLWf4YybZoa1Da1z3Wq3w4pneMhkouMi4"
        ],
        "license": "MIT"
      },
      "node_modules/forge-std/src/Test.sol": {
        "keccak256": "0xddf16afce2bb7bbb69ed868d4c7ee8b4ea4ffbf8929427fe799682f107534945",
        "urls": [
          "bzz-raw://52f6ebde2a4cb9d08aea5fb3d62b2f15961bb9a29d6d9e30dd0859d0d631cabf",
          "dweb:/ipfs/QmeJ9Dp1GYUggzjGiwTZkxCfB15NfyfgcyrNZL5tyWZbVZ"
        ],
        "license": "MIT"
      },
      "node_modules/forge-std/src/Vm.sol": {
        "keccak256": "0xdd9f518aade851117d3ca3122cae6ed413a8b8355d43d69db336e94da3214a96",
        "urls": [
          "bzz-raw://939ede17edec5c78176379839f4c68851b1316e8f5789efb2f01cbdae09b88ef",
          "dweb:/ipfs/QmYiBBb7Nyuse7HoEFkCeauUwcpef9S33ozZYDqXCEXEtH"
        ],
        "license": "MIT"
      },
      "node_modules/forge-std/src/console.sol": {
        "keccak256": "0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba",
        "urls": [
          "bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70",
          "dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec"
        ],
        "license": "MIT"
      },
      "node_modules/forge-std/src/console2.sol": {
        "keccak256": "0xcd5706f5a7025825d9fd389c89b49bf571f9abaea8a062dc4048320b5b43bf46",
        "urls": [
          "bzz-raw://c066485a7d4bd18d44efb4c89274b0959e8066b9a480383a2ce07d7f31555f88",
          "dweb:/ipfs/QmckeYfA5FtAjcxaytq69Dpj6uY57tbQ61kNPPxXi9kgbW"
        ],
        "license": "MIT"
      },
      "node_modules/forge-std/src/interfaces/IMulticall3.sol": {
        "keccak256": "0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a",
        "urls": [
          "bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0",
          "dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2"
        ],
        "license": "MIT"
      },
      "src/AdminFacet.sol": {
        "keccak256": "0x1a2d8498fd8fd33bdda336678927e9f541b02b454d82994cd4a650f1f3a2942a",
        "urls": [
          "bzz-raw://53f331f3125c77de8a8efa62288c88b9e72f93763cf7b255ee039a661198e936",
          "dweb:/ipfs/QmPvkNQKNyRf3BVyjet6YmWmzhBKC5tFq3BZTx66U167u2"
        ],
        "license": "UNLICENSED"
      },
      "src/AuctionFacet.sol": {
        "keccak256": "0x41a60f4e0ea36dd4a1acb8845d07f8eee2e788aa0acc7eeea3c3443448231f22",
        "urls": [
          "bzz-raw://049a623687b02d8ceb7f933cdad6b6de5f28d826cb7eb828c1b2ecfba1b02b48",
          "dweb:/ipfs/QmRSjXjDZqys1KWaK2YbWhuMju5A45KLETF9KtjzHVFGbM"
        ],
        "license": "UNLICENSED"
      },
      "src/BorrowFacet.sol": {
        "keccak256": "0x960ac7f5ddc23fd9c9b87481451b47022b85ce53eefc1c46fe9cdbd34481e2fc",
        "urls": [
          "bzz-raw://3c17390c85d849708b4489909ab63f11ceb8652d2c2f465e2c0b42b7a71fed94",
          "dweb:/ipfs/QmZNQ9RdZhk9QAxQkws1Fsv5UMwfJpra77HokJCxM8wERH"
        ],
        "license": "UNLICENSED"
      },
      "src/BorrowLogic/BorrowCheckers.sol": {
        "keccak256": "0x023dce239e7e6d534db05e6364715ebb3399c3c9dccf894e9076712ab779745d",
        "urls": [
          "bzz-raw://cfabb6dbacbb9d09ee26887d755e88d9761d266a3daa68a54c070ff967bf2aa8",
          "dweb:/ipfs/QmbdtPZcZ5QSB8LKQMEy6wU5jDZSSkMJvtGVDpEDuN3bz4"
        ],
        "license": "UNLICENSED"
      },
      "src/BorrowLogic/BorrowHandlers.sol": {
        "keccak256": "0x41dbb5b648ea50541ab227e77e8850607731ad7ebd8171f5d0d96eb829246301",
        "urls": [
          "bzz-raw://780b77c00afd5fa5d97ba16f3d3a7e83bb909608fb54f5f38f19120a16d5bb18",
          "dweb:/ipfs/QmTPZ47VbeFxbWdou6hFMkk86PStsLuh2uNZfhJVoGjyBX"
        ],
        "license": "UNLICENSED"
      },
      "src/ClaimFacet.sol": {
        "keccak256": "0x06a664d0d467d20ffc78de21c78670a08f134752f4872db55d5dc587e76ecec2",
        "urls": [
          "bzz-raw://e1312cb1cff9ba34218db3219647e9d63685e32a88ed5007858d8af76b440653",
          "dweb:/ipfs/QmbazoYdTrS6FaMjbXM5eWWaz41JGV9QzazuxXAVdDsk1K"
        ],
        "license": "UNLICENSED"
      },
      "src/DataStructure/ERC721Errors.sol": {
        "keccak256": "0x0ee13f898a2d61d6662ef236db05001d14086ff4431bef2ae89c1979819d38d0",
        "urls": [
          "bzz-raw://2e1878fe70994d02159dbf4a5a9c79b3665feaae0d08ff420b3f00cb8ed6355a",
          "dweb:/ipfs/QmNYJDoien8bUQFYuc75GyVGVTYuiUagF4RRUSGTTmZNH7"
        ],
        "license": "UNLICENSED"
      },
      "src/DataStructure/Errors.sol": {
        "keccak256": "0x6c4db7ebc787971449c92a004a1742a0ebed90b3073de98ac677a7471696f8c5",
        "urls": [
          "bzz-raw://b650ca8195bbdf7e6010ec51248ea3beb4a255730fb8e6404196b1680d5f1433",
          "dweb:/ipfs/QmbU8dkitPbxtTkUWgqL4Rgx3KdDzDgkYESY48muSmcTop"
        ],
        "license": "UNLICENSED"
      },
      "src/DataStructure/Global.sol": {
        "keccak256": "0x9596c1bdf1271dd447db6a8f26ca493253674e252c9f63a7bc13c8689a7b6e49",
        "urls": [
          "bzz-raw://3ff822127c6c674400e9730466eb6832d19a72eaf991f3bbf62d251a6e2b49d5",
          "dweb:/ipfs/QmZPGbWwS7rTPF3NiyjivxDseeBW64GhfkGvVNuaCbnzDv"
        ],
        "license": "UNLICENSED"
      },
      "src/DataStructure/Objects.sol": {
        "keccak256": "0x251dd6c3f36c5a2c8a6a867aa29c9ba8b4bb7f2ec1a7321d630fea19f6bbd83a",
        "urls": [
          "bzz-raw://a7f620222a6b6d909e8aa2d7191200b312345b6c704eecdf40729982e238f44e",
          "dweb:/ipfs/QmTikrgA5SKJrsJanid1atHw1M7opEvwuGKNRQTbjeM4sq"
        ],
        "license": "UNLICENSED"
      },
      "src/DataStructure/Storage.sol": {
        "keccak256": "0x8f99f5f94641c826d0b4bd2dadb065745ff877b195fb1eb7392362a026d01380",
        "urls": [
          "bzz-raw://f2c2362ee8472e6076f7f18a51264c96e63a346e61da6a7234abe5e3c034de38",
          "dweb:/ipfs/QmW59HJM49LDieB2svjKnYzo7hdYKG24rLKgb7AfiXht4z"
        ],
        "license": "UNLICENSED"
      },
      "src/ProtocolFacet.sol": {
        "keccak256": "0x9c1c8deb2d61a8e39028c31154e51f6f4acccd71d4995cd82442e5addd9a5916",
        "urls": [
          "bzz-raw://9e1d0cfcefa35601756a9f9aec29fcd1a072dc3e5e37d78def17d72ace29909d",
          "dweb:/ipfs/QmeCgh2tqzoz5Nf8X6UGY7ZeKTiyrvgoxZdzU3P9ua4JKX"
        ],
        "license": "UNLICENSED"
      },
      "src/RepayFacet.sol": {
        "keccak256": "0x5b5c777a189495808271068b7757f73542bbc27b6141599752eaf4bef63c8e89",
        "urls": [
          "bzz-raw://d6b289c89769655e173cecb2c20d8147d48ada74c5c6596060b70df7eed4b609",
          "dweb:/ipfs/Qmas7puaEDtvyLhMPUZGouNnVvky3gRKZCLemCxdLWALsF"
        ],
        "license": "UNLICENSED"
      },
      "src/Signature.sol": {
        "keccak256": "0x37073550ae20735f42ae719377540c0bedd633aad9ce97d40e0facb965e4d137",
        "urls": [
          "bzz-raw://d57bda44ce2f1e48f227c8b97cb23cd166d3b92421a3436835c81c1bc42a60ca",
          "dweb:/ipfs/QmU5yS6t3d6nhfUeGmwZnFsbo8LZe7MHED738pZBaUkPna"
        ],
        "license": "UNLICENSED"
      },
      "src/SupplyPositionFacet.sol": {
        "keccak256": "0xd96da66c04a30bc8d665bdbec2eebbf23998aff501e00f64fc26d7ed0c4df780",
        "urls": [
          "bzz-raw://bc62b16dbddf140812eb18fc39e7af0618c0b38c2b83ba9ee3efb67974963ad5",
          "dweb:/ipfs/QmYV7aBahd6EqmcjFK1Lncp27XeG2AKnLtQRFRnGsGu9Mz"
        ],
        "license": "UNLICENSED"
      },
      "src/SupplyPositionLogic/DiamondERC721.sol": {
        "keccak256": "0xdb5734014944ffbfc70b937c0cb2ab310d15c7ceb93e852bf5c6aef64c24584b",
        "urls": [
          "bzz-raw://51bc9d846048e67e83c9e708aedd5f68ce240bd87c1c4a68526ee224553c0279",
          "dweb:/ipfs/QmUWcdYokYYxTNpJtSwM22Q4WBKxJEjfhtyAU97NFh1VdZ"
        ],
        "license": "MIT"
      },
      "src/SupplyPositionLogic/NFTUtils.sol": {
        "keccak256": "0xc1fdc762292d11504da9d1b999d6364d8c76b721c8f6f7369e0030c9dae9af13",
        "urls": [
          "bzz-raw://dc9d2a3636065c11ad95bc669381dae82218909711ed54e31ee3085671ade192",
          "dweb:/ipfs/QmfX1zJes16PDd9NUGcSNYBMRvaykMhyaEMEQsmMugVtP4"
        ],
        "license": "MIT"
      },
      "src/SupplyPositionLogic/SafeMint.sol": {
        "keccak256": "0xfe55649875c4f7c6fa65c01b8abf9e0f6564cab19ec24fb895bdce6dde90764d",
        "urls": [
          "bzz-raw://5b0e86c734cce67187b23816bbba38c9eaab5e2154606de75866637f4774fd99",
          "dweb:/ipfs/QmPuJk6rhpUNjhftEAzbm26DA5tZw8sHybzYZ6G4PuWG8G"
        ],
        "license": "MIT"
      },
      "src/interface/IAdminFacet.sol": {
        "keccak256": "0xfc9606029a4ef8d26d8c86c377d77c3caf1e26335f3e155f279581e487bcc640",
        "urls": [
          "bzz-raw://5a04932fe22d016e66e172bff16c0611abcb8804e1039f99678a5d22e130daee",
          "dweb:/ipfs/QmUKzRKB5CPD3tE81Pbn8HHesuY1j64L5Xfbi4E8xsja8h"
        ],
        "license": "UNLICENSED"
      },
      "src/interface/IAuctionFacet.sol": {
        "keccak256": "0x142cf5565d929cf20c8b042f791360b7b76289620efcd42c90a37f2d8179e49f",
        "urls": [
          "bzz-raw://3aa1107c4c11a419c7340aff9624e3f539196759ffbe4eed5fde26cbbf1b4567",
          "dweb:/ipfs/QmfS88KKuQskg2RQP6GoVEbk9uUhbmVYH6Fps7yNUpfMCc"
        ],
        "license": "UNLICENSED"
      },
      "src/interface/IBorrowCheckers.sol": {
        "keccak256": "0x581d912358ce65c74e7e3f089486d5c2cc7f45be7cb02ef5ee26a293c9ba1f18",
        "urls": [
          "bzz-raw://18d4d2dee4cf9ccbeb8a33b037dc0021b1315fd3fca864a2127834f36cb6aaba",
          "dweb:/ipfs/QmUWvZMWUqv2DJpooXCHmQuBcr4kTzBhwApQniouAKdEJn"
        ],
        "license": "UNLICENSED"
      },
      "src/interface/IBorrowFacet.sol": {
        "keccak256": "0xc2351fa73840199deb8c9ecd663294517ce6e457e198d699d53d651b72f1fe43",
        "urls": [
          "bzz-raw://2094053b1d81f799877ee2ccd44a38601d80b97f93d54a14e0dfbc8ba8f3aba7",
          "dweb:/ipfs/QmZwEsKquQgH1H5tnKCQuBEeU9mRcnNBPC2bXZGt8XVuHF"
        ],
        "license": "UNLICENSED"
      },
      "src/interface/IBorrowHandlers.sol": {
        "keccak256": "0x420bed3254df51bff3c728e252b74a9603fa3f834330c1edf0f0d257444f03ce",
        "urls": [
          "bzz-raw://200955bcca9610fd1a0e3230f761ade89a12285bf60c91a758ef4045f5b55f54",
          "dweb:/ipfs/QmV9vYWeLVvo5ykdi8x6scgK4QDwYuPkhd4KETKWPA5tMv"
        ],
        "license": "UNLICENSED"
      },
      "src/interface/IClaimFacet.sol": {
        "keccak256": "0xa797f893096a5828eb1614b941df05b54afcf72ff1fde42a106976bf70d5e71c",
        "urls": [
          "bzz-raw://19be4abca0237cf076fb66e9d4fa9119c7bd9004a9e34a39c162cc3a1bb8e0cc",
          "dweb:/ipfs/QmaLkzLvZLwbcWn8CXmL9JYwVYPHeNWsMKD9JPMRozDBSQ"
        ],
        "license": "UNLICENSED"
      },
      "src/interface/IOwnershipFacet.sol": {
        "keccak256": "0x505b2f2d275a0aa2861d08564f6d03e44e8d10cd8a1c6fbdea1105383e0e9a4d",
        "urls": [
          "bzz-raw://4ca7e3a48787d056da5f3569965f9c2015e65d8ceb124e9346cf73d55e55c8b2",
          "dweb:/ipfs/QmWJmUsegbVtaJ71yCJZiEpedEvhSuw73NyjBfRFCkxt2z"
        ],
        "license": "UNLICENSED"
      },
      "src/interface/IProtocolFacet.sol": {
        "keccak256": "0x41ef10bad154ed0a98a1fa46046869d6d6ab744953186caa287ced95b80ddc4a",
        "urls": [
          "bzz-raw://8a45399f560a088b94d3d5e14a104a3cbc02cec1083cf1eec5a8b135341c7d53",
          "dweb:/ipfs/QmcCDJmFCkRZoeHojqmvaMsavwZXcBeZV54i5eAfxmjcH5"
        ],
        "license": "UNLICENSED"
      },
      "src/interface/IRepayFacet.sol": {
        "keccak256": "0x932b0a489b740c46361e4cd5f5103c765b954cedfd41a823dd0549f435f0b7d4",
        "urls": [
          "bzz-raw://fddbb0a0401cd79a17b794c9caaa6f3c2e9381a1a3fd6ea04c43e2148786c572",
          "dweb:/ipfs/QmUKSTezv4twtFPVCXRSQZBfKNW5Zkd22w4HWFfJrV7VyQ"
        ],
        "license": "UNLICENSED"
      },
      "src/interface/ISignature.sol": {
        "keccak256": "0x6dadc10c64bc681b36624c2937fd3e108e87ca0056d311510e53a25cd009d065",
        "urls": [
          "bzz-raw://a813951b3d9f26315a9363a779c745c58ad261ee9fa8a997727ea7ddc6c90da1",
          "dweb:/ipfs/QmR8G8XQDm7xjKzPH29PmYw2LnHakapvkdavJXZCT3vKFT"
        ],
        "license": "UNLICENSED"
      },
      "src/mock/Money.sol": {
        "keccak256": "0x5e3ad642d66b67ba5606b3e566bd6d61aaf1fb041f65b147c8f73abdf502d8d6",
        "urls": [
          "bzz-raw://4ae809b748f38d9d9e4a4bd8d211e7b30c8d56b5e632204cc27654daf995e5c3",
          "dweb:/ipfs/QmUKMtSDrZG3QHFWRUAh5FPAxGXpSGZsafStRhoESxxL52"
        ],
        "license": "MIT"
      },
      "src/mock/NFT.sol": {
        "keccak256": "0xc9930007614632c7dc1393745990ec87c310b4178f387f1cbe52b50f4016fb64",
        "urls": [
          "bzz-raw://b1bd12749aec08d1d0f5d2d4d8d32259c9c23ab243f1aa16b0106d89955f4e50",
          "dweb:/ipfs/QmRohEtgT3y7kTbeSbzQkxBTJemznmkxJey2vTKmZCBvFT"
        ],
        "license": "UNLICENSED"
      },
      "src/mock/TestCurrency.sol": {
        "keccak256": "0xea5129d4a21ac381a780017790fc8f0c888aa8354314bd97d396056f4bdd20f0",
        "urls": [
          "bzz-raw://98c46c988468539ee172a1bad7e9e666707bec019b62c90207c552679a644960",
          "dweb:/ipfs/QmexsmkJdB934t2Tc6x9oPE64NbdYNjLMz8r3CituThgnB"
        ],
        "license": "MIT"
      },
      "src/utils/Erc20CheckedTransfer.sol": {
        "keccak256": "0x03a0041ce856ecca1d5d2b67443dca5f2acab9fe38cd592b2d3e897eaa3955d0",
        "urls": [
          "bzz-raw://10515dcb2700e1b01b00f50c704ffc7daba221080221e056d498da890c586c82",
          "dweb:/ipfs/QmRW2ycAG7nsk2YXnp6nk8s56RqTV1EVCuPkLgQsUHyGeW"
        ],
        "license": "UNLICENSED"
      },
      "src/utils/FuncSelectors.h.sol": {
        "keccak256": "0xa79f6e8531c9a91f3e26e48ef5d7b0c8327e17b5352400668880cc1a98f36ddc",
        "urls": [
          "bzz-raw://518f86fef198ec19ccba9d2438c8f490581f326cb2bdba8d3e6634c4797cebc0",
          "dweb:/ipfs/Qmb1NGp72szB8owp5MjaFWF7zngPtQ6EHUUMy38tn3BCqi"
        ],
        "license": "UNLICENSED"
      },
      "src/utils/NFTokenUtils.sol": {
        "keccak256": "0x886dbd7a03bf3a8fd4739b86bc4eba01014e7683029dd485993369ad0a0473c5",
        "urls": [
          "bzz-raw://02591fc4c94a10c37a9132dfbd9f1222f62c919ef5ba7b76a1ca1c1e2dc1d105",
          "dweb:/ipfs/QmVkSSvA12C2gu8gEv8CxBHpKY242THHAy7eNfzHpXdhtT"
        ],
        "license": "UNLICENSED"
      },
      "src/utils/RayMath.sol": {
        "keccak256": "0x234068d17599aefc86ca6f5febb25be32bb71c0b45326c24936b23dd9cc876ac",
        "urls": [
          "bzz-raw://421375b2a164c6ffa1e018c533e2a231395fc4f582acc3a43672a24e51fbe328",
          "dweb:/ipfs/QmUFEZi7BjELW2fDZuUpeDCTrNw1YhMmeqJvoMk2MfuxDU"
        ],
        "license": "UNLICENSED"
      },
      "test/Auction/AuctionInternal.t.sol": {
        "keccak256": "0x7b50d5c8ddc7338e4d3c9513c234c9a701fb3e525de4816c5112b62decc796a2",
        "urls": [
          "bzz-raw://9055f5af0ded43a5a309b8c62b71258febea95384cab590bd2de21cf9ddb7119",
          "dweb:/ipfs/Qmf3sdG3ZC9RXkvAQ9AefzQHzQcNhW4mgM1RQGEEpAa2yb"
        ],
        "license": "UNLICENSED"
      },
      "test/Commons/BigKairos.sol": {
        "keccak256": "0xe5e4959e7dca0aa52e2d35459a1f71b91a2af9a70fbb1465c31a98b53823eddc",
        "urls": [
          "bzz-raw://25e44dd8b518574592079f2137651440fd7ce1360cfe5ad35d8c6993e8c4622a",
          "dweb:/ipfs/QmcqGbDvgGu2oHqD17PURL2matovxNPyuGgYajw57Q6SCj"
        ],
        "license": "UNLICENSED"
      },
      "test/Commons/Internal.sol": {
        "keccak256": "0x12507426f01169802f333a2fb704fd70c35659ff2854c66d928a901673fca132",
        "urls": [
          "bzz-raw://7ee48041714fd79f61fd382d6d9427732be1af960af57aff862432129ecac4e6",
          "dweb:/ipfs/QmT9p8LiAYfH2622zT7FD9UmcvTmywmG6N7CKyuPJjL3nj"
        ],
        "license": "UNLICENSED"
      },
      "test/Commons/Loggers.sol": {
        "keccak256": "0x5ad09ea0e54173023d712d84e06faa58267cadc7b34404adabc1c11c28c0f238",
        "urls": [
          "bzz-raw://dfd5aafd6dca411217e0928b82f211b16a9b8e937389838cadd307db638b83eb",
          "dweb:/ipfs/QmbB4vPdgPrrVhb4W9z9UeLQPBzU7xXQ1dkk2zzQNkwX85"
        ],
        "license": "UNLICENSED"
      },
      "test/Commons/TestCommons.sol": {
        "keccak256": "0x661e48bcca61c615c6b5f082c744281af6a886b3d4de4d0607fce24a1be2d565",
        "urls": [
          "bzz-raw://95556855c33b1be5e827c505e6ab6fa54534c0bc4e8610986cd0361e59c5a1bf",
          "dweb:/ipfs/QmY4VKfqcLa8hAN9C3L1N4hTyAfc74nPkUxCAUZm9nw2N1"
        ],
        "license": "UNLICENSED"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "test/Auction/AuctionInternal.t.sol",
    "id": 41089,
    "exportedSymbols": {
      "Internal": [
        45036
      ],
      "ONE": [
        36604
      ],
      "Protocol": [
        36749
      ],
      "Ray": [
        36644
      ],
      "RayMath": [
        39997
      ],
      "TestAuction": [
        41088
      ],
      "protocolStorage": [
        36624
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:1750:89",
    "nodes": [
      {
        "id": 40887,
        "nodeType": "PragmaDirective",
        "src": "39:23:89",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".18"
        ]
      },
      {
        "id": 40889,
        "nodeType": "ImportDirective",
        "src": "64:56:89",
        "nodes": [],
        "absolutePath": "src/DataStructure/Objects.sol",
        "file": "../../src/DataStructure/Objects.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 41089,
        "sourceUnit": 36709,
        "symbolAliases": [
          {
            "foreign": {
              "id": 40888,
              "name": "Ray",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 36644,
              "src": "72:3:89",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 40891,
        "nodeType": "ImportDirective",
        "src": "121:61:89",
        "nodes": [],
        "absolutePath": "src/DataStructure/Storage.sol",
        "file": "../../src/DataStructure/Storage.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 41089,
        "sourceUnit": 36828,
        "symbolAliases": [
          {
            "foreign": {
              "id": 40890,
              "name": "Protocol",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 36749,
              "src": "129:8:89",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 40894,
        "nodeType": "ImportDirective",
        "src": "183:72:89",
        "nodes": [],
        "absolutePath": "src/DataStructure/Global.sol",
        "file": "../../src/DataStructure/Global.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 41089,
        "sourceUnit": 36637,
        "symbolAliases": [
          {
            "foreign": {
              "id": 40892,
              "name": "ONE",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 36604,
              "src": "191:3:89",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 40893,
              "name": "protocolStorage",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 36624,
              "src": "196:15:89",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 40896,
        "nodeType": "ImportDirective",
        "src": "256:49:89",
        "nodes": [],
        "absolutePath": "test/Commons/Internal.sol",
        "file": "../Commons/Internal.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 41089,
        "sourceUnit": 45037,
        "symbolAliases": [
          {
            "foreign": {
              "id": 40895,
              "name": "Internal",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 45036,
              "src": "264:8:89",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 40898,
        "nodeType": "ImportDirective",
        "src": "306:52:89",
        "nodes": [],
        "absolutePath": "src/utils/RayMath.sol",
        "file": "../../src/utils/RayMath.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 41089,
        "sourceUnit": 39998,
        "symbolAliases": [
          {
            "foreign": {
              "id": 40897,
              "name": "RayMath",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 39997,
              "src": "314:7:89",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 41088,
        "nodeType": "ContractDefinition",
        "src": "360:1428:89",
        "nodes": [
          {
            "id": 40904,
            "nodeType": "UsingForDirective",
            "src": "399:22:89",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 40901,
              "name": "RayMath",
              "nameLocations": [
                "405:7:89"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 39997,
              "src": "405:7:89"
            },
            "typeName": {
              "id": 40903,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 40902,
                "name": "Ray",
                "nameLocations": [
                  "417:3:89"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 36644,
                "src": "417:3:89"
              },
              "referencedDeclaration": 36644,
              "src": "417:3:89",
              "typeDescriptions": {
                "typeIdentifier": "t_userDefinedValueType$_Ray_$36644",
                "typeString": "Ray"
              }
            }
          },
          {
            "id": 40907,
            "nodeType": "UsingForDirective",
            "src": "426:26:89",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 40905,
              "name": "RayMath",
              "nameLocations": [
                "432:7:89"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 39997,
              "src": "432:7:89"
            },
            "typeName": {
              "id": 40906,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "444:7:89",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 40910,
            "nodeType": "VariableDeclaration",
            "src": "458:30:89",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "testLoanId",
            "nameLocation": "474:10:89",
            "scope": 41088,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 40908,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "458:7:89",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "30",
              "id": 40909,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "487:1:89",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "private"
          },
          {
            "id": 40912,
            "nodeType": "VariableDeclaration",
            "src": "494:20:89",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "lent",
            "nameLocation": "510:4:89",
            "scope": 41088,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 40911,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "494:7:89",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "private"
          },
          {
            "id": 40939,
            "nodeType": "FunctionDefinition",
            "src": "521:172:89",
            "nodes": [],
            "body": {
              "id": 40938,
              "nodeType": "Block",
              "src": "545:148:89",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    40917
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 40917,
                      "mutability": "mutable",
                      "name": "proto",
                      "nameLocation": "572:5:89",
                      "nodeType": "VariableDeclaration",
                      "scope": 40938,
                      "src": "555:22:89",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Protocol_$36749_storage_ptr",
                        "typeString": "struct Protocol"
                      },
                      "typeName": {
                        "id": 40916,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 40915,
                          "name": "Protocol",
                          "nameLocations": [
                            "555:8:89"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 36749,
                          "src": "555:8:89"
                        },
                        "referencedDeclaration": 36749,
                        "src": "555:8:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Protocol_$36749_storage_ptr",
                          "typeString": "struct Protocol"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 40920,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 40918,
                      "name": "protocolStorage",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 36624,
                      "src": "580:15:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_Protocol_$36749_storage_ptr_$",
                        "typeString": "function () pure returns (struct Protocol storage pointer)"
                      }
                    },
                    "id": 40919,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "580:17:89",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Protocol_$36749_storage_ptr",
                      "typeString": "struct Protocol storage pointer"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "555:42:89"
                },
                {
                  "expression": {
                    "id": 40928,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "expression": {
                          "id": 40921,
                          "name": "proto",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 40917,
                          "src": "608:5:89",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Protocol_$36749_storage_ptr",
                            "typeString": "struct Protocol storage pointer"
                          }
                        },
                        "id": 40924,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "614:4:89",
                        "memberName": "loan",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 36738,
                        "src": "608:10:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Loan_$36780_storage_$",
                          "typeString": "mapping(uint256 => struct Loan storage ref)"
                        }
                      },
                      "id": 40925,
                      "indexExpression": {
                        "id": 40923,
                        "name": "testLoanId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40910,
                        "src": "619:10:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "608:22:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Loan_$36780_storage",
                        "typeString": "struct Loan storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 40926,
                        "name": "getLoan",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46491,
                        "src": "633:7:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_struct$_Loan_$36780_memory_ptr_$",
                          "typeString": "function () view returns (struct Loan memory)"
                        }
                      },
                      "id": 40927,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "633:9:89",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Loan_$36780_memory_ptr",
                        "typeString": "struct Loan memory"
                      }
                    },
                    "src": "608:34:89",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Loan_$36780_storage",
                      "typeString": "struct Loan storage ref"
                    }
                  },
                  "id": 40929,
                  "nodeType": "ExpressionStatement",
                  "src": "608:34:89"
                },
                {
                  "expression": {
                    "id": 40936,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 40930,
                      "name": "lent",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 40912,
                      "src": "652:4:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "baseExpression": {
                          "expression": {
                            "id": 40931,
                            "name": "proto",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 40917,
                            "src": "659:5:89",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Protocol_$36749_storage_ptr",
                              "typeString": "struct Protocol storage pointer"
                            }
                          },
                          "id": 40932,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "665:4:89",
                          "memberName": "loan",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 36738,
                          "src": "659:10:89",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Loan_$36780_storage_$",
                            "typeString": "mapping(uint256 => struct Loan storage ref)"
                          }
                        },
                        "id": 40934,
                        "indexExpression": {
                          "id": 40933,
                          "name": "testLoanId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 40910,
                          "src": "670:10:89",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "659:22:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Loan_$36780_storage",
                          "typeString": "struct Loan storage ref"
                        }
                      },
                      "id": 40935,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "682:4:89",
                      "memberName": "lent",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 36754,
                      "src": "659:27:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "652:34:89",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 40937,
                  "nodeType": "ExpressionStatement",
                  "src": "652:34:89"
                }
              ]
            },
            "functionSelector": "0a9254e4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setUp",
            "nameLocation": "530:5:89",
            "parameters": {
              "id": 40913,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "535:2:89"
            },
            "returnParameters": {
              "id": 40914,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "545:0:89"
            },
            "scope": 41088,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 40960,
            "nodeType": "FunctionDefinition",
            "src": "699:155:89",
            "nodes": [],
            "body": {
              "id": 40959,
              "nodeType": "Block",
              "src": "734:120:89",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "30",
                        "id": 40943,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "759:1:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 40942,
                      "name": "setTimeElapsed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 41087,
                      "src": "744:14:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 40944,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "744:17:89",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 40945,
                  "nodeType": "ExpressionStatement",
                  "src": "744:17:89"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 40948,
                            "name": "testLoanId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 40910,
                            "src": "786:10:89",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 40947,
                          "name": "price",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34806,
                          "src": "780:5:89",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                            "typeString": "function (uint256) view returns (uint256)"
                          }
                        },
                        "id": 40949,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "780:17:89",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "expression": {
                              "expression": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 40952,
                                  "name": "protocolStorage",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 36624,
                                  "src": "808:15:89",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_Protocol_$36749_storage_ptr_$",
                                    "typeString": "function () pure returns (struct Protocol storage pointer)"
                                  }
                                },
                                "id": 40953,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "808:17:89",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Protocol_$36749_storage_ptr",
                                  "typeString": "struct Protocol storage pointer"
                                }
                              },
                              "id": 40954,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "826:7:89",
                              "memberName": "auction",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 36728,
                              "src": "808:25:89",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Auction_$36721_storage",
                                "typeString": "struct Auction storage ref"
                              }
                            },
                            "id": 40955,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "834:11:89",
                            "memberName": "priceFactor",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 36720,
                            "src": "808:37:89",
                            "typeDescriptions": {
                              "typeIdentifier": "t_userDefinedValueType$_Ray_$36644",
                              "typeString": "Ray"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_userDefinedValueType$_Ray_$36644",
                              "typeString": "Ray"
                            }
                          ],
                          "expression": {
                            "id": 40950,
                            "name": "lent",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 40912,
                            "src": "799:4:89",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 40951,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "804:3:89",
                          "memberName": "mul",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 39789,
                          "src": "799:8:89",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_userDefinedValueType$_Ray_$36644_$returns$_t_uint256_$attached_to$_t_uint256_$",
                            "typeString": "function (uint256,Ray) pure returns (uint256)"
                          }
                        },
                        "id": 40956,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "799:47:89",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 40946,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        46547,
                        46563,
                        46601,
                        46667,
                        8050,
                        8075,
                        8088,
                        8104,
                        8146,
                        8188,
                        8230,
                        8267,
                        8304,
                        8341,
                        5888,
                        5913,
                        5943,
                        5968,
                        6027,
                        6052,
                        6082,
                        6107,
                        7580,
                        7615
                      ],
                      "referencedDeclaration": 6082,
                      "src": "771:8:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 40957,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "771:76:89",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 40958,
                  "nodeType": "ExpressionStatement",
                  "src": "771:76:89"
                }
              ]
            },
            "functionSelector": "981e27e6",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testInitialPrice",
            "nameLocation": "708:16:89",
            "parameters": {
              "id": 40940,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "724:2:89"
            },
            "returnParameters": {
              "id": 40941,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "734:0:89"
            },
            "scope": 41088,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 41016,
            "nodeType": "FunctionDefinition",
            "src": "860:378:89",
            "nodes": [],
            "body": {
              "id": 41015,
              "nodeType": "Block",
              "src": "888:350:89",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    40965
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 40965,
                      "mutability": "mutable",
                      "name": "proto",
                      "nameLocation": "915:5:89",
                      "nodeType": "VariableDeclaration",
                      "scope": 41015,
                      "src": "898:22:89",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Protocol_$36749_storage_ptr",
                        "typeString": "struct Protocol"
                      },
                      "typeName": {
                        "id": 40964,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 40963,
                          "name": "Protocol",
                          "nameLocations": [
                            "898:8:89"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 36749,
                          "src": "898:8:89"
                        },
                        "referencedDeclaration": 36749,
                        "src": "898:8:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Protocol_$36749_storage_ptr",
                          "typeString": "struct Protocol"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 40968,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 40966,
                      "name": "protocolStorage",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 36624,
                      "src": "923:15:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_Protocol_$36749_storage_ptr_$",
                        "typeString": "function () pure returns (struct Protocol storage pointer)"
                      }
                    },
                    "id": 40967,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "923:17:89",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Protocol_$36749_storage_ptr",
                      "typeString": "struct Protocol storage pointer"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "898:42:89"
                },
                {
                  "assignments": [
                    40970
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 40970,
                      "mutability": "mutable",
                      "name": "initialPrice",
                      "nameLocation": "959:12:89",
                      "nodeType": "VariableDeclaration",
                      "scope": 41015,
                      "src": "951:20:89",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 40969,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "951:7:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 40977,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "expression": {
                            "id": 40973,
                            "name": "proto",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 40965,
                            "src": "983:5:89",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Protocol_$36749_storage_ptr",
                              "typeString": "struct Protocol storage pointer"
                            }
                          },
                          "id": 40974,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "989:7:89",
                          "memberName": "auction",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 36728,
                          "src": "983:13:89",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Auction_$36721_storage",
                            "typeString": "struct Auction storage ref"
                          }
                        },
                        "id": 40975,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "997:11:89",
                        "memberName": "priceFactor",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 36720,
                        "src": "983:25:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_userDefinedValueType$_Ray_$36644",
                          "typeString": "Ray"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_userDefinedValueType$_Ray_$36644",
                          "typeString": "Ray"
                        }
                      ],
                      "expression": {
                        "id": 40971,
                        "name": "lent",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40912,
                        "src": "974:4:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 40972,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "979:3:89",
                      "memberName": "mul",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 39789,
                      "src": "974:8:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_userDefinedValueType$_Ray_$36644_$returns$_t_uint256_$attached_to$_t_uint256_$",
                        "typeString": "function (uint256,Ray) pure returns (uint256)"
                      }
                    },
                    "id": 40976,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "974:35:89",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "951:58:89"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 40983,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "expression": {
                              "id": 40979,
                              "name": "proto",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 40965,
                              "src": "1035:5:89",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Protocol_$36749_storage_ptr",
                                "typeString": "struct Protocol storage pointer"
                              }
                            },
                            "id": 40980,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1041:7:89",
                            "memberName": "auction",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 36728,
                            "src": "1035:13:89",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Auction_$36721_storage",
                              "typeString": "struct Auction storage ref"
                            }
                          },
                          "id": 40981,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1049:8:89",
                          "memberName": "duration",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 36717,
                          "src": "1035:22:89",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "/",
                        "rightExpression": {
                          "hexValue": "32",
                          "id": 40982,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1060:1:89",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        },
                        "src": "1035:26:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 40978,
                      "name": "setTimeElapsed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 41087,
                      "src": "1020:14:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 40984,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1020:42:89",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 40985,
                  "nodeType": "ExpressionStatement",
                  "src": "1020:42:89"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 40988,
                            "name": "testLoanId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 40910,
                            "src": "1087:10:89",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 40987,
                          "name": "price",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34806,
                          "src": "1081:5:89",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                            "typeString": "function (uint256) view returns (uint256)"
                          }
                        },
                        "id": 40989,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1081:17:89",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 40992,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 40990,
                          "name": "initialPrice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 40970,
                          "src": "1100:12:89",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "/",
                        "rightExpression": {
                          "hexValue": "32",
                          "id": 40991,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1115:1:89",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        },
                        "src": "1100:16:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 40986,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        46547,
                        46563,
                        46601,
                        46667,
                        8050,
                        8075,
                        8088,
                        8104,
                        8146,
                        8188,
                        8230,
                        8267,
                        8304,
                        8341,
                        5888,
                        5913,
                        5943,
                        5968,
                        6027,
                        6052,
                        6082,
                        6107,
                        7580,
                        7615
                      ],
                      "referencedDeclaration": 6082,
                      "src": "1072:8:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 40993,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1072:45:89",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 40994,
                  "nodeType": "ExpressionStatement",
                  "src": "1072:45:89"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 41000,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "expression": {
                              "id": 40996,
                              "name": "proto",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 40965,
                              "src": "1143:5:89",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Protocol_$36749_storage_ptr",
                                "typeString": "struct Protocol storage pointer"
                              }
                            },
                            "id": 40997,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1149:7:89",
                            "memberName": "auction",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 36728,
                            "src": "1143:13:89",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Auction_$36721_storage",
                              "typeString": "struct Auction storage ref"
                            }
                          },
                          "id": 40998,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1157:8:89",
                          "memberName": "duration",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 36717,
                          "src": "1143:22:89",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "/",
                        "rightExpression": {
                          "hexValue": "33",
                          "id": 40999,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1168:1:89",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_3_by_1",
                            "typeString": "int_const 3"
                          },
                          "value": "3"
                        },
                        "src": "1143:26:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 40995,
                      "name": "setTimeElapsed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 41087,
                      "src": "1128:14:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 41001,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1128:42:89",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 41002,
                  "nodeType": "ExpressionStatement",
                  "src": "1128:42:89"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 41005,
                            "name": "testLoanId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 40910,
                            "src": "1195:10:89",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 41004,
                          "name": "price",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34806,
                          "src": "1189:5:89",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                            "typeString": "function (uint256) view returns (uint256)"
                          }
                        },
                        "id": 41006,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1189:17:89",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 41012,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 41009,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 41007,
                                "name": "initialPrice",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 40970,
                                "src": "1209:12:89",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "/",
                              "rightExpression": {
                                "hexValue": "33",
                                "id": 41008,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1224:1:89",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_3_by_1",
                                  "typeString": "int_const 3"
                                },
                                "value": "3"
                              },
                              "src": "1209:16:89",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 41010,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "1208:18:89",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "hexValue": "32",
                          "id": 41011,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1229:1:89",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        },
                        "src": "1208:22:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 41003,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        46547,
                        46563,
                        46601,
                        46667,
                        8050,
                        8075,
                        8088,
                        8104,
                        8146,
                        8188,
                        8230,
                        8267,
                        8304,
                        8341,
                        5888,
                        5913,
                        5943,
                        5968,
                        6027,
                        6052,
                        6082,
                        6107,
                        7580,
                        7615
                      ],
                      "referencedDeclaration": 6082,
                      "src": "1180:8:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 41013,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1180:51:89",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 41014,
                  "nodeType": "ExpressionStatement",
                  "src": "1180:51:89"
                }
              ]
            },
            "functionSelector": "8335a17f",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testPrice",
            "nameLocation": "869:9:89",
            "parameters": {
              "id": 40961,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "878:2:89"
            },
            "returnParameters": {
              "id": 40962,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "888:0:89"
            },
            "scope": 41088,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 41069,
            "nodeType": "FunctionDefinition",
            "src": "1244:391:89",
            "nodes": [],
            "body": {
              "id": 41068,
              "nodeType": "Block",
              "src": "1277:358:89",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    41021
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 41021,
                      "mutability": "mutable",
                      "name": "proto",
                      "nameLocation": "1304:5:89",
                      "nodeType": "VariableDeclaration",
                      "scope": 41068,
                      "src": "1287:22:89",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Protocol_$36749_storage_ptr",
                        "typeString": "struct Protocol"
                      },
                      "typeName": {
                        "id": 41020,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 41019,
                          "name": "Protocol",
                          "nameLocations": [
                            "1287:8:89"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 36749,
                          "src": "1287:8:89"
                        },
                        "referencedDeclaration": 36749,
                        "src": "1287:8:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Protocol_$36749_storage_ptr",
                          "typeString": "struct Protocol"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 41024,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 41022,
                      "name": "protocolStorage",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 36624,
                      "src": "1312:15:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_Protocol_$36749_storage_ptr_$",
                        "typeString": "function () pure returns (struct Protocol storage pointer)"
                      }
                    },
                    "id": 41023,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1312:17:89",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Protocol_$36749_storage_ptr",
                      "typeString": "struct Protocol storage pointer"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1287:42:89"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "expression": {
                            "id": 41026,
                            "name": "proto",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 41021,
                            "src": "1355:5:89",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Protocol_$36749_storage_ptr",
                              "typeString": "struct Protocol storage pointer"
                            }
                          },
                          "id": 41027,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1361:7:89",
                          "memberName": "auction",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 36728,
                          "src": "1355:13:89",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Auction_$36721_storage",
                            "typeString": "struct Auction storage ref"
                          }
                        },
                        "id": 41028,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1369:8:89",
                        "memberName": "duration",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 36717,
                        "src": "1355:22:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 41025,
                      "name": "setTimeElapsed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 41087,
                      "src": "1340:14:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 41029,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1340:38:89",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 41030,
                  "nodeType": "ExpressionStatement",
                  "src": "1340:38:89"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 41033,
                            "name": "testLoanId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 40910,
                            "src": "1403:10:89",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 41032,
                          "name": "price",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34806,
                          "src": "1397:5:89",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                            "typeString": "function (uint256) view returns (uint256)"
                          }
                        },
                        "id": 41034,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1397:17:89",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 41035,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1416:7:89",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 41031,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        46547,
                        46563,
                        46601,
                        46667,
                        8050,
                        8075,
                        8088,
                        8104,
                        8146,
                        8188,
                        8230,
                        8267,
                        8304,
                        8341,
                        5888,
                        5913,
                        5943,
                        5968,
                        6027,
                        6052,
                        6082,
                        6107,
                        7580,
                        7615
                      ],
                      "referencedDeclaration": 6082,
                      "src": "1388:8:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 41036,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1388:36:89",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 41037,
                  "nodeType": "ExpressionStatement",
                  "src": "1388:36:89"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 41043,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "expression": {
                              "id": 41039,
                              "name": "proto",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 41021,
                              "src": "1450:5:89",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Protocol_$36749_storage_ptr",
                                "typeString": "struct Protocol storage pointer"
                              }
                            },
                            "id": 41040,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1456:7:89",
                            "memberName": "auction",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 36728,
                            "src": "1450:13:89",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Auction_$36721_storage",
                              "typeString": "struct Auction storage ref"
                            }
                          },
                          "id": 41041,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1464:8:89",
                          "memberName": "duration",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 36717,
                          "src": "1450:22:89",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 41042,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1475:1:89",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "1450:26:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 41038,
                      "name": "setTimeElapsed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 41087,
                      "src": "1435:14:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 41044,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1435:42:89",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 41045,
                  "nodeType": "ExpressionStatement",
                  "src": "1435:42:89"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 41048,
                            "name": "testLoanId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 40910,
                            "src": "1502:10:89",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 41047,
                          "name": "price",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34806,
                          "src": "1496:5:89",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                            "typeString": "function (uint256) view returns (uint256)"
                          }
                        },
                        "id": 41049,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1496:17:89",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 41050,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1515:7:89",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 41046,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        46547,
                        46563,
                        46601,
                        46667,
                        8050,
                        8075,
                        8088,
                        8104,
                        8146,
                        8188,
                        8230,
                        8267,
                        8304,
                        8341,
                        5888,
                        5913,
                        5943,
                        5968,
                        6027,
                        6052,
                        6082,
                        6107,
                        7580,
                        7615
                      ],
                      "referencedDeclaration": 6082,
                      "src": "1487:8:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 41051,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1487:36:89",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 41052,
                  "nodeType": "ExpressionStatement",
                  "src": "1487:36:89"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 41058,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "expression": {
                              "id": 41054,
                              "name": "proto",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 41021,
                              "src": "1549:5:89",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Protocol_$36749_storage_ptr",
                                "typeString": "struct Protocol storage pointer"
                              }
                            },
                            "id": 41055,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1555:7:89",
                            "memberName": "auction",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 36728,
                            "src": "1549:13:89",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Auction_$36721_storage",
                              "typeString": "struct Auction storage ref"
                            }
                          },
                          "id": 41056,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1563:8:89",
                          "memberName": "duration",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 36717,
                          "src": "1549:22:89",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "32",
                          "id": 41057,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1574:7:89",
                          "subdenomination": "weeks",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1209600_by_1",
                            "typeString": "int_const 1209600"
                          },
                          "value": "2"
                        },
                        "src": "1549:32:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 41053,
                      "name": "setTimeElapsed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 41087,
                      "src": "1534:14:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 41059,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1534:48:89",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 41060,
                  "nodeType": "ExpressionStatement",
                  "src": "1534:48:89"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 41063,
                            "name": "testLoanId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 40910,
                            "src": "1607:10:89",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 41062,
                          "name": "price",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34806,
                          "src": "1601:5:89",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                            "typeString": "function (uint256) view returns (uint256)"
                          }
                        },
                        "id": 41064,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1601:17:89",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 41065,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1620:7:89",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 41061,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        46547,
                        46563,
                        46601,
                        46667,
                        8050,
                        8075,
                        8088,
                        8104,
                        8146,
                        8188,
                        8230,
                        8267,
                        8304,
                        8341,
                        5888,
                        5913,
                        5943,
                        5968,
                        6027,
                        6052,
                        6082,
                        6107,
                        7580,
                        7615
                      ],
                      "referencedDeclaration": 6082,
                      "src": "1592:8:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 41066,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1592:36:89",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 41067,
                  "nodeType": "ExpressionStatement",
                  "src": "1592:36:89"
                }
              ]
            },
            "functionSelector": "457715c1",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testFinalPrice",
            "nameLocation": "1253:14:89",
            "parameters": {
              "id": 41017,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1267:2:89"
            },
            "returnParameters": {
              "id": 41018,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1277:0:89"
            },
            "scope": 41088,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 41087,
            "nodeType": "FunctionDefinition",
            "src": "1641:145:89",
            "nodes": [],
            "body": {
              "id": 41086,
              "nodeType": "Block",
              "src": "1695:91:89",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 41084,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "expression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 41074,
                              "name": "protocolStorage",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 36624,
                              "src": "1705:15:89",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_Protocol_$36749_storage_ptr_$",
                                "typeString": "function () pure returns (struct Protocol storage pointer)"
                              }
                            },
                            "id": 41075,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1705:17:89",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Protocol_$36749_storage_ptr",
                              "typeString": "struct Protocol storage pointer"
                            }
                          },
                          "id": 41076,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1723:4:89",
                          "memberName": "loan",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 36738,
                          "src": "1705:22:89",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Loan_$36780_storage_$",
                            "typeString": "mapping(uint256 => struct Loan storage ref)"
                          }
                        },
                        "id": 41078,
                        "indexExpression": {
                          "id": 41077,
                          "name": "testLoanId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 40910,
                          "src": "1728:10:89",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1705:34:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Loan_$36780_storage",
                          "typeString": "struct Loan storage ref"
                        }
                      },
                      "id": 41079,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "1740:7:89",
                      "memberName": "endDate",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 36761,
                      "src": "1705:42:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 41083,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 41080,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "1750:5:89",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 41081,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1756:9:89",
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "1750:15:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "id": 41082,
                        "name": "timeElapsed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41071,
                        "src": "1768:11:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "1750:29:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1705:74:89",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 41085,
                  "nodeType": "ExpressionStatement",
                  "src": "1705:74:89"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setTimeElapsed",
            "nameLocation": "1650:14:89",
            "parameters": {
              "id": 41072,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 41071,
                  "mutability": "mutable",
                  "name": "timeElapsed",
                  "nameLocation": "1673:11:89",
                  "nodeType": "VariableDeclaration",
                  "scope": 41087,
                  "src": "1665:19:89",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 41070,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1665:7:89",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1664:21:89"
            },
            "returnParameters": {
              "id": 41073,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1695:0:89"
            },
            "scope": 41088,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 40899,
              "name": "Internal",
              "nameLocations": [
                "384:8:89"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 45036,
              "src": "384:8:89"
            },
            "id": 40900,
            "nodeType": "InheritanceSpecifier",
            "src": "384:8:89"
          }
        ],
        "canonicalName": "TestAuction",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          41088,
          45036,
          44067,
          37461,
          37782,
          37306,
          38736,
          37116,
          38722,
          36091,
          35057,
          35686,
          34938,
          38432,
          38349,
          1732,
          3267,
          38607,
          38588,
          35197,
          37405,
          3231,
          38562,
          1750,
          38576,
          38542,
          38749,
          38535,
          34657,
          38509,
          46681,
          45648,
          16818,
          7919,
          7916,
          16769,
          12568,
          12278,
          11599,
          10027,
          9333,
          7859
        ],
        "name": "TestAuction",
        "nameLocation": "369:11:89",
        "scope": 41089,
        "usedErrors": [
          36445,
          36447,
          36449,
          36451,
          36453,
          36455,
          36457,
          36459,
          36461,
          36463,
          36465,
          36489,
          36498,
          36505,
          36514,
          36523,
          36531,
          36537,
          36541,
          36545,
          36549,
          36553,
          36557,
          36561,
          36567,
          36573,
          36577,
          37490,
          45983,
          45991,
          45993
        ]
      }
    ],
    "license": "UNLICENSED"
  },
  "id": 89
}