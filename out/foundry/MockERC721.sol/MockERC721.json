{
  "abi": [
    {
      "inputs": [],
      "name": "ERC721AddressZeroIsNotAValidOwner",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ERC721ApprovalToCurrentOwner",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ERC721ApproveToCaller",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ERC721CallerIsNotOwnerNorApproved",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ERC721CallerIsNotOwnerNorApprovedForAll",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ERC721InvalidTokenId",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ERC721MintToTheZeroAddress",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ERC721TokenAlreadyMinted",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ERC721TransferFromIncorrectOwner",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ERC721TransferToNonERC721ReceiverImplementer",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ERC721TransferToTheZeroAddress",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Unauthorized",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "safeMint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeMint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x608060405234801561001057600080fd5b5061109d806100206000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c80636352211e11610097578063a144819411610066578063a14481941461021e578063a22cb46514610231578063b88d4fde14610244578063e985e9c51461025757600080fd5b80636352211e146101cf57806370a08231146101e25780638832e6e31461020357806395d89b411461021657600080fd5b806323b872dd116100d357806323b872dd1461018357806340c10f191461019657806342842e0e146101a957806342966c68146101bc57600080fd5b806301ffc9a71461010557806306fdde031461012e578063081812fc14610143578063095ea7b31461016e575b600080fd5b610119610113366004610c7a565b50600090565b60405190151581526020015b60405180910390f35b61013661026a565b6040516101259190610cdd565b610156610151366004610cf0565b61030e565b6040516001600160a01b039091168152602001610125565b61018161017c366004610d25565b61031f565b005b610181610191366004610d4f565b6103ab565b6101816101a4366004610d25565b6103dd565b6101816101b7366004610d4f565b6103eb565b6101816101ca366004610cf0565b610406565b6101566101dd366004610cf0565b610412565b6101f56101f0366004610d8b565b61041d565b604051908152602001610125565b610181610211366004610e49565b610476565b610136610481565b61018161022c366004610d25565b6104c0565b61018161023f366004610ea0565b6104ca565b610181610252366004610edc565b6104d5565b610119610265366004610f44565b61050e565b600080516020611048833981519152805460609190819061028a90610f77565b80601f01602080910402602001604051908101604052809291908181526020018280546102b690610f77565b80156103035780601f106102d857610100808354040283529160200191610303565b820191906000526020600020905b8154815290600101906020018083116102e657829003601f168201915b505050505091505090565b600061031982610521565b92915050565b600061032a82610412565b9050806001600160a01b0316836001600160a01b03160361035e57604051630591db6d60e01b815260040160405180910390fd5b336001600160a01b0382161480159061037e575061037c813361050e565b155b1561039c5760405163e495e68760e01b815260040160405180910390fd5b6103a68383610584565b505050565b6103b533826105ec565b6103d257604051636eb172ad60e11b815260040160405180910390fd5b6103a683838361064b565b6103e7828261075a565b5050565b6103a6838383604051806020016040528060008152506104d5565b61040f8161081b565b50565b60006103198261089c565b60006000805160206110488339815191526001600160a01b03831661045557604051630b505c1d60e11b815260040160405180910390fd5b6001600160a01b039092166000908152600490920160205250604090205490565b6103a6838383610901565b7f9dcac861a288165fa5a7e007597a30abcd2d73e174280cf7c6967f5a922a443a80546060916000805160206110488339815191529161028a90610f77565b6103e78282610934565b6103e733838361094e565b6104df33836105ec565b6104fc57604051636eb172ad60e11b815260040160405180910390fd5b610508848484846109c7565b50505050565b600061051a83836109fa565b9392505050565b600061052c82610a47565b6105495760405163089ba7e160e41b815260040160405180910390fd5b5060009081527f9dcac861a288165fa5a7e007597a30abcd2d73e174280cf7c6967f5a922a443e60205260409020546001600160a01b031690565b60008181527f9dcac861a288165fa5a7e007597a30abcd2d73e174280cf7c6967f5a922a443e6020526040902080546001600160a01b0319166001600160a01b0384161790556000805160206110488339815191526103a66105e58361089c565b8484610a83565b6000806105f88361089c565b9050806001600160a01b0316846001600160a01b0316148061061f575061061f81856109fa565b806106435750836001600160a01b031661063884610521565b6001600160a01b0316145b949350505050565b6000805160206110488339815191526001600160a01b03841661066d8361089c565b6001600160a01b0316146106945760405163e146af6f60e01b815260040160405180910390fd5b6001600160a01b0383166106bb576040516338f646ff60e21b815260040160405180910390fd5b6106c6600083610584565b6001600160a01b038416600090815260048201602052604081208054600192906106f1908490610fc7565b90915550506001600160a01b03831660009081526004820160205260408120805460019290610721908490610fda565b90915550506000828152600382016020526040902080546001600160a01b0319166001600160a01b038516179055610508848484610ac9565b6000805160206110488339815191526001600160a01b038316610790576040516325bd6bd360e01b815260040160405180910390fd5b61079982610a47565b156107b75760405163c5a8d37160e01b815260040160405180910390fd5b6001600160a01b038316600090815260048201602052604081208054600192906107e2908490610fda565b90915550506000828152600382016020526040812080546001600160a01b0319166001600160a01b0386161790556103a6908484610ac9565b60008051602061104883398151915260006108358361089c565b9050610842600084610584565b6001600160a01b0381166000908152600483016020526040812080546001929061086d908490610fc7565b90915550506000838152600383016020526040812080546001600160a01b03191690556103a690829085610ac9565b60008181527f9dcac861a288165fa5a7e007597a30abcd2d73e174280cf7c6967f5a922a443c6020526040812054600080516020611048833981519152906001600160a01b03168061051a5760405163089ba7e160e41b815260040160405180910390fd5b61090b838361075a565b6109186000848484610b0f565b6103a657604051626b5e2960e61b815260040160405180910390fd5b6103e7828260405180602001604052806000815250610901565b6000805160206110488339815191526001600160a01b038084169085160361098957604051630b7b99b960e21b815260040160405180910390fd5b6001600160a01b0384811660009081526006830160209081526040808320938716835292905220805460ff1916831515179055610508848484610c10565b6109d284848461064b565b6109de84848484610b0f565b61050857604051626b5e2960e61b815260040160405180910390fd5b6001600160a01b0391821660009081527f9dcac861a288165fa5a7e007597a30abcd2d73e174280cf7c6967f5a922a443f6020908152604080832093909416825291909152205460ff1690565b60009081527f9dcac861a288165fa5a7e007597a30abcd2d73e174280cf7c6967f5a922a443c60205260409020546001600160a01b0316151590565b80826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a4505050565b80826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b60006001600160a01b0384163b15610c0557604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290610b53903390899088908890600401610fed565b6020604051808303816000875af1925050508015610b8e575060408051601f3d908101601f19168201909252610b8b9181019061102a565b60015b610beb573d808015610bbc576040519150601f19603f3d011682016040523d82523d6000602084013e610bc1565b606091505b508051600003610be357604051626b5e2960e61b815260040160405180910390fd5b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610643565b506001949350505050565b816001600160a01b0316836001600160a01b03167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610c57911515815260200190565b60405180910390a3505050565b6001600160e01b03198116811461040f57600080fd5b600060208284031215610c8c57600080fd5b813561051a81610c64565b6000815180845260005b81811015610cbd57602081850181015186830182015201610ca1565b506000602082860101526020601f19601f83011685010191505092915050565b60208152600061051a6020830184610c97565b600060208284031215610d0257600080fd5b5035919050565b80356001600160a01b0381168114610d2057600080fd5b919050565b60008060408385031215610d3857600080fd5b610d4183610d09565b946020939093013593505050565b600080600060608486031215610d6457600080fd5b610d6d84610d09565b9250610d7b60208501610d09565b9150604084013590509250925092565b600060208284031215610d9d57600080fd5b61051a82610d09565b634e487b7160e01b600052604160045260246000fd5b600082601f830112610dcd57600080fd5b813567ffffffffffffffff80821115610de857610de8610da6565b604051601f8301601f19908116603f01168101908282118183101715610e1057610e10610da6565b81604052838152866020858801011115610e2957600080fd5b836020870160208301376000602085830101528094505050505092915050565b600080600060608486031215610e5e57600080fd5b610e6784610d09565b925060208401359150604084013567ffffffffffffffff811115610e8a57600080fd5b610e9686828701610dbc565b9150509250925092565b60008060408385031215610eb357600080fd5b610ebc83610d09565b915060208301358015158114610ed157600080fd5b809150509250929050565b60008060008060808587031215610ef257600080fd5b610efb85610d09565b9350610f0960208601610d09565b925060408501359150606085013567ffffffffffffffff811115610f2c57600080fd5b610f3887828801610dbc565b91505092959194509250565b60008060408385031215610f5757600080fd5b610f6083610d09565b9150610f6e60208401610d09565b90509250929050565b600181811c90821680610f8b57607f821691505b602082108103610fab57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b8181038181111561031957610319610fb1565b8082018082111561031957610319610fb1565b6001600160a01b038581168252841660208201526040810183905260806060820181905260009061102090830184610c97565b9695505050505050565b60006020828403121561103c57600080fd5b815161051a81610c6456fe9dcac861a288165fa5a7e007597a30abcd2d73e174280cf7c6967f5a922a4439a2646970667358221220edfb641edd96a18d8458d1c2982a824214cd1bb9fd5e7b4bdaed0ad87c1a8dce64736f6c63430008120033",
    "sourceMap": "144:460:106:-:0;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "",
    "sourceMap": "144:460:106:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1405:76:62;;;;;;:::i;:::-;-1:-1:-1;1473:4:62;;1405:76;;;;565:14:112;;558:22;540:41;;528:2;513:18;1405:76:62;;;;;;;;2365:153;;;:::i;:::-;;;;;;;:::i;3070:121::-;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;1594:32:112;;;1576:51;;1564:2;1549:18;3070:121:62;1430:203:112;2687:377:62;;;;;;:::i;:::-;;:::i;:::-;;3503:248;;;;;;:::i;:::-;;:::i;187:93:106:-;;;;;;:::i;:::-;;:::i;3757:140:62:-;;;;;;:::i;:::-;;:::i;286:77:106:-;;;;;;:::i;:::-;;:::i;2246:113:62:-;;;;;;:::i;:::-;;:::i;1964:276::-;;;;;;:::i;:::-;;:::i;:::-;;;2745:25:112;;;2733:2;2718:18;1964:276:62;2599:177:112;476:126:106;;;;;;:::i;:::-;;:::i;2524:157:62:-;;;:::i;369:101:106:-;;;;;;:::i;:::-;;:::i;3197:142:62:-;;;;;;:::i;:::-;;:::i;3903:280::-;;;;;;:::i;:::-;;:::i;3345:152::-;;;;;;:::i;:::-;;:::i;2365:153::-;-1:-1:-1;;;;;;;;;;;2497:14:62;;2410:13;;510:48:54;;;2497:14:62;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2365:153;:::o;3070:121::-;3137:7;3163:21;3176:7;3163:12;:21::i;:::-;3156:28;3070:121;-1:-1:-1;;3070:121:62:o;2687:377::-;2758:13;2774:16;2782:7;2774;:16::i;:::-;2758:32;;2810:5;-1:-1:-1;;;;;2804:11:62;:2;-1:-1:-1;;;;;2804:11:62;;2800:79;;2838:30;;-1:-1:-1;;;2838:30:62;;;;;;;;;;;2800:79;2892:10;-1:-1:-1;;;;;2892:19:62;;;;;;:59;;;2916:35;2933:5;2940:10;2916:16;:35::i;:::-;2915:36;2892:59;2888:138;;;2974:41;;-1:-1:-1;;;2974:41:62;;;;;;;;;;;2888:138;3036:21;3045:2;3049:7;3036:8;:21::i;:::-;2748:316;2687:377;;:::o;3503:248::-;3598:39;3617:10;3629:7;3598:18;:39::i;:::-;3593:113;;3660:35;;-1:-1:-1;;;3660:35:62;;;;;;;;;;;3593:113;3716:28;3726:4;3732:2;3736:7;3716:9;:28::i;187:93:106:-;255:18;261:2;265:7;255:5;:18::i;:::-;187:93;;:::o;3757:140:62:-;3851:39;3868:4;3874:2;3878:7;3851:39;;;;;;;;;;;;:16;:39::i;286:77:106:-;342:14;348:7;342:5;:14::i;:::-;286:77;:::o;2246:113:62:-;2309:7;2335:17;2344:7;2335:8;:17::i;1964:276::-;2027:7;-1:-1:-1;;;;;;;;;;;;;;;;2112:19:62;;2108:92;;2154:35;;-1:-1:-1;;;2154:35:62;;;;;;;;;;;2108:92;-1:-1:-1;;;;;2216:17:62;;;;;;;:10;;;;:17;;-1:-1:-1;2216:17:62;;;;;1964:276::o;476:126:106:-;567:28;577:2;581:7;590:4;567:9;:28::i;2524:157:62:-;2665:9;2658:16;;2571:13;;-1:-1:-1;;;;;;;;;;;510:48:54;2658:16:62;;;:::i;369:101:106:-;441:22;451:2;455:7;441:9;:22::i;3197:142:62:-;3282:50;3301:10;3313:8;3323;3282:18;:50::i;3903:280::-;4021:39;4040:10;4052:7;4021:18;:39::i;:::-;4016:113;;4083:35;;-1:-1:-1;;;4083:35:62;;;;;;;;;;;4016:113;4138:38;4152:4;4158:2;4162:7;4171:4;4138:13;:38::i;:::-;3903:280;;;;:::o;3345:152::-;3433:4;3456:34;3474:5;3481:8;3456:17;:34::i;:::-;3449:41;3345:152;-1:-1:-1;;;3345:152:62:o;5221:228:63:-;5283:7;5307:16;5315:7;5307;:16::i;:::-;5302:77;;5346:22;;-1:-1:-1;;;5346:22:63;;;;;;;;;;;5302:77;-1:-1:-1;5396:46:63;;;;:37;:46;;;;;;-1:-1:-1;;;;;5396:46:63;;5221:228::o;3901:219::-;3967:25;4029;;;:16;:25;;;;;:30;;-1:-1:-1;;;;;;4029:30:63;-1:-1:-1;;;;;4029:30:63;;;;;-1:-1:-1;;;;;;;;;;;4069:44:63;4082:17;4029:25;4082:8;:17::i;:::-;4101:2;4105:7;4069:12;:44::i;4966:249::-;5051:4;5067:13;5083:17;5092:7;5083:8;:17::i;:::-;5067:33;;5129:5;-1:-1:-1;;;;;5118:16:63;:7;-1:-1:-1;;;;;5118:16:63;;:53;;;;5138:33;5156:5;5163:7;5138:17;:33::i;:::-;5118:89;;;;5200:7;-1:-1:-1;;;;;5175:32:63;:21;5188:7;5175:12;:21::i;:::-;-1:-1:-1;;;;;5175:32:63;;5118:89;5110:98;4966:249;-1:-1:-1;;;;4966:249:63:o;3328:567::-;-1:-1:-1;;;;;;;;;;;;;;;;3475:25:63;;:17;3484:7;3475:8;:17::i;:::-;-1:-1:-1;;;;;3475:25:63;;3471:97;;3523:34;;-1:-1:-1;;;3523:34:63;;;;;;;;;;;3471:97;-1:-1:-1;;;;;3581:16:63;;3577:86;;3620:32;;-1:-1:-1;;;3620:32:63;;;;;;;;;;;3577:86;3724:29;3741:1;3745:7;3724:8;:29::i;:::-;-1:-1:-1;;;;;3764:16:63;;;;;;:10;;;:16;;;;;:21;;3784:1;;3764:16;:21;;3784:1;;3764:21;:::i;:::-;;;;-1:-1:-1;;;;;;;3795:14:63;;;;;;:10;;;:14;;;;;:19;;3813:1;;3795:14;:19;;3813:1;;3795:19;:::i;:::-;;;;-1:-1:-1;;3824:17:63;;;;:8;;;:17;;;;;:22;;-1:-1:-1;;;;;;3824:22:63;-1:-1:-1;;;;;3824:22:63;;;;;3857:31;3870:4;3824:22;:17;3857:12;:31::i;2566:412::-;-1:-1:-1;;;;;;;;;;;;;;;;2695:16:63;;2691:82;;2734:28;;-1:-1:-1;;;2734:28:63;;;;;;;;;;;2691:82;2786:16;2794:7;2786;:16::i;:::-;2782:80;;;2825:26;;-1:-1:-1;;;2825:26:63;;;;;;;;;;;2782:80;-1:-1:-1;;;;;2872:14:63;;;;;;:10;;;:14;;;;;:19;;2890:1;;2872:14;:19;;2890:1;;2872:19;:::i;:::-;;;;-1:-1:-1;;2901:17:63;;;;:8;;;:17;;;;;:22;;-1:-1:-1;;;;;;2901:22:63;-1:-1:-1;;;;;2901:22:63;;;;;2934:37;;2901:22;:17;2934:12;:37::i;2984:338::-;-1:-1:-1;;;;;;;;;;;3035:25:63;3113:17;3122:7;3113:8;:17::i;:::-;3097:33;;3168:29;3185:1;3189:7;3168:8;:29::i;:::-;-1:-1:-1;;;;;3208:17:63;;;;;;:10;;;:17;;;;;:22;;3229:1;;3208:17;:22;;3229:1;;3208:22;:::i;:::-;;;;-1:-1:-1;;3247:17:63;;;;:8;;;:17;;;;;3240:24;;-1:-1:-1;;;;;;3240:24:63;;;3275:40;;3288:5;;3256:7;3275:12;:40::i;4671:289::-;4729:7;4826:17;;;:8;:17;;;;;;-1:-1:-1;;;;;;;;;;;510:48:54;-1:-1:-1;;;;;4826:17:63;;4853:79;;4899:22;;-1:-1:-1;;;4899:22:63;;;;;;;;;;;2302:258;2388:18;2394:2;2398:7;2388:5;:18::i;:::-;2421:53;2452:1;2456:2;2460:7;2469:4;2421:22;:53::i;:::-;2416:138;;2497:46;;-1:-1:-1;;;2497:46:63;;;;;;;;;;;2196:100;2263:26;2273:2;2277:7;2263:26;;;;;;;;;;;;:9;:26::i;4126:353::-;-1:-1:-1;;;;;;;;;;;;;;;;4287:17:63;;;;;;;4283:78;;4327:23;;-1:-1:-1;;;4327:23:63;;;;;;;;;;;4283:78;-1:-1:-1;;;;;4370:26:63;;;;;;;:19;;;:26;;;;;;;;:36;;;;;;;;;:47;;-1:-1:-1;;4370:47:63;;;;;;;4427:45;4370:26;:36;:47;4427:18;:45::i;1910:280::-;2014:28;2024:4;2030:2;2034:7;2014:9;:28::i;:::-;2057:47;2080:4;2086:2;2090:7;2099:4;2057:22;:47::i;:::-;2052:132;;2127:46;;-1:-1:-1;;;2127:46:63;;;;;;;;;;;5455:170;-1:-1:-1;;;;;5561:47:63;;;5538:4;5561:47;;;:40;:47;;;;;;;;:57;;;;;;;;;;;;;;;5455:170::o;4485:180::-;4542:4;4627:17;;;:8;:17;;;;;;-1:-1:-1;;;;;4627:17:63;:31;;;4485:180::o;1633:154:62:-;1772:7;1762:8;-1:-1:-1;;;;;1746:34:62;1755:5;-1:-1:-1;;;;;1746:34:62;;;;;;;;;;;1633:154;;;:::o;1487:140::-;1612:7;1608:2;-1:-1:-1;;;;;1593:27:62;1602:4;-1:-1:-1;;;;;1593:27:62;;;;;;;;;;;1487:140;;;:::o;1035:869:63:-;1185:4;-1:-1:-1;;;;;1205:13:63;;1465:19:10;:23;1201:697:63;;1240:69;;-1:-1:-1;;;1240:69:63;;-1:-1:-1;;;;;1240:36:63;;;;;:69;;1277:10;;1289:4;;1295:7;;1304:4;;1240:69;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1240:69:63;;;;;;;;-1:-1:-1;;1240:69:63;;;;;;;;;;;;:::i;:::-;;;1236:610;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1506:6;:13;1523:1;1506:18;1502:330;;1555:46;;-1:-1:-1;;;1555:46:63;;;;;;;;;;;1502:330;1784:6;1778:13;1769:6;1765:2;1761:15;1754:38;1236:610;-1:-1:-1;;;;;;1389:51:63;-1:-1:-1;;;1389:51:63;;-1:-1:-1;1382:58:63;;1201:697;-1:-1:-1;1883:4:63;1035:869;;;;;;:::o;1793:165:62:-;1932:8;-1:-1:-1;;;;;1910:41:62;1925:5;-1:-1:-1;;;;;1910:41:62;;1942:8;1910:41;;;;565:14:112;558:22;540:41;;528:2;513:18;;400:187;1910:41:62;;;;;;;;1793:165;;;:::o;14:131:112:-;-1:-1:-1;;;;;;88:32:112;;78:43;;68:71;;135:1;132;125:12;150:245;208:6;261:2;249:9;240:7;236:23;232:32;229:52;;;277:1;274;267:12;229:52;316:9;303:23;335:30;359:5;335:30;:::i;592:423::-;634:3;672:5;666:12;699:6;694:3;687:19;724:1;734:162;748:6;745:1;742:13;734:162;;;810:4;866:13;;;862:22;;856:29;838:11;;;834:20;;827:59;763:12;734:162;;;738:3;941:1;934:4;925:6;920:3;916:16;912:27;905:38;1004:4;997:2;993:7;988:2;980:6;976:15;972:29;967:3;963:39;959:50;952:57;;;592:423;;;;:::o;1020:220::-;1169:2;1158:9;1151:21;1132:4;1189:45;1230:2;1219:9;1215:18;1207:6;1189:45;:::i;1245:180::-;1304:6;1357:2;1345:9;1336:7;1332:23;1328:32;1325:52;;;1373:1;1370;1363:12;1325:52;-1:-1:-1;1396:23:112;;1245:180;-1:-1:-1;1245:180:112:o;1638:173::-;1706:20;;-1:-1:-1;;;;;1755:31:112;;1745:42;;1735:70;;1801:1;1798;1791:12;1735:70;1638:173;;;:::o;1816:254::-;1884:6;1892;1945:2;1933:9;1924:7;1920:23;1916:32;1913:52;;;1961:1;1958;1951:12;1913:52;1984:29;2003:9;1984:29;:::i;:::-;1974:39;2060:2;2045:18;;;;2032:32;;-1:-1:-1;;;1816:254:112:o;2075:328::-;2152:6;2160;2168;2221:2;2209:9;2200:7;2196:23;2192:32;2189:52;;;2237:1;2234;2227:12;2189:52;2260:29;2279:9;2260:29;:::i;:::-;2250:39;;2308:38;2342:2;2331:9;2327:18;2308:38;:::i;:::-;2298:48;;2393:2;2382:9;2378:18;2365:32;2355:42;;2075:328;;;;;:::o;2408:186::-;2467:6;2520:2;2508:9;2499:7;2495:23;2491:32;2488:52;;;2536:1;2533;2526:12;2488:52;2559:29;2578:9;2559:29;:::i;2781:127::-;2842:10;2837:3;2833:20;2830:1;2823:31;2873:4;2870:1;2863:15;2897:4;2894:1;2887:15;2913:718;2955:5;3008:3;3001:4;2993:6;2989:17;2985:27;2975:55;;3026:1;3023;3016:12;2975:55;3062:6;3049:20;3088:18;3125:2;3121;3118:10;3115:36;;;3131:18;;:::i;:::-;3206:2;3200:9;3174:2;3260:13;;-1:-1:-1;;3256:22:112;;;3280:2;3252:31;3248:40;3236:53;;;3304:18;;;3324:22;;;3301:46;3298:72;;;3350:18;;:::i;:::-;3390:10;3386:2;3379:22;3425:2;3417:6;3410:18;3471:3;3464:4;3459:2;3451:6;3447:15;3443:26;3440:35;3437:55;;;3488:1;3485;3478:12;3437:55;3552:2;3545:4;3537:6;3533:17;3526:4;3518:6;3514:17;3501:54;3599:1;3592:4;3587:2;3579:6;3575:15;3571:26;3564:37;3619:6;3610:15;;;;;;2913:718;;;;:::o;3636:462::-;3722:6;3730;3738;3791:2;3779:9;3770:7;3766:23;3762:32;3759:52;;;3807:1;3804;3797:12;3759:52;3830:29;3849:9;3830:29;:::i;:::-;3820:39;;3906:2;3895:9;3891:18;3878:32;3868:42;;3961:2;3950:9;3946:18;3933:32;3988:18;3980:6;3977:30;3974:50;;;4020:1;4017;4010:12;3974:50;4043:49;4084:7;4075:6;4064:9;4060:22;4043:49;:::i;:::-;4033:59;;;3636:462;;;;;:::o;4103:347::-;4168:6;4176;4229:2;4217:9;4208:7;4204:23;4200:32;4197:52;;;4245:1;4242;4235:12;4197:52;4268:29;4287:9;4268:29;:::i;:::-;4258:39;;4347:2;4336:9;4332:18;4319:32;4394:5;4387:13;4380:21;4373:5;4370:32;4360:60;;4416:1;4413;4406:12;4360:60;4439:5;4429:15;;;4103:347;;;;;:::o;4455:537::-;4550:6;4558;4566;4574;4627:3;4615:9;4606:7;4602:23;4598:33;4595:53;;;4644:1;4641;4634:12;4595:53;4667:29;4686:9;4667:29;:::i;:::-;4657:39;;4715:38;4749:2;4738:9;4734:18;4715:38;:::i;:::-;4705:48;;4800:2;4789:9;4785:18;4772:32;4762:42;;4855:2;4844:9;4840:18;4827:32;4882:18;4874:6;4871:30;4868:50;;;4914:1;4911;4904:12;4868:50;4937:49;4978:7;4969:6;4958:9;4954:22;4937:49;:::i;:::-;4927:59;;;4455:537;;;;;;;:::o;4997:260::-;5065:6;5073;5126:2;5114:9;5105:7;5101:23;5097:32;5094:52;;;5142:1;5139;5132:12;5094:52;5165:29;5184:9;5165:29;:::i;:::-;5155:39;;5213:38;5247:2;5236:9;5232:18;5213:38;:::i;:::-;5203:48;;4997:260;;;;;:::o;5262:380::-;5341:1;5337:12;;;;5384;;;5405:61;;5459:4;5451:6;5447:17;5437:27;;5405:61;5512:2;5504:6;5501:14;5481:18;5478:38;5475:161;;5558:10;5553:3;5549:20;5546:1;5539:31;5593:4;5590:1;5583:15;5621:4;5618:1;5611:15;5475:161;;5262:380;;;:::o;5647:127::-;5708:10;5703:3;5699:20;5696:1;5689:31;5739:4;5736:1;5729:15;5763:4;5760:1;5753:15;5779:128;5846:9;;;5867:11;;;5864:37;;;5881:18;;:::i;5912:125::-;5977:9;;;5998:10;;;5995:36;;;6011:18;;:::i;6042:489::-;-1:-1:-1;;;;;6311:15:112;;;6293:34;;6363:15;;6358:2;6343:18;;6336:43;6410:2;6395:18;;6388:34;;;6458:3;6453:2;6438:18;;6431:31;;;6236:4;;6479:46;;6505:19;;6497:6;6479:46;:::i;:::-;6471:54;6042:489;-1:-1:-1;;;;;;6042:489:112:o;6536:249::-;6605:6;6658:2;6646:9;6637:7;6633:23;6629:32;6626:52;;;6674:1;6671;6664:12;6626:52;6706:9;6700:16;6725:30;6749:5;6725:30;:::i",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "approve(address,uint256)": "095ea7b3",
    "balanceOf(address)": "70a08231",
    "burn(uint256)": "42966c68",
    "getApproved(uint256)": "081812fc",
    "isApprovedForAll(address,address)": "e985e9c5",
    "mint(address,uint256)": "40c10f19",
    "name()": "06fdde03",
    "ownerOf(uint256)": "6352211e",
    "safeMint(address,uint256)": "a1448194",
    "safeMint(address,uint256,bytes)": "8832e6e3",
    "safeTransferFrom(address,address,uint256)": "42842e0e",
    "safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
    "setApprovalForAll(address,bool)": "a22cb465",
    "supportsInterface(bytes4)": "01ffc9a7",
    "symbol()": "95d89b41",
    "transferFrom(address,address,uint256)": "23b872dd"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ERC721AddressZeroIsNotAValidOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC721ApprovalToCurrentOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC721ApproveToCaller\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC721CallerIsNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC721CallerIsNotOwnerNorApprovedForAll\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC721InvalidTokenId\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC721MintToTheZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC721TokenAlreadyMinted\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC721TransferFromIncorrectOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC721TransferToNonERC721ReceiverImplementer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC721TransferToTheZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Unauthorized\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeMint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeMint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"don't use this method for inclusion in the facet function selectors     prefer the LibDiamond implementation for this method     it is included here for IERC721-compliance\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"test/DiamondERC721/MockERC721.sol\":\"MockERC721\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/=node_modules/@openzeppelin/\",\":diamond/=node_modules/diamond/\",\":ds-test/=node_modules/ds-test/src/\",\":forge-std/=node_modules/forge-std/src/\",\":solmate/=node_modules/solmate/\"]},\"sources\":{\"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xab28a56179c1db258c9bf5235b382698cb650debecb51b23d12be9e241374b68\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://daae589a9d6fa7e55f99f86c0a16796ca490f243fb3693632c3711c0646c1d56\",\"dweb:/ipfs/QmR3zpd7wNw3rcUdekwiv6FYHJqksuTCXLVioTxu6Fbxk3\"]},\"node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"node_modules/@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269\",\"dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"src/DataStructure/ERC721Errors.sol\":{\"keccak256\":\"0x0ee13f898a2d61d6662ef236db05001d14086ff4431bef2ae89c1979819d38d0\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://2e1878fe70994d02159dbf4a5a9c79b3665feaae0d08ff420b3f00cb8ed6355a\",\"dweb:/ipfs/QmNYJDoien8bUQFYuc75GyVGVTYuiUagF4RRUSGTTmZNH7\"]},\"src/DataStructure/Global.sol\":{\"keccak256\":\"0x9596c1bdf1271dd447db6a8f26ca493253674e252c9f63a7bc13c8689a7b6e49\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://3ff822127c6c674400e9730466eb6832d19a72eaf991f3bbf62d251a6e2b49d5\",\"dweb:/ipfs/QmZPGbWwS7rTPF3NiyjivxDseeBW64GhfkGvVNuaCbnzDv\"]},\"src/DataStructure/Objects.sol\":{\"keccak256\":\"0x251dd6c3f36c5a2c8a6a867aa29c9ba8b4bb7f2ec1a7321d630fea19f6bbd83a\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://a7f620222a6b6d909e8aa2d7191200b312345b6c704eecdf40729982e238f44e\",\"dweb:/ipfs/QmTikrgA5SKJrsJanid1atHw1M7opEvwuGKNRQTbjeM4sq\"]},\"src/DataStructure/Storage.sol\":{\"keccak256\":\"0x8f99f5f94641c826d0b4bd2dadb065745ff877b195fb1eb7392362a026d01380\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://f2c2362ee8472e6076f7f18a51264c96e63a346e61da6a7234abe5e3c034de38\",\"dweb:/ipfs/QmW59HJM49LDieB2svjKnYzo7hdYKG24rLKgb7AfiXht4z\"]},\"src/SupplyPositionLogic/DiamondERC721.sol\":{\"keccak256\":\"0xdb5734014944ffbfc70b937c0cb2ab310d15c7ceb93e852bf5c6aef64c24584b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://51bc9d846048e67e83c9e708aedd5f68ce240bd87c1c4a68526ee224553c0279\",\"dweb:/ipfs/QmUWcdYokYYxTNpJtSwM22Q4WBKxJEjfhtyAU97NFh1VdZ\"]},\"src/SupplyPositionLogic/NFTUtils.sol\":{\"keccak256\":\"0xc1fdc762292d11504da9d1b999d6364d8c76b721c8f6f7369e0030c9dae9af13\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dc9d2a3636065c11ad95bc669381dae82218909711ed54e31ee3085671ade192\",\"dweb:/ipfs/QmfX1zJes16PDd9NUGcSNYBMRvaykMhyaEMEQsmMugVtP4\"]},\"test/DiamondERC721/MockERC721.sol\":{\"keccak256\":\"0x150d656f90ded6aece0fce93d3176a095b510c9f378446093e6cae5e79921b94\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://a039a375caac7003cbd3528615082af31833a215fdc736a525ee81cdadfd87bc\",\"dweb:/ipfs/QmdBTB3jKpeMzwnZTKC58gdAZqVMWAnmY2hg78rCLBS4e4\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.18+commit.87f61d96"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "type": "error",
          "name": "ERC721AddressZeroIsNotAValidOwner"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ERC721ApprovalToCurrentOwner"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ERC721ApproveToCaller"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ERC721CallerIsNotOwnerNorApproved"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ERC721CallerIsNotOwnerNorApprovedForAll"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ERC721InvalidTokenId"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ERC721MintToTheZeroAddress"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ERC721TokenAlreadyMinted"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ERC721TransferFromIncorrectOwner"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ERC721TransferToNonERC721ReceiverImplementer"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ERC721TransferToTheZeroAddress"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Unauthorized"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "approved",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Approval",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bool",
              "name": "approved",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ApprovalForAll",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Transfer",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "approve"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "burn"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getApproved",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isApprovedForAll",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "mint"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "ownerOf",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "safeMint"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "safeMint"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "safeTransferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "safeTransferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "approved",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setApprovalForAll"
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferFrom"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "approve(address,uint256)": {
            "details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
          },
          "balanceOf(address)": {
            "details": "Returns the number of tokens in ``owner``'s account."
          },
          "getApproved(uint256)": {
            "details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
          },
          "isApprovedForAll(address,address)": {
            "details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
          },
          "ownerOf(uint256)": {
            "details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
          },
          "safeTransferFrom(address,address,uint256)": {
            "details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
          },
          "safeTransferFrom(address,address,uint256,bytes)": {
            "details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
          },
          "supportsInterface(bytes4)": {
            "details": "don't use this method for inclusion in the facet function selectors     prefer the LibDiamond implementation for this method     it is included here for IERC721-compliance"
          },
          "transferFrom(address,address,uint256)": {
            "details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin/=node_modules/@openzeppelin/",
        ":diamond/=node_modules/diamond/",
        ":ds-test/=node_modules/ds-test/src/",
        ":forge-std/=node_modules/forge-std/src/",
        ":solmate/=node_modules/solmate/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "test/DiamondERC721/MockERC721.sol": "MockERC721"
      },
      "libraries": {}
    },
    "sources": {
      "node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b",
        "urls": [
          "bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34",
          "dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol": {
        "keccak256": "0xab28a56179c1db258c9bf5235b382698cb650debecb51b23d12be9e241374b68",
        "urls": [
          "bzz-raw://daae589a9d6fa7e55f99f86c0a16796ca490f243fb3693632c3711c0646c1d56",
          "dweb:/ipfs/QmR3zpd7wNw3rcUdekwiv6FYHJqksuTCXLVioTxu6Fbxk3"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
        "keccak256": "0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da",
        "urls": [
          "bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708",
          "dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Address.sol": {
        "keccak256": "0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1",
        "urls": [
          "bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269",
          "dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1",
        "urls": [
          "bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f",
          "dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"
        ],
        "license": "MIT"
      },
      "src/DataStructure/ERC721Errors.sol": {
        "keccak256": "0x0ee13f898a2d61d6662ef236db05001d14086ff4431bef2ae89c1979819d38d0",
        "urls": [
          "bzz-raw://2e1878fe70994d02159dbf4a5a9c79b3665feaae0d08ff420b3f00cb8ed6355a",
          "dweb:/ipfs/QmNYJDoien8bUQFYuc75GyVGVTYuiUagF4RRUSGTTmZNH7"
        ],
        "license": "UNLICENSED"
      },
      "src/DataStructure/Global.sol": {
        "keccak256": "0x9596c1bdf1271dd447db6a8f26ca493253674e252c9f63a7bc13c8689a7b6e49",
        "urls": [
          "bzz-raw://3ff822127c6c674400e9730466eb6832d19a72eaf991f3bbf62d251a6e2b49d5",
          "dweb:/ipfs/QmZPGbWwS7rTPF3NiyjivxDseeBW64GhfkGvVNuaCbnzDv"
        ],
        "license": "UNLICENSED"
      },
      "src/DataStructure/Objects.sol": {
        "keccak256": "0x251dd6c3f36c5a2c8a6a867aa29c9ba8b4bb7f2ec1a7321d630fea19f6bbd83a",
        "urls": [
          "bzz-raw://a7f620222a6b6d909e8aa2d7191200b312345b6c704eecdf40729982e238f44e",
          "dweb:/ipfs/QmTikrgA5SKJrsJanid1atHw1M7opEvwuGKNRQTbjeM4sq"
        ],
        "license": "UNLICENSED"
      },
      "src/DataStructure/Storage.sol": {
        "keccak256": "0x8f99f5f94641c826d0b4bd2dadb065745ff877b195fb1eb7392362a026d01380",
        "urls": [
          "bzz-raw://f2c2362ee8472e6076f7f18a51264c96e63a346e61da6a7234abe5e3c034de38",
          "dweb:/ipfs/QmW59HJM49LDieB2svjKnYzo7hdYKG24rLKgb7AfiXht4z"
        ],
        "license": "UNLICENSED"
      },
      "src/SupplyPositionLogic/DiamondERC721.sol": {
        "keccak256": "0xdb5734014944ffbfc70b937c0cb2ab310d15c7ceb93e852bf5c6aef64c24584b",
        "urls": [
          "bzz-raw://51bc9d846048e67e83c9e708aedd5f68ce240bd87c1c4a68526ee224553c0279",
          "dweb:/ipfs/QmUWcdYokYYxTNpJtSwM22Q4WBKxJEjfhtyAU97NFh1VdZ"
        ],
        "license": "MIT"
      },
      "src/SupplyPositionLogic/NFTUtils.sol": {
        "keccak256": "0xc1fdc762292d11504da9d1b999d6364d8c76b721c8f6f7369e0030c9dae9af13",
        "urls": [
          "bzz-raw://dc9d2a3636065c11ad95bc669381dae82218909711ed54e31ee3085671ade192",
          "dweb:/ipfs/QmfX1zJes16PDd9NUGcSNYBMRvaykMhyaEMEQsmMugVtP4"
        ],
        "license": "MIT"
      },
      "test/DiamondERC721/MockERC721.sol": {
        "keccak256": "0x150d656f90ded6aece0fce93d3176a095b510c9f378446093e6cae5e79921b94",
        "urls": [
          "bzz-raw://a039a375caac7003cbd3528615082af31833a215fdc736a525ee81cdadfd87bc",
          "dweb:/ipfs/QmdBTB3jKpeMzwnZTKC58gdAZqVMWAnmY2hg78rCLBS4e4"
        ],
        "license": "UNLICENSED"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "test/DiamondERC721/MockERC721.sol",
    "id": 50164,
    "exportedSymbols": {
      "DiamondERC721": [
        37782
      ],
      "MockERC721": [
        50163
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:566:106",
    "nodes": [
      {
        "id": 50106,
        "nodeType": "PragmaDirective",
        "src": "39:23:106",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".18"
        ]
      },
      {
        "id": 50108,
        "nodeType": "ImportDirective",
        "src": "64:78:106",
        "nodes": [],
        "absolutePath": "src/SupplyPositionLogic/DiamondERC721.sol",
        "file": "../../src/SupplyPositionLogic/DiamondERC721.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 50164,
        "sourceUnit": 37783,
        "symbolAliases": [
          {
            "foreign": {
              "id": 50107,
              "name": "DiamondERC721",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 37782,
              "src": "72:13:106",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 50163,
        "nodeType": "ContractDefinition",
        "src": "144:460:106",
        "nodes": [
          {
            "id": 50123,
            "nodeType": "FunctionDefinition",
            "src": "187:93:106",
            "nodes": [],
            "body": {
              "id": 50122,
              "nodeType": "Block",
              "src": "245:35:106",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 50118,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50112,
                        "src": "261:2:106",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 50119,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50114,
                        "src": "265:7:106",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 50117,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38023,
                      "src": "255:5:106",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 50120,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "255:18:106",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50121,
                  "nodeType": "ExpressionStatement",
                  "src": "255:18:106"
                }
              ]
            },
            "functionSelector": "40c10f19",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nameLocation": "196:4:106",
            "parameters": {
              "id": 50115,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 50112,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "209:2:106",
                  "nodeType": "VariableDeclaration",
                  "scope": 50123,
                  "src": "201:10:106",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 50111,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "201:7:106",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 50114,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "221:7:106",
                  "nodeType": "VariableDeclaration",
                  "scope": 50123,
                  "src": "213:15:106",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 50113,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "213:7:106",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "200:29:106"
            },
            "returnParameters": {
              "id": 50116,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "245:0:106"
            },
            "scope": 50163,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 50133,
            "nodeType": "FunctionDefinition",
            "src": "286:77:106",
            "nodes": [],
            "body": {
              "id": 50132,
              "nodeType": "Block",
              "src": "332:31:106",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 50129,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50125,
                        "src": "348:7:106",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 50128,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38072,
                      "src": "342:5:106",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 50130,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "342:14:106",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50131,
                  "nodeType": "ExpressionStatement",
                  "src": "342:14:106"
                }
              ]
            },
            "functionSelector": "42966c68",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "burn",
            "nameLocation": "295:4:106",
            "parameters": {
              "id": 50126,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 50125,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "308:7:106",
                  "nodeType": "VariableDeclaration",
                  "scope": 50133,
                  "src": "300:15:106",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 50124,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "300:7:106",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "299:17:106"
            },
            "returnParameters": {
              "id": 50127,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "332:0:106"
            },
            "scope": 50163,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 50146,
            "nodeType": "FunctionDefinition",
            "src": "369:101:106",
            "nodes": [],
            "body": {
              "id": 50145,
              "nodeType": "Block",
              "src": "431:39:106",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 50141,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50135,
                        "src": "451:2:106",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 50142,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50137,
                        "src": "455:7:106",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 50140,
                      "name": "_safeMint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        37935,
                        37965
                      ],
                      "referencedDeclaration": 37935,
                      "src": "441:9:106",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 50143,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "441:22:106",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50144,
                  "nodeType": "ExpressionStatement",
                  "src": "441:22:106"
                }
              ]
            },
            "functionSelector": "a1448194",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "safeMint",
            "nameLocation": "378:8:106",
            "parameters": {
              "id": 50138,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 50135,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "395:2:106",
                  "nodeType": "VariableDeclaration",
                  "scope": 50146,
                  "src": "387:10:106",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 50134,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "387:7:106",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 50137,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "407:7:106",
                  "nodeType": "VariableDeclaration",
                  "scope": 50146,
                  "src": "399:15:106",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 50136,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "399:7:106",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "386:29:106"
            },
            "returnParameters": {
              "id": 50139,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "431:0:106"
            },
            "scope": 50163,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 50162,
            "nodeType": "FunctionDefinition",
            "src": "476:126:106",
            "nodes": [],
            "body": {
              "id": 50161,
              "nodeType": "Block",
              "src": "557:45:106",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 50156,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50148,
                        "src": "577:2:106",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 50157,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50150,
                        "src": "581:7:106",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 50158,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50152,
                        "src": "590:4:106",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 50155,
                      "name": "_safeMint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        37935,
                        37965
                      ],
                      "referencedDeclaration": 37965,
                      "src": "567:9:106",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256,bytes memory)"
                      }
                    },
                    "id": 50159,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "567:28:106",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50160,
                  "nodeType": "ExpressionStatement",
                  "src": "567:28:106"
                }
              ]
            },
            "functionSelector": "8832e6e3",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "safeMint",
            "nameLocation": "485:8:106",
            "parameters": {
              "id": 50153,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 50148,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "502:2:106",
                  "nodeType": "VariableDeclaration",
                  "scope": 50162,
                  "src": "494:10:106",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 50147,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "494:7:106",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 50150,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "514:7:106",
                  "nodeType": "VariableDeclaration",
                  "scope": 50162,
                  "src": "506:15:106",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 50149,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "506:7:106",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 50152,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "536:4:106",
                  "nodeType": "VariableDeclaration",
                  "scope": 50162,
                  "src": "523:17:106",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 50151,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "523:5:106",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "493:48:106"
            },
            "returnParameters": {
              "id": 50154,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "557:0:106"
            },
            "scope": 50163,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 50109,
              "name": "DiamondERC721",
              "nameLocations": [
                "167:13:106"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 37782,
              "src": "167:13:106"
            },
            "id": 50110,
            "nodeType": "InheritanceSpecifier",
            "src": "167:13:106"
          }
        ],
        "canonicalName": "MockERC721",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          50163,
          37782,
          38349,
          1732,
          3267
        ],
        "name": "MockERC721",
        "nameLocation": "153:10:106",
        "scope": 50164,
        "usedErrors": [
          36445,
          36447,
          36449,
          36451,
          36453,
          36455,
          36457,
          36459,
          36461,
          36463,
          36465,
          37490
        ]
      }
    ],
    "license": "UNLICENSED"
  },
  "id": 106
}