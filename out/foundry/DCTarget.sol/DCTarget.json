{
  "abi": [
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "contract IERC20",
              "name": "assetToLend",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "loanToValue",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "duration",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "expirationDate",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "tranche",
              "type": "uint256"
            },
            {
              "components": [
                {
                  "internalType": "contract IERC721",
                  "name": "implem",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                }
              ],
              "internalType": "struct NFToken",
              "name": "collateral",
              "type": "tuple"
            }
          ],
          "internalType": "struct Offer",
          "name": "offer",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "contract IERC721",
              "name": "implem",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            }
          ],
          "internalType": "struct NFToken",
          "name": "providedNft",
          "type": "tuple"
        }
      ],
      "name": "BadCollateral",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "loanId",
          "type": "uint256"
        }
      ],
      "name": "BorrowerAlreadyClaimed",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "admin",
          "type": "address"
        }
      ],
      "name": "CallerIsNotOwner",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "endDate",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "loanId",
          "type": "uint256"
        }
      ],
      "name": "CollateralIsNotLiquidableYet",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "ERC20TransferFailed",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ERC721AddressZeroIsNotAValidOwner",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ERC721ApprovalToCurrentOwner",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ERC721ApproveToCaller",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ERC721CallerIsNotOwnerNorApproved",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ERC721CallerIsNotOwnerNorApprovedForAll",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ERC721InvalidTokenId",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ERC721MintToTheZeroAddress",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ERC721TokenAlreadyMinted",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ERC721TransferFromIncorrectOwner",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ERC721TransferToNonERC721ReceiverImplementer",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ERC721TransferToTheZeroAddress",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "firstRequested",
          "type": "address"
        },
        {
          "internalType": "contract IERC20",
          "name": "requested",
          "type": "address"
        }
      ],
      "name": "InconsistentAssetRequests",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "firstTrancheIdUsed",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "trancheIdFound",
          "type": "uint256"
        }
      ],
      "name": "InconsistentTranches",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "nbOfTranches",
          "type": "uint256"
        }
      ],
      "name": "InvalidTranche",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "loanId",
          "type": "uint256"
        }
      ],
      "name": "LoanAlreadyRepaid",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "loanId",
          "type": "uint256"
        }
      ],
      "name": "LoanNotRepaidOrLiquidatedYet",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "loanId",
          "type": "uint256"
        }
      ],
      "name": "NotBorrowerOfTheLoan",
      "type": "error"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "contract IERC20",
              "name": "assetToLend",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "loanToValue",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "duration",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "expirationDate",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "tranche",
              "type": "uint256"
            },
            {
              "components": [
                {
                  "internalType": "contract IERC721",
                  "name": "implem",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                }
              ],
              "internalType": "struct NFToken",
              "name": "collateral",
              "type": "tuple"
            }
          ],
          "internalType": "struct Offer",
          "name": "offer",
          "type": "tuple"
        },
        {
          "internalType": "uint256",
          "name": "expirationDate",
          "type": "uint256"
        }
      ],
      "name": "OfferHasExpired",
      "type": "error"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "contract IERC20",
              "name": "assetToLend",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "loanToValue",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "duration",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "expirationDate",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "tranche",
              "type": "uint256"
            },
            {
              "components": [
                {
                  "internalType": "contract IERC721",
                  "name": "implem",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                }
              ],
              "internalType": "struct NFToken",
              "name": "collateral",
              "type": "tuple"
            }
          ],
          "internalType": "struct Offer",
          "name": "offer",
          "type": "tuple"
        },
        {
          "internalType": "uint256",
          "name": "requested",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "lowerBound",
          "type": "uint256"
        }
      ],
      "name": "RequestedAmountIsUnderMinimum",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "requested",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "offered",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "contract IERC20",
              "name": "assetToLend",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "loanToValue",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "duration",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "expirationDate",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "tranche",
              "type": "uint256"
            },
            {
              "components": [
                {
                  "internalType": "contract IERC721",
                  "name": "implem",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                }
              ],
              "internalType": "struct NFToken",
              "name": "collateral",
              "type": "tuple"
            }
          ],
          "internalType": "struct Offer",
          "name": "offer",
          "type": "tuple"
        }
      ],
      "name": "RequestedAmountTooHigh",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Unauthorized",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "lent",
          "type": "uint256"
        }
      ],
      "name": "UnsafeAmountLent",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "minLoanToValue",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "maxLoanToValue",
          "type": "uint256"
        }
      ],
      "name": "UnsafeOfferLoanToValuesGap",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "loanId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "loan",
          "type": "bytes"
        }
      ],
      "name": "Borrow",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "loanId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "args",
          "type": "bytes"
        }
      ],
      "name": "Buy",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "claimant",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "claimed",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "loanId",
          "type": "uint256"
        }
      ],
      "name": "Claim",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "newAuctionDuration",
          "type": "uint256"
        }
      ],
      "name": "NewAuctionDuration",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "Ray",
          "name": "newAuctionPriceFactor",
          "type": "uint256"
        }
      ],
      "name": "NewAuctionPriceFactor",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "contract IERC20",
          "name": "currency",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "newLowerBound",
          "type": "uint256"
        }
      ],
      "name": "NewBorrowAmountPerOfferLowerBound",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "contract IERC20",
          "name": "currency",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "newMinOfferCost",
          "type": "uint256"
        }
      ],
      "name": "NewMininimumOfferCost",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "Ray",
          "name": "tranche",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "newTrancheId",
          "type": "uint256"
        }
      ],
      "name": "NewTranche",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "loanId",
          "type": "uint256"
        }
      ],
      "name": "Repay",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "contract IERC721",
                  "name": "implem",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                }
              ],
              "internalType": "struct NFToken",
              "name": "nft",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "bytes",
                  "name": "signature",
                  "type": "bytes"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "components": [
                    {
                      "internalType": "contract IERC20",
                      "name": "assetToLend",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "loanToValue",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "duration",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "expirationDate",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "tranche",
                      "type": "uint256"
                    },
                    {
                      "components": [
                        {
                          "internalType": "contract IERC721",
                          "name": "implem",
                          "type": "address"
                        },
                        {
                          "internalType": "uint256",
                          "name": "id",
                          "type": "uint256"
                        }
                      ],
                      "internalType": "struct NFToken",
                      "name": "collateral",
                      "type": "tuple"
                    }
                  ],
                  "internalType": "struct Offer",
                  "name": "offer",
                  "type": "tuple"
                }
              ],
              "internalType": "struct OfferArg[]",
              "name": "args",
              "type": "tuple[]"
            }
          ],
          "internalType": "struct BorrowArg[]",
          "name": "args",
          "type": "tuple[]"
        }
      ],
      "name": "borrow",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "loanId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            }
          ],
          "internalType": "struct BuyArg[]",
          "name": "args",
          "type": "tuple[]"
        }
      ],
      "name": "buy",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256[]",
          "name": "positionIds",
          "type": "uint256[]"
        }
      ],
      "name": "claim",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "sent",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256[]",
          "name": "loanIds",
          "type": "uint256[]"
        }
      ],
      "name": "claimAsBorrower",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "sent",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "Ray",
          "name": "newTranche",
          "type": "uint256"
        }
      ],
      "name": "createTranche",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "newTrancheId",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "getLoan",
      "outputs": [
        {
          "components": [
            {
              "internalType": "contract IERC20",
              "name": "assetLent",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "lent",
              "type": "uint256"
            },
            {
              "internalType": "Ray",
              "name": "shareLent",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "startDate",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "endDate",
              "type": "uint256"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "duration",
                  "type": "uint256"
                },
                {
                  "internalType": "Ray",
                  "name": "priceFactor",
                  "type": "uint256"
                }
              ],
              "internalType": "struct Auction",
              "name": "auction",
              "type": "tuple"
            },
            {
              "internalType": "Ray",
              "name": "interestPerSecond",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "borrower",
              "type": "address"
            },
            {
              "components": [
                {
                  "internalType": "contract IERC721",
                  "name": "implem",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                }
              ],
              "internalType": "struct NFToken",
              "name": "collateral",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "paid",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "minInterestsToRepay",
                  "type": "uint256"
                },
                {
                  "internalType": "bool",
                  "name": "liquidated",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "borrowerClaimed",
                  "type": "bool"
                }
              ],
              "internalType": "struct Payment",
              "name": "payment",
              "type": "tuple"
            },
            {
              "internalType": "uint256",
              "name": "supplyPositionIndex",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "nbOfPositions",
              "type": "uint256"
            }
          ],
          "internalType": "struct Loan",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "currency",
          "type": "address"
        }
      ],
      "name": "getMinOfferCostAndBorrowableAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "minOfferCost",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "offerBorrowAmountLowerBound",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getParameters",
      "outputs": [
        {
          "internalType": "Ray",
          "name": "auctionPriceFactor",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "auctionDuration",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "nbOfLoans",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "nbOfTranches",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "getRateOfTranche",
      "outputs": [
        {
          "internalType": "Ray",
          "name": "rate",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "contract IERC20",
              "name": "assetLent",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "lent",
              "type": "uint256"
            },
            {
              "internalType": "Ray",
              "name": "shareLent",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "startDate",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "endDate",
              "type": "uint256"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "duration",
                  "type": "uint256"
                },
                {
                  "internalType": "Ray",
                  "name": "priceFactor",
                  "type": "uint256"
                }
              ],
              "internalType": "struct Auction",
              "name": "auction",
              "type": "tuple"
            },
            {
              "internalType": "Ray",
              "name": "interestPerSecond",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "borrower",
              "type": "address"
            },
            {
              "components": [
                {
                  "internalType": "contract IERC721",
                  "name": "implem",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                }
              ],
              "internalType": "struct NFToken",
              "name": "collateral",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "paid",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "minInterestsToRepay",
                  "type": "uint256"
                },
                {
                  "internalType": "bool",
                  "name": "liquidated",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "borrowerClaimed",
                  "type": "bool"
                }
              ],
              "internalType": "struct Payment",
              "name": "payment",
              "type": "tuple"
            },
            {
              "internalType": "uint256",
              "name": "supplyPositionIndex",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "nbOfPositions",
              "type": "uint256"
            }
          ],
          "internalType": "struct Loan",
          "name": "loan",
          "type": "tuple"
        }
      ],
      "name": "mintLoan",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "loanId",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "Ray",
              "name": "share",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "loanId",
              "type": "uint256"
            }
          ],
          "internalType": "struct Provision",
          "name": "provision",
          "type": "tuple"
        }
      ],
      "name": "mintPosition",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "contract IERC20",
              "name": "assetToLend",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "loanToValue",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "duration",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "expirationDate",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "tranche",
              "type": "uint256"
            },
            {
              "components": [
                {
                  "internalType": "contract IERC721",
                  "name": "implem",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                }
              ],
              "internalType": "struct NFToken",
              "name": "collateral",
              "type": "tuple"
            }
          ],
          "internalType": "struct Offer",
          "name": "offer",
          "type": "tuple"
        }
      ],
      "name": "offerDigest",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "onERC721Received",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "position",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "Ray",
              "name": "share",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "loanId",
              "type": "uint256"
            }
          ],
          "internalType": "struct Provision",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "loanId",
          "type": "uint256"
        }
      ],
      "name": "price",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256[]",
          "name": "loanIds",
          "type": "uint256[]"
        }
      ],
      "name": "repay",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newAuctionDuration",
          "type": "uint256"
        }
      ],
      "name": "setAuctionDuration",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "Ray",
          "name": "newAuctionPriceFactor",
          "type": "uint256"
        }
      ],
      "name": "setAuctionPriceFactor",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "currency",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "newLowerBound",
          "type": "uint256"
        }
      ],
      "name": "setBorrowAmountPerOfferLowerBound",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "currency",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "newMinOfferCost",
          "type": "uint256"
        }
      ],
      "name": "setMinOfferCost",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "contract IERC20",
              "name": "assetLent",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "lent",
              "type": "uint256"
            },
            {
              "internalType": "Ray",
              "name": "shareLent",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "startDate",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "endDate",
              "type": "uint256"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "duration",
                  "type": "uint256"
                },
                {
                  "internalType": "Ray",
                  "name": "priceFactor",
                  "type": "uint256"
                }
              ],
              "internalType": "struct Auction",
              "name": "auction",
              "type": "tuple"
            },
            {
              "internalType": "Ray",
              "name": "interestPerSecond",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "borrower",
              "type": "address"
            },
            {
              "components": [
                {
                  "internalType": "contract IERC721",
                  "name": "implem",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                }
              ],
              "internalType": "struct NFToken",
              "name": "collateral",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "paid",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "minInterestsToRepay",
                  "type": "uint256"
                },
                {
                  "internalType": "bool",
                  "name": "liquidated",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "borrowerClaimed",
                  "type": "bool"
                }
              ],
              "internalType": "struct Payment",
              "name": "payment",
              "type": "tuple"
            },
            {
              "internalType": "uint256",
              "name": "supplyPositionIndex",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "nbOfPositions",
              "type": "uint256"
            }
          ],
          "internalType": "struct Loan",
          "name": "loan",
          "type": "tuple"
        },
        {
          "internalType": "uint256",
          "name": "loanId",
          "type": "uint256"
        }
      ],
      "name": "storeLoan",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "Ray",
              "name": "share",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "loanId",
              "type": "uint256"
            }
          ],
          "internalType": "struct Provision",
          "name": "provision",
          "type": "tuple"
        },
        {
          "internalType": "uint256",
          "name": "positionId",
          "type": "uint256"
        }
      ],
      "name": "storeProvision",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x6101406040523480156200001257600080fd5b50604080518082018252601481527f4b6169726f73204c6f616e2070726f746f636f6c000000000000000000000000602080830191825283518085019094526003845262302e3160e81b908401528151902060e08190527f8cd160c72d102a6747abd189ac21d4a1f802e3fcc1bb8fc78cc4d558df0c7c216101008190524660a0529192917f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f620001088184846040805160208101859052908101839052606081018290524660808201523060a082015260009060c0016040516020818303038152906040528051906020012090509392505050565b6080523060c05261012052506200011e92505050565b60805160a05160c05160e05161010051610120516140296200016e60003960006129dd01526000612a2c01526000612a07015260006129600152600061298a015260006129b401526140296000f3fe608060405234801561001057600080fd5b50600436106102115760003560e01c80636352211e11610125578063a497e674116100ad578063b88d4fde1161007c578063b88d4fde146104ca578063cd3acce9146104dd578063e7af8fed146104f0578063e985e9c514610503578063f7a95a9e1461051657600080fd5b8063a497e67414610469578063a5ea11da1461047c578063ab5dce8e146104a4578063b1ce7a6a146104b757600080fd5b80638d116c7a116100f45780638d116c7a1461040057806392eab80e1461042857806395d89b411461043b578063980b13c514610443578063a22cb4651461045657600080fd5b80636352211e146103b45780636ba4c138146103c757806370a08231146103da5780637660e109146103ed57600080fd5b806316cfcfc3116101a857806323b872dd1161017757806323b872dd1461034857806326a49e371461035b5780633d6fd5be1461036e57806342842e0e14610381578063504006ca1461039457600080fd5b806316cfcfc31461030757806318160ddd1461031a5780631a34c700146103225780631fbc8a741461033557600080fd5b8063095ea7b3116101e4578063095ea7b3146102945780630c72ad20146102a757806314aab74f146102ba578063150b7a02146102db57600080fd5b806301d3368f1461021657806301ffc9a71461022b57806306fdde0314610254578063081812fc14610269575b600080fd5b61022961022436600461328b565b61054b565b005b61023f6102393660046132cc565b50600090565b60405190151581526020015b60405180910390f35b61025c610580565b60405161024b919061332f565b61027c610277366004613342565b610621565b6040516001600160a01b03909116815260200161024b565b6102296102a236600461337b565b610632565b6102296102b53660046133ca565b6106be565b6102cd6102c8366004613342565b6108cc565b60405190815260200161024b565b6102ee6102e9366004613454565b6108ea565b6040516001600160e01b0319909116815260200161024b565b6102cd6103153660046136a8565b610937565b6102cd6109bb565b61022961033036600461337b565b6109ce565b6102cd61034336600461374f565b610abf565b61022961035636600461376b565b610ad2565b6102cd610369366004613342565b610b04565b6102cd61037c3660046137f0565b610be1565b61022961038f36600461376b565b610d6f565b6103a76103a2366004613342565b610d8a565b60405161024b9190613831565b61027c6103c2366004613342565b610ea9565b6102cd6103d53660046137f0565b610eb4565b6102cd6103e836600461392c565b611045565b6102296103fb36600461337b565b61109a565b61041361040e36600461392c565b61118b565b6040805192835260208301919091520161024b565b6102cd610436366004613342565b6111ca565b61025c6112cd565b610229610451366004613949565b6112ea565b6102296104643660046139fd565b61132e565b610229610477366004613342565b611339565b61048461140f565b60408051948552602085019390935291830152606082015260800161024b565b6102296104b2366004613a36565b611440565b6102296104c53660046137f0565b611555565b6102296104d8366004613ad2565b6116aa565b6102cd6104eb366004613b3d565b6116e3565b6102296104fe366004613342565b6116f6565b61023f610511366004613b73565b61181c565b610529610524366004613342565b611828565b604080518251815260208084015190820152918101519082015260600161024b565b816105546118b7565b600092835260070160209081526040928390208251815590820151600182015591015160029091015550565b6060600061058c6118b7565b905080600001805461059d90613ba1565b80601f01602080910402602001604051908101604052809291908181526020018280546105c990613ba1565b80156106165780601f106105eb57610100808354040283529160200191610616565b820191906000526020600020905b8154815290600101906020018083116105f957829003601f168201915b505050505091505090565b600061062c826118db565b92915050565b600061063d82610ea9565b9050806001600160a01b0316836001600160a01b03160361067157604051630591db6d60e01b815260040160405180910390fd5b336001600160a01b03821614801590610691575061068f813361181c565b155b156106af5760405163e495e68760e01b815260040160405180910390fd5b6106b98383611928565b505050565b60006106c861196c565b905060008060008060005b86518110156108c3578560050160008883815181106106f4576106f4613bdb565b602002602001015181526020019081526020016000209450600085600b0160000154118061072b5750600d850154610100900460ff165b8061073a5750600d85015460ff165b1561077e5786818151811061075157610751613bdb565b602002602001015160405163dae2c27360e01b815260040161077591815260200190565b60405180910390fd5b846001015493506107ba6107b06107a987600301544261079e9190613c07565b600789015490611990565b869061199c565b600c8701546119be565b92506107c68385613c1a565b600b8601819055600d8601805461ff00191661010017905585549092506107f8906001600160a01b03163330856119d4565b60098501546008860154600a870154604051632142170760e11b81526001600160a01b03938416936342842e0e936108399330939290911691600401613c2d565b600060405180830381600087803b15801561085357600080fd5b505af1158015610867573d6000803e3d6000fd5b5050505086818151811061087d5761087d613bdb565b60200260200101517fa6ffc78a660e4971a47a0f916a0abae483804e6f42c9292ed06aa64f8fe4623060405160405180910390a2806108bb81613c51565b9150506106d3565b50505050505050565b60006108d661196c565b600092835260040160205250604090205490565b6000806108f983850185613d2e565b905061092381886040518060400160405280336001600160a01b0316815260200189815250611a7f565b50630a85bd0160e11b979650505050505050565b600061094161196c565b805460009061094f90613c51565b9190508190559050807fdca520d648f7d72e985ce218de7119aeca8bdd20abdb296f69ee74630fe79c7b8360405160200161098a9190613831565b60408051601f19818403018152908290526109a49161332f565b60405180910390a26109b68282611440565b919050565b60006109c56118b7565b60020154905090565b6000306001600160a01b0316638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610a0e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a329190613d76565b9050336001600160a01b03821614610a685760405163d4ed9a1760e01b81526001600160a01b0382166004820152602401610775565b81610a7161196c565b6001600160a01b038516600081815260069290920160205260408083209390935591518492917f67c648fad0621d49c4ec46cd8bd0f732a5999eb456200b96b1ad475163d8672f91a3505050565b600061062c610acd83611cfe565b611da6565b610adc3382611df4565b610af957604051636eb172ad60e11b815260040160405180910390fd5b6106b9838383611e53565b600080610b0f61196c565b600084815260059190910160205260408120600481015490925090610b348242613c07565b9050610b3f85611f59565b6005830154600090821015610b79576005840154610b7490610b62908490611fe2565b676765c793fa10079d601b1b90611ffa565b610b7c565b60005b90506000610bb0610ba58660020154676765c793fa10079d601b1b611fe290919063ffffffff16565b60018701549061199c565b9050610bd682610bd087600501600101548461199c90919063ffffffff16565b9061199c565b979650505050505050565b600080610bec61196c565b905060008080805b86811015610d6457878782818110610c0e57610c0e613bdb565b6020908102929092013560008181526005890190935260409092206008810154909650919350506001600160a01b03163314610c605760405163c250ea5d60e01b815260048101839052602401610775565b600d840154610100900460ff1615610c8e5760405163059803b760e21b815260048101839052602401610775565b600d84015460ff1615610cdd57600d8401805461ff0019166101001790556002840154610cd690610ccb90676765c793fa10079d601b1b90611ffa565b600b8601549061199c565b9250610cf9565b6040516311653e5f60e21b815260048101839052602401610775565b8215610d52578354610d15906001600160a01b03163385612006565b610d1f8387613c1a565b6040519096508290849033907f34fcbac0073d7c3d388e51312faf357774904998eeb8fca628b9e6f65ee1cbf790600090a45b80610d5c81613c51565b915050610bf4565b505050505092915050565b6106b9838383604051806020016040528060008152506116aa565b610d9261304a565b610d9a61196c565b60009283526005908101602090815260409384902084516101808101865281546001600160a01b039081168252600183015482850152600283015482880152600383015460608084019190915260048401546080808501919091528851808a018a5296850154875260068501548787015260a0840196909652600784015460c08401526008840154821660e08401528751808901895260098501549092168252600a840154828601526101008084019290925287519586018852600b8401548652600c84015494860194909452600d83015460ff80821615159887019890985204909516151591830191909152610120840191909152600e810154610140840152600f01546101608301525090565b600061062c826120af565b600080610ebf61196c565b90506000610ecb6118b7565b905060008060008060005b8881101561103857610f00338b8b84818110610ef457610ef4613bdb565b90506020020135611df4565b610f1d57604051636eb172ad60e11b815260040160405180910390fd5b610f3e8a8a83818110610f3257610f32613bdb565b905060200201356120f5565b8560070160008b8b84818110610f5657610f56613bdb565b905060200201358152602001908152602001600020935083600201549250866005016000848152602001908152602001600020945084600b0160020160009054906101000a900460ff1615610fb657610faf8585612171565b9150610feb565b600b850154600003610fde576040516311653e5f60e21b815260048101849052602401610775565b610fe885856121a1565b91505b6040518390839033907f34fcbac0073d7c3d388e51312faf357774904998eeb8fca628b9e6f65ee1cbf790600090a46110248289613c1a565b97508061103081613c51565b915050610ed6565b5050505050505092915050565b6000806110506118b7565b90506001600160a01b03831661107957604051630b505c1d60e11b815260040160405180910390fd5b6001600160a01b039092166000908152600490920160205250604090205490565b6000306001600160a01b0316638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156110da573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110fe9190613d76565b9050336001600160a01b038216146111345760405163d4ed9a1760e01b81526001600160a01b0382166004820152602401610775565b8161113d61196c565b6001600160a01b038516600081815260079290920160205260408083209390935591518492917f146e1a257ecd0267c391070e1bc23a703eee64ed866c1ceb73cc8b2508f4a37191a3505050565b600080600061119861196c565b6001600160a01b0390941660009081526006850160209081526040808320546007909701909152902054939492505050565b600080306001600160a01b0316638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561120b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061122f9190613d76565b9050336001600160a01b038216146112655760405163d4ed9a1760e01b81526001600160a01b0382166004820152602401610775565b600061126f61196c565b600181018054919250600061128383613c51565b90915550600081815260048301602052604080822087905551919450849186917f6da37ad08550ba024c1448b799ac757c4f29bc9fb729b3f370a4fa2ab798fbd591a35050919050565b606060006112d96118b7565b905080600101805461059d90613ba1565b60005b815181101561132a5761131882828151811061130b5761130b613bdb565b6020026020010151612232565b8061132281613c51565b9150506112ed565b5050565b61132a338383612376565b6000306001600160a01b0316638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611379573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061139d9190613d76565b9050336001600160a01b038216146113d35760405163d4ed9a1760e01b81526001600160a01b0382166004820152602401610775565b816113dc61196c565b6002015560405182907f99c234461abfab1095b48d0d9527ff204caa62038112f57c795cecb99503676290600090a25050565b600080600080600061141f61196c565b60038101546002820154825460019093015491989097509195509350915050565b8161144961196c565b600092835260059081016020908152604093849020835181546001600160a01b03199081166001600160a01b0392831617835585840151600184015585870151600284015560608087015160038501556080870151600485015560a087015180519685019690965594840151600684015560c0860151600784015560e0860151600884018054831691841691909117905561010080870151805160098601805490941694169390931790915590830151600a8301556101208501518051600b84015592830151600c83015594820151600d82018054939094015161ffff1990931690151561ff00191617911515909402179055610140810151600e8301556101600151600f9091015550565b60005b818110156106b95782828281811061157257611572613bdb565b90506020028101906115849190613d93565b61159290602081019061392c565b6001600160a01b03166323b872dd33308686868181106115b4576115b4613bdb565b90506020028101906115c69190613d93565b6040516001600160e01b031960e086901b1681526115ed9392916020013590600401613c2d565b600060405180830381600087803b15801561160757600080fd5b505af115801561161b573d6000803e3d6000fd5b5050505061169783838381811061163457611634613bdb565b90506020028101906116469190613d93565b611654906040810190613db3565b61165d91613dfc565b3385858581811061167057611670613bdb565b90506020028101906116829190613d93565b6116929036819003810190613e09565b611a7f565b50806116a281613c51565b915050611558565b6116b43383611df4565b6116d157604051636eb172ad60e11b815260040160405180910390fd5b6116dd848484846123ec565b50505050565b60006116ef838361241f565b9392505050565b6000306001600160a01b0316638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611736573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061175a9190613d76565b9050336001600160a01b038216146117905760405163d4ed9a1760e01b81526001600160a01b0382166004820152602401610775565b6117ba6117b460026117ae676765c793fa10079d601b1b6005611990565b90612479565b83101590565b6117e05760405162461bcd60e51b81526020600482015260006024820152604401610775565b816117e961196c565b6003015560405182907f1ce4b7127cce448c8a88c8a281145cece8c80a8e53693505547c31fabc92c44590600090a25050565b60006116ef8383612485565b61184c60405180606001604052806000815260200160008152602001600081525090565b60006118566118b7565b9050806002015483111561187d5760405163089ba7e160e41b815260040160405180910390fd5b6000928352600701602090815260409283902083516060810185528154815260018201549281019290925260020154928101929092525090565b7f9dcac861a288165fa5a7e007597a30abcd2d73e174280cf7c6967f5a922a443990565b60006118e6826124c2565b6119035760405163089ba7e160e41b815260040160405180910390fd5b61190b6118b7565b60009283526005016020525060409020546001600160a01b031690565b60006119326118b7565b6000838152600582016020526040902080546001600160a01b0319166001600160a01b03861617905590506106b9611969836120af565b50565b7f84e508d57dadc535817af594804944c3bc341cdb6befa5a0747e20285912a7eb90565b60006116ef8284613e25565b6000676765c793fa10079d601b1b6119b48385613e25565b6116ef9190613e3c565b60008183116119cd57816116ef565b5090919050565b6040516323b872dd60e01b81526001600160a01b038516906323b872dd90611a0490869086908690600401613c2d565b6020604051808303816000875af1158015611a23573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a479190613e5e565b6116dd576040516362fe41f360e01b81526001600160a01b038086166004830152808516602483015283166044820152606401610775565b611a8761304a565b6000611aae85600081518110611a9f57611a9f613bdb565b602002602001015185856124ed565b90506000611aba6118b7565b60020154611ac9906001613c1a565b86519091506000805b82811015611b3c57611afd898281518110611aef57611aef613bdb565b602002602001015186612591565b9450888181518110611b1157611b11613bdb565b60200260200101516020015182611b289190613c1a565b915080611b3481613c51565b915050611ad2565b50701d6329f1c35ca4bfabb9f5610000000000811115611b725760405163a1b0082360e01b815260048101829052602401610775565b611b808488888585886127f9565b945084611b8b61196c565b6101008681018051600090815260059384016020908152604091829020865181546001600160a01b03199081166001600160a01b039283161783558884015160018401558885015160028401556060808a0151600385015560808a0151600485015560a08a015180519985019990995597840151600684015560c0890151600784015560e089015160088401805483169184169190911790558887015180516009850180549093169316929092179055820151600a8201556101208701518051600b83015580830151600c83015580840151600d83018054929098015161ffff1990921690151561ff0019161790151590950294909417909455610140850151600e84015561016090940151600f909201919091555191517fdca520d648f7d72e985ce218de7119aeca8bdd20abdb296f69ee74630fe79c7b91611cd191899101613831565b60408051601f1981840301815290829052611ceb9161332f565b60405180910390a2505050509392505050565b60007f2ac049b6467232d12ceb145e80f9890371b3f6a4ccb53cdc241cf1a1c6e9dd9782600001518360200151846040015185606001518660800151611d478860a0015161291e565b6040805160208101989098526001600160a01b03909616958701959095526060860193909352608085019190915260a084015260c083015260e0820152610100015b604051602081830303815290604052805190602001209050919050565b600061062c611db3612953565b8360405161190160f01b6020820152602281018390526042810182905260009060620160405160208183030381529060405280519060200120905092915050565b600080611e00836120af565b9050806001600160a01b0316846001600160a01b03161480611e275750611e278185612485565b80611e4b5750836001600160a01b0316611e40846118db565b6001600160a01b0316145b949350505050565b6000611e5d6118b7565b9050836001600160a01b0316611e72836120af565b6001600160a01b031614611e995760405163e146af6f60e01b815260040160405180910390fd5b6001600160a01b038316611ec0576040516338f646ff60e21b815260040160405180910390fd5b611ecb600083611928565b6001600160a01b03841660009081526004820160205260408120805460019290611ef6908490613c07565b90915550506001600160a01b03831660009081526004820160205260408120805460019290611f26908490613c1a565b90915550506000828152600382016020526040902080546001600160a01b0319166001600160a01b0385161790556116dd565b6000611f6361196c565b600501600083815260200190815260200160002090508060040154421015611fab5760048181015460405163ee9e72dd60e01b81529182015260248101839052604401610775565b600b810154151580611fc15750600d81015460ff165b1561132a5760405163dae2c27360e01b815260048101839052602401610775565b6000816119b4676765c793fa10079d601b1b85613e25565b60006116ef8284613c07565b60405163a9059cbb60e01b81526001600160a01b0383811660048301526024820183905284169063a9059cbb906044016020604051808303816000875af1158015612055573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906120799190613e5e565b6106b9576040516362fe41f360e01b81526001600160a01b03808516600483015230602483015283166044820152606401610775565b6000806120ba6118b7565b60008481526003820160205260409020549091506001600160a01b0316806116ef5760405163089ba7e160e41b815260040160405180910390fd5b60006120ff6118b7565b9050600061210c836120af565b9050612119600084611928565b6001600160a01b03811660009081526004830160205260408120805460019290612144908490613c07565b90915550506000838152600383016020526040812080546001600160a01b03191690556106b99082908583565b6001810154600b830154600091612188919061199c565b835490915061062c906001600160a01b03163383612006565b600080836001015484600b01600001546121bb9190613c07565b600c85015490915081036121eb57600f8401546121d89082613e3c565b83546121e49190613c1a565b9150612215565b600184015483546121fc9083613e25565b6122069190613e3c565b83546122129190613c1a565b91505b835461222b906001600160a01b03163384612006565b5092915050565b600061223c61196c565b8251600090815260059190910160205260409020825190915061225e90611f59565b600061226d8360000151610b04565b600d8301805460ff19166001179055600b8301819055825490915061229d906001600160a01b03163330846119d4565b60098201546020840151600a840154604051632142170760e11b81526001600160a01b03909316926342842e0e926122d9923092600401613c2d565b600060405180830381600087803b1580156122f357600080fd5b505af1158015612307573d6000803e3d6000fd5b505084516040805160208082018490528801516001600160a01b0316818301528151808203830181526060909101918290529193507f56fa56fac71c8ba176bf5af94ddd918100d0d8b56a12bbe5e94bac85eca114da9250612369919061332f565b60405180910390a2505050565b60006123806118b7565b9050826001600160a01b0316846001600160a01b0316036123b457604051630b7b99b960e21b815260040160405180910390fd5b6001600160a01b0384811660009081526006830160209081526040808320938716835292905220805460ff19168315151790556116dd565b6123f7848484611e53565b61240384848484612a7a565b6116dd57604051626b5e2960e61b815260040160405180910390fd5b60008061242a6118b7565b9050806002016000815461243d90613c51565b918290555060008181526007830160209081526040918290208651815590860151600182015590850151600290910155915061222b8483612b7b565b60006116ef8284613e3c565b600061248f6118b7565b6001600160a01b039384166000908152600691909101602090815260408083209490951682529290925250205460ff1690565b6000806124cd6118b7565b6000938452600301602052505060409020546001600160a01b0316151590565b6124f561311c565b604051806101200160405280600081526020018560400151600001516001600160a01b031681526020018560400151608001518152602001856040015160400151815260200185604001516020015181526020018560400151602001518152602001846001600160a01b0316815260200183815260200161257461196c565b805460009061258290613c51565b91829055509052949350505050565b61259961311c565b60006125a484612b95565b9050600083602001516001600160a01b03168560400151600001516001600160a01b0316146126045760208401516040868101515190516346aac2a960e01b81526001600160a01b03928316600482015291166024820152604401610775565b836040015185604001516080015114612649578360400151856040015160800151604051632ff7abc160e11b8152600401610775929190918252602082015260400190565b61265b85604001518560e00151612c7f565b61267a8560400151602001518660200151611fe290919063ffffffff16565b84519091506126899082612caf565b808552676765c793fa10079d601b1b10156126e757602085015184516126c6906126b790610b629085611ffa565b6040880151602001519061199c565b86604001516040516352e84b3360e11b815260040161077593929190613ed4565b8360600151856040015160400151101561270957604080860151015160608501525b8360800151856040015160200151101561272c5760408501516020015160808501525b8360a00151856040015160200151111561274f5760408501516020015160a08501525b608084015161275f906002613e25565b8460a00151111561279657608084015160a0850151604051633065b5b760e11b815260048101929092526024820152604401610775565b6127c2828560c00151876020015187602001516001600160a01b03166119d4909392919063ffffffff16565b6127ef8260405180606001604052808860200151815260200184815260200187610100015181525061241f565b5092949350505050565b61280161304a565b600061280b61196c565b9050600088606001514261281f9190613c1a565b9050612850604051806080016040528060008152602001600081526020016000151581526020016000151581525090565b6020808b01516001600160a01b0316600090815260068501909152604090205461287a9088613e25565b60208281019190915260408051610180810182528c8301516001600160a01b039081168252818401999099528c51818301524260608201526080810194909452805180820182526002860154815260038601548184015260a08501529a8b0151600090815260049094019052989091205460c08201529590921660e08601526101008501939093525061012083019390935261014082015261016081019190915290565b60007f8ee82799d3068521f828767217e880bf7d6bb6ec7d5dbcc3de1e3e4bbb39c9e982604051602001611d89929190613ef0565b6000306001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161480156129ac57507f000000000000000000000000000000000000000000000000000000000000000046145b156129d657507f000000000000000000000000000000000000000000000000000000000000000090565b50604080517f00000000000000000000000000000000000000000000000000000000000000006020808301919091527f0000000000000000000000000000000000000000000000000000000000000000828401527f000000000000000000000000000000000000000000000000000000000000000060608301524660808301523060a0808401919091528351808403909101815260c0909201909252805191012090565b60006001600160a01b0384163b15612b7057604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290612abe903390899088908890600401613f17565b6020604051808303816000875af1925050508015612af9575060408051601f3d908101601f19168201909252612af691810190613f54565b60015b612b56573d808015612b27576040519150601f19603f3d011682016040523d82523d6000602084013e612b2c565b606091505b508051600003612b4e57604051626b5e2960e61b815260040160405180910390fd5b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050611e4b565b506001949350505050565b61132a828260405180602001604052806000815250612cbb565b600080612ba061196c565b9050612bb9612bb28460400151610abf565b8451612cee565b604080850151516001600160a01b031660009081526007840160209081529190205490850151919350908110612c1057836040015184602001518260405163889976c760e01b815260040161077593929190613f71565b836040015160600151421115612c44576040808501516060810151915163065a5c3b60e01b81526107759290600401613f92565b816001015484604001516080015110612c78578160010154604051632fac17ed60e11b815260040161077591815260200190565b5050919050565b60a0820151612c8e9082612d12565b61132a57818160405163d8ef221b60e01b8152600401610775929190613fae565b60006116ef8284613c1a565b612cc58383612d3b565b612cd26000848484612a7a565b6106b957604051626b5e2960e61b815260040160405180910390fd5b6000806000612cfd8585612df7565b91509150612d0a81612e3c565b509392505050565b6000816020015183602001511480156116ef5750505190516001600160a01b0391821691161490565b6000612d456118b7565b90506001600160a01b038316612d6e576040516325bd6bd360e01b815260040160405180910390fd5b612d77826124c2565b15612d955760405163c5a8d37160e01b815260040160405180910390fd5b6001600160a01b03831660009081526004820160205260408120805460019290612dc0908490613c1a565b90915550506000828152600382016020526040812080546001600160a01b0319166001600160a01b0386161790556106b990848483565b6000808251604103612e2d5760208301516040840151606085015160001a612e2187828585612f86565b94509450505050612e35565b506000905060025b9250929050565b6000816004811115612e5057612e50613fdd565b03612e585750565b6001816004811115612e6c57612e6c613fdd565b03612eb95760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e617475726500000000000000006044820152606401610775565b6002816004811115612ecd57612ecd613fdd565b03612f1a5760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152606401610775565b6003816004811115612f2e57612f2e613fdd565b036119695760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b6064820152608401610775565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0831115612fbd5750600090506003613041565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015613011573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b03811661303a57600060019250925050613041565b9150600090505b94509492505050565b60405180610180016040528060006001600160a01b031681526020016000815260200160008152602001600081526020016000815260200161309f604051806040016040528060008152602001600081525090565b81526020016000815260200160006001600160a01b031681526020016130e1604051806040016040528060006001600160a01b03168152602001600081525090565b815260408051608081018252600080825260208281018290529282018190526060820152910190815260200160008152602001600081525090565b6040518061012001604052806000815260200160006001600160a01b031681526020016000815260200160008152602001600081526020016000815260200160006001600160a01b03168152602001613191604051806040016040528060006001600160a01b03168152602001600081525090565b8152602001600081525090565b634e487b7160e01b600052604160045260246000fd5b604051606081016001600160401b03811182821017156131d6576131d661319e565b60405290565b604080519081016001600160401b03811182821017156131d6576131d661319e565b60405161018081016001600160401b03811182821017156131d6576131d661319e565b604051601f8201601f191681016001600160401b03811182821017156132495761324961319e565b604052919050565b60006060828403121561326357600080fd5b61326b6131b4565b905081358152602082013560208201526040820135604082015292915050565b6000806080838503121561329e57600080fd5b6132a88484613251565b946060939093013593505050565b6001600160e01b03198116811461196957600080fd5b6000602082840312156132de57600080fd5b81356116ef816132b6565b6000815180845260005b8181101561330f576020818501810151868301820152016132f3565b506000602082860101526020601f19601f83011685010191505092915050565b6020815260006116ef60208301846132e9565b60006020828403121561335457600080fd5b5035919050565b6001600160a01b038116811461196957600080fd5b80356109b68161335b565b6000806040838503121561338e57600080fd5b82356133998161335b565b946020939093013593505050565b60006001600160401b038211156133c0576133c061319e565b5060051b60200190565b600060208083850312156133dd57600080fd5b82356001600160401b038111156133f357600080fd5b8301601f8101851361340457600080fd5b8035613417613412826133a7565b613221565b81815260059190911b8201830190838101908783111561343657600080fd5b928401925b82841015610bd65783358252928401929084019061343b565b60008060008060006080868803121561346c57600080fd5b85356134778161335b565b945060208601356134878161335b565b93506040860135925060608601356001600160401b03808211156134aa57600080fd5b818801915088601f8301126134be57600080fd5b8135818111156134cd57600080fd5b8960208285010111156134df57600080fd5b9699959850939650602001949392505050565b60006040828403121561350457600080fd5b61350c6131dc565b9050813581526020820135602082015292915050565b60006040828403121561353457600080fd5b61353c6131dc565b905081356135498161335b565b808252506020820135602082015292915050565b801515811461196957600080fd5b60006080828403121561357d57600080fd5b604051608081018181106001600160401b038211171561359f5761359f61319e565b8060405250809150823581526020830135602082015260408301356135c38161355d565b604082015260608301356135d68161355d565b6060919091015292915050565b600061022082840312156135f657600080fd5b6135fe6131fe565b905061360982613370565b8152602082013560208201526040820135604082015260608201356060820152608082013560808201526136408360a084016134f2565b60a082015260e082013560c082015261010061365d818401613370565b60e083015261012061367185828601613522565b8284015261016091506136868583860161356b565b81840152506101e0830135610140830152610200830135818301525092915050565b600061022082840312156136bb57600080fd5b6116ef83836135e3565b600060e082840312156136d757600080fd5b60405160c081018181106001600160401b03821117156136f9576136f961319e565b604052905080823561370a8161335b565b80825250602083013560208201526040830135604082015260608301356060820152608083013560808201526137438460a08501613522565b60a08201525092915050565b600060e0828403121561376157600080fd5b6116ef83836136c5565b60008060006060848603121561378057600080fd5b833561378b8161335b565b9250602084013561379b8161335b565b929592945050506040919091013590565b60008083601f8401126137be57600080fd5b5081356001600160401b038111156137d557600080fd5b6020830191508360208260051b8501011115612e3557600080fd5b6000806020838503121561380357600080fd5b82356001600160401b0381111561381957600080fd5b613825858286016137ac565b90969095509350505050565b81516001600160a01b0316815261022081016020830151602083015260408301516040830152606083015160608301526080830151608083015260a083015161388760a084018280518252602090810151910152565b5060c083015160e083015260e08301516101006138ae818501836001600160a01b03169052565b84015190506101206138d58482018380516001600160a01b03168252602090810151910152565b840151905061016061390e8482018380518252602081015160208301526040810151151560408301526060810151151560608301525050565b6101408501516101e085015280850151610200850152505092915050565b60006020828403121561393e57600080fd5b81356116ef8161335b565b6000602080838503121561395c57600080fd5b82356001600160401b0381111561397257600080fd5b8301601f8101851361398357600080fd5b8035613991613412826133a7565b81815260069190911b820183019083810190878311156139b057600080fd5b928401925b82841015610bd657604084890312156139ce5760008081fd5b6139d66131dc565b84358152858501356139e78161335b565b81870152825260409390930192908401906139b5565b60008060408385031215613a1057600080fd5b8235613a1b8161335b565b91506020830135613a2b8161355d565b809150509250929050565b6000806102408385031215613a4a57600080fd5b613a5484846135e3565b94610220939093013593505050565b600082601f830112613a7457600080fd5b81356001600160401b03811115613a8d57613a8d61319e565b613aa0601f8201601f1916602001613221565b818152846020838601011115613ab557600080fd5b816020850160208301376000918101602001919091529392505050565b60008060008060808587031215613ae857600080fd5b8435613af38161335b565b93506020850135613b038161335b565b92506040850135915060608501356001600160401b03811115613b2557600080fd5b613b3187828801613a63565b91505092959194509250565b60008060808385031215613b5057600080fd5b8235613b5b8161335b565b9150613b6a8460208501613251565b90509250929050565b60008060408385031215613b8657600080fd5b8235613b918161335b565b91506020830135613a2b8161335b565b600181811c90821680613bb557607f821691505b602082108103613bd557634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b8181038181111561062c5761062c613bf1565b8082018082111561062c5761062c613bf1565b6001600160a01b039384168152919092166020820152604081019190915260600190565b600060018201613c6357613c63613bf1565b5060010190565b6000613c78613412846133a7565b8381529050602080820190600585901b840186811115613c9757600080fd5b845b81811015613d235780356001600160401b0380821115613cb95760008081fd5b90870190610120828b031215613ccf5760008081fd5b613cd76131b4565b823582811115613ce75760008081fd5b613cf38c828601613a63565b825250858301358682015260409150613d0e8b8385016136c5565b91810191909152855250928201928201613c99565b505050509392505050565b600060208284031215613d4057600080fd5b81356001600160401b03811115613d5657600080fd5b8201601f81018413613d6757600080fd5b611e4b84823560208401613c6a565b600060208284031215613d8857600080fd5b81516116ef8161335b565b60008235605e19833603018112613da957600080fd5b9190910192915050565b6000808335601e19843603018112613dca57600080fd5b8301803591506001600160401b03821115613de457600080fd5b6020019150600581901b3603821315612e3557600080fd5b60006116ef368484613c6a565b600060408284031215613e1b57600080fd5b6116ef8383613522565b808202811582820484141761062c5761062c613bf1565b600082613e5957634e487b7160e01b600052601260045260246000fd5b500490565b600060208284031215613e7057600080fd5b81516116ef8161355d565b60018060a01b0381511682526020810151602083015260408101516040830152606081015160608301526080810151608083015260a08101516106b960a084018280516001600160a01b03168252602090810151910152565b838152602081018390526101208101611e4b6040830184613e7b565b828152606081016116ef602083018480516001600160a01b03168252602090810151910152565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090613f4a908301846132e9565b9695505050505050565b600060208284031215613f6657600080fd5b81516116ef816132b6565b6101208101613f808286613e7b565b60e08201939093526101000152919050565b6101008101613fa18285613e7b565b8260e08301529392505050565b6101208101613fbd8285613e7b565b82516001600160a01b031660e083015260208301516101008301526116ef565b634e487b7160e01b600052602160045260246000fdfea2646970667358221220d49be74dced1a57ca10ed9c882a875e8923fde9f82194d6f37362cea765d18ae64736f6c63430008120033",
    "sourceMap": "337:750:99:-:0;;;;;;;;;;;;-1:-1:-1;2464:602:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2464:602:14;;;;2550:22;;;;2787:25;;;;2606;2822:31;;;;2882:13;2863:32;;2464:602;;;2660:117;2932:58;2660:117;2550:22;2606:25;3642:73;;;;;;273:25:112;;;314:18;;;307:34;;;357:18;;;350:34;;;3686:13:14;400:18:112;;;393:34;3709:4:14;443:19:112;;;436:61;3606:7:14;;245:19:112;;3642:73:14;;;;;;;;;;;;3632:84;;;;;;3625:91;;3466:257;;;;;;2932:58;2905:85;;3023:4;3000:28;;3038:21;;-1:-1:-1;337:750:99;;-1:-1:-1;;;337:750:99;14:489:112;337:750:99;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "",
    "sourceMap": "337:750:99:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;374:155;;;;;;:::i;:::-;;:::i;:::-;;1405:76:62;;;;;;:::i;:::-;-1:-1:-1;1473:4:62;;1405:76;;;;2417:14:112;;2410:22;2392:41;;2380:2;2365:18;1405:76:62;;;;;;;;2365:153;;;:::i;:::-;;;;;;;:::i;3070:121::-;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;3555:32:112;;;3537:51;;3525:2;3510:18;3070:121:62;3391:203:112;2687:377:62;;;;;;:::i;:::-;;:::i;948:2304:59:-;;;;;;:::i;:::-;;:::i;759:124:58:-;;;;;;:::i;:::-;;:::i;:::-;;;5449:25:112;;;5437:2;5422:18;759:124:58;5278:202:112;1097:599:47;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;;6588:33:112;;;6570:52;;6558:2;6543:18;1097:599:47;6426:202:112;760:205:99;;;;;;:::i;:::-;;:::i;1123:114:61:-;;;:::i;3115:224:45:-;;;;;;:::i;:::-;;:::i;1151:133:60:-;;;;;;:::i;:::-;;:::i;3503:248:62:-;;;;;;:::i;:::-;;:::i;1444:1217:46:-;;;;;;:::i;:::-;;:::i;2592:1347:50:-;;;;;;:::i;:::-;;:::i;3757:140:62:-;;;;;;:::i;:::-;;:::i;1964:115:58:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;2246:113:62:-;;;;;;:::i;:::-;;:::i;1230:1113:50:-;;;;;;:::i;:::-;;:::i;1964:276:62:-;;;;;;:::i;:::-;;:::i;3567:263:45:-;;;;;;:::i;:::-;;:::i;2527:352:58:-;;;;;;:::i;:::-;;:::i;:::-;;;;15075:25:112;;;15131:2;15116:18;;15109:34;;;;15048:18;2527:352:58;14901:248:112;2084:296:45;;;;;;:::i;:::-;;:::i;2524:157:62:-;;;:::i;1137:143:46:-;;;;;;:::i;:::-;;:::i;3197:142:62:-;;;;;;:::i;:::-;;:::i;1180:200:45:-;;;;;;:::i;:::-;;:::i;1435:411:58:-;;;:::i;:::-;;;;17286:25:112;;;17342:2;17327:18;;17320:34;;;;17370:18;;;17363:34;17428:2;17413:18;;17406:34;17273:3;17258:19;1435:411:58;17030:416:112;971:114:99;;;;;;:::i;:::-;;:::i;1904:275:47:-;;;;;;:::i;:::-;;:::i;3903:280:62:-;;;;;;:::i;:::-;;:::i;535:147:99:-;;;;;;:::i;:::-;;:::i;1581:342:45:-;;;;;;:::i;:::-;;:::i;3345:152:62:-;;;;;;:::i;:::-;;:::i;717:277:61:-;;;;;;:::i;:::-;;:::i;:::-;;;;20411:13:112;;20393:32;;20481:4;20469:17;;;20463:24;20441:20;;;20434:54;20532:17;;;20526:24;20504:20;;;20497:54;20381:2;20366:18;717:277:61;20191:366:112;374:155:99;513:9;465:23;:21;:23::i;:::-;:45;;;;:33;;:45;;;;;;;;;:57;;;;;;;;;;;;;;;;;;;;-1:-1:-1;374:155:99:o;2365:153:62:-;2410:13;2435:25;2463:23;:21;:23::i;:::-;2435:51;;2504:2;:7;;2497:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2365:153;:::o;3070:121::-;3137:7;3163:21;3176:7;3163:12;:21::i;:::-;3156:28;3070:121;-1:-1:-1;;3070:121:62:o;2687:377::-;2758:13;2774:16;2782:7;2774;:16::i;:::-;2758:32;;2810:5;-1:-1:-1;;;;;2804:11:62;:2;-1:-1:-1;;;;;2804:11:62;;2800:79;;2838:30;;-1:-1:-1;;;2838:30:62;;;;;;;;;;;2800:79;2892:10;-1:-1:-1;;;;;2892:19:62;;;;;;:59;;;2916:35;2933:5;2940:10;2916:16;:35::i;:::-;2915:36;2892:59;2888:138;;;2974:41;;-1:-1:-1;;;2974:41:62;;;;;;;;;;;2888:138;3036:21;3045:2;3049:7;3036:8;:21::i;:::-;2748:316;2687:377;;:::o;948:2304:59:-;1008:22;1033:17;:15;:17::i;:::-;1008:42;;1060:17;1087:12;1109:17;1136:15;1167:9;1162:2084;1186:7;:14;1182:1;:18;1162:2084;;;1228:5;:10;;:22;1239:7;1247:1;1239:10;;;;;;;;:::i;:::-;;;;;;;1228:22;;;;;;;;;;;1221:29;;1402:1;1382:4;:12;;:17;;;:21;:53;;;-1:-1:-1;1407:28:59;;;;;;;;;1382:53;:80;;;-1:-1:-1;1439:23:59;;;;;;1382:80;1378:155;;;1507:7;1515:1;1507:10;;;;;;;;:::i;:::-;;;;;;;1489:29;;-1:-1:-1;;;1489:29:59;;;;;;5449:25:112;;5437:2;5422:18;;5278:202;1489:29:59;;;;;;;;1378:155;1553:4;:9;;;1546:16;;1759:1123;2748:70;2757:60;2802:4;:14;;;2784:15;:32;;;;:::i;:::-;2757:22;;;;;:26;:60::i;:::-;2748:4;;:8;:70::i;:::-;2836:32;;;;1759:11;:1123::i;:::-;1747:1135;-1:-1:-1;2906:16:59;1747:1135;2906:4;:16;:::i;:::-;2936:12;;;:27;;;2977:28;;;:35;;-1:-1:-1;;2977:35:59;;;;;3026:14;;2896:26;;-1:-1:-1;3026:70:59;;-1:-1:-1;;;;;3026:14:59;3061:10;3081:4;2896:26;3026:34;:70::i;:::-;3110:15;;;:22;3165:13;;;;3180:18;;;;3110:89;;-1:-1:-1;;;3110:89:59;;-1:-1:-1;;;;;3110:22:59;;;;:39;;:89;;3158:4;;3165:13;;;;;3110:89;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3224:7;3232:1;3224:10;;;;;;;;:::i;:::-;;;;;;;3218:17;;;;;;;;;;1202:3;;;;:::i;:::-;;;;1162:2084;;;;998:2254;;;;;948:2304;:::o;759:124:58:-;820:8;847:17;:15;:17::i;:::-;:29;;;;:25;;:29;;-1:-1:-1;847:29:58;;;;;759:124::o;1097:599:47:-;1252:6;;1295:30;;;;1306:4;1295:30;:::i;:::-;1270:55;;1559:82;1573:4;1579:8;1589:51;;;;;;;;1614:10;-1:-1:-1;;;;;1589:51:47;;;;;1631:7;1589:51;;;1559:13;:82::i;:::-;-1:-1:-1;;;;1659:30:47;1097:599;-1:-1:-1;;;;;;;1097:599:47:o;760:205:99:-;814:14;851:17;:15;:17::i;:::-;849:29;;851:27;;849:29;;;:::i;:::-;;;;;;;840:38;;900:6;893:32;919:4;908:16;;;;;;;;:::i;:::-;;;;-1:-1:-1;;908:16:99;;;;;;;;;;893:32;;;:::i;:::-;;;;;;;;935:23;945:4;951:6;935:9;:23::i;:::-;760:205;;;:::o;1123:114:61:-;1169:7;1195:23;:21;:23::i;:::-;:35;;;1188:42;;1123:114;:::o;3115:224:45:-;858:13;898:4;-1:-1:-1;;;;;874:36:45;;:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;858:54;-1:-1:-1;926:10:45;-1:-1:-1;;;;;926:19:45;;;922:80;;968:23;;-1:-1:-1;;;968:23:45;;-1:-1:-1;;;;;3555:32:112;;968:23:45;;;3537:51:112;3510:18;;968:23:45;3391:203:112;922:80:45;3254:15:::1;3211:17;:15;:17::i;:::-;-1:-1:-1::0;;;;;3211:40:45;::::1;;::::0;;;:30:::1;::::0;;;::::1;:40;::::0;;;;;:58;;;;3284:48;;3316:15;;3211:40;3284:48:::1;::::0;::::1;770:249:::0;3115:224;;:::o;1151:133:60:-;1213:7;1239:38;1256:20;1270:5;1256:13;:20::i;:::-;1239:16;:38::i;3503:248:62:-;3598:39;3617:10;3629:7;3598:18;:39::i;:::-;3593:113;;3660:35;;-1:-1:-1;;;3660:35:62;;;;;;;;;;;3593:113;3716:28;3726:4;3732:2;3736:7;3716:9;:28::i;1444:1217:46:-;1496:7;1515:17;1535;:15;:17::i;:::-;:30;;;;:22;;;;;:30;;;;;1597:12;;;;1535:30;;-1:-1:-1;1597:12:46;1649:29;1597:12;1649:15;:29;:::i;:::-;1619:59;;1689:23;1705:6;1689:15;:23::i;:::-;1936:12;;;:21;1890:20;;1913:44;;;:133;;2023:12;;;:21;1991:55;;1999:46;;:19;;:23;:46::i;:::-;-1:-1:-1;;;720:4:54;1991:7:46;:55::i;:::-;1913:133;;;789:1:54;1913:133:46;1890:156;;2320:22;2345:38;2359:23;2367:4;:14;;;-1:-1:-1;;;2359:7:46;;:23;;;;:::i;:::-;2345:9;;;;;:13;:38::i;:::-;2320:63;;2588:66;2637:16;2588:44;2607:4;:12;;:24;;;2588:14;:18;;:44;;;;:::i;:::-;:48;;:66::i;:::-;2581:73;1444:1217;-1:-1:-1;;;;;;;1444:1217:46:o;2592:1347:50:-;2663:12;2687:22;2712:17;:15;:17::i;:::-;2687:42;-1:-1:-1;2739:17:50;;;;2817:1116;2837:18;;;2817:1116;;;2885:7;;2893:1;2885:10;;;;;;;:::i;:::-;;;;;;;;;;2916:18;;;;:10;;;:18;;;;;;;2952:13;;;;2916:18;;-1:-1:-1;2885:10:50;;-1:-1:-1;;;;;;;2952:13:50;2969:10;2952:27;2948:101;;3006:28;;-1:-1:-1;;;3006:28:50;;;;;5449:25:112;;;5422:18;;3006:28:50;5278:202:112;2948:101:50;3066:28;;;;;;;;;3062:104;;;3121:30;;-1:-1:-1;;;3121:30:50;;;;;5449:25:112;;;5422:18;;3121:30:50;5278:202:112;3062:104:50;3183:23;;;;;;3179:346;;;3226:28;;;:35;;-1:-1:-1;;3226:35:50;;;;;:28;3412:14;;;3382:46;;3404:23;;-1:-1:-1;;;720:4:54;3404:7:50;:23::i;:::-;3382:12;;;:17;;:21;:46::i;:::-;3371:57;;3179:346;;;3474:36;;-1:-1:-1;;;3474:36:50;;;;;5449:25:112;;;5422:18;;3474:36:50;5278:202:112;3179:346:50;3542:12;;3538:385;;3764:14;;:52;;-1:-1:-1;;;;;3764:14:50;3795:10;3807:8;3764:30;:52::i;:::-;3834:16;3842:8;3834:16;;:::i;:::-;3873:35;;3834:16;;-1:-1:-1;3901:6:50;;3891:8;;3879:10;;3873:35;;;;;3538:385;2857:3;;;;:::i;:::-;;;;2817:1116;;;;2677:1262;;;;2592:1347;;;;:::o;3757:140:62:-;3851:39;3868:4;3874:2;3878:7;3851:39;;;;;;;;;;;;:16;:39::i;1964:115:58:-;2016:11;;:::i;:::-;2046:17;:15;:17::i;:::-;:26;;;;:22;;;;:26;;;;;;;;;2039:33;;;;;;;;;-1:-1:-1;;;;;2039:33:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2039:33:58;1964:115::o;2246:113:62:-;2309:7;2335:17;2344:7;2335:8;:17::i;1230:1113:50:-;1295:12;1319:22;1344:17;:15;:17::i;:::-;1319:42;;1371:25;1399:23;:21;:23::i;:::-;1371:51;;1432:17;1459:27;1496:14;1520:16;1552:9;1547:790;1567:22;;;1547:790;;;1615:46;1634:10;1646:11;;1658:1;1646:14;;;;;;;:::i;:::-;;;;;;;1615:18;:46::i;:::-;1610:128;;1688:35;;-1:-1:-1;;;1688:35:50;;;;;;;;;;;1610:128;1751:21;1757:11;;1769:1;1757:14;;;;;;;:::i;:::-;;;;;;;1751:5;:21::i;:::-;1798:2;:12;;:28;1811:11;;1823:1;1811:14;;;;;;;:::i;:::-;;;;;;;1798:28;;;;;;;;;;;1786:40;;1849:9;:16;;;1840:25;;1886:5;:10;;:18;1897:6;1886:18;;;;;;;;;;;1879:25;;1923:4;:12;;:23;;;;;;;;;;;;1919:324;;;1977:42;2003:4;2009:9;1977:25;:42::i;:::-;1966:53;;1919:324;;;2062:12;;;:17;;:22;2058:112;;2115:36;;-1:-1:-1;;;2115:36:50;;;;;5449:25:112;;;5422:18;;2115:36:50;5278:202:112;2058:112:50;2198:30;2212:4;2218:9;2198:13;:30::i;:::-;2187:41;;1919:324;2261:35;;2289:6;;2279:8;;2267:10;;2261:35;;;;;2310:16;2318:8;2310:16;;:::i;:::-;;-1:-1:-1;1591:3:50;;;;:::i;:::-;;;;1547:790;;;;1309:1034;;;;;;1230:1113;;;;:::o;1964:276:62:-;2027:7;2046:25;2074:23;:21;:23::i;:::-;2046:51;-1:-1:-1;;;;;;2112:19:62;;2108:92;;2154:35;;-1:-1:-1;;;2154:35:62;;;;;;;;;;;2108:92;-1:-1:-1;;;;;2216:17:62;;;;;;;:10;;;;:17;;-1:-1:-1;2216:17:62;;;;;1964:276::o;3567:263:45:-;858:13;898:4;-1:-1:-1;;;;;874:36:45;;:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;858:54;-1:-1:-1;926:10:45;-1:-1:-1;;;;;926:19:45;;;922:80;;968:23;;-1:-1:-1;;;968:23:45;;-1:-1:-1;;;;;3555:32:112;;968:23:45;;;3537:51:112;3510:18;;968:23:45;3391:203:112;922:80:45;3737:13:::1;3679:17;:15;:17::i;:::-;-1:-1:-1::0;;;;;3679:55:45;::::1;;::::0;;;:45:::1;::::0;;;::::1;:55;::::0;;;;;:71;;;;3765:58;;3809:13;;3679:55;3765:58:::1;::::0;::::1;770:249:::0;3567:263;;:::o;2527:352:58:-;2625:20;2647:35;2694:22;2719:17;:15;:17::i;:::-;-1:-1:-1;;;;;2761:28:58;;;;;;;:18;;;:28;;;;;;;;;2829:33;;;;:43;;;;;;2761:28;;2527:352;-1:-1:-1;;;2527:352:58:o;2084:296:45:-;2151:20;858:13;898:4;-1:-1:-1;;;;;874:36:45;;:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;858:54;-1:-1:-1;926:10:45;-1:-1:-1;;;;;926:19:45;;;922:80;;968:23;;-1:-1:-1;;;968:23:45;;-1:-1:-1;;;;;3555:32:112;;968:23:45;;;3537:51:112;3510:18;;968:23:45;3391:203:112;922:80:45;2183:22:::1;2208:17;:15;:17::i;:::-;2251:18;::::0;::::1;:20:::0;;2183:42;;-1:-1:-1;2251:18:45::1;:20;::::0;::::1;:::i;:::-;::::0;;;-1:-1:-1;2281:27:45::1;::::0;;;:13:::1;::::0;::::1;:27;::::0;;;;;:40;;;2337:36;2236:35;;-1:-1:-1;2236:35:45;;2311:10;;2337:36:::1;::::0;::::1;2173:207;770:249:::0;2084:296;;;:::o;2524:157:62:-;2571:13;2596:25;2624:23;:21;:23::i;:::-;2596:51;;2665:2;:9;;2658:16;;;;;:::i;1137:143:46:-;1196:9;1191:83;1215:4;:11;1211:1;:15;1191:83;;;1247:16;1255:4;1260:1;1255:7;;;;;;;;:::i;:::-;;;;;;;1247;:16::i;:::-;1228:3;;;;:::i;:::-;;;;1191:83;;;;1137:143;:::o;3197:142:62:-;3282:50;3301:10;3313:8;3323;3282:18;:50::i;1180:200:45:-;858:13;898:4;-1:-1:-1;;;;;874:36:45;;:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;858:54;-1:-1:-1;926:10:45;-1:-1:-1;;;;;926:19:45;;;922:80;;968:23;;-1:-1:-1;;;968:23:45;;-1:-1:-1;;;;;3555:32:112;;968:23:45;;;3537:51:112;3510:18;;968:23:45;3391:203:112;922:80:45;1302:18:::1;1265:17;:15;:17::i;:::-;:25;;:55:::0;1335:38:::1;::::0;1354:18;;1335:38:::1;::::0;1265:34:::1;::::0;1335:38:::1;770:249:::0;1180:200;:::o;1435:411:58:-;1507:22;1531:23;1556:17;1575:20;1611:22;1636:17;:15;:17::i;:::-;1684:25;;;;:13;;;1737:22;1781:15;;1684:25;1821:18;;;;1684:25;;1737:22;;-1:-1:-1;1781:15:58;;-1:-1:-1;1821:18:58;-1:-1:-1;1435:411:58;-1:-1:-1;;1435:411:58:o;971:114:99:-;1074:4;1041:17;:15;:17::i;:::-;:30;;;;:22;;;;:30;;;;;;;;;:37;;;;-1:-1:-1;;;;;;1041:37:99;;;-1:-1:-1;;;;;1041:37:99;;;;;;;;;;-1:-1:-1;1041:37:99;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1041:37:99;;;;;;-1:-1:-1;;1041:37:99;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;971:114:99:o;1904:275:47:-;1971:9;1966:207;1986:15;;;1966:207;;;2022:4;;2027:1;2022:7;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;:18;;;;;;;:::i;:::-;-1:-1:-1;;;;;2022:31:47;;2054:10;2074:4;2081;;2086:1;2081:7;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;2022:74;;-1:-1:-1;;;;;;2022:74:47;;;;;;;;;;;2081:14;;;;2022:74;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2110:52;2124:4;;2129:1;2124:7;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;:12;;;;;;;:::i;:::-;2110:52;;;:::i;:::-;2138:10;2150:4;;2155:1;2150:7;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;2110:52;;;;;;;;;;:::i;:::-;:13;:52::i;:::-;-1:-1:-1;2003:3:47;;;;:::i;:::-;;;;1966:207;;3903:280:62;4021:39;4040:10;4052:7;4021:18;:39::i;:::-;4016:113;;4083:35;;-1:-1:-1;;;4083:35:62;;;;;;;;;;;4016:113;4138:38;4152:4;4158:2;4162:7;4171:4;4138:13;:38::i;:::-;3903:280;;;;:::o;535:147:99:-;615:15;652:23;661:2;665:9;652:8;:23::i;:::-;642:33;535:147;-1:-1:-1;;;535:147:99:o;1581:342:45:-;858:13;898:4;-1:-1:-1;;;;;874:36:45;;:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;858:54;-1:-1:-1;926:10:45;-1:-1:-1;;;;;926:19:45;;;922:80;;968:23;;-1:-1:-1;;;968:23:45;;-1:-1:-1;;;;;3555:32:112;;968:23:45;;;3537:51:112;3510:18;;968:23:45;3391:203:112;922:80:45;1737:44:::1;1763:17;1778:1;1763:10;-1:-1:-1::0;;;1771:1:45::1;1763:7;:10::i;:::-;:14:::0;::::1;:17::i;:::-;1737:21:::0;2445:30:86;;;2372:110;1737:44:45::1;1729:57;;;::::0;-1:-1:-1;;;1729:57:45;;26298:2:112;1729:57:45::1;::::0;::::1;26280:21:112::0;-1:-1:-1;26317:18:112;;;26310:29;26356:18;;1729:57:45::1;26096:284:112::0;1729:57:45::1;1836:21;1796:17;:15;:17::i;:::-;:37:::0;;:61;1872:44:::1;::::0;1894:21;;1872:44:::1;::::0;;;::::1;770:249:::0;1581:342;:::o;3345:152:62:-;3433:4;3456:34;3474:5;3481:8;3456:17;:34::i;717:277:61:-;775:16;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;775:16:61;803:25;831:23;:21;:23::i;:::-;803:51;;879:2;:14;;;869:7;:24;865:84;;;916:22;;-1:-1:-1;;;916:22:61;;;;;;;;;;;865:84;966:21;;;;:12;;:21;;;;;;;;;959:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;959:28:61;717:277::o;1221:215:54:-;510:48;;1221:215::o;5221:228:63:-;5283:7;5307:16;5315:7;5307;:16::i;:::-;5302:77;;5346:22;;-1:-1:-1;;;5346:22:63;;;;;;;;;;;5302:77;5396:23;:21;:23::i;:::-;:46;;;;:37;;:46;;-1:-1:-1;5396:46:63;;;;-1:-1:-1;;;;;5396:46:63;;5221:228::o;3901:219::-;3967:25;3995:23;:21;:23::i;:::-;4029:25;;;;:16;;;:25;;;;;:30;;-1:-1:-1;;;;;;4029:30:63;-1:-1:-1;;;;;4029:30:63;;;;;:16;-1:-1:-1;4069:44:63;4082:17;4029:25;4082:8;:17::i;:::-;2687:377:62;;1002:217:54;438:41;;1002:217::o;919:110:86:-;973:3;1004:17;1020:1;1015;1004:17;:::i;1088:112::-;1142:7;-1:-1:-1;;;1169:17:86;1184:1;1169;:17;:::i;:::-;1168:25;;;;:::i;2768:104::-;2826:7;2856:1;2852;:5;:13;;2864:1;2852:13;;;-1:-1:-1;2860:1:86;;2768:104;-1:-1:-1;2768:104:86:o;237:230:83:-;349:39;;-1:-1:-1;;;349:39:83;;-1:-1:-1;;;;;349:21:83;;;;;:39;;371:4;;377:2;;381:6;;349:39;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;344:117;;411:39;;-1:-1:-1;;;411:39:83;;-1:-1:-1;;;;;27302:15:112;;;411:39:83;;;27284:34:112;27354:15;;;27334:18;;;27327:43;27406:15;;27386:18;;;27379:43;27219:18;;411:39:83;27030:398:112;5421:1155:49;5550:16;;:::i;:::-;5578:34;5615:46;5642:4;5647:1;5642:7;;;;;;;;:::i;:::-;;;;;;;5651:4;5657:3;5615:26;:46::i;:::-;5578:83;;5769:29;5801:23;:21;:23::i;:::-;:35;;;:39;;5839:1;5801:39;:::i;:::-;5871:11;;5769:71;;-1:-1:-1;5850:18:49;;5963:146;5987:10;5983:1;:14;5963:146;;;6032:30;6041:4;6046:1;6041:7;;;;;;;;:::i;:::-;;;;;;;6050:11;6032:8;:30::i;:::-;6018:44;;6084:4;6089:1;6084:7;;;;;;;;:::i;:::-;;;;;;;:14;;;6076:22;;;;;:::i;:::-;;-1:-1:-1;5999:3:49;;;;:::i;:::-;;;;5963:146;;;;6294:4;6287;:11;6283:71;;;6321:22;;-1:-1:-1;;;6321:22:49;;;;;5449:25:112;;;5422:18;;6321:22:49;5278:202:112;6283:71:49;6370:80;6386:11;6399:4;6405:3;6410:10;6422:4;6428:21;6370:15;:80::i;:::-;6363:87;;6505:4;6460:17;:15;:17::i;:::-;6483:18;;;;;;6460:42;;;;:22;;;;:42;;;;;;;;;:49;;;;-1:-1:-1;;;;;;6460:49:49;;;-1:-1:-1;;;;;6460:49:49;;;;;;;;;;-1:-1:-1;6460:49:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6460:49:49;;;;;;-1:-1:-1;;6460:49:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6532:18;6552:16;;6525:44;;6552:16;;6563:4;;6552:16;;:::i;:::-;;;;-1:-1:-1;;6552:16:49;;;;;;;;;;6525:44;;;:::i;:::-;;;;;;;;5568:1008;;;;5421:1155;;;;;:::o;1703:462:60:-;1769:7;454:220;1902:5;:17;;;1941:5;:17;;;1980:5;:14;;;2016:5;:20;;;2058:5;:13;;;2093:33;2109:5;:16;;;2093:15;:33::i;:::-;1834:310;;;;;;27762:25:112;;;;-1:-1:-1;;;;;27823:32:112;;;27803:18;;;27796:60;;;;27872:18;;;27865:34;;;;27915:18;;;27908:34;;;;27958:19;;;27951:35;28002:19;;;27995:35;28046:19;;;28039:35;27734:19;;1834:310:60;;;;;;;;;;;;;1807:351;;;;;;1788:370;;1703:462;;;:::o;4348:165:14:-;4425:7;4451:55;4473:20;:18;:20::i;:::-;4495:10;8470:57:13;;-1:-1:-1;;;8470:57:13;;;30462:27:112;30505:11;;;30498:27;;;30541:12;;;30534:28;;;8434:7:13;;30578:12:112;;8470:57:13;;;;;;;;;;;;8460:68;;;;;;8453:75;;8341:194;;;;;4966:249:63;5051:4;5067:13;5083:17;5092:7;5083:8;:17::i;:::-;5067:33;;5129:5;-1:-1:-1;;;;;5118:16:63;:7;-1:-1:-1;;;;;5118:16:63;;:53;;;;5138:33;5156:5;5163:7;5138:17;:33::i;:::-;5118:89;;;;5200:7;-1:-1:-1;;;;;5175:32:63;:21;5188:7;5175:12;:21::i;:::-;-1:-1:-1;;;;;5175:32:63;;5118:89;5110:98;4966:249;-1:-1:-1;;;;4966:249:63:o;3328:567::-;3409:25;3437:23;:21;:23::i;:::-;3409:51;;3496:4;-1:-1:-1;;;;;3475:25:63;:17;3484:7;3475:8;:17::i;:::-;-1:-1:-1;;;;;3475:25:63;;3471:97;;3523:34;;-1:-1:-1;;;3523:34:63;;;;;;;;;;;3471:97;-1:-1:-1;;;;;3581:16:63;;3577:86;;3620:32;;-1:-1:-1;;;3620:32:63;;;;;;;;;;;3577:86;3724:29;3741:1;3745:7;3724:8;:29::i;:::-;-1:-1:-1;;;;;3764:16:63;;;;;;:10;;;:16;;;;;:21;;3784:1;;3764:16;:21;;3784:1;;3764:21;:::i;:::-;;;;-1:-1:-1;;;;;;;3795:14:63;;;;;;:10;;;:14;;;;;:19;;3813:1;;3795:14;:19;;3813:1;;3795:19;:::i;:::-;;;;-1:-1:-1;;3824:17:63;;;;:8;;;:17;;;;;:22;;-1:-1:-1;;;;;;3824:22:63;-1:-1:-1;;;;;3824:22:63;;;;;3857:31;2687:377:62;3506:371:46;3571:17;3591;:15;:17::i;:::-;:22;;:30;3614:6;3591:30;;;;;;;;;;;3571:50;;3654:4;:12;;;3636:15;:30;3632:118;;;3718:12;;;;;3689:50;;-1:-1:-1;;;3689:50:46;;;;;15075:25:112;15116:18;;;15109:34;;;15048:18;;3689:50:46;14901:248:112;3632:118:46;3763:12;;;:17;:22;;;:49;;-1:-1:-1;3789:23:46;;;;;;3763:49;3759:112;;;3835:25;;-1:-1:-1;;;3835:25:46;;;;;5449::112;;;5422:18;;3835:25:46;5278:202:112;1804:110:86;1862:3;1905:1;1894:7;-1:-1:-1;;;1894:1:86;:7;:::i;557:118::-;607:3;638:29;665:1;649;638:29;:::i;473:211:83:-;567:29;;-1:-1:-1;;;567:29:83;;-1:-1:-1;;;;;28277:32:112;;;567:29:83;;;28259:51:112;28326:18;;;28319:34;;;567:17:83;;;;;28232:18:112;;567:29:83;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;562:116;;619:48;;-1:-1:-1;;;619:48:83;;-1:-1:-1;;;;;27302:15:112;;;619:48:83;;;27284:34:112;657:4:83;27334:18:112;;;27327:43;27406:15;;27386:18;;;27379:43;27219:18;;619:48:83;27030:398:112;4671:289:63;4729:7;4748:25;4776:23;:21;:23::i;:::-;4810:13;4826:17;;;:8;;;:17;;;;;;4748:51;;-1:-1:-1;;;;;;4826:17:63;;4853:79;;4899:22;;-1:-1:-1;;;4899:22:63;;;;;;;;;;;2984:338;3035:25;3063:23;:21;:23::i;:::-;3035:51;;3097:13;3113:17;3122:7;3113:8;:17::i;:::-;3097:33;;3168:29;3185:1;3189:7;3168:8;:29::i;:::-;-1:-1:-1;;;;;3208:17:63;;;;;;:10;;;:17;;;;;:22;;3229:1;;3208:17;:22;;3229:1;;3208:22;:::i;:::-;;;;-1:-1:-1;;3247:17:63;;;;:8;;;:17;;;;;3240:24;;-1:-1:-1;;;;;;3240:24:63;;;3275:40;;3288:5;;3256:7;3275:40;:::i;5227:373:50:-;5519:15;;;;5497:12;;;:17;5350:12;;5497:38;;:17;:21;:38::i;:::-;5545:14;;5490:45;;-1:-1:-1;5545:48:50;;-1:-1:-1;;;;;5545:14:50;5576:10;5490:45;5545:30;:48::i;4159:815::-;4248:12;4272:17;4312:4;:9;;;4292:4;:12;;:17;;;:29;;;;:::i;:::-;4348:32;;;;4272:49;;-1:-1:-1;4335:45:50;;4331:579;;4604:18;;;;4592:30;;:9;:30;:::i;:::-;4572:16;;:51;;;;:::i;:::-;4565:58;;4331:579;;;4890:9;;;;4869:16;;4856:30;;:9;:30;:::i;:::-;4855:44;;;;:::i;:::-;4836:16;;:63;;;;:::i;:::-;4829:70;;4331:579;4919:14;;:48;;-1:-1:-1;;;;;4919:14:50;4950:10;4962:4;4919:30;:48::i;:::-;4262:712;4159:815;;;;:::o;2758:635:46:-;2813:17;2833;:15;:17::i;:::-;2856:10;;2833:34;;;;:22;;;;;:34;;;;;2894:10;;2833:34;;-1:-1:-1;2878:27:46;;:15;:27::i;:::-;2915:13;2931:17;2937:3;:10;;;2931:5;:17::i;:::-;3103:23;;;:30;;-1:-1:-1;;3103:30:46;3129:4;3103:30;;;:12;;;3143:25;;;3178:14;;2915:33;;-1:-1:-1;3178:68:46;;-1:-1:-1;;;;;3178:14:46;3213:10;3233:4;2915:33;3178:34;:68::i;:::-;3256:15;;;:22;3311:6;;;;3319:18;;;;3256:82;;-1:-1:-1;;;3256:82:46;;-1:-1:-1;;;;;3256:22:46;;;;:39;;:82;;3304:4;;3256:82;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3358:10:46;;3370:15;;;;;;;28560:32:112;;;28640:17;;28634:24;-1:-1:-1;;;;;28630:50:112;28608:20;;;28601:80;3370:15:46;;;;;;;;;28533:18:112;;;;3370:15:46;;;;3358:10;;-1:-1:-1;3354:32:46;;-1:-1:-1;3354:32:46;;3370:15;3354:32;:::i;:::-;;;;;;;;2803:590;;2758:635;:::o;4126:353:63:-;4221:25;4249:23;:21;:23::i;:::-;4221:51;;4296:8;-1:-1:-1;;;;;4287:17:63;:5;-1:-1:-1;;;;;4287:17:63;;4283:78;;4327:23;;-1:-1:-1;;;4327:23:63;;;;;;;;;;;4283:78;-1:-1:-1;;;;;4370:26:63;;;;;;;:19;;;:26;;;;;;;;:36;;;;;;;;;:47;;-1:-1:-1;;4370:47:63;;;;;;;4427:45;2687:377:62;1910:280:63;2014:28;2024:4;2030:2;2034:7;2014:9;:28::i;:::-;2057:47;2080:4;2086:2;2090:7;2099:4;2057:22;:47::i;:::-;2052:132;;2127:46;;-1:-1:-1;;;2127:46:63;;;;;;;;;;;678:273:64;754:15;781:25;809:23;:21;:23::i;:::-;781:51;;855:2;:14;;;853:16;;;;;:::i;:::-;;;;;-1:-1:-1;879:21:64;;;;:12;;;:21;;;;;;;;;:33;;;;;;;;;;;;;;;;;;;;;853:16;-1:-1:-1;922:22:64;932:2;853:16;922:9;:22::i;1454:110:86:-;1508:3;1539:17;1555:1;1550;1539:17;:::i;5455:170:63:-;5538:4;5561:23;:21;:23::i;:::-;-1:-1:-1;;;;;5561:47:63;;;;;;;:40;;;;;:47;;;;;;;;:57;;;;;;;;;;-1:-1:-1;5561:57:63;;;;;5455:170::o;4485:180::-;4542:4;4558:25;4586:23;:21;:23::i;:::-;4656:1;4627:17;;;:8;;:17;;-1:-1:-1;;4627:17:63;;;;-1:-1:-1;;;;;4627:17:63;:31;;;4485:180::o;7022:763:49:-;7171:22;;:::i;:::-;7224:554;;;;;;;;7276:1;7224:554;;;;7307:13;:19;;;:31;;;-1:-1:-1;;;;;7224:554:49;;;;;7365:13;:19;;;:27;;;7224:554;;;;7428:13;:19;;;:28;;;7224:554;;;;7495:13;:19;;;:31;;;7224:554;;;;7565:13;:19;;;:31;;;7224:554;;;;7620:4;-1:-1:-1;;;;;7224:554:49;;;;;7647:3;7224:554;;;;7678:17;:15;:17::i;:::-;7676:29;;7678:27;;7676:29;;;:::i;:::-;;;;;-1:-1:-1;7224:554:49;;7205:573;7022:763;-1:-1:-1;;;;7022:763:49:o;1424:3701::-;1539:22;;:::i;:::-;1573:14;1590:18;1604:3;1590:13;:18::i;:::-;1573:35;;1618:16;1674:11;:21;;;-1:-1:-1;;;;;1649:46:49;:3;:9;;;:21;;;-1:-1:-1;;;;;1649:46:49;;1645:232;;1821:21;;;;1844:9;;;;;:21;1795:71;;-1:-1:-1;;;1795:71:49;;-1:-1:-1;;;;;28950:15:112;;;1795:71:49;;;28932:34:112;29002:15;;28982:18;;;28975:43;28867:18;;1795:71:49;28692:332:112;1645:232:49;1911:11;:19;;;1890:3;:9;;;:17;;;:40;1886:231;;2067:11;:19;;;2088:3;:9;;;:17;;;2046:60;;-1:-1:-1;;;2046:60:49;;;;;;;;15075:25:112;;;15131:2;15116:18;;15109:34;15063:2;15048:18;;14901:248;1886:231:49;2127:43;2143:3;:9;;;2154:11;:15;;;2127;:43::i;:::-;2314:37;2329:3;:9;;;:21;;;2314:3;:10;;;:14;;:37;;;;:::i;:::-;2383:19;;2299:52;;-1:-1:-1;2383:37:49;;2299:52;2383:23;:37::i;:::-;2361:59;;;-1:-1:-1;;;;2660:247:49;;;2754:10;;;;2816:19;;2782:73;;2808:46;;2816:37;;2840:12;2816:23;:37::i;2808:46::-;2782:9;;;;:21;;;;:25;:73::i;:::-;2873:3;:9;;;2714:182;;-1:-1:-1;;;2714:182:49;;;;;;;;;;:::i;2660:247::-;3050:11;:28;;;3029:3;:9;;;:18;;;:49;3025:129;;;3125:9;;;;;:18;;3094:28;;;:49;3025:129;3191:11;:31;;;3167:3;:9;;;:21;;;:55;3163:141;;;3272:9;;;;:21;;;3238:31;;;:55;3163:141;3341:11;:31;;;3317:3;:9;;;:21;;;:55;3313:141;;;3422:9;;;;:21;;;3388:31;;;:55;3313:141;4522:31;;;;:35;;4556:1;4522:35;:::i;:::-;4488:11;:31;;;:69;4484:245;;;4624:31;;;;4673;;;;4580:138;;-1:-1:-1;;;4580:138:49;;;;;15075:25:112;;;;15116:18;;;15109:34;15048:18;;4580:138:49;14901:248:112;4484:245:49;4814:79;4856:6;4864:11;:16;;;4882:3;:10;;;4814:11;:21;;;-1:-1:-1;;;;;4814:41:49;;;:79;;;;;;:::i;:::-;4990:98;4999:6;5007:80;;;;;;;;5026:3;:10;;;5007:80;;;;5045:12;5007:80;;;;5067:11;:18;;;5007:80;;;4990:8;:98::i;:::-;-1:-1:-1;5106:11:49;;1424:3701;-1:-1:-1;;;;1424:3701:49:o;8319:2665::-;8556:11;;:::i;:::-;8579:22;8604:17;:15;:17::i;:::-;8579:42;;8769:15;8805:11;:28;;;8787:15;:46;;;;:::i;:::-;8769:64;;8843:22;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8843:22:49;9589:21;;;;;-1:-1:-1;;;;;9570:41:49;;;;;:18;;;:41;;;;;;;9557:54;;:10;:54;:::i;:::-;9527:27;;;;:84;;;;9641:1336;;;;;;;;9675:21;;;;-1:-1:-1;;;;;9641:1336:49;;;;;;;;;;;;9753:19;;9641:1336;;;;9801:15;9641:1336;;;;;;;;;;;10195:83;;;;;;;10214:13;;;:22;10195:83;;10251:25;;;;10195:83;;;;9641:1336;;;;10524:19;;;;-1:-1:-1;10510:34:49;;;:13;;;;:34;;;;;;;9641:1336;;;;;;;;;;;;;;;;;;;-1:-1:-1;9641:1336:49;;;;;;;;;;;;;;;;;;;8319:2665::o;1421:145:60:-;1489:7;762:47;1554:3;1525:33;;;;;;;;;:::i;3152:308:14:-;3205:7;3236:4;-1:-1:-1;;;;;3245:12:14;3228:29;;:66;;;;;3278:16;3261:13;:33;3228:66;3224:230;;;-1:-1:-1;3317:24:14;;3152:308::o;3224:230::-;-1:-1:-1;3642:73:14;;;3401:10;3642:73;;;;32711:25:112;;;;3413:12:14;32752:18:112;;;32745:34;3427:15:14;32795:18:112;;;32788:34;3686:13:14;32838:18:112;;;32831:34;3709:4:14;32881:19:112;;;;32874:61;;;;3642:73:14;;;;;;;;;;32683:19:112;;;;3642:73:14;;;3632:84;;;;;;3152:308::o;1035:869:63:-;1185:4;-1:-1:-1;;;;;1205:13:63;;1465:19:10;:23;1201:697:63;;1240:69;;-1:-1:-1;;;1240:69:63;;-1:-1:-1;;;;;1240:36:63;;;;;:69;;1277:10;;1289:4;;1295:7;;1304:4;;1240:69;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1240:69:63;;;;;;;;-1:-1:-1;;1240:69:63;;;;;;;;;;;;:::i;:::-;;;1236:610;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1506:6;:13;1523:1;1506:18;1502:330;;1555:46;;-1:-1:-1;;;1555:46:63;;;;;;;;;;;1502:330;1784:6;1778:13;1769:6;1765:2;1761:15;1754:38;1236:610;-1:-1:-1;;;;;;1389:51:63;-1:-1:-1;;;1389:51:63;;-1:-1:-1;1382:58:63;;1201:697;-1:-1:-1;1883:4:63;1035:869;;;;;;:::o;2196:100::-;2263:26;2273:2;2277:7;2263:26;;;;;;;;;;;;:9;:26::i;1077:1776:48:-;1144:14;1170:22;1195:17;:15;:17::i;:::-;1170:42;;1569:52;1583:22;1595:3;:9;;;1583:11;:22::i;:::-;1607:13;;1569;:52::i;:::-;2144:9;;;;;:21;-1:-1:-1;;;;;2110:56:48;2083:24;2110:56;;;:33;;;:56;;;;;;;;2183:10;;;;1560:61;;-1:-1:-1;2110:56:48;2183:29;-1:-1:-1;2177:140:48;;2266:3;:9;;;2277:3;:10;;;2289:16;2236:70;;-1:-1:-1;;;2236:70:48;;;;;;;;;;:::i;2177:140::-;2481:3;:9;;;:24;;;2463:15;:42;2459:132;;;2544:9;;;;;2555:24;;;;2528:52;;-1:-1:-1;;;2528:52:48;;;;2555:24;2528:52;;;:::i;2459:132::-;2761:5;:18;;;2740:3;:9;;;:17;;;:39;2736:111;;2817:5;:18;;;2802:34;;-1:-1:-1;;;2802:34:48;;;;;;5449:25:112;;5437:2;5422:18;;5278:202;2736:111:48;1160:1693;;1077:1776;;;:::o;3076:301::-;3272:16;;;;:32;;3292:11;3272:19;:32::i;:::-;3267:104;;3341:5;3348:11;3327:33;;-1:-1:-1;;;3327:33:48;;;;;;;;;:::i;380:118:86:-;430:3;461:29;488:1;472;461:29;:::i;2302:258:63:-;2388:18;2394:2;2398:7;2388:5;:18::i;:::-;2421:53;2452:1;2456:2;2460:7;2469:4;2421:22;:53::i;:::-;2416:138;;2497:46;;-1:-1:-1;;;2497:46:63;;;;;;;;;;;3661:227:13;3739:7;3759:17;3778:18;3800:27;3811:4;3817:9;3800:10;:27::i;:::-;3758:69;;;;3837:18;3849:5;3837:11;:18::i;:::-;-1:-1:-1;3872:9:13;3661:227;-1:-1:-1;;;3661:227:13:o;245:139:85:-;316:4;348:1;:4;;;340:1;:4;;;:12;:36;;;;-1:-1:-1;;368:8:85;356;;-1:-1:-1;;;;;356:20:85;;;;;;;245:139::o;2566:412:63:-;2629:25;2657:23;:21;:23::i;:::-;2629:51;-1:-1:-1;;;;;;2695:16:63;;2691:82;;2734:28;;-1:-1:-1;;;2734:28:63;;;;;;;;;;;2691:82;2786:16;2794:7;2786;:16::i;:::-;2782:80;;;2825:26;;-1:-1:-1;;;2825:26:63;;;;;;;;;;;2782:80;-1:-1:-1;;;;;2872:14:63;;;;;;:10;;;:14;;;;;:19;;2890:1;;2872:14;:19;;2890:1;;2872:19;:::i;:::-;;;;-1:-1:-1;;2901:17:63;;;;:8;;;:17;;;;;:22;;-1:-1:-1;;;;;;2901:22:63;-1:-1:-1;;;;;2901:22:63;;;;;2934:37;;2901:22;:17;2934:37;:::i;2145:730:13:-;2226:7;2235:12;2263:9;:16;2283:2;2263:22;2259:610;;2599:4;2584:20;;2578:27;2648:4;2633:20;;2627:27;2705:4;2690:20;;2684:27;2301:9;2676:36;2746:25;2757:4;2676:36;2578:27;2627;2746:10;:25::i;:::-;2739:32;;;;;;;;;2259:610;-1:-1:-1;2818:1:13;;-1:-1:-1;2822:35:13;2259:610;2145:730;;;;;:::o;570:511::-;647:20;638:5;:29;;;;;;;;:::i;:::-;;634:441;;570:511;:::o;634:441::-;743:29;734:5;:38;;;;;;;;:::i;:::-;;730:345;;788:34;;-1:-1:-1;;;788:34:13;;33280:2:112;788:34:13;;;33262:21:112;33319:2;33299:18;;;33292:30;33358:26;33338:18;;;33331:54;33402:18;;788:34:13;33078:348:112;730:345:13;852:35;843:5;:44;;;;;;;;:::i;:::-;;839:236;;903:41;;-1:-1:-1;;;903:41:13;;33633:2:112;903:41:13;;;33615:21:112;33672:2;33652:18;;;33645:30;33711:33;33691:18;;;33684:61;33762:18;;903:41:13;33431:355:112;839:236:13;974:30;965:5;:39;;;;;;;;:::i;:::-;;961:114;;1020:44;;-1:-1:-1;;;1020:44:13;;33993:2:112;1020:44:13;;;33975:21:112;34032:2;34012:18;;;34005:30;34071:34;34051:18;;;34044:62;-1:-1:-1;;;34122:18:112;;;34115:32;34164:19;;1020:44:13;33791:398:112;5069:1494:13;5195:7;;6119:66;6106:79;;6102:161;;;-1:-1:-1;6217:1:13;;-1:-1:-1;6221:30:13;6201:51;;6102:161;6374:24;;;6357:14;6374:24;;;;;;;;;34421:25:112;;;34494:4;34482:17;;34462:18;;;34455:45;;;;34516:18;;;34509:34;;;34559:18;;;34552:34;;;6374:24:13;;34393:19:112;;6374:24:13;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6374:24:13;;-1:-1:-1;;6374:24:13;;;-1:-1:-1;;;;;;;6412:20:13;;6408:101;;6464:1;6468:29;6448:50;;;;;;;6408:101;6527:6;-1:-1:-1;6535:20:13;;-1:-1:-1;5069:1494:13;;;;;;;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;14:127:112:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:253;218:2;212:9;260:4;248:17;;-1:-1:-1;;;;;280:34:112;;316:22;;;277:62;274:88;;;342:18;;:::i;:::-;378:2;371:22;146:253;:::o;404:257::-;476:4;470:11;;;508:17;;-1:-1:-1;;;;;540:34:112;;576:22;;;537:62;534:88;;;602:18;;:::i;666:255::-;738:2;732:9;780:6;768:19;;-1:-1:-1;;;;;802:34:112;;838:22;;;799:62;796:88;;;864:18;;:::i;926:275::-;997:2;991:9;1062:2;1043:13;;-1:-1:-1;;1039:27:112;1027:40;;-1:-1:-1;;;;;1082:34:112;;1118:22;;;1079:62;1076:88;;;1144:18;;:::i;:::-;1180:2;1173:22;926:275;;-1:-1:-1;926:275:112:o;1206:349::-;1262:5;1310:4;1298:9;1293:3;1289:19;1285:30;1282:50;;;1328:1;1325;1318:12;1282:50;1350:22;;:::i;:::-;1341:31;;1408:9;1395:23;1388:5;1381:38;1479:2;1468:9;1464:18;1451:32;1446:2;1439:5;1435:14;1428:56;1544:2;1533:9;1529:18;1516:32;1511:2;1504:5;1500:14;1493:56;1206:349;;;;:::o;1560:301::-;1656:6;1664;1717:3;1705:9;1696:7;1692:23;1688:33;1685:53;;;1734:1;1731;1724:12;1685:53;1757:47;1796:7;1785:9;1757:47;:::i;:::-;1747:57;1851:2;1836:18;;;;1823:32;;-1:-1:-1;;;1560:301:112:o;1866:131::-;-1:-1:-1;;;;;;1940:32:112;;1930:43;;1920:71;;1987:1;1984;1977:12;2002:245;2060:6;2113:2;2101:9;2092:7;2088:23;2084:32;2081:52;;;2129:1;2126;2119:12;2081:52;2168:9;2155:23;2187:30;2211:5;2187:30;:::i;2444:423::-;2486:3;2524:5;2518:12;2551:6;2546:3;2539:19;2576:1;2586:162;2600:6;2597:1;2594:13;2586:162;;;2662:4;2718:13;;;2714:22;;2708:29;2690:11;;;2686:20;;2679:59;2615:12;2586:162;;;2590:3;2793:1;2786:4;2777:6;2772:3;2768:16;2764:27;2757:38;2856:4;2849:2;2845:7;2840:2;2832:6;2828:15;2824:29;2819:3;2815:39;2811:50;2804:57;;;2444:423;;;;:::o;2872:220::-;3021:2;3010:9;3003:21;2984:4;3041:45;3082:2;3071:9;3067:18;3059:6;3041:45;:::i;3097:180::-;3156:6;3209:2;3197:9;3188:7;3184:23;3180:32;3177:52;;;3225:1;3222;3215:12;3177:52;-1:-1:-1;3248:23:112;;3097:180;-1:-1:-1;3097:180:112:o;3599:131::-;-1:-1:-1;;;;;3674:31:112;;3664:42;;3654:70;;3720:1;3717;3710:12;3735:134;3803:20;;3832:31;3803:20;3832:31;:::i;3874:315::-;3942:6;3950;4003:2;3991:9;3982:7;3978:23;3974:32;3971:52;;;4019:1;4016;4009:12;3971:52;4058:9;4045:23;4077:31;4102:5;4077:31;:::i;:::-;4127:5;4179:2;4164:18;;;;4151:32;;-1:-1:-1;;;3874:315:112:o;4194:183::-;4254:4;-1:-1:-1;;;;;4279:6:112;4276:30;4273:56;;;4309:18;;:::i;:::-;-1:-1:-1;4354:1:112;4350:14;4366:4;4346:25;;4194:183::o;4382:891::-;4466:6;4497:2;4540;4528:9;4519:7;4515:23;4511:32;4508:52;;;4556:1;4553;4546:12;4508:52;4596:9;4583:23;-1:-1:-1;;;;;4621:6:112;4618:30;4615:50;;;4661:1;4658;4651:12;4615:50;4684:22;;4737:4;4729:13;;4725:27;-1:-1:-1;4715:55:112;;4766:1;4763;4756:12;4715:55;4802:2;4789:16;4825:60;4841:43;4881:2;4841:43;:::i;:::-;4825:60;:::i;:::-;4919:15;;;5001:1;4997:10;;;;4989:19;;4985:28;;;4950:12;;;;5025:19;;;5022:39;;;5057:1;5054;5047:12;5022:39;5081:11;;;;5101:142;5117:6;5112:3;5109:15;5101:142;;;5183:17;;5171:30;;5134:12;;;;5221;;;;5101:142;;5485:936;5582:6;5590;5598;5606;5614;5667:3;5655:9;5646:7;5642:23;5638:33;5635:53;;;5684:1;5681;5674:12;5635:53;5723:9;5710:23;5742:31;5767:5;5742:31;:::i;:::-;5792:5;-1:-1:-1;5849:2:112;5834:18;;5821:32;5862:33;5821:32;5862:33;:::i;:::-;5914:7;-1:-1:-1;5968:2:112;5953:18;;5940:32;;-1:-1:-1;6023:2:112;6008:18;;5995:32;-1:-1:-1;;;;;6076:14:112;;;6073:34;;;6103:1;6100;6093:12;6073:34;6141:6;6130:9;6126:22;6116:32;;6186:7;6179:4;6175:2;6171:13;6167:27;6157:55;;6208:1;6205;6198:12;6157:55;6248:2;6235:16;6274:2;6266:6;6263:14;6260:34;;;6290:1;6287;6280:12;6260:34;6335:7;6330:2;6321:6;6317:2;6313:15;6309:24;6306:37;6303:57;;;6356:1;6353;6346:12;6303:57;5485:936;;;;-1:-1:-1;5485:936:112;;-1:-1:-1;6387:2:112;6379:11;;6409:6;5485:936;-1:-1:-1;;;5485:936:112:o;6633:282::-;6687:5;6735:4;6723:9;6718:3;6714:19;6710:30;6707:50;;;6753:1;6750;6743:12;6707:50;6775:22;;:::i;:::-;6766:31;;6833:9;6820:23;6813:5;6806:38;6904:2;6893:9;6889:18;6876:32;6871:2;6864:5;6860:14;6853:56;6633:282;;;;:::o;6920:355::-;6974:5;7022:4;7010:9;7005:3;7001:19;6997:30;6994:50;;;7040:1;7037;7030:12;6994:50;7062:22;;:::i;:::-;7053:31;;7121:9;7108:23;7140:33;7165:7;7140:33;:::i;:::-;7196:7;7189:5;7182:22;;7264:2;7253:9;7249:18;7236:32;7231:2;7224:5;7220:14;7213:56;6920:355;;;;:::o;7280:118::-;7366:5;7359:13;7352:21;7345:5;7342:32;7332:60;;7388:1;7385;7378:12;7403:744;7457:5;7505:4;7493:9;7488:3;7484:19;7480:30;7477:50;;;7523:1;7520;7513:12;7477:50;7556:2;7550:9;7598:4;7590:6;7586:17;7669:6;7657:10;7654:22;-1:-1:-1;;;;;7621:10:112;7618:34;7615:62;7612:88;;;7680:18;;:::i;:::-;7720:10;7716:2;7709:22;;7749:6;7740:15;;7792:9;7779:23;7771:6;7764:39;7864:2;7853:9;7849:18;7836:32;7831:2;7823:6;7819:15;7812:57;7921:2;7910:9;7906:18;7893:32;7934:30;7956:7;7934:30;:::i;:::-;7992:2;7980:15;;7973:32;8057:2;8042:18;;8029:32;8070:30;8029:32;8070:30;:::i;:::-;8128:2;8116:15;;;;8109:32;7403:744;;-1:-1:-1;;7403:744:112:o;8152:1077::-;8203:5;8251:6;8239:9;8234:3;8230:19;8226:32;8223:52;;;8271:1;8268;8261:12;8223:52;8293:22;;:::i;:::-;8284:31;;8338:29;8357:9;8338:29;:::i;:::-;8331:5;8324:44;8428:2;8417:9;8413:18;8400:32;8395:2;8388:5;8384:14;8377:56;8493:2;8482:9;8478:18;8465:32;8460:2;8453:5;8449:14;8442:56;8558:2;8547:9;8543:18;8530:32;8525:2;8518:5;8514:14;8507:56;8624:3;8613:9;8609:19;8596:33;8590:3;8583:5;8579:15;8572:58;8663:51;8710:3;8704;8693:9;8689:19;8663:51;:::i;:::-;8657:3;8650:5;8646:15;8639:76;8777:3;8766:9;8762:19;8749:33;8742:4;8735:5;8731:16;8724:59;8802:3;8838:38;8872:2;8861:9;8857:18;8838:38;:::i;:::-;8832:3;8825:5;8821:15;8814:63;8896:3;8931:50;8977:3;8972:2;8961:9;8957:18;8931:50;:::i;:::-;8926:2;8919:5;8915:14;8908:74;9001:3;8991:13;;9036:50;9082:3;9077:2;9066:9;9062:18;9036:50;:::i;:::-;9031:2;9024:5;9020:14;9013:74;;9151:3;9140:9;9136:19;9123:33;9114:6;9107:5;9103:18;9096:61;9217:3;9206:9;9202:19;9189:33;9184:2;9177:5;9173:14;9166:57;;8152:1077;;;;:::o;9234:223::-;9316:6;9369:3;9357:9;9348:7;9344:23;9340:33;9337:53;;;9386:1;9383;9376:12;9337:53;9409:42;9443:7;9432:9;9409:42;:::i;9978:829::-;10030:5;10078:4;10066:9;10061:3;10057:19;10053:30;10050:50;;;10096:1;10093;10086:12;10050:50;10129:2;10123:9;10171:4;10163:6;10159:17;10242:6;10230:10;10227:22;-1:-1:-1;;;;;10194:10:112;10191:34;10188:62;10185:88;;;10253:18;;:::i;:::-;10289:2;10282:22;10322:6;-1:-1:-1;10322:6:112;10352:23;;10384:33;10352:23;10384:33;:::i;:::-;10441:7;10433:6;10426:23;;10510:2;10499:9;10495:18;10482:32;10477:2;10469:6;10465:15;10458:57;10576:2;10565:9;10561:18;10548:32;10543:2;10535:6;10531:15;10524:57;10642:2;10631:9;10627:18;10614:32;10609:2;10601:6;10597:15;10590:57;10709:3;10698:9;10694:19;10681:33;10675:3;10667:6;10663:16;10656:59;10749:51;10796:3;10790;10779:9;10775:19;10749:51;:::i;:::-;10743:3;10735:6;10731:16;10724:77;;9978:829;;;;:::o;10812:225::-;10895:6;10948:3;10936:9;10927:7;10923:23;10919:33;10916:53;;;10965:1;10962;10955:12;10916:53;10988:43;11023:7;11012:9;10988:43;:::i;11224:456::-;11301:6;11309;11317;11370:2;11358:9;11349:7;11345:23;11341:32;11338:52;;;11386:1;11383;11376:12;11338:52;11425:9;11412:23;11444:31;11469:5;11444:31;:::i;:::-;11494:5;-1:-1:-1;11551:2:112;11536:18;;11523:32;11564:33;11523:32;11564:33;:::i;:::-;11224:456;;11616:7;;-1:-1:-1;;;11670:2:112;11655:18;;;;11642:32;;11224:456::o;11685:367::-;11748:8;11758:6;11812:3;11805:4;11797:6;11793:17;11789:27;11779:55;;11830:1;11827;11820:12;11779:55;-1:-1:-1;11853:20:112;;-1:-1:-1;;;;;11885:30:112;;11882:50;;;11928:1;11925;11918:12;11882:50;11965:4;11957:6;11953:17;11941:29;;12025:3;12018:4;12008:6;12005:1;12001:14;11993:6;11989:27;11985:38;11982:47;11979:67;;;12042:1;12039;12032:12;12057:437;12143:6;12151;12204:2;12192:9;12183:7;12179:23;12175:32;12172:52;;;12220:1;12217;12210:12;12172:52;12260:9;12247:23;-1:-1:-1;;;;;12285:6:112;12282:30;12279:50;;;12325:1;12322;12315:12;12279:50;12364:70;12426:7;12417:6;12406:9;12402:22;12364:70;:::i;:::-;12453:8;;12338:96;;-1:-1:-1;12057:437:112;-1:-1:-1;;;;12057:437:112:o;13128:1250::-;13340:13;;-1:-1:-1;;;;;3348:31:112;3336:44;;13308:3;13293:19;;13421:4;13413:6;13409:17;13403:24;13396:4;13385:9;13381:20;13374:54;13484:4;13476:6;13472:17;13466:24;13459:4;13448:9;13444:20;13437:54;13547:4;13539:6;13535:17;13529:24;13522:4;13511:9;13507:20;13500:54;13610:4;13602:6;13598:17;13592:24;13585:4;13574:9;13570:20;13563:54;13664:4;13656:6;13652:17;13646:24;13679:61;13734:4;13723:9;13719:20;13705:12;12572;;12560:25;;12634:4;12623:16;;;12617:23;12601:14;;12594:47;12499:148;13679:61;;13796:4;13788:6;13784:17;13778:24;13771:4;13760:9;13756:20;13749:54;13852:4;13844:6;13840:17;13834:24;13877:6;13892:54;13942:2;13931:9;13927:18;13911:14;-1:-1:-1;;;;;3348:31:112;3336:44;;3282:104;13892:54;13983:15;;13977:22;;-1:-1:-1;14018:6:112;14033:61;14075:18;;;13977:22;12729:12;;-1:-1:-1;;;;;12725:38:112;12713:51;;12813:4;12802:16;;;12796:23;12780:14;;12773:47;12652:174;14033:61;14131:15;;14125:22;;-1:-1:-1;14166:6:112;14181:61;14223:18;;;14125:22;12910:5;12904:12;12899:3;12892:25;12966:4;12959:5;12955:16;12949:23;12942:4;12937:3;12933:14;12926:47;13036:4;13029:5;13025:16;13019:23;13012:31;13005:39;12998:4;12993:3;12989:14;12982:63;13108:4;13101:5;13097:16;13091:23;13084:31;13077:39;13070:4;13065:3;13061:14;13054:63;;;12831:292;14181:61;14300:6;14292;14288:19;14282:26;14273:6;14262:9;14258:22;14251:58;14367:2;14359:6;14355:15;14349:22;14340:6;14329:9;14325:22;14318:54;;;13128:1250;;;;:::o;14383:247::-;14442:6;14495:2;14483:9;14474:7;14470:23;14466:32;14463:52;;;14511:1;14508;14501:12;14463:52;14550:9;14537:23;14569:31;14594:5;14569:31;:::i;15364:1274::-;15473:6;15504:2;15547;15535:9;15526:7;15522:23;15518:32;15515:52;;;15563:1;15560;15553:12;15515:52;15603:9;15590:23;-1:-1:-1;;;;;15628:6:112;15625:30;15622:50;;;15668:1;15665;15658:12;15622:50;15691:22;;15744:4;15736:13;;15732:27;-1:-1:-1;15722:55:112;;15773:1;15770;15763:12;15722:55;15809:2;15796:16;15832:60;15848:43;15888:2;15848:43;:::i;15832:60::-;15926:15;;;16008:1;16004:10;;;;15996:19;;15992:28;;;15957:12;;;;16032:19;;;16029:39;;;16064:1;16061;16054:12;16029:39;16088:11;;;;16108:500;16124:6;16119:3;16116:15;16108:500;;;16206:4;16200:3;16191:7;16187:17;16183:28;16180:118;;;16252:1;16281:2;16277;16270:14;16180:118;16324:22;;:::i;:::-;16386:3;16373:17;16366:5;16359:32;16441:2;16436:3;16432:12;16419:26;16458:33;16483:7;16458:33;:::i;:::-;16511:14;;;16504:31;16548:18;;16150:4;16141:14;;;;;16586:12;;;;16108:500;;16643:382;16708:6;16716;16769:2;16757:9;16748:7;16744:23;16740:32;16737:52;;;16785:1;16782;16775:12;16737:52;16824:9;16811:23;16843:31;16868:5;16843:31;:::i;:::-;16893:5;-1:-1:-1;16950:2:112;16935:18;;16922:32;16963:30;16922:32;16963:30;:::i;:::-;17012:7;17002:17;;;16643:382;;;;;:::o;17451:292::-;17542:6;17550;17603:3;17591:9;17582:7;17578:23;17574:33;17571:53;;;17620:1;17617;17610:12;17571:53;17643:42;17677:7;17666:9;17643:42;:::i;:::-;17633:52;17732:3;17717:19;;;;17704:33;;-1:-1:-1;;;17451:292:112:o;18220:530::-;18262:5;18315:3;18308:4;18300:6;18296:17;18292:27;18282:55;;18333:1;18330;18323:12;18282:55;18369:6;18356:20;-1:-1:-1;;;;;18391:2:112;18388:26;18385:52;;;18417:18;;:::i;:::-;18461:55;18504:2;18485:13;;-1:-1:-1;;18481:27:112;18510:4;18477:38;18461:55;:::i;:::-;18541:2;18532:7;18525:19;18587:3;18580:4;18575:2;18567:6;18563:15;18559:26;18556:35;18553:55;;;18604:1;18601;18594:12;18553:55;18669:2;18662:4;18654:6;18650:17;18643:4;18634:7;18630:18;18617:55;18717:1;18692:16;;;18710:4;18688:27;18681:38;;;;18696:7;18220:530;-1:-1:-1;;;18220:530:112:o;18755:665::-;18850:6;18858;18866;18874;18927:3;18915:9;18906:7;18902:23;18898:33;18895:53;;;18944:1;18941;18934:12;18895:53;18983:9;18970:23;19002:31;19027:5;19002:31;:::i;:::-;19052:5;-1:-1:-1;19109:2:112;19094:18;;19081:32;19122:33;19081:32;19122:33;:::i;:::-;19174:7;-1:-1:-1;19228:2:112;19213:18;;19200:32;;-1:-1:-1;19283:2:112;19268:18;;19255:32;-1:-1:-1;;;;;19299:30:112;;19296:50;;;19342:1;19339;19332:12;19296:50;19365:49;19406:7;19397:6;19386:9;19382:22;19365:49;:::i;:::-;19355:59;;;18755:665;;;;;;;:::o;19425:368::-;19521:6;19529;19582:3;19570:9;19561:7;19557:23;19553:33;19550:53;;;19599:1;19596;19589:12;19550:53;19638:9;19625:23;19657:31;19682:5;19657:31;:::i;:::-;19707:5;-1:-1:-1;19731:56:112;19779:7;19774:2;19759:18;;19731:56;:::i;:::-;19721:66;;19425:368;;;;;:::o;19798:388::-;19866:6;19874;19927:2;19915:9;19906:7;19902:23;19898:32;19895:52;;;19943:1;19940;19933:12;19895:52;19982:9;19969:23;20001:31;20026:5;20001:31;:::i;:::-;20051:5;-1:-1:-1;20108:2:112;20093:18;;20080:32;20121:33;20080:32;20121:33;:::i;20562:380::-;20641:1;20637:12;;;;20684;;;20705:61;;20759:4;20751:6;20747:17;20737:27;;20705:61;20812:2;20804:6;20801:14;20781:18;20778:38;20775:161;;20858:10;20853:3;20849:20;20846:1;20839:31;20893:4;20890:1;20883:15;20921:4;20918:1;20911:15;20775:161;;20562:380;;;:::o;20947:127::-;21008:10;21003:3;20999:20;20996:1;20989:31;21039:4;21036:1;21029:15;21063:4;21060:1;21053:15;21079:127;21140:10;21135:3;21131:20;21128:1;21121:31;21171:4;21168:1;21161:15;21195:4;21192:1;21185:15;21211:128;21278:9;;;21299:11;;;21296:37;;;21313:18;;:::i;21344:125::-;21409:9;;;21430:10;;;21427:36;;;21443:18;;:::i;21474:375::-;-1:-1:-1;;;;;21732:15:112;;;21714:34;;21784:15;;;;21779:2;21764:18;;21757:43;21831:2;21816:18;;21809:34;;;;21664:2;21649:18;;21474:375::o;21854:135::-;21893:3;21914:17;;;21911:43;;21934:18;;:::i;:::-;-1:-1:-1;21981:1:112;21970:13;;21854:135::o;21994:1385::-;22081:5;22110:64;22126:47;22166:6;22126:47;:::i;22110:64::-;22208:21;;;22101:73;-1:-1:-1;22248:4:112;22268:14;;;;22321:1;22317:14;;;22305:27;;22344:15;;;22341:35;;;22372:1;22369;22362:12;22341:35;22396:6;22411:962;22427:6;22422:3;22419:15;22411:962;;;22513:3;22500:17;-1:-1:-1;;;;;22590:2:112;22577:11;22574:19;22571:109;;;22634:1;22663:2;22659;22652:14;22571:109;22703:24;;;;22761:6;22747:12;;;22743:25;22740:115;;;22809:1;22838:2;22834;22827:14;22740:115;22881:22;;:::i;:::-;22945:2;22932:16;22977:2;22967:8;22964:16;22961:106;;;23021:1;23050:2;23046;23039:14;22961:106;23094:40;23130:3;23119:8;23115:2;23111:17;23094:40;:::i;:::-;23087:5;23080:55;;23192:2;23188;23184:11;23171:25;23166:2;23159:5;23155:14;23148:49;23220:2;23210:12;;23258:41;23295:3;23290:2;23286;23282:11;23258:41;:::i;:::-;23242:14;;;23235:65;;;;23313:18;;-1:-1:-1;23351:12:112;;;;22444;;22411:962;;;22415:3;;;;21994:1385;;;;;:::o;23384:512::-;23495:6;23548:2;23536:9;23527:7;23523:23;23519:32;23516:52;;;23564:1;23561;23554:12;23516:52;23604:9;23591:23;-1:-1:-1;;;;;23629:6:112;23626:30;23623:50;;;23669:1;23666;23659:12;23623:50;23692:22;;23745:4;23737:13;;23733:27;-1:-1:-1;23723:55:112;;23774:1;23771;23764:12;23723:55;23797:93;23882:7;23877:2;23864:16;23859:2;23855;23851:11;23797:93;:::i;24124:251::-;24194:6;24247:2;24235:9;24226:7;24222:23;24218:32;24215:52;;;24263:1;24260;24253:12;24215:52;24295:9;24289:16;24314:31;24339:5;24314:31;:::i;24380:327::-;24476:4;24534:11;24521:25;24628:2;24624:7;24613:8;24597:14;24593:29;24589:43;24569:18;24565:68;24555:96;;24647:1;24644;24637:12;24555:96;24668:33;;;;;24380:327;-1:-1:-1;;24380:327:112:o;24980:574::-;25102:4;25108:6;25168:11;25155:25;25262:2;25258:7;25247:8;25231:14;25227:29;25223:43;25203:18;25199:68;25189:96;;25281:1;25278;25271:12;25189:96;25308:33;;25360:20;;;-1:-1:-1;;;;;;25392:30:112;;25389:50;;;25435:1;25432;25425:12;25389:50;25468:4;25456:17;;-1:-1:-1;25519:1:112;25515:14;;;25499;25495:35;25485:46;;25482:66;;;25544:1;25541;25534:12;25559:299;25731:9;25768:84;25837:14;25829:6;25822:5;25768:84;:::i;25863:228::-;25948:6;26001:2;25989:9;25980:7;25976:23;25972:32;25969:52;;;26017:1;26014;26007:12;25969:52;26040:45;26077:7;26066:9;26040:45;:::i;26385:168::-;26458:9;;;26489;;26506:15;;;26500:22;;26486:37;26476:71;;26527:18;;:::i;26558:217::-;26598:1;26624;26614:132;;26668:10;26663:3;26659:20;26656:1;26649:31;26703:4;26700:1;26693:15;26731:4;26728:1;26721:15;26614:132;-1:-1:-1;26760:9:112;;26558:217::o;26780:245::-;26847:6;26900:2;26888:9;26879:7;26875:23;26871:32;26868:52;;;26916:1;26913;26906:12;26868:52;26948:9;26942:16;26967:28;26989:5;26967:28;:::i;29029:456::-;29135:1;29131;29126:3;29122:11;29118:19;29110:5;29104:12;29100:38;29095:3;29088:51;29188:4;29181:5;29177:16;29171:23;29164:4;29159:3;29155:14;29148:47;29244:4;29237:5;29233:16;29227:23;29220:4;29215:3;29211:14;29204:47;29300:4;29293:5;29289:16;29283:23;29276:4;29271:3;29267:14;29260:47;29356:4;29349:5;29345:16;29339:23;29332:4;29327:3;29323:14;29316:47;29409:4;29402:5;29398:16;29392:23;29424:55;29473:4;29468:3;29464:14;29450:12;12729;;-1:-1:-1;;;;;12725:38:112;12713:51;;12813:4;12802:16;;;12796:23;12780:14;;12773:47;12652:174;29490:385;29741:25;;;29797:2;29782:18;;29775:34;;;29728:3;29713:19;;29818:51;29865:2;29850:18;;29842:6;29818:51;:::i;29880:319::-;30106:25;;;30094:2;30079:18;;30140:53;30189:2;30174:18;;30166:6;12729:12;;-1:-1:-1;;;;;12725:38:112;12713:51;;12813:4;12802:16;;;12796:23;12780:14;;12773:47;12652:174;30601:489;-1:-1:-1;;;;;30870:15:112;;;30852:34;;30922:15;;30917:2;30902:18;;30895:43;30969:2;30954:18;;30947:34;;;31017:3;31012:2;30997:18;;30990:31;;;30795:4;;31038:46;;31064:19;;31056:6;31038:46;:::i;:::-;31030:54;30601:489;-1:-1:-1;;;;;;30601:489:112:o;31095:249::-;31164:6;31217:2;31205:9;31196:7;31192:23;31188:32;31185:52;;;31233:1;31230;31223:12;31185:52;31265:9;31259:16;31284:30;31308:5;31284:30;:::i;31349:387::-;31587:3;31572:19;;31600:42;31576:9;31624:6;31600:42;:::i;:::-;31673:3;31658:19;;31651:35;;;;31717:3;31702:19;31695:35;31349:387;;-1:-1:-1;31349:387:112:o;31741:315::-;31951:3;31936:19;;31964:42;31940:9;31988:6;31964:42;:::i;:::-;32043:6;32037:3;32026:9;32022:19;32015:35;31741:315;;;;;:::o;32061:386::-;32323:3;32308:19;;32336:42;32312:9;32360:6;32336:42;:::i;:::-;12729:12;;-1:-1:-1;;;;;12725:38:112;32436:3;32421:19;;12713:51;12813:4;12802:16;;12796:23;12780:14;;;12773:47;32387:54;12652:174;32946:127;33007:10;33002:3;32998:20;32995:1;32988:31;33038:4;33035:1;33028:15;33062:4;33059:1;33052:15",
    "linkReferences": {},
    "immutableReferences": {
      "3083": [
        {
          "start": 10676,
          "length": 32
        }
      ],
      "3085": [
        {
          "start": 10634,
          "length": 32
        }
      ],
      "3087": [
        {
          "start": 10592,
          "length": 32
        }
      ],
      "3089": [
        {
          "start": 10759,
          "length": 32
        }
      ],
      "3091": [
        {
          "start": 10796,
          "length": 32
        }
      ],
      "3093": [
        {
          "start": 10717,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "approve(address,uint256)": "095ea7b3",
    "balanceOf(address)": "70a08231",
    "borrow(((address,uint256),(bytes,uint256,(address,uint256,uint256,uint256,uint256,(address,uint256)))[])[])": "b1ce7a6a",
    "buy((uint256,address)[])": "980b13c5",
    "claim(uint256[])": "6ba4c138",
    "claimAsBorrower(uint256[])": "3d6fd5be",
    "createTranche(uint256)": "92eab80e",
    "getApproved(uint256)": "081812fc",
    "getLoan(uint256)": "504006ca",
    "getMinOfferCostAndBorrowableAmount(address)": "8d116c7a",
    "getParameters()": "a5ea11da",
    "getRateOfTranche(uint256)": "14aab74f",
    "isApprovedForAll(address,address)": "e985e9c5",
    "mintLoan((address,uint256,uint256,uint256,uint256,(uint256,uint256),uint256,address,(address,uint256),(uint256,uint256,bool,bool),uint256,uint256))": "16cfcfc3",
    "mintPosition(address,(uint256,uint256,uint256))": "cd3acce9",
    "name()": "06fdde03",
    "offerDigest((address,uint256,uint256,uint256,uint256,(address,uint256)))": "1fbc8a74",
    "onERC721Received(address,address,uint256,bytes)": "150b7a02",
    "ownerOf(uint256)": "6352211e",
    "position(uint256)": "f7a95a9e",
    "price(uint256)": "26a49e37",
    "repay(uint256[])": "0c72ad20",
    "safeTransferFrom(address,address,uint256)": "42842e0e",
    "safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
    "setApprovalForAll(address,bool)": "a22cb465",
    "setAuctionDuration(uint256)": "a497e674",
    "setAuctionPriceFactor(uint256)": "e7af8fed",
    "setBorrowAmountPerOfferLowerBound(address,uint256)": "7660e109",
    "setMinOfferCost(address,uint256)": "1a34c700",
    "storeLoan((address,uint256,uint256,uint256,uint256,(uint256,uint256),uint256,address,(address,uint256),(uint256,uint256,bool,bool),uint256,uint256),uint256)": "ab5dce8e",
    "storeProvision((uint256,uint256,uint256),uint256)": "01d3368f",
    "supportsInterface(bytes4)": "01ffc9a7",
    "symbol()": "95d89b41",
    "totalSupply()": "18160ddd",
    "transferFrom(address,address,uint256)": "23b872dd"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"contract IERC20\",\"name\":\"assetToLend\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"loanToValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expirationDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tranche\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"contract IERC721\",\"name\":\"implem\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"internalType\":\"struct NFToken\",\"name\":\"collateral\",\"type\":\"tuple\"}],\"internalType\":\"struct Offer\",\"name\":\"offer\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"contract IERC721\",\"name\":\"implem\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"internalType\":\"struct NFToken\",\"name\":\"providedNft\",\"type\":\"tuple\"}],\"name\":\"BadCollateral\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"loanId\",\"type\":\"uint256\"}],\"name\":\"BorrowerAlreadyClaimed\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"CallerIsNotOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"endDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"loanId\",\"type\":\"uint256\"}],\"name\":\"CollateralIsNotLiquidableYet\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"ERC20TransferFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC721AddressZeroIsNotAValidOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC721ApprovalToCurrentOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC721ApproveToCaller\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC721CallerIsNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC721CallerIsNotOwnerNorApprovedForAll\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC721InvalidTokenId\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC721MintToTheZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC721TokenAlreadyMinted\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC721TransferFromIncorrectOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC721TransferToNonERC721ReceiverImplementer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC721TransferToTheZeroAddress\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"firstRequested\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"requested\",\"type\":\"address\"}],\"name\":\"InconsistentAssetRequests\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"firstTrancheIdUsed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"trancheIdFound\",\"type\":\"uint256\"}],\"name\":\"InconsistentTranches\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"nbOfTranches\",\"type\":\"uint256\"}],\"name\":\"InvalidTranche\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"loanId\",\"type\":\"uint256\"}],\"name\":\"LoanAlreadyRepaid\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"loanId\",\"type\":\"uint256\"}],\"name\":\"LoanNotRepaidOrLiquidatedYet\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"loanId\",\"type\":\"uint256\"}],\"name\":\"NotBorrowerOfTheLoan\",\"type\":\"error\"},{\"inputs\":[{\"components\":[{\"internalType\":\"contract IERC20\",\"name\":\"assetToLend\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"loanToValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expirationDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tranche\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"contract IERC721\",\"name\":\"implem\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"internalType\":\"struct NFToken\",\"name\":\"collateral\",\"type\":\"tuple\"}],\"internalType\":\"struct Offer\",\"name\":\"offer\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"expirationDate\",\"type\":\"uint256\"}],\"name\":\"OfferHasExpired\",\"type\":\"error\"},{\"inputs\":[{\"components\":[{\"internalType\":\"contract IERC20\",\"name\":\"assetToLend\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"loanToValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expirationDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tranche\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"contract IERC721\",\"name\":\"implem\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"internalType\":\"struct NFToken\",\"name\":\"collateral\",\"type\":\"tuple\"}],\"internalType\":\"struct Offer\",\"name\":\"offer\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"requested\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lowerBound\",\"type\":\"uint256\"}],\"name\":\"RequestedAmountIsUnderMinimum\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"requested\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"offered\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"contract IERC20\",\"name\":\"assetToLend\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"loanToValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expirationDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tranche\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"contract IERC721\",\"name\":\"implem\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"internalType\":\"struct NFToken\",\"name\":\"collateral\",\"type\":\"tuple\"}],\"internalType\":\"struct Offer\",\"name\":\"offer\",\"type\":\"tuple\"}],\"name\":\"RequestedAmountTooHigh\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Unauthorized\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"lent\",\"type\":\"uint256\"}],\"name\":\"UnsafeAmountLent\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"minLoanToValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxLoanToValue\",\"type\":\"uint256\"}],\"name\":\"UnsafeOfferLoanToValuesGap\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"loanId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"loan\",\"type\":\"bytes\"}],\"name\":\"Borrow\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"loanId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"args\",\"type\":\"bytes\"}],\"name\":\"Buy\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"claimant\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"claimed\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"loanId\",\"type\":\"uint256\"}],\"name\":\"Claim\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"newAuctionDuration\",\"type\":\"uint256\"}],\"name\":\"NewAuctionDuration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"Ray\",\"name\":\"newAuctionPriceFactor\",\"type\":\"uint256\"}],\"name\":\"NewAuctionPriceFactor\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IERC20\",\"name\":\"currency\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"newLowerBound\",\"type\":\"uint256\"}],\"name\":\"NewBorrowAmountPerOfferLowerBound\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IERC20\",\"name\":\"currency\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"newMinOfferCost\",\"type\":\"uint256\"}],\"name\":\"NewMininimumOfferCost\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"Ray\",\"name\":\"tranche\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"newTrancheId\",\"type\":\"uint256\"}],\"name\":\"NewTranche\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"loanId\",\"type\":\"uint256\"}],\"name\":\"Repay\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"contract IERC721\",\"name\":\"implem\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"internalType\":\"struct NFToken\",\"name\":\"nft\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"contract IERC20\",\"name\":\"assetToLend\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"loanToValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expirationDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tranche\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"contract IERC721\",\"name\":\"implem\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"internalType\":\"struct NFToken\",\"name\":\"collateral\",\"type\":\"tuple\"}],\"internalType\":\"struct Offer\",\"name\":\"offer\",\"type\":\"tuple\"}],\"internalType\":\"struct OfferArg[]\",\"name\":\"args\",\"type\":\"tuple[]\"}],\"internalType\":\"struct BorrowArg[]\",\"name\":\"args\",\"type\":\"tuple[]\"}],\"name\":\"borrow\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"loanId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"internalType\":\"struct BuyArg[]\",\"name\":\"args\",\"type\":\"tuple[]\"}],\"name\":\"buy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"positionIds\",\"type\":\"uint256[]\"}],\"name\":\"claim\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"sent\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"loanIds\",\"type\":\"uint256[]\"}],\"name\":\"claimAsBorrower\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"sent\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"Ray\",\"name\":\"newTranche\",\"type\":\"uint256\"}],\"name\":\"createTranche\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"newTrancheId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"getLoan\",\"outputs\":[{\"components\":[{\"internalType\":\"contract IERC20\",\"name\":\"assetLent\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"lent\",\"type\":\"uint256\"},{\"internalType\":\"Ray\",\"name\":\"shareLent\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endDate\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"internalType\":\"Ray\",\"name\":\"priceFactor\",\"type\":\"uint256\"}],\"internalType\":\"struct Auction\",\"name\":\"auction\",\"type\":\"tuple\"},{\"internalType\":\"Ray\",\"name\":\"interestPerSecond\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"contract IERC721\",\"name\":\"implem\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"internalType\":\"struct NFToken\",\"name\":\"collateral\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"paid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minInterestsToRepay\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"liquidated\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"borrowerClaimed\",\"type\":\"bool\"}],\"internalType\":\"struct Payment\",\"name\":\"payment\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"supplyPositionIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nbOfPositions\",\"type\":\"uint256\"}],\"internalType\":\"struct Loan\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"currency\",\"type\":\"address\"}],\"name\":\"getMinOfferCostAndBorrowableAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"minOfferCost\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"offerBorrowAmountLowerBound\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getParameters\",\"outputs\":[{\"internalType\":\"Ray\",\"name\":\"auctionPriceFactor\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"auctionDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nbOfLoans\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nbOfTranches\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"getRateOfTranche\",\"outputs\":[{\"internalType\":\"Ray\",\"name\":\"rate\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"contract IERC20\",\"name\":\"assetLent\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"lent\",\"type\":\"uint256\"},{\"internalType\":\"Ray\",\"name\":\"shareLent\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endDate\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"internalType\":\"Ray\",\"name\":\"priceFactor\",\"type\":\"uint256\"}],\"internalType\":\"struct Auction\",\"name\":\"auction\",\"type\":\"tuple\"},{\"internalType\":\"Ray\",\"name\":\"interestPerSecond\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"contract IERC721\",\"name\":\"implem\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"internalType\":\"struct NFToken\",\"name\":\"collateral\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"paid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minInterestsToRepay\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"liquidated\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"borrowerClaimed\",\"type\":\"bool\"}],\"internalType\":\"struct Payment\",\"name\":\"payment\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"supplyPositionIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nbOfPositions\",\"type\":\"uint256\"}],\"internalType\":\"struct Loan\",\"name\":\"loan\",\"type\":\"tuple\"}],\"name\":\"mintLoan\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"loanId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"Ray\",\"name\":\"share\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"loanId\",\"type\":\"uint256\"}],\"internalType\":\"struct Provision\",\"name\":\"provision\",\"type\":\"tuple\"}],\"name\":\"mintPosition\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"contract IERC20\",\"name\":\"assetToLend\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"loanToValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expirationDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tranche\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"contract IERC721\",\"name\":\"implem\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"internalType\":\"struct NFToken\",\"name\":\"collateral\",\"type\":\"tuple\"}],\"internalType\":\"struct Offer\",\"name\":\"offer\",\"type\":\"tuple\"}],\"name\":\"offerDigest\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"position\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"Ray\",\"name\":\"share\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"loanId\",\"type\":\"uint256\"}],\"internalType\":\"struct Provision\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"loanId\",\"type\":\"uint256\"}],\"name\":\"price\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"loanIds\",\"type\":\"uint256[]\"}],\"name\":\"repay\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newAuctionDuration\",\"type\":\"uint256\"}],\"name\":\"setAuctionDuration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"Ray\",\"name\":\"newAuctionPriceFactor\",\"type\":\"uint256\"}],\"name\":\"setAuctionPriceFactor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"newLowerBound\",\"type\":\"uint256\"}],\"name\":\"setBorrowAmountPerOfferLowerBound\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"newMinOfferCost\",\"type\":\"uint256\"}],\"name\":\"setMinOfferCost\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"contract IERC20\",\"name\":\"assetLent\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"lent\",\"type\":\"uint256\"},{\"internalType\":\"Ray\",\"name\":\"shareLent\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endDate\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"internalType\":\"Ray\",\"name\":\"priceFactor\",\"type\":\"uint256\"}],\"internalType\":\"struct Auction\",\"name\":\"auction\",\"type\":\"tuple\"},{\"internalType\":\"Ray\",\"name\":\"interestPerSecond\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"contract IERC721\",\"name\":\"implem\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"internalType\":\"struct NFToken\",\"name\":\"collateral\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"paid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minInterestsToRepay\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"liquidated\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"borrowerClaimed\",\"type\":\"bool\"}],\"internalType\":\"struct Payment\",\"name\":\"payment\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"supplyPositionIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nbOfPositions\",\"type\":\"uint256\"}],\"internalType\":\"struct Loan\",\"name\":\"loan\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"loanId\",\"type\":\"uint256\"}],\"name\":\"storeLoan\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"Ray\",\"name\":\"share\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"loanId\",\"type\":\"uint256\"}],\"internalType\":\"struct Provision\",\"name\":\"provision\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"positionId\",\"type\":\"uint256\"}],\"name\":\"storeProvision\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Borrow(uint256,bytes)\":{\"params\":{\"loan\":\"the loan created\",\"loanId\":\"id of the loan\"}},\"Buy(uint256,bytes)\":{\"params\":{\"args\":\"arguments NFT sold\",\"loanId\":\"identifier of the loan previously backed by the sold collateral\"}},\"Claim(address,uint256,uint256)\":{\"params\":{\"claimant\":\"who received the liquidity\",\"claimed\":\"amount sent\",\"loanId\":\"loan identifier where the claim rights come from\"}},\"NewAuctionDuration(uint256)\":{\"params\":{\"newAuctionDuration\":\"duration of liquidation for new loans\"}},\"NewAuctionPriceFactor(uint256)\":{\"params\":{\"newAuctionPriceFactor\":\"factor of loan to value setting initial price of auctions\"}},\"NewBorrowAmountPerOfferLowerBound(address,uint256)\":{\"params\":{\"currency\":\"the erc20 on which a new borrow amount lower bound is taking effect\",\"newLowerBound\":\"the new lower bound\"}},\"NewMininimumOfferCost(address,uint256)\":{\"params\":{\"currency\":\"the erc20 on which a new minimum borrow cost is taking effect\",\"newMinOfferCost\":\"the new minimum amount that will need to be repaid per loan offer used\"}},\"NewTranche(uint256,uint256)\":{\"params\":{\"newTrancheId\":\"identifier of the new tranche\",\"tranche\":\"the interest rate of the new tranche, in multiplier per second\"}},\"Repay(uint256)\":{\"params\":{\"loanId\":\"loan identifier\"}},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"borrow(((address,uint256),(bytes,uint256,(address,uint256,uint256,uint256,uint256,(address,uint256)))[])[])\":{\"params\":{\"args\":\"list of arguments specifying at which terms each collateral should be used\"}},\"buy((uint256,address)[])\":{\"params\":{\"args\":\"arguments on what and how to buy\"}},\"claim(uint256[])\":{\"params\":{\"positionIds\":\"identifiers of one or multiple supply position to burn\"},\"returns\":{\"sent\":\"amount sent\"}},\"claimAsBorrower(uint256[])\":{\"params\":{\"loanIds\":\"loan identifiers of one or multiple loans where the borrower wants to claim liquidation share\"},\"returns\":{\"sent\":\"amount sent\"}},\"createTranche(uint256)\":{\"params\":{\"newTranche\":\"the interest rate of the new tranche\"}},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"getLoan(uint256)\":{\"params\":{\"id\":\"loan identifier\"},\"returns\":{\"_0\":\"loan the corresponding loan\"}},\"getMinOfferCostAndBorrowableAmount(address)\":{\"params\":{\"currency\":\"the erc20 asset lent on which the parameters apply\"},\"returns\":{\"minOfferCost\":\"the minimal amount to repay per offer used in loan\",\"offerBorrowAmountLowerBound\":\" minimum amount to borrow per offer used in loan\"}},\"getParameters()\":{\"returns\":{\"auctionDuration\":\"number of seconds after the auction start when the price hits 0\",\"auctionPriceFactor\":\"factor multiplied with the loan to value of a loan to get initial price         of a collateral on sale\",\"nbOfLoans\":\"total number of loans ever issued (active and ended)\",\"nbOfTranches\":\"total number of interest rates tranches ever created (active and inactive)\"}},\"getRateOfTranche(uint256)\":{\"params\":{\"id\":\"rate identifier\"},\"returns\":{\"rate\":\"the rate of the tranche, as a Ray, multiplier per second of the amount to repay (non compounding)         I.e lent * time since loan start * tranche = interests to repay\"}},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"offerDigest((address,uint256,uint256,uint256,uint256,(address,uint256)))\":{\"params\":{\"offer\":\"the loan offer signed/to sign by a supplier\"},\"returns\":{\"_0\":\"digest the digest, ecdsa sign as is to produce a valid loan offer signature\"}},\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"param data must be of format OfferArg[]\",\"params\":{\"data\":\"abi encoded arguments for the loan\",\"operator\":\"account that initialized the transfer action according to the NFT implementation contract\",\"tokenId\":\"token identifier of the NFT sent according to the NFT implementation contract\"},\"returns\":{\"_0\":\"selector `this.onERC721Received.selector` ERC721-compliant response, signaling compatibility\"}},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"position(uint256)\":{\"params\":{\"tokenId\":\"token identifier of the supply position\"},\"returns\":{\"_0\":\"provision metadata\"}},\"price(uint256)\":{\"params\":{\"loanId\":\"identifier of the loan\"},\"returns\":{\"_0\":\"price computed price\"}},\"repay(uint256[])\":{\"details\":\"repay on behalf is activated, the collateral goes to the original borrower\",\"params\":{\"loanIds\":\"identifiers of loans to repay\"}},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setAuctionDuration(uint256)\":{\"params\":{\"newAuctionDuration\":\"number of seconds of the duration\"}},\"setAuctionPriceFactor(uint256)\":{\"params\":{\"newAuctionPriceFactor\":\"the new factor multiplied to the loan to value\"}},\"setBorrowAmountPerOfferLowerBound(address,uint256)\":{\"params\":{\"currency\":\"the erc20 on which a new borrow amount lower bound is taking effect\",\"newLowerBound\":\"the new lower bound\"}},\"setMinOfferCost(address,uint256)\":{\"params\":{\"currency\":\"the erc20 on which a new minimum borrow cost will take effect\",\"newMinOfferCost\":\"the new minimum amount that will need to be repaid per loan offer used\"}},\"supportsInterface(bytes4)\":{\"details\":\"don't use this method for inclusion in the facet function selectors     prefer the LibDiamond implementation for this method     it is included here for IERC721-compliance\"},\"totalSupply()\":{\"returns\":{\"_0\":\"totalSupply the number\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"events\":{\"Borrow(uint256,bytes)\":{\"notice\":\"one loan has been initiated\"},\"Buy(uint256,bytes)\":{\"notice\":\"a NFT collateral has been sold as part of a liquidation\"},\"Claim(address,uint256,uint256)\":{\"notice\":\"some liquidity has been claimed as principal plus interests or share of liquidation\"},\"NewAuctionDuration(uint256)\":{\"notice\":\"duration of future auctions has been updated\"},\"NewAuctionPriceFactor(uint256)\":{\"notice\":\"initial price factor of future auctions has been updated\"},\"NewBorrowAmountPerOfferLowerBound(address,uint256)\":{\"notice\":\"the borrow amount lower bound per offer has been updated\"},\"NewMininimumOfferCost(address,uint256)\":{\"notice\":\"the minimum cost to repay per used loan offer     when borrowing a certain currency has been updated\"},\"NewTranche(uint256,uint256)\":{\"notice\":\"a new interest rate tranche has been created\"},\"Repay(uint256)\":{\"notice\":\"a loan has been repaid with interests by its borrower\"}},\"kind\":\"user\",\"methods\":{\"borrow(((address,uint256),(bytes,uint256,(address,uint256,uint256,uint256,uint256,(address,uint256)))[])[])\":{\"notice\":\"take loans, take ownership of NFTs specified as collateral, sends borrowed money to caller\"},\"buy((uint256,address)[])\":{\"notice\":\"buy one or multiple NFTs in liquidation\"},\"claim(uint256[])\":{\"notice\":\"claims principal plus interests or liquidation share due as a supplier\"},\"claimAsBorrower(uint256[])\":{\"notice\":\"claims share of liquidation due to a borrower who's collateral has been sold\"},\"createTranche(uint256)\":{\"notice\":\"creates a new tranche at a new identifier for lenders to provide offers for\"},\"getLoan(uint256)\":{\"notice\":\"get loan metadata\"},\"getMinOfferCostAndBorrowableAmount(address)\":{\"notice\":\"get the minimal amount to repay per offer used in loan and minimum amount to borrow per offer.     Gives currently active settings, may not concern loans already issued.\"},\"getParameters()\":{\"notice\":\"gets current values of parameters impacting loans behavior and total number of loans (active and ended)\"},\"getRateOfTranche(uint256)\":{\"notice\":\"gets the rate of tranche `id`\"},\"mintLoan((address,uint256,uint256,uint256,uint256,(uint256,uint256),uint256,address,(address,uint256),(uint256,uint256,bool,bool),uint256,uint256))\":{\"notice\":\"stores a new loan with a new id and emit a borrow event\"},\"offerDigest((address,uint256,uint256,uint256,uint256,(address,uint256)))\":{\"notice\":\"computes EIP-712 compliant digest of a loan offer\"},\"onERC721Received(address,address,uint256,bytes)\":{\"notice\":\"borrow using sent NFT as collateral without needing approval through transfer callback\"},\"position(uint256)\":{\"notice\":\"get metadata on provision linked to the supply position\"},\"price(uint256)\":{\"notice\":\"gets the price to buy the underlying collateral of the loan\"},\"repay(uint256[])\":{\"notice\":\"repay one or multiple loans, gives collaterals back\"},\"setAuctionDuration(uint256)\":{\"notice\":\"sets the time it takes to auction prices to fall to 0 for future loans\"},\"setAuctionPriceFactor(uint256)\":{\"notice\":\"sets the factor applied to the loan to value setting initial price of auction for future loans\"},\"setBorrowAmountPerOfferLowerBound(address,uint256)\":{\"notice\":\"updates the borrow amount lower bound per offer for one currency\"},\"setMinOfferCost(address,uint256)\":{\"notice\":\"updates the minimum amount to repay per used loan offer when borrowing a certain currency\"},\"totalSupply()\":{\"notice\":\"total number of supply positions ever minted (counting burned ones)\"}},\"notice\":\"Delegate Call Target for modifying kairos internal state\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"test/Commons/DCTarget.sol\":\"DCTarget\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/=node_modules/@openzeppelin/\",\":diamond/=node_modules/diamond/\",\":ds-test/=node_modules/ds-test/src/\",\":forge-std/=node_modules/forge-std/src/\",\":solmate/=node_modules/solmate/\"]},\"sources\":{\"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xab28a56179c1db258c9bf5235b382698cb650debecb51b23d12be9e241374b68\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://daae589a9d6fa7e55f99f86c0a16796ca490f243fb3693632c3711c0646c1d56\",\"dweb:/ipfs/QmR3zpd7wNw3rcUdekwiv6FYHJqksuTCXLVioTxu6Fbxk3\"]},\"node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"node_modules/@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269\",\"dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj\"]},\"node_modules/@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c969013129ba9e651a20735ef659fef6d8a1139ea3607bd4b26ddea2d645634\",\"dweb:/ipfs/QmVhVa6LGuzAcB8qgDtVHRkucn4ihj5UZr8xBLcJkP6ucb\"]},\"node_modules/@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xda898fa084aa1ddfdb346e6a40459e00a59d87071cce7c315a46d648dd71d0ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ce501a941f4aa1555c04dabb5e07992503bb6a9b32ff8f7cdcefdb4a742210cb\",\"dweb:/ipfs/QmeScPrUpdrGYs9BytV3Z5ZWJcBXtuAgCW4BLHua4xFUxx\"]},\"node_modules/@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x948d8b2d18f38141ec78c5229d770d950ebc781ed3f44cc9e3ccbb9fded5846a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7311ac950ed2d81f3ccf1784a926efbfc82a86dcb5c98d41eb3792c0cac63a2f\",\"dweb:/ipfs/QmRRwCUHewkPmehx8QRYENFoWyLNx8UEZGULxWYUeSZdTS\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"node_modules/@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b\",\"dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz\"]},\"src/AdminFacet.sol\":{\"keccak256\":\"0x1a2d8498fd8fd33bdda336678927e9f541b02b454d82994cd4a650f1f3a2942a\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://53f331f3125c77de8a8efa62288c88b9e72f93763cf7b255ee039a661198e936\",\"dweb:/ipfs/QmPvkNQKNyRf3BVyjet6YmWmzhBKC5tFq3BZTx66U167u2\"]},\"src/AuctionFacet.sol\":{\"keccak256\":\"0x41a60f4e0ea36dd4a1acb8845d07f8eee2e788aa0acc7eeea3c3443448231f22\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://049a623687b02d8ceb7f933cdad6b6de5f28d826cb7eb828c1b2ecfba1b02b48\",\"dweb:/ipfs/QmRSjXjDZqys1KWaK2YbWhuMju5A45KLETF9KtjzHVFGbM\"]},\"src/BorrowFacet.sol\":{\"keccak256\":\"0x960ac7f5ddc23fd9c9b87481451b47022b85ce53eefc1c46fe9cdbd34481e2fc\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://3c17390c85d849708b4489909ab63f11ceb8652d2c2f465e2c0b42b7a71fed94\",\"dweb:/ipfs/QmZNQ9RdZhk9QAxQkws1Fsv5UMwfJpra77HokJCxM8wERH\"]},\"src/BorrowLogic/BorrowCheckers.sol\":{\"keccak256\":\"0x023dce239e7e6d534db05e6364715ebb3399c3c9dccf894e9076712ab779745d\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://cfabb6dbacbb9d09ee26887d755e88d9761d266a3daa68a54c070ff967bf2aa8\",\"dweb:/ipfs/QmbdtPZcZ5QSB8LKQMEy6wU5jDZSSkMJvtGVDpEDuN3bz4\"]},\"src/BorrowLogic/BorrowHandlers.sol\":{\"keccak256\":\"0x41dbb5b648ea50541ab227e77e8850607731ad7ebd8171f5d0d96eb829246301\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://780b77c00afd5fa5d97ba16f3d3a7e83bb909608fb54f5f38f19120a16d5bb18\",\"dweb:/ipfs/QmTPZ47VbeFxbWdou6hFMkk86PStsLuh2uNZfhJVoGjyBX\"]},\"src/ClaimFacet.sol\":{\"keccak256\":\"0x06a664d0d467d20ffc78de21c78670a08f134752f4872db55d5dc587e76ecec2\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://e1312cb1cff9ba34218db3219647e9d63685e32a88ed5007858d8af76b440653\",\"dweb:/ipfs/QmbazoYdTrS6FaMjbXM5eWWaz41JGV9QzazuxXAVdDsk1K\"]},\"src/DataStructure/ERC721Errors.sol\":{\"keccak256\":\"0x0ee13f898a2d61d6662ef236db05001d14086ff4431bef2ae89c1979819d38d0\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://2e1878fe70994d02159dbf4a5a9c79b3665feaae0d08ff420b3f00cb8ed6355a\",\"dweb:/ipfs/QmNYJDoien8bUQFYuc75GyVGVTYuiUagF4RRUSGTTmZNH7\"]},\"src/DataStructure/Errors.sol\":{\"keccak256\":\"0x6c4db7ebc787971449c92a004a1742a0ebed90b3073de98ac677a7471696f8c5\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://b650ca8195bbdf7e6010ec51248ea3beb4a255730fb8e6404196b1680d5f1433\",\"dweb:/ipfs/QmbU8dkitPbxtTkUWgqL4Rgx3KdDzDgkYESY48muSmcTop\"]},\"src/DataStructure/Global.sol\":{\"keccak256\":\"0x9596c1bdf1271dd447db6a8f26ca493253674e252c9f63a7bc13c8689a7b6e49\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://3ff822127c6c674400e9730466eb6832d19a72eaf991f3bbf62d251a6e2b49d5\",\"dweb:/ipfs/QmZPGbWwS7rTPF3NiyjivxDseeBW64GhfkGvVNuaCbnzDv\"]},\"src/DataStructure/Objects.sol\":{\"keccak256\":\"0x251dd6c3f36c5a2c8a6a867aa29c9ba8b4bb7f2ec1a7321d630fea19f6bbd83a\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://a7f620222a6b6d909e8aa2d7191200b312345b6c704eecdf40729982e238f44e\",\"dweb:/ipfs/QmTikrgA5SKJrsJanid1atHw1M7opEvwuGKNRQTbjeM4sq\"]},\"src/DataStructure/Storage.sol\":{\"keccak256\":\"0x8f99f5f94641c826d0b4bd2dadb065745ff877b195fb1eb7392362a026d01380\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://f2c2362ee8472e6076f7f18a51264c96e63a346e61da6a7234abe5e3c034de38\",\"dweb:/ipfs/QmW59HJM49LDieB2svjKnYzo7hdYKG24rLKgb7AfiXht4z\"]},\"src/ProtocolFacet.sol\":{\"keccak256\":\"0x9c1c8deb2d61a8e39028c31154e51f6f4acccd71d4995cd82442e5addd9a5916\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://9e1d0cfcefa35601756a9f9aec29fcd1a072dc3e5e37d78def17d72ace29909d\",\"dweb:/ipfs/QmeCgh2tqzoz5Nf8X6UGY7ZeKTiyrvgoxZdzU3P9ua4JKX\"]},\"src/RepayFacet.sol\":{\"keccak256\":\"0x5b5c777a189495808271068b7757f73542bbc27b6141599752eaf4bef63c8e89\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://d6b289c89769655e173cecb2c20d8147d48ada74c5c6596060b70df7eed4b609\",\"dweb:/ipfs/Qmas7puaEDtvyLhMPUZGouNnVvky3gRKZCLemCxdLWALsF\"]},\"src/Signature.sol\":{\"keccak256\":\"0x37073550ae20735f42ae719377540c0bedd633aad9ce97d40e0facb965e4d137\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://d57bda44ce2f1e48f227c8b97cb23cd166d3b92421a3436835c81c1bc42a60ca\",\"dweb:/ipfs/QmU5yS6t3d6nhfUeGmwZnFsbo8LZe7MHED738pZBaUkPna\"]},\"src/SupplyPositionFacet.sol\":{\"keccak256\":\"0xd96da66c04a30bc8d665bdbec2eebbf23998aff501e00f64fc26d7ed0c4df780\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://bc62b16dbddf140812eb18fc39e7af0618c0b38c2b83ba9ee3efb67974963ad5\",\"dweb:/ipfs/QmYV7aBahd6EqmcjFK1Lncp27XeG2AKnLtQRFRnGsGu9Mz\"]},\"src/SupplyPositionLogic/DiamondERC721.sol\":{\"keccak256\":\"0xdb5734014944ffbfc70b937c0cb2ab310d15c7ceb93e852bf5c6aef64c24584b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://51bc9d846048e67e83c9e708aedd5f68ce240bd87c1c4a68526ee224553c0279\",\"dweb:/ipfs/QmUWcdYokYYxTNpJtSwM22Q4WBKxJEjfhtyAU97NFh1VdZ\"]},\"src/SupplyPositionLogic/NFTUtils.sol\":{\"keccak256\":\"0xc1fdc762292d11504da9d1b999d6364d8c76b721c8f6f7369e0030c9dae9af13\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dc9d2a3636065c11ad95bc669381dae82218909711ed54e31ee3085671ade192\",\"dweb:/ipfs/QmfX1zJes16PDd9NUGcSNYBMRvaykMhyaEMEQsmMugVtP4\"]},\"src/SupplyPositionLogic/SafeMint.sol\":{\"keccak256\":\"0xfe55649875c4f7c6fa65c01b8abf9e0f6564cab19ec24fb895bdce6dde90764d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5b0e86c734cce67187b23816bbba38c9eaab5e2154606de75866637f4774fd99\",\"dweb:/ipfs/QmPuJk6rhpUNjhftEAzbm26DA5tZw8sHybzYZ6G4PuWG8G\"]},\"src/interface/IAdminFacet.sol\":{\"keccak256\":\"0xfc9606029a4ef8d26d8c86c377d77c3caf1e26335f3e155f279581e487bcc640\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://5a04932fe22d016e66e172bff16c0611abcb8804e1039f99678a5d22e130daee\",\"dweb:/ipfs/QmUKzRKB5CPD3tE81Pbn8HHesuY1j64L5Xfbi4E8xsja8h\"]},\"src/interface/IAuctionFacet.sol\":{\"keccak256\":\"0x142cf5565d929cf20c8b042f791360b7b76289620efcd42c90a37f2d8179e49f\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://3aa1107c4c11a419c7340aff9624e3f539196759ffbe4eed5fde26cbbf1b4567\",\"dweb:/ipfs/QmfS88KKuQskg2RQP6GoVEbk9uUhbmVYH6Fps7yNUpfMCc\"]},\"src/interface/IBorrowCheckers.sol\":{\"keccak256\":\"0x581d912358ce65c74e7e3f089486d5c2cc7f45be7cb02ef5ee26a293c9ba1f18\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://18d4d2dee4cf9ccbeb8a33b037dc0021b1315fd3fca864a2127834f36cb6aaba\",\"dweb:/ipfs/QmUWvZMWUqv2DJpooXCHmQuBcr4kTzBhwApQniouAKdEJn\"]},\"src/interface/IBorrowFacet.sol\":{\"keccak256\":\"0xc2351fa73840199deb8c9ecd663294517ce6e457e198d699d53d651b72f1fe43\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://2094053b1d81f799877ee2ccd44a38601d80b97f93d54a14e0dfbc8ba8f3aba7\",\"dweb:/ipfs/QmZwEsKquQgH1H5tnKCQuBEeU9mRcnNBPC2bXZGt8XVuHF\"]},\"src/interface/IBorrowHandlers.sol\":{\"keccak256\":\"0x420bed3254df51bff3c728e252b74a9603fa3f834330c1edf0f0d257444f03ce\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://200955bcca9610fd1a0e3230f761ade89a12285bf60c91a758ef4045f5b55f54\",\"dweb:/ipfs/QmV9vYWeLVvo5ykdi8x6scgK4QDwYuPkhd4KETKWPA5tMv\"]},\"src/interface/IClaimFacet.sol\":{\"keccak256\":\"0xa797f893096a5828eb1614b941df05b54afcf72ff1fde42a106976bf70d5e71c\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://19be4abca0237cf076fb66e9d4fa9119c7bd9004a9e34a39c162cc3a1bb8e0cc\",\"dweb:/ipfs/QmaLkzLvZLwbcWn8CXmL9JYwVYPHeNWsMKD9JPMRozDBSQ\"]},\"src/interface/IOwnershipFacet.sol\":{\"keccak256\":\"0x505b2f2d275a0aa2861d08564f6d03e44e8d10cd8a1c6fbdea1105383e0e9a4d\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://4ca7e3a48787d056da5f3569965f9c2015e65d8ceb124e9346cf73d55e55c8b2\",\"dweb:/ipfs/QmWJmUsegbVtaJ71yCJZiEpedEvhSuw73NyjBfRFCkxt2z\"]},\"src/interface/IProtocolFacet.sol\":{\"keccak256\":\"0x41ef10bad154ed0a98a1fa46046869d6d6ab744953186caa287ced95b80ddc4a\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://8a45399f560a088b94d3d5e14a104a3cbc02cec1083cf1eec5a8b135341c7d53\",\"dweb:/ipfs/QmcCDJmFCkRZoeHojqmvaMsavwZXcBeZV54i5eAfxmjcH5\"]},\"src/interface/IRepayFacet.sol\":{\"keccak256\":\"0x932b0a489b740c46361e4cd5f5103c765b954cedfd41a823dd0549f435f0b7d4\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://fddbb0a0401cd79a17b794c9caaa6f3c2e9381a1a3fd6ea04c43e2148786c572\",\"dweb:/ipfs/QmUKSTezv4twtFPVCXRSQZBfKNW5Zkd22w4HWFfJrV7VyQ\"]},\"src/interface/ISignature.sol\":{\"keccak256\":\"0x6dadc10c64bc681b36624c2937fd3e108e87ca0056d311510e53a25cd009d065\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://a813951b3d9f26315a9363a779c745c58ad261ee9fa8a997727ea7ddc6c90da1\",\"dweb:/ipfs/QmR8G8XQDm7xjKzPH29PmYw2LnHakapvkdavJXZCT3vKFT\"]},\"src/utils/Erc20CheckedTransfer.sol\":{\"keccak256\":\"0x03a0041ce856ecca1d5d2b67443dca5f2acab9fe38cd592b2d3e897eaa3955d0\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://10515dcb2700e1b01b00f50c704ffc7daba221080221e056d498da890c586c82\",\"dweb:/ipfs/QmRW2ycAG7nsk2YXnp6nk8s56RqTV1EVCuPkLgQsUHyGeW\"]},\"src/utils/NFTokenUtils.sol\":{\"keccak256\":\"0x886dbd7a03bf3a8fd4739b86bc4eba01014e7683029dd485993369ad0a0473c5\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://02591fc4c94a10c37a9132dfbd9f1222f62c919ef5ba7b76a1ca1c1e2dc1d105\",\"dweb:/ipfs/QmVkSSvA12C2gu8gEv8CxBHpKY242THHAy7eNfzHpXdhtT\"]},\"src/utils/RayMath.sol\":{\"keccak256\":\"0x234068d17599aefc86ca6f5febb25be32bb71c0b45326c24936b23dd9cc876ac\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://421375b2a164c6ffa1e018c533e2a231395fc4f582acc3a43672a24e51fbe328\",\"dweb:/ipfs/QmUFEZi7BjELW2fDZuUpeDCTrNw1YhMmeqJvoMk2MfuxDU\"]},\"test/Commons/BigKairos.sol\":{\"keccak256\":\"0xe5e4959e7dca0aa52e2d35459a1f71b91a2af9a70fbb1465c31a98b53823eddc\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://25e44dd8b518574592079f2137651440fd7ce1360cfe5ad35d8c6993e8c4622a\",\"dweb:/ipfs/QmcqGbDvgGu2oHqD17PURL2matovxNPyuGgYajw57Q6SCj\"]},\"test/Commons/DCTarget.sol\":{\"keccak256\":\"0xcba06a433861037abd201a81875cf734a394fc6e570ab4cf914c32eb5078d985\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://832ee2e696e29c7fe20f7c08277dcefc8443a470db11d1c929317759f2e98179\",\"dweb:/ipfs/QmUXR99nXCdidLePxNguuys6UAZ4EKjnhWTVKAbhcpi8Pa\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.18+commit.87f61d96"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "struct Offer",
              "name": "offer",
              "type": "tuple",
              "components": [
                {
                  "internalType": "contract IERC20",
                  "name": "assetToLend",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "loanToValue",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "duration",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "expirationDate",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "tranche",
                  "type": "uint256"
                },
                {
                  "internalType": "struct NFToken",
                  "name": "collateral",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "contract IERC721",
                      "name": "implem",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "id",
                      "type": "uint256"
                    }
                  ]
                }
              ]
            },
            {
              "internalType": "struct NFToken",
              "name": "providedNft",
              "type": "tuple",
              "components": [
                {
                  "internalType": "contract IERC721",
                  "name": "implem",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                }
              ]
            }
          ],
          "type": "error",
          "name": "BadCollateral"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "loanId",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "BorrowerAlreadyClaimed"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "admin",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "CallerIsNotOwner"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "endDate",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "loanId",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "CollateralIsNotLiquidableYet"
        },
        {
          "inputs": [
            {
              "internalType": "contract IERC20",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "ERC20TransferFailed"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ERC721AddressZeroIsNotAValidOwner"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ERC721ApprovalToCurrentOwner"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ERC721ApproveToCaller"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ERC721CallerIsNotOwnerNorApproved"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ERC721CallerIsNotOwnerNorApprovedForAll"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ERC721InvalidTokenId"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ERC721MintToTheZeroAddress"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ERC721TokenAlreadyMinted"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ERC721TransferFromIncorrectOwner"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ERC721TransferToNonERC721ReceiverImplementer"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ERC721TransferToTheZeroAddress"
        },
        {
          "inputs": [
            {
              "internalType": "contract IERC20",
              "name": "firstRequested",
              "type": "address"
            },
            {
              "internalType": "contract IERC20",
              "name": "requested",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "InconsistentAssetRequests"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "firstTrancheIdUsed",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "trancheIdFound",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "InconsistentTranches"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "nbOfTranches",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "InvalidTranche"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "loanId",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "LoanAlreadyRepaid"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "loanId",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "LoanNotRepaidOrLiquidatedYet"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "loanId",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "NotBorrowerOfTheLoan"
        },
        {
          "inputs": [
            {
              "internalType": "struct Offer",
              "name": "offer",
              "type": "tuple",
              "components": [
                {
                  "internalType": "contract IERC20",
                  "name": "assetToLend",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "loanToValue",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "duration",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "expirationDate",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "tranche",
                  "type": "uint256"
                },
                {
                  "internalType": "struct NFToken",
                  "name": "collateral",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "contract IERC721",
                      "name": "implem",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "id",
                      "type": "uint256"
                    }
                  ]
                }
              ]
            },
            {
              "internalType": "uint256",
              "name": "expirationDate",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "OfferHasExpired"
        },
        {
          "inputs": [
            {
              "internalType": "struct Offer",
              "name": "offer",
              "type": "tuple",
              "components": [
                {
                  "internalType": "contract IERC20",
                  "name": "assetToLend",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "loanToValue",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "duration",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "expirationDate",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "tranche",
                  "type": "uint256"
                },
                {
                  "internalType": "struct NFToken",
                  "name": "collateral",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "contract IERC721",
                      "name": "implem",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "id",
                      "type": "uint256"
                    }
                  ]
                }
              ]
            },
            {
              "internalType": "uint256",
              "name": "requested",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "lowerBound",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "RequestedAmountIsUnderMinimum"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "requested",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "offered",
              "type": "uint256"
            },
            {
              "internalType": "struct Offer",
              "name": "offer",
              "type": "tuple",
              "components": [
                {
                  "internalType": "contract IERC20",
                  "name": "assetToLend",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "loanToValue",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "duration",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "expirationDate",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "tranche",
                  "type": "uint256"
                },
                {
                  "internalType": "struct NFToken",
                  "name": "collateral",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "contract IERC721",
                      "name": "implem",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "id",
                      "type": "uint256"
                    }
                  ]
                }
              ]
            }
          ],
          "type": "error",
          "name": "RequestedAmountTooHigh"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Unauthorized"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "lent",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "UnsafeAmountLent"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "minLoanToValue",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxLoanToValue",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "UnsafeOfferLoanToValuesGap"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "approved",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Approval",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bool",
              "name": "approved",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ApprovalForAll",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "loanId",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "bytes",
              "name": "loan",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Borrow",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "loanId",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "bytes",
              "name": "args",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Buy",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "claimant",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "claimed",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "loanId",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Claim",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "newAuctionDuration",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "NewAuctionDuration",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "Ray",
              "name": "newAuctionPriceFactor",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "NewAuctionPriceFactor",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "contract IERC20",
              "name": "currency",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "newLowerBound",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "NewBorrowAmountPerOfferLowerBound",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "contract IERC20",
              "name": "currency",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "newMinOfferCost",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "NewMininimumOfferCost",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "Ray",
              "name": "tranche",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "newTrancheId",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "NewTranche",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "loanId",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Repay",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Transfer",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "approve"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct BorrowArg[]",
              "name": "args",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "struct NFToken",
                  "name": "nft",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "contract IERC721",
                      "name": "implem",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "id",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "struct OfferArg[]",
                  "name": "args",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "bytes",
                      "name": "signature",
                      "type": "bytes"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "struct Offer",
                      "name": "offer",
                      "type": "tuple",
                      "components": [
                        {
                          "internalType": "contract IERC20",
                          "name": "assetToLend",
                          "type": "address"
                        },
                        {
                          "internalType": "uint256",
                          "name": "loanToValue",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "duration",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "expirationDate",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "tranche",
                          "type": "uint256"
                        },
                        {
                          "internalType": "struct NFToken",
                          "name": "collateral",
                          "type": "tuple",
                          "components": [
                            {
                              "internalType": "contract IERC721",
                              "name": "implem",
                              "type": "address"
                            },
                            {
                              "internalType": "uint256",
                              "name": "id",
                              "type": "uint256"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "borrow"
        },
        {
          "inputs": [
            {
              "internalType": "struct BuyArg[]",
              "name": "args",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "loanId",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "buy"
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "positionIds",
              "type": "uint256[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "claim",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "sent",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "loanIds",
              "type": "uint256[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "claimAsBorrower",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "sent",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "Ray",
              "name": "newTranche",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "createTranche",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "newTrancheId",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getApproved",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getLoan",
          "outputs": [
            {
              "internalType": "struct Loan",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "contract IERC20",
                  "name": "assetLent",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "lent",
                  "type": "uint256"
                },
                {
                  "internalType": "Ray",
                  "name": "shareLent",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "startDate",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "endDate",
                  "type": "uint256"
                },
                {
                  "internalType": "struct Auction",
                  "name": "auction",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "duration",
                      "type": "uint256"
                    },
                    {
                      "internalType": "Ray",
                      "name": "priceFactor",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "Ray",
                  "name": "interestPerSecond",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "borrower",
                  "type": "address"
                },
                {
                  "internalType": "struct NFToken",
                  "name": "collateral",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "contract IERC721",
                      "name": "implem",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "id",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "struct Payment",
                  "name": "payment",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "paid",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "minInterestsToRepay",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bool",
                      "name": "liquidated",
                      "type": "bool"
                    },
                    {
                      "internalType": "bool",
                      "name": "borrowerClaimed",
                      "type": "bool"
                    }
                  ]
                },
                {
                  "internalType": "uint256",
                  "name": "supplyPositionIndex",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "nbOfPositions",
                  "type": "uint256"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract IERC20",
              "name": "currency",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getMinOfferCostAndBorrowableAmount",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "minOfferCost",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "offerBorrowAmountLowerBound",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getParameters",
          "outputs": [
            {
              "internalType": "Ray",
              "name": "auctionPriceFactor",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "auctionDuration",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "nbOfLoans",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "nbOfTranches",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRateOfTranche",
          "outputs": [
            {
              "internalType": "Ray",
              "name": "rate",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isApprovedForAll",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct Loan",
              "name": "loan",
              "type": "tuple",
              "components": [
                {
                  "internalType": "contract IERC20",
                  "name": "assetLent",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "lent",
                  "type": "uint256"
                },
                {
                  "internalType": "Ray",
                  "name": "shareLent",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "startDate",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "endDate",
                  "type": "uint256"
                },
                {
                  "internalType": "struct Auction",
                  "name": "auction",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "duration",
                      "type": "uint256"
                    },
                    {
                      "internalType": "Ray",
                      "name": "priceFactor",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "Ray",
                  "name": "interestPerSecond",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "borrower",
                  "type": "address"
                },
                {
                  "internalType": "struct NFToken",
                  "name": "collateral",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "contract IERC721",
                      "name": "implem",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "id",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "struct Payment",
                  "name": "payment",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "paid",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "minInterestsToRepay",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bool",
                      "name": "liquidated",
                      "type": "bool"
                    },
                    {
                      "internalType": "bool",
                      "name": "borrowerClaimed",
                      "type": "bool"
                    }
                  ]
                },
                {
                  "internalType": "uint256",
                  "name": "supplyPositionIndex",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "nbOfPositions",
                  "type": "uint256"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "mintLoan",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "loanId",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "struct Provision",
              "name": "provision",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "Ray",
                  "name": "share",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "loanId",
                  "type": "uint256"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "mintPosition",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct Offer",
              "name": "offer",
              "type": "tuple",
              "components": [
                {
                  "internalType": "contract IERC20",
                  "name": "assetToLend",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "loanToValue",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "duration",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "expirationDate",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "tranche",
                  "type": "uint256"
                },
                {
                  "internalType": "struct NFToken",
                  "name": "collateral",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "contract IERC721",
                      "name": "implem",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "id",
                      "type": "uint256"
                    }
                  ]
                }
              ]
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "offerDigest",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "onERC721Received",
          "outputs": [
            {
              "internalType": "bytes4",
              "name": "",
              "type": "bytes4"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "ownerOf",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "position",
          "outputs": [
            {
              "internalType": "struct Provision",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "Ray",
                  "name": "share",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "loanId",
                  "type": "uint256"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "loanId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "price",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "loanIds",
              "type": "uint256[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "repay"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "safeTransferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "safeTransferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "approved",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setApprovalForAll"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "newAuctionDuration",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setAuctionDuration"
        },
        {
          "inputs": [
            {
              "internalType": "Ray",
              "name": "newAuctionPriceFactor",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setAuctionPriceFactor"
        },
        {
          "inputs": [
            {
              "internalType": "contract IERC20",
              "name": "currency",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "newLowerBound",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setBorrowAmountPerOfferLowerBound"
        },
        {
          "inputs": [
            {
              "internalType": "contract IERC20",
              "name": "currency",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "newMinOfferCost",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setMinOfferCost"
        },
        {
          "inputs": [
            {
              "internalType": "struct Loan",
              "name": "loan",
              "type": "tuple",
              "components": [
                {
                  "internalType": "contract IERC20",
                  "name": "assetLent",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "lent",
                  "type": "uint256"
                },
                {
                  "internalType": "Ray",
                  "name": "shareLent",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "startDate",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "endDate",
                  "type": "uint256"
                },
                {
                  "internalType": "struct Auction",
                  "name": "auction",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "duration",
                      "type": "uint256"
                    },
                    {
                      "internalType": "Ray",
                      "name": "priceFactor",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "Ray",
                  "name": "interestPerSecond",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "borrower",
                  "type": "address"
                },
                {
                  "internalType": "struct NFToken",
                  "name": "collateral",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "contract IERC721",
                      "name": "implem",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "id",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "struct Payment",
                  "name": "payment",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "paid",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "minInterestsToRepay",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bool",
                      "name": "liquidated",
                      "type": "bool"
                    },
                    {
                      "internalType": "bool",
                      "name": "borrowerClaimed",
                      "type": "bool"
                    }
                  ]
                },
                {
                  "internalType": "uint256",
                  "name": "supplyPositionIndex",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "nbOfPositions",
                  "type": "uint256"
                }
              ]
            },
            {
              "internalType": "uint256",
              "name": "loanId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "storeLoan"
        },
        {
          "inputs": [
            {
              "internalType": "struct Provision",
              "name": "provision",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "Ray",
                  "name": "share",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "loanId",
                  "type": "uint256"
                }
              ]
            },
            {
              "internalType": "uint256",
              "name": "positionId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "storeProvision"
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferFrom"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "approve(address,uint256)": {
            "details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
          },
          "balanceOf(address)": {
            "details": "Returns the number of tokens in ``owner``'s account."
          },
          "borrow(((address,uint256),(bytes,uint256,(address,uint256,uint256,uint256,uint256,(address,uint256)))[])[])": {
            "params": {
              "args": "list of arguments specifying at which terms each collateral should be used"
            }
          },
          "buy((uint256,address)[])": {
            "params": {
              "args": "arguments on what and how to buy"
            }
          },
          "claim(uint256[])": {
            "params": {
              "positionIds": "identifiers of one or multiple supply position to burn"
            },
            "returns": {
              "sent": "amount sent"
            }
          },
          "claimAsBorrower(uint256[])": {
            "params": {
              "loanIds": "loan identifiers of one or multiple loans where the borrower wants to claim liquidation share"
            },
            "returns": {
              "sent": "amount sent"
            }
          },
          "createTranche(uint256)": {
            "params": {
              "newTranche": "the interest rate of the new tranche"
            }
          },
          "getApproved(uint256)": {
            "details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
          },
          "getLoan(uint256)": {
            "params": {
              "id": "loan identifier"
            },
            "returns": {
              "_0": "loan the corresponding loan"
            }
          },
          "getMinOfferCostAndBorrowableAmount(address)": {
            "params": {
              "currency": "the erc20 asset lent on which the parameters apply"
            },
            "returns": {
              "minOfferCost": "the minimal amount to repay per offer used in loan",
              "offerBorrowAmountLowerBound": " minimum amount to borrow per offer used in loan"
            }
          },
          "getParameters()": {
            "returns": {
              "auctionDuration": "number of seconds after the auction start when the price hits 0",
              "auctionPriceFactor": "factor multiplied with the loan to value of a loan to get initial price         of a collateral on sale",
              "nbOfLoans": "total number of loans ever issued (active and ended)",
              "nbOfTranches": "total number of interest rates tranches ever created (active and inactive)"
            }
          },
          "getRateOfTranche(uint256)": {
            "params": {
              "id": "rate identifier"
            },
            "returns": {
              "rate": "the rate of the tranche, as a Ray, multiplier per second of the amount to repay (non compounding)         I.e lent * time since loan start * tranche = interests to repay"
            }
          },
          "isApprovedForAll(address,address)": {
            "details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
          },
          "offerDigest((address,uint256,uint256,uint256,uint256,(address,uint256)))": {
            "params": {
              "offer": "the loan offer signed/to sign by a supplier"
            },
            "returns": {
              "_0": "digest the digest, ecdsa sign as is to produce a valid loan offer signature"
            }
          },
          "onERC721Received(address,address,uint256,bytes)": {
            "details": "param data must be of format OfferArg[]",
            "params": {
              "data": "abi encoded arguments for the loan",
              "operator": "account that initialized the transfer action according to the NFT implementation contract",
              "tokenId": "token identifier of the NFT sent according to the NFT implementation contract"
            },
            "returns": {
              "_0": "selector `this.onERC721Received.selector` ERC721-compliant response, signaling compatibility"
            }
          },
          "ownerOf(uint256)": {
            "details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
          },
          "position(uint256)": {
            "params": {
              "tokenId": "token identifier of the supply position"
            },
            "returns": {
              "_0": "provision metadata"
            }
          },
          "price(uint256)": {
            "params": {
              "loanId": "identifier of the loan"
            },
            "returns": {
              "_0": "price computed price"
            }
          },
          "repay(uint256[])": {
            "details": "repay on behalf is activated, the collateral goes to the original borrower",
            "params": {
              "loanIds": "identifiers of loans to repay"
            }
          },
          "safeTransferFrom(address,address,uint256)": {
            "details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
          },
          "safeTransferFrom(address,address,uint256,bytes)": {
            "details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
          },
          "setAuctionDuration(uint256)": {
            "params": {
              "newAuctionDuration": "number of seconds of the duration"
            }
          },
          "setAuctionPriceFactor(uint256)": {
            "params": {
              "newAuctionPriceFactor": "the new factor multiplied to the loan to value"
            }
          },
          "setBorrowAmountPerOfferLowerBound(address,uint256)": {
            "params": {
              "currency": "the erc20 on which a new borrow amount lower bound is taking effect",
              "newLowerBound": "the new lower bound"
            }
          },
          "setMinOfferCost(address,uint256)": {
            "params": {
              "currency": "the erc20 on which a new minimum borrow cost will take effect",
              "newMinOfferCost": "the new minimum amount that will need to be repaid per loan offer used"
            }
          },
          "supportsInterface(bytes4)": {
            "details": "don't use this method for inclusion in the facet function selectors     prefer the LibDiamond implementation for this method     it is included here for IERC721-compliance"
          },
          "totalSupply()": {
            "returns": {
              "_0": "totalSupply the number"
            }
          },
          "transferFrom(address,address,uint256)": {
            "details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "borrow(((address,uint256),(bytes,uint256,(address,uint256,uint256,uint256,uint256,(address,uint256)))[])[])": {
            "notice": "take loans, take ownership of NFTs specified as collateral, sends borrowed money to caller"
          },
          "buy((uint256,address)[])": {
            "notice": "buy one or multiple NFTs in liquidation"
          },
          "claim(uint256[])": {
            "notice": "claims principal plus interests or liquidation share due as a supplier"
          },
          "claimAsBorrower(uint256[])": {
            "notice": "claims share of liquidation due to a borrower who's collateral has been sold"
          },
          "createTranche(uint256)": {
            "notice": "creates a new tranche at a new identifier for lenders to provide offers for"
          },
          "getLoan(uint256)": {
            "notice": "get loan metadata"
          },
          "getMinOfferCostAndBorrowableAmount(address)": {
            "notice": "get the minimal amount to repay per offer used in loan and minimum amount to borrow per offer.     Gives currently active settings, may not concern loans already issued."
          },
          "getParameters()": {
            "notice": "gets current values of parameters impacting loans behavior and total number of loans (active and ended)"
          },
          "getRateOfTranche(uint256)": {
            "notice": "gets the rate of tranche `id`"
          },
          "mintLoan((address,uint256,uint256,uint256,uint256,(uint256,uint256),uint256,address,(address,uint256),(uint256,uint256,bool,bool),uint256,uint256))": {
            "notice": "stores a new loan with a new id and emit a borrow event"
          },
          "offerDigest((address,uint256,uint256,uint256,uint256,(address,uint256)))": {
            "notice": "computes EIP-712 compliant digest of a loan offer"
          },
          "onERC721Received(address,address,uint256,bytes)": {
            "notice": "borrow using sent NFT as collateral without needing approval through transfer callback"
          },
          "position(uint256)": {
            "notice": "get metadata on provision linked to the supply position"
          },
          "price(uint256)": {
            "notice": "gets the price to buy the underlying collateral of the loan"
          },
          "repay(uint256[])": {
            "notice": "repay one or multiple loans, gives collaterals back"
          },
          "setAuctionDuration(uint256)": {
            "notice": "sets the time it takes to auction prices to fall to 0 for future loans"
          },
          "setAuctionPriceFactor(uint256)": {
            "notice": "sets the factor applied to the loan to value setting initial price of auction for future loans"
          },
          "setBorrowAmountPerOfferLowerBound(address,uint256)": {
            "notice": "updates the borrow amount lower bound per offer for one currency"
          },
          "setMinOfferCost(address,uint256)": {
            "notice": "updates the minimum amount to repay per used loan offer when borrowing a certain currency"
          },
          "totalSupply()": {
            "notice": "total number of supply positions ever minted (counting burned ones)"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin/=node_modules/@openzeppelin/",
        ":diamond/=node_modules/diamond/",
        ":ds-test/=node_modules/ds-test/src/",
        ":forge-std/=node_modules/forge-std/src/",
        ":solmate/=node_modules/solmate/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "test/Commons/DCTarget.sol": "DCTarget"
      },
      "libraries": {}
    },
    "sources": {
      "node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b",
        "urls": [
          "bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34",
          "dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol": {
        "keccak256": "0xab28a56179c1db258c9bf5235b382698cb650debecb51b23d12be9e241374b68",
        "urls": [
          "bzz-raw://daae589a9d6fa7e55f99f86c0a16796ca490f243fb3693632c3711c0646c1d56",
          "dweb:/ipfs/QmR3zpd7wNw3rcUdekwiv6FYHJqksuTCXLVioTxu6Fbxk3"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
        "keccak256": "0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da",
        "urls": [
          "bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708",
          "dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Address.sol": {
        "keccak256": "0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1",
        "urls": [
          "bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269",
          "dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Strings.sol": {
        "keccak256": "0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a",
        "urls": [
          "bzz-raw://8c969013129ba9e651a20735ef659fef6d8a1139ea3607bd4b26ddea2d645634",
          "dweb:/ipfs/QmVhVa6LGuzAcB8qgDtVHRkucn4ihj5UZr8xBLcJkP6ucb"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/cryptography/ECDSA.sol": {
        "keccak256": "0xda898fa084aa1ddfdb346e6a40459e00a59d87071cce7c315a46d648dd71d0ba",
        "urls": [
          "bzz-raw://ce501a941f4aa1555c04dabb5e07992503bb6a9b32ff8f7cdcefdb4a742210cb",
          "dweb:/ipfs/QmeScPrUpdrGYs9BytV3Z5ZWJcBXtuAgCW4BLHua4xFUxx"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/cryptography/EIP712.sol": {
        "keccak256": "0x948d8b2d18f38141ec78c5229d770d950ebc781ed3f44cc9e3ccbb9fded5846a",
        "urls": [
          "bzz-raw://7311ac950ed2d81f3ccf1784a926efbfc82a86dcb5c98d41eb3792c0cac63a2f",
          "dweb:/ipfs/QmRRwCUHewkPmehx8QRYENFoWyLNx8UEZGULxWYUeSZdTS"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1",
        "urls": [
          "bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f",
          "dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/math/Math.sol": {
        "keccak256": "0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6",
        "urls": [
          "bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b",
          "dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz"
        ],
        "license": "MIT"
      },
      "src/AdminFacet.sol": {
        "keccak256": "0x1a2d8498fd8fd33bdda336678927e9f541b02b454d82994cd4a650f1f3a2942a",
        "urls": [
          "bzz-raw://53f331f3125c77de8a8efa62288c88b9e72f93763cf7b255ee039a661198e936",
          "dweb:/ipfs/QmPvkNQKNyRf3BVyjet6YmWmzhBKC5tFq3BZTx66U167u2"
        ],
        "license": "UNLICENSED"
      },
      "src/AuctionFacet.sol": {
        "keccak256": "0x41a60f4e0ea36dd4a1acb8845d07f8eee2e788aa0acc7eeea3c3443448231f22",
        "urls": [
          "bzz-raw://049a623687b02d8ceb7f933cdad6b6de5f28d826cb7eb828c1b2ecfba1b02b48",
          "dweb:/ipfs/QmRSjXjDZqys1KWaK2YbWhuMju5A45KLETF9KtjzHVFGbM"
        ],
        "license": "UNLICENSED"
      },
      "src/BorrowFacet.sol": {
        "keccak256": "0x960ac7f5ddc23fd9c9b87481451b47022b85ce53eefc1c46fe9cdbd34481e2fc",
        "urls": [
          "bzz-raw://3c17390c85d849708b4489909ab63f11ceb8652d2c2f465e2c0b42b7a71fed94",
          "dweb:/ipfs/QmZNQ9RdZhk9QAxQkws1Fsv5UMwfJpra77HokJCxM8wERH"
        ],
        "license": "UNLICENSED"
      },
      "src/BorrowLogic/BorrowCheckers.sol": {
        "keccak256": "0x023dce239e7e6d534db05e6364715ebb3399c3c9dccf894e9076712ab779745d",
        "urls": [
          "bzz-raw://cfabb6dbacbb9d09ee26887d755e88d9761d266a3daa68a54c070ff967bf2aa8",
          "dweb:/ipfs/QmbdtPZcZ5QSB8LKQMEy6wU5jDZSSkMJvtGVDpEDuN3bz4"
        ],
        "license": "UNLICENSED"
      },
      "src/BorrowLogic/BorrowHandlers.sol": {
        "keccak256": "0x41dbb5b648ea50541ab227e77e8850607731ad7ebd8171f5d0d96eb829246301",
        "urls": [
          "bzz-raw://780b77c00afd5fa5d97ba16f3d3a7e83bb909608fb54f5f38f19120a16d5bb18",
          "dweb:/ipfs/QmTPZ47VbeFxbWdou6hFMkk86PStsLuh2uNZfhJVoGjyBX"
        ],
        "license": "UNLICENSED"
      },
      "src/ClaimFacet.sol": {
        "keccak256": "0x06a664d0d467d20ffc78de21c78670a08f134752f4872db55d5dc587e76ecec2",
        "urls": [
          "bzz-raw://e1312cb1cff9ba34218db3219647e9d63685e32a88ed5007858d8af76b440653",
          "dweb:/ipfs/QmbazoYdTrS6FaMjbXM5eWWaz41JGV9QzazuxXAVdDsk1K"
        ],
        "license": "UNLICENSED"
      },
      "src/DataStructure/ERC721Errors.sol": {
        "keccak256": "0x0ee13f898a2d61d6662ef236db05001d14086ff4431bef2ae89c1979819d38d0",
        "urls": [
          "bzz-raw://2e1878fe70994d02159dbf4a5a9c79b3665feaae0d08ff420b3f00cb8ed6355a",
          "dweb:/ipfs/QmNYJDoien8bUQFYuc75GyVGVTYuiUagF4RRUSGTTmZNH7"
        ],
        "license": "UNLICENSED"
      },
      "src/DataStructure/Errors.sol": {
        "keccak256": "0x6c4db7ebc787971449c92a004a1742a0ebed90b3073de98ac677a7471696f8c5",
        "urls": [
          "bzz-raw://b650ca8195bbdf7e6010ec51248ea3beb4a255730fb8e6404196b1680d5f1433",
          "dweb:/ipfs/QmbU8dkitPbxtTkUWgqL4Rgx3KdDzDgkYESY48muSmcTop"
        ],
        "license": "UNLICENSED"
      },
      "src/DataStructure/Global.sol": {
        "keccak256": "0x9596c1bdf1271dd447db6a8f26ca493253674e252c9f63a7bc13c8689a7b6e49",
        "urls": [
          "bzz-raw://3ff822127c6c674400e9730466eb6832d19a72eaf991f3bbf62d251a6e2b49d5",
          "dweb:/ipfs/QmZPGbWwS7rTPF3NiyjivxDseeBW64GhfkGvVNuaCbnzDv"
        ],
        "license": "UNLICENSED"
      },
      "src/DataStructure/Objects.sol": {
        "keccak256": "0x251dd6c3f36c5a2c8a6a867aa29c9ba8b4bb7f2ec1a7321d630fea19f6bbd83a",
        "urls": [
          "bzz-raw://a7f620222a6b6d909e8aa2d7191200b312345b6c704eecdf40729982e238f44e",
          "dweb:/ipfs/QmTikrgA5SKJrsJanid1atHw1M7opEvwuGKNRQTbjeM4sq"
        ],
        "license": "UNLICENSED"
      },
      "src/DataStructure/Storage.sol": {
        "keccak256": "0x8f99f5f94641c826d0b4bd2dadb065745ff877b195fb1eb7392362a026d01380",
        "urls": [
          "bzz-raw://f2c2362ee8472e6076f7f18a51264c96e63a346e61da6a7234abe5e3c034de38",
          "dweb:/ipfs/QmW59HJM49LDieB2svjKnYzo7hdYKG24rLKgb7AfiXht4z"
        ],
        "license": "UNLICENSED"
      },
      "src/ProtocolFacet.sol": {
        "keccak256": "0x9c1c8deb2d61a8e39028c31154e51f6f4acccd71d4995cd82442e5addd9a5916",
        "urls": [
          "bzz-raw://9e1d0cfcefa35601756a9f9aec29fcd1a072dc3e5e37d78def17d72ace29909d",
          "dweb:/ipfs/QmeCgh2tqzoz5Nf8X6UGY7ZeKTiyrvgoxZdzU3P9ua4JKX"
        ],
        "license": "UNLICENSED"
      },
      "src/RepayFacet.sol": {
        "keccak256": "0x5b5c777a189495808271068b7757f73542bbc27b6141599752eaf4bef63c8e89",
        "urls": [
          "bzz-raw://d6b289c89769655e173cecb2c20d8147d48ada74c5c6596060b70df7eed4b609",
          "dweb:/ipfs/Qmas7puaEDtvyLhMPUZGouNnVvky3gRKZCLemCxdLWALsF"
        ],
        "license": "UNLICENSED"
      },
      "src/Signature.sol": {
        "keccak256": "0x37073550ae20735f42ae719377540c0bedd633aad9ce97d40e0facb965e4d137",
        "urls": [
          "bzz-raw://d57bda44ce2f1e48f227c8b97cb23cd166d3b92421a3436835c81c1bc42a60ca",
          "dweb:/ipfs/QmU5yS6t3d6nhfUeGmwZnFsbo8LZe7MHED738pZBaUkPna"
        ],
        "license": "UNLICENSED"
      },
      "src/SupplyPositionFacet.sol": {
        "keccak256": "0xd96da66c04a30bc8d665bdbec2eebbf23998aff501e00f64fc26d7ed0c4df780",
        "urls": [
          "bzz-raw://bc62b16dbddf140812eb18fc39e7af0618c0b38c2b83ba9ee3efb67974963ad5",
          "dweb:/ipfs/QmYV7aBahd6EqmcjFK1Lncp27XeG2AKnLtQRFRnGsGu9Mz"
        ],
        "license": "UNLICENSED"
      },
      "src/SupplyPositionLogic/DiamondERC721.sol": {
        "keccak256": "0xdb5734014944ffbfc70b937c0cb2ab310d15c7ceb93e852bf5c6aef64c24584b",
        "urls": [
          "bzz-raw://51bc9d846048e67e83c9e708aedd5f68ce240bd87c1c4a68526ee224553c0279",
          "dweb:/ipfs/QmUWcdYokYYxTNpJtSwM22Q4WBKxJEjfhtyAU97NFh1VdZ"
        ],
        "license": "MIT"
      },
      "src/SupplyPositionLogic/NFTUtils.sol": {
        "keccak256": "0xc1fdc762292d11504da9d1b999d6364d8c76b721c8f6f7369e0030c9dae9af13",
        "urls": [
          "bzz-raw://dc9d2a3636065c11ad95bc669381dae82218909711ed54e31ee3085671ade192",
          "dweb:/ipfs/QmfX1zJes16PDd9NUGcSNYBMRvaykMhyaEMEQsmMugVtP4"
        ],
        "license": "MIT"
      },
      "src/SupplyPositionLogic/SafeMint.sol": {
        "keccak256": "0xfe55649875c4f7c6fa65c01b8abf9e0f6564cab19ec24fb895bdce6dde90764d",
        "urls": [
          "bzz-raw://5b0e86c734cce67187b23816bbba38c9eaab5e2154606de75866637f4774fd99",
          "dweb:/ipfs/QmPuJk6rhpUNjhftEAzbm26DA5tZw8sHybzYZ6G4PuWG8G"
        ],
        "license": "MIT"
      },
      "src/interface/IAdminFacet.sol": {
        "keccak256": "0xfc9606029a4ef8d26d8c86c377d77c3caf1e26335f3e155f279581e487bcc640",
        "urls": [
          "bzz-raw://5a04932fe22d016e66e172bff16c0611abcb8804e1039f99678a5d22e130daee",
          "dweb:/ipfs/QmUKzRKB5CPD3tE81Pbn8HHesuY1j64L5Xfbi4E8xsja8h"
        ],
        "license": "UNLICENSED"
      },
      "src/interface/IAuctionFacet.sol": {
        "keccak256": "0x142cf5565d929cf20c8b042f791360b7b76289620efcd42c90a37f2d8179e49f",
        "urls": [
          "bzz-raw://3aa1107c4c11a419c7340aff9624e3f539196759ffbe4eed5fde26cbbf1b4567",
          "dweb:/ipfs/QmfS88KKuQskg2RQP6GoVEbk9uUhbmVYH6Fps7yNUpfMCc"
        ],
        "license": "UNLICENSED"
      },
      "src/interface/IBorrowCheckers.sol": {
        "keccak256": "0x581d912358ce65c74e7e3f089486d5c2cc7f45be7cb02ef5ee26a293c9ba1f18",
        "urls": [
          "bzz-raw://18d4d2dee4cf9ccbeb8a33b037dc0021b1315fd3fca864a2127834f36cb6aaba",
          "dweb:/ipfs/QmUWvZMWUqv2DJpooXCHmQuBcr4kTzBhwApQniouAKdEJn"
        ],
        "license": "UNLICENSED"
      },
      "src/interface/IBorrowFacet.sol": {
        "keccak256": "0xc2351fa73840199deb8c9ecd663294517ce6e457e198d699d53d651b72f1fe43",
        "urls": [
          "bzz-raw://2094053b1d81f799877ee2ccd44a38601d80b97f93d54a14e0dfbc8ba8f3aba7",
          "dweb:/ipfs/QmZwEsKquQgH1H5tnKCQuBEeU9mRcnNBPC2bXZGt8XVuHF"
        ],
        "license": "UNLICENSED"
      },
      "src/interface/IBorrowHandlers.sol": {
        "keccak256": "0x420bed3254df51bff3c728e252b74a9603fa3f834330c1edf0f0d257444f03ce",
        "urls": [
          "bzz-raw://200955bcca9610fd1a0e3230f761ade89a12285bf60c91a758ef4045f5b55f54",
          "dweb:/ipfs/QmV9vYWeLVvo5ykdi8x6scgK4QDwYuPkhd4KETKWPA5tMv"
        ],
        "license": "UNLICENSED"
      },
      "src/interface/IClaimFacet.sol": {
        "keccak256": "0xa797f893096a5828eb1614b941df05b54afcf72ff1fde42a106976bf70d5e71c",
        "urls": [
          "bzz-raw://19be4abca0237cf076fb66e9d4fa9119c7bd9004a9e34a39c162cc3a1bb8e0cc",
          "dweb:/ipfs/QmaLkzLvZLwbcWn8CXmL9JYwVYPHeNWsMKD9JPMRozDBSQ"
        ],
        "license": "UNLICENSED"
      },
      "src/interface/IOwnershipFacet.sol": {
        "keccak256": "0x505b2f2d275a0aa2861d08564f6d03e44e8d10cd8a1c6fbdea1105383e0e9a4d",
        "urls": [
          "bzz-raw://4ca7e3a48787d056da5f3569965f9c2015e65d8ceb124e9346cf73d55e55c8b2",
          "dweb:/ipfs/QmWJmUsegbVtaJ71yCJZiEpedEvhSuw73NyjBfRFCkxt2z"
        ],
        "license": "UNLICENSED"
      },
      "src/interface/IProtocolFacet.sol": {
        "keccak256": "0x41ef10bad154ed0a98a1fa46046869d6d6ab744953186caa287ced95b80ddc4a",
        "urls": [
          "bzz-raw://8a45399f560a088b94d3d5e14a104a3cbc02cec1083cf1eec5a8b135341c7d53",
          "dweb:/ipfs/QmcCDJmFCkRZoeHojqmvaMsavwZXcBeZV54i5eAfxmjcH5"
        ],
        "license": "UNLICENSED"
      },
      "src/interface/IRepayFacet.sol": {
        "keccak256": "0x932b0a489b740c46361e4cd5f5103c765b954cedfd41a823dd0549f435f0b7d4",
        "urls": [
          "bzz-raw://fddbb0a0401cd79a17b794c9caaa6f3c2e9381a1a3fd6ea04c43e2148786c572",
          "dweb:/ipfs/QmUKSTezv4twtFPVCXRSQZBfKNW5Zkd22w4HWFfJrV7VyQ"
        ],
        "license": "UNLICENSED"
      },
      "src/interface/ISignature.sol": {
        "keccak256": "0x6dadc10c64bc681b36624c2937fd3e108e87ca0056d311510e53a25cd009d065",
        "urls": [
          "bzz-raw://a813951b3d9f26315a9363a779c745c58ad261ee9fa8a997727ea7ddc6c90da1",
          "dweb:/ipfs/QmR8G8XQDm7xjKzPH29PmYw2LnHakapvkdavJXZCT3vKFT"
        ],
        "license": "UNLICENSED"
      },
      "src/utils/Erc20CheckedTransfer.sol": {
        "keccak256": "0x03a0041ce856ecca1d5d2b67443dca5f2acab9fe38cd592b2d3e897eaa3955d0",
        "urls": [
          "bzz-raw://10515dcb2700e1b01b00f50c704ffc7daba221080221e056d498da890c586c82",
          "dweb:/ipfs/QmRW2ycAG7nsk2YXnp6nk8s56RqTV1EVCuPkLgQsUHyGeW"
        ],
        "license": "UNLICENSED"
      },
      "src/utils/NFTokenUtils.sol": {
        "keccak256": "0x886dbd7a03bf3a8fd4739b86bc4eba01014e7683029dd485993369ad0a0473c5",
        "urls": [
          "bzz-raw://02591fc4c94a10c37a9132dfbd9f1222f62c919ef5ba7b76a1ca1c1e2dc1d105",
          "dweb:/ipfs/QmVkSSvA12C2gu8gEv8CxBHpKY242THHAy7eNfzHpXdhtT"
        ],
        "license": "UNLICENSED"
      },
      "src/utils/RayMath.sol": {
        "keccak256": "0x234068d17599aefc86ca6f5febb25be32bb71c0b45326c24936b23dd9cc876ac",
        "urls": [
          "bzz-raw://421375b2a164c6ffa1e018c533e2a231395fc4f582acc3a43672a24e51fbe328",
          "dweb:/ipfs/QmUFEZi7BjELW2fDZuUpeDCTrNw1YhMmeqJvoMk2MfuxDU"
        ],
        "license": "UNLICENSED"
      },
      "test/Commons/BigKairos.sol": {
        "keccak256": "0xe5e4959e7dca0aa52e2d35459a1f71b91a2af9a70fbb1465c31a98b53823eddc",
        "urls": [
          "bzz-raw://25e44dd8b518574592079f2137651440fd7ce1360cfe5ad35d8c6993e8c4622a",
          "dweb:/ipfs/QmcqGbDvgGu2oHqD17PURL2matovxNPyuGgYajw57Q6SCj"
        ],
        "license": "UNLICENSED"
      },
      "test/Commons/DCTarget.sol": {
        "keccak256": "0xcba06a433861037abd201a81875cf734a394fc6e570ab4cf914c32eb5078d985",
        "urls": [
          "bzz-raw://832ee2e696e29c7fe20f7c08277dcefc8443a470db11d1c929317759f2e98179",
          "dweb:/ipfs/QmUXR99nXCdidLePxNguuys6UAZ4EKjnhWTVKAbhcpi8Pa"
        ],
        "license": "UNLICENSED"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "test/Commons/DCTarget.sol",
    "id": 44197,
    "exportedSymbols": {
      "BigKairos": [
        44067
      ],
      "DCTarget": [
        44196
      ],
      "Loan": [
        36780
      ],
      "Provision": [
        36827
      ],
      "protocolStorage": [
        36624
      ],
      "supplyPositionStorage": [
        36636
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:1049:99",
    "nodes": [
      {
        "id": 44102,
        "nodeType": "PragmaDirective",
        "src": "39:23:99",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".18"
        ]
      },
      {
        "id": 44104,
        "nodeType": "ImportDirective",
        "src": "64:42:99",
        "nodes": [],
        "absolutePath": "test/Commons/BigKairos.sol",
        "file": "./BigKairos.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 44197,
        "sourceUnit": 44068,
        "symbolAliases": [
          {
            "foreign": {
              "id": 44103,
              "name": "BigKairos",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 44067,
              "src": "72:9:99",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 44107,
        "nodeType": "ImportDirective",
        "src": "107:68:99",
        "nodes": [],
        "absolutePath": "src/DataStructure/Storage.sol",
        "file": "../../src/DataStructure/Storage.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 44197,
        "sourceUnit": 36828,
        "symbolAliases": [
          {
            "foreign": {
              "id": 44105,
              "name": "Loan",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 36780,
              "src": "115:4:99",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 44106,
              "name": "Provision",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 36827,
              "src": "121:9:99",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 44110,
        "nodeType": "ImportDirective",
        "src": "176:90:99",
        "nodes": [],
        "absolutePath": "src/DataStructure/Global.sol",
        "file": "../../src/DataStructure/Global.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 44197,
        "sourceUnit": 36637,
        "symbolAliases": [
          {
            "foreign": {
              "id": 44108,
              "name": "protocolStorage",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 36624,
              "src": "184:15:99",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 44109,
              "name": "supplyPositionStorage",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 36636,
              "src": "201:21:99",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 44196,
        "nodeType": "ContractDefinition",
        "src": "337:750:99",
        "nodes": [
          {
            "id": 44130,
            "nodeType": "FunctionDefinition",
            "src": "374:155:99",
            "nodes": [],
            "body": {
              "id": 44129,
              "nodeType": "Block",
              "src": "455:74:99",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 44127,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 44121,
                            "name": "supplyPositionStorage",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 36636,
                            "src": "465:21:99",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_SupplyPosition_$36819_storage_ptr_$",
                              "typeString": "function () pure returns (struct SupplyPosition storage pointer)"
                            }
                          },
                          "id": 44122,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "465:23:99",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_SupplyPosition_$36819_storage_ptr",
                            "typeString": "struct SupplyPosition storage pointer"
                          }
                        },
                        "id": 44123,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "489:9:99",
                        "memberName": "provision",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 36818,
                        "src": "465:33:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Provision_$36827_storage_$",
                          "typeString": "mapping(uint256 => struct Provision storage ref)"
                        }
                      },
                      "id": 44125,
                      "indexExpression": {
                        "id": 44124,
                        "name": "positionId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44118,
                        "src": "499:10:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "465:45:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Provision_$36827_storage",
                        "typeString": "struct Provision storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 44126,
                      "name": "provision",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44116,
                      "src": "513:9:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Provision_$36827_memory_ptr",
                        "typeString": "struct Provision memory"
                      }
                    },
                    "src": "465:57:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Provision_$36827_storage",
                      "typeString": "struct Provision storage ref"
                    }
                  },
                  "id": 44128,
                  "nodeType": "ExpressionStatement",
                  "src": "465:57:99"
                }
              ]
            },
            "functionSelector": "01d3368f",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "storeProvision",
            "nameLocation": "383:14:99",
            "parameters": {
              "id": 44119,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 44116,
                  "mutability": "mutable",
                  "name": "provision",
                  "nameLocation": "415:9:99",
                  "nodeType": "VariableDeclaration",
                  "scope": 44130,
                  "src": "398:26:99",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Provision_$36827_memory_ptr",
                    "typeString": "struct Provision"
                  },
                  "typeName": {
                    "id": 44115,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 44114,
                      "name": "Provision",
                      "nameLocations": [
                        "398:9:99"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 36827,
                      "src": "398:9:99"
                    },
                    "referencedDeclaration": 36827,
                    "src": "398:9:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Provision_$36827_storage_ptr",
                      "typeString": "struct Provision"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 44118,
                  "mutability": "mutable",
                  "name": "positionId",
                  "nameLocation": "434:10:99",
                  "nodeType": "VariableDeclaration",
                  "scope": 44130,
                  "src": "426:18:99",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 44117,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "426:7:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "397:48:99"
            },
            "returnParameters": {
              "id": 44120,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "455:0:99"
            },
            "scope": 44196,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 44148,
            "nodeType": "FunctionDefinition",
            "src": "535:147:99",
            "nodes": [],
            "body": {
              "id": 44147,
              "nodeType": "Block",
              "src": "632:50:99",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 44145,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 44140,
                      "name": "tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44138,
                      "src": "642:7:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 44142,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 44132,
                          "src": "661:2:99",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 44143,
                          "name": "provision",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 44135,
                          "src": "665:9:99",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Provision_$36827_memory_ptr",
                            "typeString": "struct Provision memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_struct$_Provision_$36827_memory_ptr",
                            "typeString": "struct Provision memory"
                          }
                        ],
                        "id": 44141,
                        "name": "safeMint",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38398,
                        "src": "652:8:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_struct$_Provision_$36827_memory_ptr_$returns$_t_uint256_$",
                          "typeString": "function (address,struct Provision memory) returns (uint256)"
                        }
                      },
                      "id": 44144,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "652:23:99",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "642:33:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 44146,
                  "nodeType": "ExpressionStatement",
                  "src": "642:33:99"
                }
              ]
            },
            "functionSelector": "cd3acce9",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mintPosition",
            "nameLocation": "544:12:99",
            "parameters": {
              "id": 44136,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 44132,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "565:2:99",
                  "nodeType": "VariableDeclaration",
                  "scope": 44148,
                  "src": "557:10:99",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 44131,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "557:7:99",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 44135,
                  "mutability": "mutable",
                  "name": "provision",
                  "nameLocation": "586:9:99",
                  "nodeType": "VariableDeclaration",
                  "scope": 44148,
                  "src": "569:26:99",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Provision_$36827_memory_ptr",
                    "typeString": "struct Provision"
                  },
                  "typeName": {
                    "id": 44134,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 44133,
                      "name": "Provision",
                      "nameLocations": [
                        "569:9:99"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 36827,
                      "src": "569:9:99"
                    },
                    "referencedDeclaration": 36827,
                    "src": "569:9:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Provision_$36827_storage_ptr",
                      "typeString": "struct Provision"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "556:40:99"
            },
            "returnParameters": {
              "id": 44139,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 44138,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "623:7:99",
                  "nodeType": "VariableDeclaration",
                  "scope": 44148,
                  "src": "615:15:99",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 44137,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "615:7:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "614:17:99"
            },
            "scope": 44196,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 44178,
            "nodeType": "FunctionDefinition",
            "src": "760:205:99",
            "nodes": [],
            "body": {
              "id": 44177,
              "nodeType": "Block",
              "src": "830:135:99",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 44162,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 44157,
                      "name": "loanId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44155,
                      "src": "840:6:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 44161,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": true,
                      "src": "849:29:99",
                      "subExpression": {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 44158,
                            "name": "protocolStorage",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 36624,
                            "src": "851:15:99",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_Protocol_$36749_storage_ptr_$",
                              "typeString": "function () pure returns (struct Protocol storage pointer)"
                            }
                          },
                          "id": 44159,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "851:17:99",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Protocol_$36749_storage_ptr",
                            "typeString": "struct Protocol storage pointer"
                          }
                        },
                        "id": 44160,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": true,
                        "memberLocation": "869:9:99",
                        "memberName": "nbOfLoans",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 36723,
                        "src": "851:27:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "840:38:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 44163,
                  "nodeType": "ExpressionStatement",
                  "src": "840:38:99"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 44165,
                        "name": "loanId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44155,
                        "src": "900:6:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 44168,
                            "name": "loan",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44152,
                            "src": "919:4:99",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Loan_$36780_memory_ptr",
                              "typeString": "struct Loan memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_struct$_Loan_$36780_memory_ptr",
                              "typeString": "struct Loan memory"
                            }
                          ],
                          "expression": {
                            "id": 44166,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "908:3:99",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 44167,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "912:6:99",
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "908:10:99",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 44169,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "908:16:99",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 44164,
                      "name": "Borrow",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38575,
                      "src": "893:6:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,bytes memory)"
                      }
                    },
                    "id": 44170,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "893:32:99",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44171,
                  "nodeType": "EmitStatement",
                  "src": "888:37:99"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 44173,
                        "name": "loan",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44152,
                        "src": "945:4:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Loan_$36780_memory_ptr",
                          "typeString": "struct Loan memory"
                        }
                      },
                      {
                        "id": 44174,
                        "name": "loanId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44155,
                        "src": "951:6:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Loan_$36780_memory_ptr",
                          "typeString": "struct Loan memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 44172,
                      "name": "storeLoan",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44195,
                      "src": "935:9:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Loan_$36780_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (struct Loan memory,uint256)"
                      }
                    },
                    "id": 44175,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "935:23:99",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44176,
                  "nodeType": "ExpressionStatement",
                  "src": "935:23:99"
                }
              ]
            },
            "documentation": {
              "id": 44149,
              "nodeType": "StructuredDocumentation",
              "src": "688:67:99",
              "text": "@notice stores a new loan with a new id and emit a borrow event"
            },
            "functionSelector": "16cfcfc3",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mintLoan",
            "nameLocation": "769:8:99",
            "parameters": {
              "id": 44153,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 44152,
                  "mutability": "mutable",
                  "name": "loan",
                  "nameLocation": "790:4:99",
                  "nodeType": "VariableDeclaration",
                  "scope": 44178,
                  "src": "778:16:99",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Loan_$36780_memory_ptr",
                    "typeString": "struct Loan"
                  },
                  "typeName": {
                    "id": 44151,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 44150,
                      "name": "Loan",
                      "nameLocations": [
                        "778:4:99"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 36780,
                      "src": "778:4:99"
                    },
                    "referencedDeclaration": 36780,
                    "src": "778:4:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Loan_$36780_storage_ptr",
                      "typeString": "struct Loan"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "777:18:99"
            },
            "returnParameters": {
              "id": 44156,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 44155,
                  "mutability": "mutable",
                  "name": "loanId",
                  "nameLocation": "822:6:99",
                  "nodeType": "VariableDeclaration",
                  "scope": 44178,
                  "src": "814:14:99",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 44154,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "814:7:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "813:16:99"
            },
            "scope": 44196,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 44195,
            "nodeType": "FunctionDefinition",
            "src": "971:114:99",
            "nodes": [],
            "body": {
              "id": 44194,
              "nodeType": "Block",
              "src": "1031:54:99",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 44192,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 44186,
                            "name": "protocolStorage",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 36624,
                            "src": "1041:15:99",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_Protocol_$36749_storage_ptr_$",
                              "typeString": "function () pure returns (struct Protocol storage pointer)"
                            }
                          },
                          "id": 44187,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1041:17:99",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Protocol_$36749_storage_ptr",
                            "typeString": "struct Protocol storage pointer"
                          }
                        },
                        "id": 44188,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1059:4:99",
                        "memberName": "loan",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 36738,
                        "src": "1041:22:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Loan_$36780_storage_$",
                          "typeString": "mapping(uint256 => struct Loan storage ref)"
                        }
                      },
                      "id": 44190,
                      "indexExpression": {
                        "id": 44189,
                        "name": "loanId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44183,
                        "src": "1064:6:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1041:30:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Loan_$36780_storage",
                        "typeString": "struct Loan storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 44191,
                      "name": "loan",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44181,
                      "src": "1074:4:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Loan_$36780_memory_ptr",
                        "typeString": "struct Loan memory"
                      }
                    },
                    "src": "1041:37:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Loan_$36780_storage",
                      "typeString": "struct Loan storage ref"
                    }
                  },
                  "id": 44193,
                  "nodeType": "ExpressionStatement",
                  "src": "1041:37:99"
                }
              ]
            },
            "functionSelector": "ab5dce8e",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "storeLoan",
            "nameLocation": "980:9:99",
            "parameters": {
              "id": 44184,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 44181,
                  "mutability": "mutable",
                  "name": "loan",
                  "nameLocation": "1002:4:99",
                  "nodeType": "VariableDeclaration",
                  "scope": 44195,
                  "src": "990:16:99",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Loan_$36780_memory_ptr",
                    "typeString": "struct Loan"
                  },
                  "typeName": {
                    "id": 44180,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 44179,
                      "name": "Loan",
                      "nameLocations": [
                        "990:4:99"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 36780,
                      "src": "990:4:99"
                    },
                    "referencedDeclaration": 36780,
                    "src": "990:4:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Loan_$36780_storage_ptr",
                      "typeString": "struct Loan"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 44183,
                  "mutability": "mutable",
                  "name": "loanId",
                  "nameLocation": "1016:6:99",
                  "nodeType": "VariableDeclaration",
                  "scope": 44195,
                  "src": "1008:14:99",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 44182,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1008:7:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "989:34:99"
            },
            "returnParameters": {
              "id": 44185,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1031:0:99"
            },
            "scope": 44196,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 44112,
              "name": "BigKairos",
              "nameLocations": [
                "358:9:99"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 44067,
              "src": "358:9:99"
            },
            "id": 44113,
            "nodeType": "InheritanceSpecifier",
            "src": "358:9:99"
          }
        ],
        "canonicalName": "DCTarget",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 44111,
          "nodeType": "StructuredDocumentation",
          "src": "268:69:99",
          "text": "@notice Delegate Call Target for modifying kairos internal state"
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          44196,
          44067,
          37461,
          37782,
          37306,
          38736,
          37116,
          38722,
          36091,
          35057,
          35686,
          34938,
          38432,
          38349,
          1732,
          3267,
          38607,
          38588,
          35197,
          37405,
          3231,
          38562,
          1750,
          38576,
          38542,
          38749,
          38535,
          34657,
          38509
        ],
        "name": "DCTarget",
        "nameLocation": "346:8:99",
        "scope": 44197,
        "usedErrors": [
          36445,
          36447,
          36449,
          36451,
          36453,
          36455,
          36457,
          36459,
          36461,
          36463,
          36465,
          36489,
          36498,
          36505,
          36514,
          36523,
          36531,
          36537,
          36541,
          36545,
          36549,
          36553,
          36557,
          36561,
          36567,
          36573,
          36577,
          37490
        ]
      }
    ],
    "license": "UNLICENSED"
  },
  "id": 99
}