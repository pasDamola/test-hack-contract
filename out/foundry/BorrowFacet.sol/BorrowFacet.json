{
  "abi": [
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "contract IERC20",
              "name": "assetToLend",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "loanToValue",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "duration",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "expirationDate",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "tranche",
              "type": "uint256"
            },
            {
              "components": [
                {
                  "internalType": "contract IERC721",
                  "name": "implem",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                }
              ],
              "internalType": "struct NFToken",
              "name": "collateral",
              "type": "tuple"
            }
          ],
          "internalType": "struct Offer",
          "name": "offer",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "contract IERC721",
              "name": "implem",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            }
          ],
          "internalType": "struct NFToken",
          "name": "providedNft",
          "type": "tuple"
        }
      ],
      "name": "BadCollateral",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "ERC20TransferFailed",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ERC721MintToTheZeroAddress",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ERC721TokenAlreadyMinted",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ERC721TransferToNonERC721ReceiverImplementer",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "firstRequested",
          "type": "address"
        },
        {
          "internalType": "contract IERC20",
          "name": "requested",
          "type": "address"
        }
      ],
      "name": "InconsistentAssetRequests",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "firstTrancheIdUsed",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "trancheIdFound",
          "type": "uint256"
        }
      ],
      "name": "InconsistentTranches",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "nbOfTranches",
          "type": "uint256"
        }
      ],
      "name": "InvalidTranche",
      "type": "error"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "contract IERC20",
              "name": "assetToLend",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "loanToValue",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "duration",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "expirationDate",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "tranche",
              "type": "uint256"
            },
            {
              "components": [
                {
                  "internalType": "contract IERC721",
                  "name": "implem",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                }
              ],
              "internalType": "struct NFToken",
              "name": "collateral",
              "type": "tuple"
            }
          ],
          "internalType": "struct Offer",
          "name": "offer",
          "type": "tuple"
        },
        {
          "internalType": "uint256",
          "name": "expirationDate",
          "type": "uint256"
        }
      ],
      "name": "OfferHasExpired",
      "type": "error"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "contract IERC20",
              "name": "assetToLend",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "loanToValue",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "duration",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "expirationDate",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "tranche",
              "type": "uint256"
            },
            {
              "components": [
                {
                  "internalType": "contract IERC721",
                  "name": "implem",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                }
              ],
              "internalType": "struct NFToken",
              "name": "collateral",
              "type": "tuple"
            }
          ],
          "internalType": "struct Offer",
          "name": "offer",
          "type": "tuple"
        },
        {
          "internalType": "uint256",
          "name": "requested",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "lowerBound",
          "type": "uint256"
        }
      ],
      "name": "RequestedAmountIsUnderMinimum",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "requested",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "offered",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "contract IERC20",
              "name": "assetToLend",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "loanToValue",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "duration",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "expirationDate",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "tranche",
              "type": "uint256"
            },
            {
              "components": [
                {
                  "internalType": "contract IERC721",
                  "name": "implem",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                }
              ],
              "internalType": "struct NFToken",
              "name": "collateral",
              "type": "tuple"
            }
          ],
          "internalType": "struct Offer",
          "name": "offer",
          "type": "tuple"
        }
      ],
      "name": "RequestedAmountTooHigh",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "lent",
          "type": "uint256"
        }
      ],
      "name": "UnsafeAmountLent",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "minLoanToValue",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "maxLoanToValue",
          "type": "uint256"
        }
      ],
      "name": "UnsafeOfferLoanToValuesGap",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "loanId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "loan",
          "type": "bytes"
        }
      ],
      "name": "Borrow",
      "type": "event"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "contract IERC721",
                  "name": "implem",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                }
              ],
              "internalType": "struct NFToken",
              "name": "nft",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "bytes",
                  "name": "signature",
                  "type": "bytes"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "components": [
                    {
                      "internalType": "contract IERC20",
                      "name": "assetToLend",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "loanToValue",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "duration",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "expirationDate",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "tranche",
                      "type": "uint256"
                    },
                    {
                      "components": [
                        {
                          "internalType": "contract IERC721",
                          "name": "implem",
                          "type": "address"
                        },
                        {
                          "internalType": "uint256",
                          "name": "id",
                          "type": "uint256"
                        }
                      ],
                      "internalType": "struct NFToken",
                      "name": "collateral",
                      "type": "tuple"
                    }
                  ],
                  "internalType": "struct Offer",
                  "name": "offer",
                  "type": "tuple"
                }
              ],
              "internalType": "struct OfferArg[]",
              "name": "args",
              "type": "tuple[]"
            }
          ],
          "internalType": "struct BorrowArg[]",
          "name": "args",
          "type": "tuple[]"
        }
      ],
      "name": "borrow",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "contract IERC20",
              "name": "assetToLend",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "loanToValue",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "duration",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "expirationDate",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "tranche",
              "type": "uint256"
            },
            {
              "components": [
                {
                  "internalType": "contract IERC721",
                  "name": "implem",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                }
              ],
              "internalType": "struct NFToken",
              "name": "collateral",
              "type": "tuple"
            }
          ],
          "internalType": "struct Offer",
          "name": "offer",
          "type": "tuple"
        }
      ],
      "name": "offerDigest",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "onERC721Received",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x61014060405234801561001157600080fd5b50604080518082018252601481527f4b6169726f73204c6f616e2070726f746f636f6c000000000000000000000000602080830191825283518085019094526003845262302e3160e81b908401528151902060e08190527f8cd160c72d102a6747abd189ac21d4a1f802e3fcc1bb8fc78cc4d558df0c7c216101008190524660a0529192917f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f6101068184846040805160208101859052908101839052606081018290524660808201523060a082015260009060c0016040516020818303038152906040528051906020012090509392505050565b6080523060c052610120525061011b92505050565b60805160a05160c05160e0516101005161012051611da361016a6000396000610b6101526000610bb001526000610b8b01526000610ae401526000610b0e01526000610b380152611da36000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c8063150b7a02146100465780631fbc8a7414610077578063b1ce7a6a14610098575b600080fd5b610059610054366004611532565b6100ad565b6040516001600160e01b031990911681526020015b60405180910390f35b61008a610085366004611725565b6100fa565b60405190815260200161006e565b6100ab6100a6366004611741565b610113565b005b6000806100bc838501856118d5565b90506100e681886040518060400160405280336001600160a01b031681526020018981525061027f565b50630a85bd0160e11b979650505050505050565b600061010d61010883610530565b6105d8565b92915050565b60005b8181101561027a578282828181106101305761013061191e565b90506020028101906101429190611934565b610150906020810190611954565b6001600160a01b03166323b872dd33308686868181106101725761017261191e565b90506020028101906101849190611934565b60405160e085901b6001600160e01b03191681526001600160a01b039384166004820152929091166024830152602001356044820152606401600060405180830381600087803b1580156101d757600080fd5b505af11580156101eb573d6000803e3d6000fd5b505050506102678383838181106102045761020461191e565b90506020028101906102169190611934565b610224906040810190611971565b61022d916119bb565b338585858181106102405761024061191e565b90506020028101906102529190611934565b61026290368190038101906119c8565b61027f565b5080610272816119fa565b915050610116565b505050565b6102876113c9565b60006102ae8560008151811061029f5761029f61191e565b60200260200101518585610626565b905060007f9dcac861a288165fa5a7e007597a30abcd2d73e174280cf7c6967f5a922a4439600201546102e2906001611a13565b86519091506000805b82811015610355576103168982815181106103085761030861191e565b6020026020010151866106eb565b945088818151811061032a5761032a61191e565b602002602001015160200151826103419190611a13565b91508061034d816119fa565b9150506102eb565b50701d6329f1c35ca4bfabb9f56100000000008111156103905760405163a1b0082360e01b8152600481018290526024015b60405180910390fd5b61039e848888858588610967565b610100858101805160009081527f84e508d57dadc535817af594804944c3bc341cdb6befa5a0747e20285912a7f06020908152604091829020855181546001600160a01b03199081166001600160a01b0392831617835587840151600184015587850151600284015560608089015160038501556080890151600485015560a089015180516005860155850151600685015560c0890151600785015560e0890151600885018054841691851691909117905588880151805160098601805490941694169390931790915590830151600a8301556101208701518051600b84015580840151600c84015580850151600d84018054929093015161ffff1990921690151561ff0019161790151590960295909517909455610140850151600e850155610160850151600f9094019390935590519051929750917fdca520d648f7d72e985ce218de7119aeca8bdd20abdb296f69ee74630fe79c7b9161050391899101611a26565b60408051601f198184030181529082905261051d91611b67565b60405180910390a2505050509392505050565b60007f2ac049b6467232d12ceb145e80f9890371b3f6a4ccb53cdc241cf1a1c6e9dd97826000015183602001518460400151856060015186608001516105798860a00151610aa2565b6040805160208101989098526001600160a01b03909616958701959095526060860193909352608085019190915260a084015260c083015260e0820152610100015b604051602081830303815290604052805190602001209050919050565b600061010d6105e5610ad7565b8360405161190160f01b6020820152602281018390526042810182905260009060620160405160208183030381529060405280519060200120905092915050565b61062e61149b565b604051806101200160405280600081526020018560400151600001516001600160a01b031681526020018560400151608001518152602001856040015160400151815260200185604001516020015181526020018560400151602001518152602001846001600160a01b031681526020018381526020016106cc7f84e508d57dadc535817af594804944c3bc341cdb6befa5a0747e20285912a7eb90565b80546000906106da906119fa565b9182905550905290505b9392505050565b6106f361149b565b60006106fe84610bfe565b9050600083602001516001600160a01b03168560400151600001516001600160a01b03161461075e5760208401516040868101515190516346aac2a960e01b81526001600160a01b03928316600482015291166024820152604401610387565b8360400151856040015160800151146107a3578360400151856040015160800151604051632ff7abc160e11b8152600401610387929190918252602082015260400190565b6107b585604001518560e00151610d01565b6107d48560400151602001518660200151610d3590919063ffffffff16565b84519091506107e39082610d58565b8085526b033b2e3c9fd0803ce80000001015610855576020850151845161083490610825906108129085610d64565b6b033b2e3c9fd0803ce800000090610d64565b60408801516020015190610d70565b86604001516040516352e84b3360e11b815260040161038793929190611bd3565b8360600151856040015160400151101561087757604080860151015160608501525b8360800151856040015160200151101561089a5760408501516020015160808501525b8360a0015185604001516020015111156108bd5760408501516020015160a08501525b60808401516108cd906002611bef565b8460a00151111561090457608084015160a0850151604051633065b5b760e11b815260048101929092526024820152604401610387565b610930828560c00151876020015187602001516001600160a01b0316610d89909392919063ffffffff16565b61095d82604051806060016040528088602001518152602001848152602001876101000151815250610e42565b5092949350505050565b61096f6113c9565b60608701517f84e508d57dadc535817af594804944c3bc341cdb6befa5a0747e20285912a7eb906000906109a39042611a13565b90506109d4604051806080016040528060008152602001600081526020016000151581526020016000151581525090565b6020808b01516001600160a01b031660009081526006850190915260409020546109fe9088611bef565b60208281019190915260408051610180810182528c8301516001600160a01b039081168252818401999099528c51818301524260608201526080810194909452805180820182526002860154815260038601548184015260a08501529a8b0151600090815260049094019052989091205460c08201529590921660e08601526101008501939093525061012083019390935261014082015261016081019190915290565b60007f8ee82799d3068521f828767217e880bf7d6bb6ec7d5dbcc3de1e3e4bbb39c9e9826040516020016105bb929190611c06565b6000306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016148015610b3057507f000000000000000000000000000000000000000000000000000000000000000046145b15610b5a57507f000000000000000000000000000000000000000000000000000000000000000090565b50604080517f00000000000000000000000000000000000000000000000000000000000000006020808301919091527f0000000000000000000000000000000000000000000000000000000000000000828401527f000000000000000000000000000000000000000000000000000000000000000060608301524660808301523060a0808401919091528351808403909101815260c0909201909252805191012090565b6000807f84e508d57dadc535817af594804944c3bc341cdb6befa5a0747e20285912a7eb9050610c3b610c3484604001516100fa565b8451610ed8565b604080850151516001600160a01b031660009081526007840160209081529190205490850151919350908110610c9257836040015184602001518260405163889976c760e01b815260040161038793929190611c2d565b836040015160600151421115610cc6576040808501516060810151915163065a5c3b60e01b81526103879290600401611c4e565b816001015484604001516080015110610cfa578160010154604051632fac17ed60e11b815260040161038791815260200190565b5050919050565b60a0820151610d109082610efc565b610d3157818160405163d8ef221b60e01b8152600401610387929190611c6a565b5050565b600081610d4e6b033b2e3c9fd0803ce800000085611bef565b6106e49190611c99565b60006106e48284611a13565b60006106e48284611cbb565b60006b033b2e3c9fd0803ce8000000610d4e8385611bef565b6040516323b872dd60e01b81526001600160a01b0384811660048301528381166024830152604482018390528516906323b872dd906064016020604051808303816000875af1158015610de0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e049190611cce565b610e3c576040516362fe41f360e01b81526001600160a01b038086166004830152808516602483015283166044820152606401610387565b50505050565b7f9dcac861a288165fa5a7e007597a30abcd2d73e174280cf7c6967f5a922a443b80546000917f9dcac861a288165fa5a7e007597a30abcd2d73e174280cf7c6967f5a922a4439918390610e95906119fa565b9182905550600081815260078301602090815260409182902086518155908601516001820155908501516002909101559150610ed18483610f25565b5092915050565b6000806000610ee78585610f3f565b91509150610ef481610f84565b509392505050565b6000816020015183602001511480156106e45750505190516001600160a01b0391821691161490565b610d318282604051806020016040528060008152506110d1565b6000808251604103610f755760208301516040840151606085015160001a610f6987828585611104565b94509450505050610f7d565b506000905060025b9250929050565b6000816004811115610f9857610f98611cf0565b03610fa05750565b6001816004811115610fb457610fb4611cf0565b036110015760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e617475726500000000000000006044820152606401610387565b600281600481111561101557611015611cf0565b036110625760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152606401610387565b600381600481111561107657611076611cf0565b036110ce5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b6064820152608401610387565b50565b6110db83836111c8565b6110e860008484846112c7565b61027a57604051626b5e2960e61b815260040160405180910390fd5b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a083111561113b57506000905060036111bf565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa15801561118f573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381166111b8576000600192509250506111bf565b9150600090505b94509492505050565b7f9dcac861a288165fa5a7e007597a30abcd2d73e174280cf7c6967f5a922a44396001600160a01b038316611210576040516325bd6bd360e01b815260040160405180910390fd5b60008281527f9dcac861a288165fa5a7e007597a30abcd2d73e174280cf7c6967f5a922a443c60205260409020546001600160a01b0316156112655760405163c5a8d37160e01b815260040160405180910390fd5b6001600160a01b03831660009081526004820160205260408120805460019290611290908490611a13565b90915550506000828152600382016020526040812080546001600160a01b0319166001600160a01b03861617905561027a90848483565b60006001600160a01b0384163b156113bd57604051630a85bd0160e11b81526001600160a01b0385169063150b7a029061130b903390899088908890600401611d06565b6020604051808303816000875af1925050508015611346575060408051601f3d908101601f1916820190925261134391810190611d43565b60015b6113a3573d808015611374576040519150601f19603f3d011682016040523d82523d6000602084013e611379565b606091505b50805160000361139b57604051626b5e2960e61b815260040160405180910390fd5b805181602001fd5b6001600160e01b031916630a85bd0160e11b1490506113c1565b5060015b949350505050565b60405180610180016040528060006001600160a01b031681526020016000815260200160008152602001600081526020016000815260200161141e604051806040016040528060008152602001600081525090565b81526020016000815260200160006001600160a01b03168152602001611460604051806040016040528060006001600160a01b03168152602001600081525090565b815260408051608081018252600080825260208281018290529282018190526060820152910190815260200160008152602001600081525090565b6040518061012001604052806000815260200160006001600160a01b031681526020016000815260200160008152602001600081526020016000815260200160006001600160a01b03168152602001611510604051806040016040528060006001600160a01b03168152602001600081525090565b8152602001600081525090565b6001600160a01b03811681146110ce57600080fd5b60008060008060006080868803121561154a57600080fd5b85356115558161151d565b945060208601356115658161151d565b935060408601359250606086013567ffffffffffffffff8082111561158957600080fd5b818801915088601f83011261159d57600080fd5b8135818111156115ac57600080fd5b8960208285010111156115be57600080fd5b9699959850939650602001949392505050565b634e487b7160e01b600052604160045260246000fd5b6040516060810167ffffffffffffffff8111828210171561160a5761160a6115d1565b60405290565b604051601f8201601f1916810167ffffffffffffffff81118282101715611639576116396115d1565b604052919050565b60006040828403121561165357600080fd5b6040516040810181811067ffffffffffffffff82111715611676576116766115d1565b60405290508082356116878161151d565b8152602092830135920191909152919050565b600060e082840312156116ac57600080fd5b60405160c0810181811067ffffffffffffffff821117156116cf576116cf6115d1565b60405290508082356116e08161151d565b80825250602083013560208201526040830135604082015260608301356060820152608083013560808201526117198460a08501611641565b60a08201525092915050565b600060e0828403121561173757600080fd5b6106e4838361169a565b6000806020838503121561175457600080fd5b823567ffffffffffffffff8082111561176c57600080fd5b818501915085601f83011261178057600080fd5b81358181111561178f57600080fd5b8660208260051b85010111156117a457600080fd5b60209290920196919550909350505050565b600067ffffffffffffffff808411156117d1576117d16115d1565b8360051b60206117e2818301611610565b868152935090840190808401878311156117fb57600080fd5b855b838110156118c9578035858111156118155760008081fd5b8701610120818b0312156118295760008081fd5b6118316115e7565b8135878111156118415760008081fd5b8201601f8082018d136118545760008081fd5b813589811115611866576118666115d1565b611877818301601f19168901611610565b91508082528d8882850101111561188e5760008081fd5b80888401898401376000908201880152825250818501358186015260406118b78c82850161169a565b908201528352509082019082016117fd565b50505050509392505050565b6000602082840312156118e757600080fd5b813567ffffffffffffffff8111156118fe57600080fd5b8201601f8101841361190f57600080fd5b6113c1848235602084016117b6565b634e487b7160e01b600052603260045260246000fd5b60008235605e1983360301811261194a57600080fd5b9190910192915050565b60006020828403121561196657600080fd5b81356106e48161151d565b6000808335601e1984360301811261198857600080fd5b83018035915067ffffffffffffffff8211156119a357600080fd5b6020019150600581901b3603821315610f7d57600080fd5b60006106e43684846117b6565b6000604082840312156119da57600080fd5b6106e48383611641565b634e487b7160e01b600052601160045260246000fd5b600060018201611a0c57611a0c6119e4565b5060010190565b8082018082111561010d5761010d6119e4565b81516001600160a01b0316815261022081016020830151602083015260408301516040830152606083015160608301526080830151608083015260a0830151611a7c60a084018280518252602090810151910152565b5060c083015160e083015260e0830151610100611aa3818501836001600160a01b03169052565b8401519050610120611aca8482018380516001600160a01b03168252602090810151910152565b8401519050610160611b038482018380518252602081015160208301526040810151151560408301526060810151151560608301525050565b6101408501516101e085015280850151610200850152505092915050565b6000815180845260005b81811015611b4757602081850181015186830182015201611b2b565b506000602082860101526020601f19601f83011685010191505092915050565b6020815260006106e46020830184611b21565b60018060a01b0381511682526020810151602083015260408101516040830152606081015160608301526080810151608083015260a081015161027a60a084018280516001600160a01b03168252602090810151910152565b8381526020810183905261012081016113c16040830184611b7a565b808202811582820484141761010d5761010d6119e4565b828152606081016106e4602083018480516001600160a01b03168252602090810151910152565b6101208101611c3c8286611b7a565b60e08201939093526101000152919050565b6101008101611c5d8285611b7a565b8260e08301529392505050565b6101208101611c798285611b7a565b82516001600160a01b031660e083015260208301516101008301526106e4565b600082611cb657634e487b7160e01b600052601260045260246000fd5b500490565b8181038181111561010d5761010d6119e4565b600060208284031215611ce057600080fd5b815180151581146106e457600080fd5b634e487b7160e01b600052602160045260246000fd5b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090611d3990830184611b21565b9695505050505050565b600060208284031215611d5557600080fd5b81516001600160e01b0319811681146106e457600080fdfea264697066735822122005ad47d284f7023b707f4294f3273008c15d5b775aad6f1137d63e929003f77c64736f6c63430008120033",
    "sourceMap": "503:1678:47:-:0;;;;;;;;;;;;-1:-1:-1;2464:602:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2464:602:14;;;;2550:22;;;;2787:25;;;;2606;2822:31;;;;2882:13;2863:32;;2464:602;;;2660:117;2932:58;2660:117;2550:22;2606:25;3642:73;;;;;;273:25:112;;;314:18;;;307:34;;;357:18;;;350:34;;;3686:13:14;400:18:112;;;393:34;3709:4:14;443:19:112;;;436:61;3606:7:14;;245:19:112;;3642:73:14;;;;;;;;;;;;3632:84;;;;;;3625:91;;3466:257;;;;;;2932:58;2905:85;;3023:4;3000:28;;3038:21;;-1:-1:-1;503:1678:47;;-1:-1:-1;;;503:1678:47;14:489:112;503:1678:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106100415760003560e01c8063150b7a02146100465780631fbc8a7414610077578063b1ce7a6a14610098575b600080fd5b610059610054366004611532565b6100ad565b6040516001600160e01b031990911681526020015b60405180910390f35b61008a610085366004611725565b6100fa565b60405190815260200161006e565b6100ab6100a6366004611741565b610113565b005b6000806100bc838501856118d5565b90506100e681886040518060400160405280336001600160a01b031681526020018981525061027f565b50630a85bd0160e11b979650505050505050565b600061010d61010883610530565b6105d8565b92915050565b60005b8181101561027a578282828181106101305761013061191e565b90506020028101906101429190611934565b610150906020810190611954565b6001600160a01b03166323b872dd33308686868181106101725761017261191e565b90506020028101906101849190611934565b60405160e085901b6001600160e01b03191681526001600160a01b039384166004820152929091166024830152602001356044820152606401600060405180830381600087803b1580156101d757600080fd5b505af11580156101eb573d6000803e3d6000fd5b505050506102678383838181106102045761020461191e565b90506020028101906102169190611934565b610224906040810190611971565b61022d916119bb565b338585858181106102405761024061191e565b90506020028101906102529190611934565b61026290368190038101906119c8565b61027f565b5080610272816119fa565b915050610116565b505050565b6102876113c9565b60006102ae8560008151811061029f5761029f61191e565b60200260200101518585610626565b905060007f9dcac861a288165fa5a7e007597a30abcd2d73e174280cf7c6967f5a922a4439600201546102e2906001611a13565b86519091506000805b82811015610355576103168982815181106103085761030861191e565b6020026020010151866106eb565b945088818151811061032a5761032a61191e565b602002602001015160200151826103419190611a13565b91508061034d816119fa565b9150506102eb565b50701d6329f1c35ca4bfabb9f56100000000008111156103905760405163a1b0082360e01b8152600481018290526024015b60405180910390fd5b61039e848888858588610967565b610100858101805160009081527f84e508d57dadc535817af594804944c3bc341cdb6befa5a0747e20285912a7f06020908152604091829020855181546001600160a01b03199081166001600160a01b0392831617835587840151600184015587850151600284015560608089015160038501556080890151600485015560a089015180516005860155850151600685015560c0890151600785015560e0890151600885018054841691851691909117905588880151805160098601805490941694169390931790915590830151600a8301556101208701518051600b84015580840151600c84015580850151600d84018054929093015161ffff1990921690151561ff0019161790151590960295909517909455610140850151600e850155610160850151600f9094019390935590519051929750917fdca520d648f7d72e985ce218de7119aeca8bdd20abdb296f69ee74630fe79c7b9161050391899101611a26565b60408051601f198184030181529082905261051d91611b67565b60405180910390a2505050509392505050565b60007f2ac049b6467232d12ceb145e80f9890371b3f6a4ccb53cdc241cf1a1c6e9dd97826000015183602001518460400151856060015186608001516105798860a00151610aa2565b6040805160208101989098526001600160a01b03909616958701959095526060860193909352608085019190915260a084015260c083015260e0820152610100015b604051602081830303815290604052805190602001209050919050565b600061010d6105e5610ad7565b8360405161190160f01b6020820152602281018390526042810182905260009060620160405160208183030381529060405280519060200120905092915050565b61062e61149b565b604051806101200160405280600081526020018560400151600001516001600160a01b031681526020018560400151608001518152602001856040015160400151815260200185604001516020015181526020018560400151602001518152602001846001600160a01b031681526020018381526020016106cc7f84e508d57dadc535817af594804944c3bc341cdb6befa5a0747e20285912a7eb90565b80546000906106da906119fa565b9182905550905290505b9392505050565b6106f361149b565b60006106fe84610bfe565b9050600083602001516001600160a01b03168560400151600001516001600160a01b03161461075e5760208401516040868101515190516346aac2a960e01b81526001600160a01b03928316600482015291166024820152604401610387565b8360400151856040015160800151146107a3578360400151856040015160800151604051632ff7abc160e11b8152600401610387929190918252602082015260400190565b6107b585604001518560e00151610d01565b6107d48560400151602001518660200151610d3590919063ffffffff16565b84519091506107e39082610d58565b8085526b033b2e3c9fd0803ce80000001015610855576020850151845161083490610825906108129085610d64565b6b033b2e3c9fd0803ce800000090610d64565b60408801516020015190610d70565b86604001516040516352e84b3360e11b815260040161038793929190611bd3565b8360600151856040015160400151101561087757604080860151015160608501525b8360800151856040015160200151101561089a5760408501516020015160808501525b8360a0015185604001516020015111156108bd5760408501516020015160a08501525b60808401516108cd906002611bef565b8460a00151111561090457608084015160a0850151604051633065b5b760e11b815260048101929092526024820152604401610387565b610930828560c00151876020015187602001516001600160a01b0316610d89909392919063ffffffff16565b61095d82604051806060016040528088602001518152602001848152602001876101000151815250610e42565b5092949350505050565b61096f6113c9565b60608701517f84e508d57dadc535817af594804944c3bc341cdb6befa5a0747e20285912a7eb906000906109a39042611a13565b90506109d4604051806080016040528060008152602001600081526020016000151581526020016000151581525090565b6020808b01516001600160a01b031660009081526006850190915260409020546109fe9088611bef565b60208281019190915260408051610180810182528c8301516001600160a01b039081168252818401999099528c51818301524260608201526080810194909452805180820182526002860154815260038601548184015260a08501529a8b0151600090815260049094019052989091205460c08201529590921660e08601526101008501939093525061012083019390935261014082015261016081019190915290565b60007f8ee82799d3068521f828767217e880bf7d6bb6ec7d5dbcc3de1e3e4bbb39c9e9826040516020016105bb929190611c06565b6000306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016148015610b3057507f000000000000000000000000000000000000000000000000000000000000000046145b15610b5a57507f000000000000000000000000000000000000000000000000000000000000000090565b50604080517f00000000000000000000000000000000000000000000000000000000000000006020808301919091527f0000000000000000000000000000000000000000000000000000000000000000828401527f000000000000000000000000000000000000000000000000000000000000000060608301524660808301523060a0808401919091528351808403909101815260c0909201909252805191012090565b6000807f84e508d57dadc535817af594804944c3bc341cdb6befa5a0747e20285912a7eb9050610c3b610c3484604001516100fa565b8451610ed8565b604080850151516001600160a01b031660009081526007840160209081529190205490850151919350908110610c9257836040015184602001518260405163889976c760e01b815260040161038793929190611c2d565b836040015160600151421115610cc6576040808501516060810151915163065a5c3b60e01b81526103879290600401611c4e565b816001015484604001516080015110610cfa578160010154604051632fac17ed60e11b815260040161038791815260200190565b5050919050565b60a0820151610d109082610efc565b610d3157818160405163d8ef221b60e01b8152600401610387929190611c6a565b5050565b600081610d4e6b033b2e3c9fd0803ce800000085611bef565b6106e49190611c99565b60006106e48284611a13565b60006106e48284611cbb565b60006b033b2e3c9fd0803ce8000000610d4e8385611bef565b6040516323b872dd60e01b81526001600160a01b0384811660048301528381166024830152604482018390528516906323b872dd906064016020604051808303816000875af1158015610de0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e049190611cce565b610e3c576040516362fe41f360e01b81526001600160a01b038086166004830152808516602483015283166044820152606401610387565b50505050565b7f9dcac861a288165fa5a7e007597a30abcd2d73e174280cf7c6967f5a922a443b80546000917f9dcac861a288165fa5a7e007597a30abcd2d73e174280cf7c6967f5a922a4439918390610e95906119fa565b9182905550600081815260078301602090815260409182902086518155908601516001820155908501516002909101559150610ed18483610f25565b5092915050565b6000806000610ee78585610f3f565b91509150610ef481610f84565b509392505050565b6000816020015183602001511480156106e45750505190516001600160a01b0391821691161490565b610d318282604051806020016040528060008152506110d1565b6000808251604103610f755760208301516040840151606085015160001a610f6987828585611104565b94509450505050610f7d565b506000905060025b9250929050565b6000816004811115610f9857610f98611cf0565b03610fa05750565b6001816004811115610fb457610fb4611cf0565b036110015760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e617475726500000000000000006044820152606401610387565b600281600481111561101557611015611cf0565b036110625760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152606401610387565b600381600481111561107657611076611cf0565b036110ce5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b6064820152608401610387565b50565b6110db83836111c8565b6110e860008484846112c7565b61027a57604051626b5e2960e61b815260040160405180910390fd5b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a083111561113b57506000905060036111bf565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa15801561118f573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381166111b8576000600192509250506111bf565b9150600090505b94509492505050565b7f9dcac861a288165fa5a7e007597a30abcd2d73e174280cf7c6967f5a922a44396001600160a01b038316611210576040516325bd6bd360e01b815260040160405180910390fd5b60008281527f9dcac861a288165fa5a7e007597a30abcd2d73e174280cf7c6967f5a922a443c60205260409020546001600160a01b0316156112655760405163c5a8d37160e01b815260040160405180910390fd5b6001600160a01b03831660009081526004820160205260408120805460019290611290908490611a13565b90915550506000828152600382016020526040812080546001600160a01b0319166001600160a01b03861617905561027a90848483565b60006001600160a01b0384163b156113bd57604051630a85bd0160e11b81526001600160a01b0385169063150b7a029061130b903390899088908890600401611d06565b6020604051808303816000875af1925050508015611346575060408051601f3d908101601f1916820190925261134391810190611d43565b60015b6113a3573d808015611374576040519150601f19603f3d011682016040523d82523d6000602084013e611379565b606091505b50805160000361139b57604051626b5e2960e61b815260040160405180910390fd5b805181602001fd5b6001600160e01b031916630a85bd0160e11b1490506113c1565b5060015b949350505050565b60405180610180016040528060006001600160a01b031681526020016000815260200160008152602001600081526020016000815260200161141e604051806040016040528060008152602001600081525090565b81526020016000815260200160006001600160a01b03168152602001611460604051806040016040528060006001600160a01b03168152602001600081525090565b815260408051608081018252600080825260208281018290529282018190526060820152910190815260200160008152602001600081525090565b6040518061012001604052806000815260200160006001600160a01b031681526020016000815260200160008152602001600081526020016000815260200160006001600160a01b03168152602001611510604051806040016040528060006001600160a01b03168152602001600081525090565b8152602001600081525090565b6001600160a01b03811681146110ce57600080fd5b60008060008060006080868803121561154a57600080fd5b85356115558161151d565b945060208601356115658161151d565b935060408601359250606086013567ffffffffffffffff8082111561158957600080fd5b818801915088601f83011261159d57600080fd5b8135818111156115ac57600080fd5b8960208285010111156115be57600080fd5b9699959850939650602001949392505050565b634e487b7160e01b600052604160045260246000fd5b6040516060810167ffffffffffffffff8111828210171561160a5761160a6115d1565b60405290565b604051601f8201601f1916810167ffffffffffffffff81118282101715611639576116396115d1565b604052919050565b60006040828403121561165357600080fd5b6040516040810181811067ffffffffffffffff82111715611676576116766115d1565b60405290508082356116878161151d565b8152602092830135920191909152919050565b600060e082840312156116ac57600080fd5b60405160c0810181811067ffffffffffffffff821117156116cf576116cf6115d1565b60405290508082356116e08161151d565b80825250602083013560208201526040830135604082015260608301356060820152608083013560808201526117198460a08501611641565b60a08201525092915050565b600060e0828403121561173757600080fd5b6106e4838361169a565b6000806020838503121561175457600080fd5b823567ffffffffffffffff8082111561176c57600080fd5b818501915085601f83011261178057600080fd5b81358181111561178f57600080fd5b8660208260051b85010111156117a457600080fd5b60209290920196919550909350505050565b600067ffffffffffffffff808411156117d1576117d16115d1565b8360051b60206117e2818301611610565b868152935090840190808401878311156117fb57600080fd5b855b838110156118c9578035858111156118155760008081fd5b8701610120818b0312156118295760008081fd5b6118316115e7565b8135878111156118415760008081fd5b8201601f8082018d136118545760008081fd5b813589811115611866576118666115d1565b611877818301601f19168901611610565b91508082528d8882850101111561188e5760008081fd5b80888401898401376000908201880152825250818501358186015260406118b78c82850161169a565b908201528352509082019082016117fd565b50505050509392505050565b6000602082840312156118e757600080fd5b813567ffffffffffffffff8111156118fe57600080fd5b8201601f8101841361190f57600080fd5b6113c1848235602084016117b6565b634e487b7160e01b600052603260045260246000fd5b60008235605e1983360301811261194a57600080fd5b9190910192915050565b60006020828403121561196657600080fd5b81356106e48161151d565b6000808335601e1984360301811261198857600080fd5b83018035915067ffffffffffffffff8211156119a357600080fd5b6020019150600581901b3603821315610f7d57600080fd5b60006106e43684846117b6565b6000604082840312156119da57600080fd5b6106e48383611641565b634e487b7160e01b600052601160045260246000fd5b600060018201611a0c57611a0c6119e4565b5060010190565b8082018082111561010d5761010d6119e4565b81516001600160a01b0316815261022081016020830151602083015260408301516040830152606083015160608301526080830151608083015260a0830151611a7c60a084018280518252602090810151910152565b5060c083015160e083015260e0830151610100611aa3818501836001600160a01b03169052565b8401519050610120611aca8482018380516001600160a01b03168252602090810151910152565b8401519050610160611b038482018380518252602081015160208301526040810151151560408301526060810151151560608301525050565b6101408501516101e085015280850151610200850152505092915050565b6000815180845260005b81811015611b4757602081850181015186830182015201611b2b565b506000602082860101526020601f19601f83011685010191505092915050565b6020815260006106e46020830184611b21565b60018060a01b0381511682526020810151602083015260408101516040830152606081015160608301526080810151608083015260a081015161027a60a084018280516001600160a01b03168252602090810151910152565b8381526020810183905261012081016113c16040830184611b7a565b808202811582820484141761010d5761010d6119e4565b828152606081016106e4602083018480516001600160a01b03168252602090810151910152565b6101208101611c3c8286611b7a565b60e08201939093526101000152919050565b6101008101611c5d8285611b7a565b8260e08301529392505050565b6101208101611c798285611b7a565b82516001600160a01b031660e083015260208301516101008301526106e4565b600082611cb657634e487b7160e01b600052601260045260246000fd5b500490565b8181038181111561010d5761010d6119e4565b600060208284031215611ce057600080fd5b815180151581146106e457600080fd5b634e487b7160e01b600052602160045260246000fd5b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090611d3990830184611b21565b9695505050505050565b600060208284031215611d5557600080fd5b81516001600160e01b0319811681146106e457600080fdfea264697066735822122005ad47d284f7023b707f4294f3273008c15d5b775aad6f1137d63e929003f77c64736f6c63430008120033",
    "sourceMap": "503:1678:47:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1097:599;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;;1253:33:112;;;1235:52;;1223:2;1208:18;1097:599:47;;;;;;;;1151:133:60;;;;;;:::i;:::-;;:::i;:::-;;;3732:25:112;;;3720:2;3705:18;1151:133:60;3586:177:112;1904:275:47;;;;;;:::i;:::-;;:::i;:::-;;1097:599;1252:6;;1295:30;;;;1306:4;1295:30;:::i;:::-;1270:55;;1559:82;1573:4;1579:8;1589:51;;;;;;;;1614:10;-1:-1:-1;;;;;1589:51:47;;;;;1631:7;1589:51;;;1559:13;:82::i;:::-;-1:-1:-1;;;;1659:30:47;1097:599;-1:-1:-1;;;;;;;1097:599:47:o;1151:133:60:-;1213:7;1239:38;1256:20;1270:5;1256:13;:20::i;:::-;1239:16;:38::i;:::-;1232:45;1151:133;-1:-1:-1;;1151:133:60:o;1904:275:47:-;1971:9;1966:207;1986:15;;;1966:207;;;2022:4;;2027:1;2022:7;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;:18;;;;;;;:::i;:::-;-1:-1:-1;;;;;2022:31:47;;2054:10;2074:4;2081;;2086:1;2081:7;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;2022:74;;;;;;-1:-1:-1;;;;;;2022:74:47;;;-1:-1:-1;;;;;8076:15:112;;;2022:74:47;;;8058:34:112;8128:15;;;;8108:18;;;8101:43;2081:14:47;;;8160:18:112;;;8153:34;7993:18;;2022:74:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2110:52;2124:4;;2129:1;2124:7;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;:12;;;;;;;:::i;:::-;2110:52;;;:::i;:::-;2138:10;2150:4;;2155:1;2150:7;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;2110:52;;;;;;;;;;:::i;:::-;:13;:52::i;:::-;-1:-1:-1;2003:3:47;;;;:::i;:::-;;;;1966:207;;;;1904:275;;:::o;5421:1155:49:-;5550:16;;:::i;:::-;5578:34;5615:46;5642:4;5647:1;5642:7;;;;;;;;:::i;:::-;;;;;;;5651:4;5657:3;5615:26;:46::i;:::-;5578:83;-1:-1:-1;5769:29:49;510:48:54;5801:35:49;;;:39;;5839:1;5801:39;:::i;:::-;5871:11;;5769:71;;-1:-1:-1;5850:18:49;;5963:146;5987:10;5983:1;:14;5963:146;;;6032:30;6041:4;6046:1;6041:7;;;;;;;;:::i;:::-;;;;;;;6050:11;6032:8;:30::i;:::-;6018:44;;6084:4;6089:1;6084:7;;;;;;;;:::i;:::-;;;;;;;:14;;;6076:22;;;;;:::i;:::-;;-1:-1:-1;5999:3:49;;;;:::i;:::-;;;;5963:146;;;;6294:4;6287;:11;6283:71;;;6321:22;;-1:-1:-1;;;6321:22:49;;;;;3732:25:112;;;3705:18;;6321:22:49;;;;;;;;6283:71;6370:80;6386:11;6399:4;6405:3;6410:10;6422:4;6428:21;6370:15;:80::i;:::-;6483:18;;;;;;6460:42;;;;:22;:42;;;;;;;;;:49;;;;-1:-1:-1;;;;;;6460:49:49;;;-1:-1:-1;;;;;6460:49:49;;;;;;;;;;-1:-1:-1;6460:49:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:22;:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6460:49:49;;;;;;-1:-1:-1;;6460:49:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6532:18;;6552:16;;6460:49;;-1:-1:-1;6532:18:49;6525:44;;6552:16;;6460:49;;6552:16;;:::i;:::-;;;;-1:-1:-1;;6552:16:49;;;;;;;;;;6525:44;;;:::i;:::-;;;;;;;;5568:1008;;;;5421:1155;;;;;:::o;1703:462:60:-;1769:7;454:220;1902:5;:17;;;1941:5;:17;;;1980:5;:14;;;2016:5;:20;;;2058:5;:13;;;2093:33;2109:5;:16;;;2093:15;:33::i;:::-;1834:310;;;;;;12760:25:112;;;;-1:-1:-1;;;;;12821:32:112;;;12801:18;;;12794:60;;;;12870:18;;;12863:34;;;;12913:18;;;12906:34;;;;12956:19;;;12949:35;13000:19;;;12993:35;13044:19;;;13037:35;12732:19;;1834:310:60;;;;;;;;;;;;;1807:351;;;;;;1788:370;;1703:462;;;:::o;4348:165:14:-;4425:7;4451:55;4473:20;:18;:20::i;:::-;4495:10;8470:57:13;;-1:-1:-1;;;8470:57:13;;;15279:27:112;15322:11;;;15315:27;;;15358:12;;;15351:28;;;8434:7:13;;15395:12:112;;8470:57:13;;;;;;;;;;;;8460:68;;;;;;8453:75;;8341:194;;;;;7022:763:49;7171:22;;:::i;:::-;7224:554;;;;;;;;7276:1;7224:554;;;;7307:13;:19;;;:31;;;-1:-1:-1;;;;;7224:554:49;;;;;7365:13;:19;;;:27;;;7224:554;;;;7428:13;:19;;;:28;;;7224:554;;;;7495:13;:19;;;:31;;;7224:554;;;;7565:13;:19;;;:31;;;7224:554;;;;7620:4;-1:-1:-1;;;;;7224:554:49;;;;;7647:3;7224:554;;;;7678:17;438:41:54;;1002:217;7678:17:49;7676:29;;7678:27;;7676:29;;;:::i;:::-;;;;;-1:-1:-1;7224:554:49;;7205:573;-1:-1:-1;7022:763:49;;;;;;:::o;1424:3701::-;1539:22;;:::i;:::-;1573:14;1590:18;1604:3;1590:13;:18::i;:::-;1573:35;;1618:16;1674:11;:21;;;-1:-1:-1;;;;;1649:46:49;:3;:9;;;:21;;;-1:-1:-1;;;;;1649:46:49;;1645:232;;1821:21;;;;1844:9;;;;;:21;1795:71;;-1:-1:-1;;;1795:71:49;;-1:-1:-1;;;;;13341:15:112;;;1795:71:49;;;13323:34:112;13393:15;;13373:18;;;13366:43;13258:18;;1795:71:49;13083:332:112;1645:232:49;1911:11;:19;;;1890:3;:9;;;:17;;;:40;1886:231;;2067:11;:19;;;2088:3;:9;;;:17;;;2046:60;;-1:-1:-1;;;2046:60:49;;;;;;;;13594:25:112;;;13650:2;13635:18;;13628:34;13582:2;13567:18;;13420:248;1886:231:49;2127:43;2143:3;:9;;;2154:11;:15;;;2127;:43::i;:::-;2314:37;2329:3;:9;;;:21;;;2314:3;:10;;;:14;;:37;;;;:::i;:::-;2383:19;;2299:52;;-1:-1:-1;2383:37:49;;2299:52;2383:23;:37::i;:::-;2361:59;;;720:4:54;-1:-1:-1;2660:247:49;;;2754:10;;;;2816:19;;2782:73;;2808:46;;2816:37;;2840:12;2816:23;:37::i;:::-;720:4:54;;2808:7:49;:46::i;:::-;2782:9;;;;:21;;;;:25;:73::i;:::-;2873:3;:9;;;2714:182;;-1:-1:-1;;;2714:182:49;;;;;;;;;;:::i;2660:247::-;3050:11;:28;;;3029:3;:9;;;:18;;;:49;3025:129;;;3125:9;;;;;:18;;3094:28;;;:49;3025:129;3191:11;:31;;;3167:3;:9;;;:21;;;:55;3163:141;;;3272:9;;;;:21;;;3238:31;;;:55;3163:141;3341:11;:31;;;3317:3;:9;;;:21;;;:55;3313:141;;;3422:9;;;;:21;;;3388:31;;;:55;3313:141;4522:31;;;;:35;;4556:1;4522:35;:::i;:::-;4488:11;:31;;;:69;4484:245;;;4624:31;;;;4673;;;;4580:138;;-1:-1:-1;;;4580:138:49;;;;;13594:25:112;;;;13635:18;;;13628:34;13567:18;;4580:138:49;13420:248:112;4484:245:49;4814:79;4856:6;4864:11;:16;;;4882:3;:10;;;4814:11;:21;;;-1:-1:-1;;;;;4814:41:49;;;:79;;;;;;:::i;:::-;4990:98;4999:6;5007:80;;;;;;;;5026:3;:10;;;5007:80;;;;5045:12;5007:80;;;;5067:11;:18;;;5007:80;;;4990:8;:98::i;:::-;-1:-1:-1;5106:11:49;;1424:3701;-1:-1:-1;;;;1424:3701:49:o;8319:2665::-;8556:11;;:::i;:::-;8805:28;;;;438:41:54;;8579:22:49;;8787:46;;:15;:46;:::i;:::-;8769:64;;8843:22;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8843:22:49;9589:21;;;;;-1:-1:-1;;;;;9570:41:49;;;;;:18;;;:41;;;;;;;9557:54;;:10;:54;:::i;:::-;9527:27;;;;:84;;;;9641:1336;;;;;;;;9675:21;;;;-1:-1:-1;;;;;9641:1336:49;;;;;;;;;;;;9753:19;;9641:1336;;;;9801:15;9641:1336;;;;;;;;;;;10195:83;;;;;;;10214:13;;;:22;10195:83;;10251:25;;;;10195:83;;;;9641:1336;;;;10524:19;;;;-1:-1:-1;10510:34:49;;;:13;;;;:34;;;;;;;9641:1336;;;;;;;;;;;;;;;;;;;-1:-1:-1;9641:1336:49;;;;;;;;;;;;;;;;;;;8319:2665::o;1421:145:60:-;1489:7;762:47;1554:3;1525:33;;;;;;;;;:::i;3152:308:14:-;3205:7;3236:4;-1:-1:-1;;;;;3245:12:14;3228:29;;:66;;;;;3278:16;3261:13;:33;3228:66;3224:230;;;-1:-1:-1;3317:24:14;;3152:308::o;3224:230::-;-1:-1:-1;3642:73:14;;;3401:10;3642:73;;;;17820:25:112;;;;3413:12:14;17861:18:112;;;17854:34;3427:15:14;17904:18:112;;;17897:34;3686:13:14;17947:18:112;;;17940:34;3709:4:14;17990:19:112;;;;17983:61;;;;3642:73:14;;;;;;;;;;17792:19:112;;;;3642:73:14;;;3632:84;;;;;;3152:308::o;1077:1776:48:-;1144:14;;438:41:54;1170:42:48;;1569:52;1583:22;1595:3;:9;;;1583:11;:22::i;:::-;1607:13;;1569;:52::i;:::-;2144:9;;;;;:21;-1:-1:-1;;;;;2110:56:48;2083:24;2110:56;;;:33;;;:56;;;;;;;;2183:10;;;;1560:61;;-1:-1:-1;2110:56:48;2183:29;-1:-1:-1;2177:140:48;;2266:3;:9;;;2277:3;:10;;;2289:16;2236:70;;-1:-1:-1;;;2236:70:48;;;;;;;;;;:::i;2177:140::-;2481:3;:9;;;:24;;;2463:15;:42;2459:132;;;2544:9;;;;;2555:24;;;;2528:52;;-1:-1:-1;;;2528:52:48;;;;2555:24;2528:52;;;:::i;2459:132::-;2761:5;:18;;;2740:3;:9;;;:17;;;:39;2736:111;;2817:5;:18;;;2802:34;;-1:-1:-1;;;2802:34:48;;;;;;3732:25:112;;3720:2;3705:18;;3586:177;2736:111:48;1160:1693;;1077:1776;;;:::o;3076:301::-;3272:16;;;;:32;;3292:11;3272:19;:32::i;:::-;3267:104;;3341:5;3348:11;3327:33;;-1:-1:-1;;;3327:33:48;;;;;;;;;:::i;3267:104::-;3076:301;;:::o;1804:110:86:-;1862:3;1905:1;1894:7;720:4:54;1894:1:86;:7;:::i;:::-;1893:13;;;;:::i;380:118::-;430:3;461:29;488:1;472;461:29;:::i;557:118::-;607:3;638:29;665:1;649;638:29;:::i;1088:112::-;1142:7;720:4:54;1169:17:86;1184:1;1169;:17;:::i;237:230:83:-;349:39;;-1:-1:-1;;;349:39:83;;-1:-1:-1;;;;;8076:15:112;;;349:39:83;;;8058:34:112;8128:15;;;8108:18;;;8101:43;8160:18;;;8153:34;;;349:21:83;;;;;7993:18:112;;349:39:83;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;344:117;;411:39;;-1:-1:-1;;;411:39:83;;-1:-1:-1;;;;;17430:15:112;;;411:39:83;;;17412:34:112;17482:15;;;17462:18;;;17455:43;17534:15;;17514:18;;;17507:43;17347:18;;411:39:83;17158:398:112;344:117:83;237:230;;;;:::o;678:273:64:-;855:14;853:16;;754:15;;510:48:54;;754:15:64;;853:16;;;:::i;:::-;;;;;-1:-1:-1;879:21:64;;;;:12;;;:21;;;;;;;;;:33;;;;;;;;;;;;;;;;;;;;;853:16;-1:-1:-1;922:22:64;932:2;853:16;922:9;:22::i;:::-;771:180;678:273;;;;:::o;3661:227:13:-;3739:7;3759:17;3778:18;3800:27;3811:4;3817:9;3800:10;:27::i;:::-;3758:69;;;;3837:18;3849:5;3837:11;:18::i;:::-;-1:-1:-1;3872:9:13;3661:227;-1:-1:-1;;;3661:227:13:o;245:139:85:-;316:4;348:1;:4;;;340:1;:4;;;:12;:36;;;;-1:-1:-1;;368:8:85;356;;-1:-1:-1;;;;;356:20:85;;;;;;;245:139::o;2196:100:63:-;2263:26;2273:2;2277:7;2263:26;;;;;;;;;;;;:9;:26::i;2145:730:13:-;2226:7;2235:12;2263:9;:16;2283:2;2263:22;2259:610;;2599:4;2584:20;;2578:27;2648:4;2633:20;;2627:27;2705:4;2690:20;;2684:27;2301:9;2676:36;2746:25;2757:4;2676:36;2578:27;2627;2746:10;:25::i;:::-;2739:32;;;;;;;;;2259:610;-1:-1:-1;2818:1:13;;-1:-1:-1;2822:35:13;2259:610;2145:730;;;;;:::o;570:511::-;647:20;638:5;:29;;;;;;;;:::i;:::-;;634:441;;570:511;:::o;634:441::-;743:29;734:5;:38;;;;;;;;:::i;:::-;;730:345;;788:34;;-1:-1:-1;;;788:34:13;;18389:2:112;788:34:13;;;18371:21:112;18428:2;18408:18;;;18401:30;18467:26;18447:18;;;18440:54;18511:18;;788:34:13;18187:348:112;730:345:13;852:35;843:5;:44;;;;;;;;:::i;:::-;;839:236;;903:41;;-1:-1:-1;;;903:41:13;;18742:2:112;903:41:13;;;18724:21:112;18781:2;18761:18;;;18754:30;18820:33;18800:18;;;18793:61;18871:18;;903:41:13;18540:355:112;839:236:13;974:30;965:5;:39;;;;;;;;:::i;:::-;;961:114;;1020:44;;-1:-1:-1;;;1020:44:13;;19102:2:112;1020:44:13;;;19084:21:112;19141:2;19121:18;;;19114:30;19180:34;19160:18;;;19153:62;-1:-1:-1;;;19231:18:112;;;19224:32;19273:19;;1020:44:13;18900:398:112;961:114:13;570:511;:::o;2302:258:63:-;2388:18;2394:2;2398:7;2388:5;:18::i;:::-;2421:53;2452:1;2456:2;2460:7;2469:4;2421:22;:53::i;:::-;2416:138;;2497:46;;-1:-1:-1;;;2497:46:63;;;;;;;;;;;5069:1494:13;5195:7;;6119:66;6106:79;;6102:161;;;-1:-1:-1;6217:1:13;;-1:-1:-1;6221:30:13;6201:51;;6102:161;6374:24;;;6357:14;6374:24;;;;;;;;;19530:25:112;;;19603:4;19591:17;;19571:18;;;19564:45;;;;19625:18;;;19618:34;;;19668:18;;;19661:34;;;6374:24:13;;19502:19:112;;6374:24:13;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6374:24:13;;-1:-1:-1;;6374:24:13;;;-1:-1:-1;;;;;;;6412:20:13;;6408:101;;6464:1;6468:29;6448:50;;;;;;;6408:101;6527:6;-1:-1:-1;6535:20:13;;-1:-1:-1;5069:1494:13;;;;;;;;:::o;2566:412:63:-;510:48:54;-1:-1:-1;;;;;2695:16:63;;2691:82;;2734:28;;-1:-1:-1;;;2734:28:63;;;;;;;;;;;2691:82;4542:4;4627:17;;;:8;:17;;;;;;-1:-1:-1;;;;;4627:17:63;:31;2782:80;;2825:26;;-1:-1:-1;;;2825:26:63;;;;;;;;;;;2782:80;-1:-1:-1;;;;;2872:14:63;;;;;;:10;;;:14;;;;;:19;;2890:1;;2872:14;:19;;2890:1;;2872:19;:::i;:::-;;;;-1:-1:-1;;2901:17:63;;;;:8;;;:17;;;;;:22;;-1:-1:-1;;;;;;2901:22:63;-1:-1:-1;;;;;2901:22:63;;;;;2934:37;;2901:22;:17;2934:37;:::i;1035:869::-;1185:4;-1:-1:-1;;;;;1205:13:63;;1465:19:10;:23;1201:697:63;;1240:69;;-1:-1:-1;;;1240:69:63;;-1:-1:-1;;;;;1240:36:63;;;;;:69;;1277:10;;1289:4;;1295:7;;1304:4;;1240:69;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1240:69:63;;;;;;;;-1:-1:-1;;1240:69:63;;;;;;;;;;;;:::i;:::-;;;1236:610;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1506:6;:13;1523:1;1506:18;1502:330;;1555:46;;-1:-1:-1;;;1555:46:63;;;;;;;;;;;1502:330;1784:6;1778:13;1769:6;1765:2;1761:15;1754:38;1236:610;-1:-1:-1;;;;;;1389:51:63;-1:-1:-1;;;1389:51:63;;-1:-1:-1;1382:58:63;;1201:697;-1:-1:-1;1883:4:63;1201:697;1035:869;;;;;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;14:131:112:-;-1:-1:-1;;;;;89:31:112;;79:42;;69:70;;135:1;132;125:12;150:936;247:6;255;263;271;279;332:3;320:9;311:7;307:23;303:33;300:53;;;349:1;346;339:12;300:53;388:9;375:23;407:31;432:5;407:31;:::i;:::-;457:5;-1:-1:-1;514:2:112;499:18;;486:32;527:33;486:32;527:33;:::i;:::-;579:7;-1:-1:-1;633:2:112;618:18;;605:32;;-1:-1:-1;688:2:112;673:18;;660:32;711:18;741:14;;;738:34;;;768:1;765;758:12;738:34;806:6;795:9;791:22;781:32;;851:7;844:4;840:2;836:13;832:27;822:55;;873:1;870;863:12;822:55;913:2;900:16;939:2;931:6;928:14;925:34;;;955:1;952;945:12;925:34;1000:7;995:2;986:6;982:2;978:15;974:24;971:37;968:57;;;1021:1;1018;1011:12;968:57;150:936;;;;-1:-1:-1;150:936:112;;-1:-1:-1;1052:2:112;1044:11;;1074:6;150:936;-1:-1:-1;;;150:936:112:o;1298:127::-;1359:10;1354:3;1350:20;1347:1;1340:31;1390:4;1387:1;1380:15;1414:4;1411:1;1404:15;1430:253;1502:2;1496:9;1544:4;1532:17;;1579:18;1564:34;;1600:22;;;1561:62;1558:88;;;1626:18;;:::i;:::-;1662:2;1655:22;1430:253;:::o;1688:275::-;1759:2;1753:9;1824:2;1805:13;;-1:-1:-1;;1801:27:112;1789:40;;1859:18;1844:34;;1880:22;;;1841:62;1838:88;;;1906:18;;:::i;:::-;1942:2;1935:22;1688:275;;-1:-1:-1;1688:275:112:o;1968:549::-;2022:5;2070:4;2058:9;2053:3;2049:19;2045:30;2042:50;;;2088:1;2085;2078:12;2042:50;2121:4;2115:11;2165:4;2157:6;2153:17;2236:6;2224:10;2221:22;2200:18;2188:10;2185:34;2182:62;2179:88;;;2247:18;;:::i;:::-;2283:4;2276:24;2318:6;-1:-1:-1;2318:6:112;2348:23;;2380:33;2348:23;2380:33;:::i;:::-;2422:23;;2506:2;2491:18;;;2478:32;2461:15;;2454:57;;;;1968:549;;-1:-1:-1;1968:549:112:o;2522:829::-;2574:5;2622:4;2610:9;2605:3;2601:19;2597:30;2594:50;;;2640:1;2637;2630:12;2594:50;2673:2;2667:9;2715:4;2707:6;2703:17;2786:6;2774:10;2771:22;2750:18;2738:10;2735:34;2732:62;2729:88;;;2797:18;;:::i;:::-;2833:2;2826:22;2866:6;-1:-1:-1;2866:6:112;2896:23;;2928:33;2896:23;2928:33;:::i;:::-;2985:7;2977:6;2970:23;;3054:2;3043:9;3039:18;3026:32;3021:2;3013:6;3009:15;3002:57;3120:2;3109:9;3105:18;3092:32;3087:2;3079:6;3075:15;3068:57;3186:2;3175:9;3171:18;3158:32;3153:2;3145:6;3141:15;3134:57;3253:3;3242:9;3238:19;3225:33;3219:3;3211:6;3207:16;3200:59;3293:51;3340:3;3334;3323:9;3319:19;3293:51;:::i;:::-;3287:3;3279:6;3275:16;3268:77;;2522:829;;;;:::o;3356:225::-;3439:6;3492:3;3480:9;3471:7;3467:23;3463:33;3460:53;;;3509:1;3506;3499:12;3460:53;3532:43;3567:7;3556:9;3532:43;:::i;3768:645::-;3884:6;3892;3945:2;3933:9;3924:7;3920:23;3916:32;3913:52;;;3961:1;3958;3951:12;3913:52;4001:9;3988:23;4030:18;4071:2;4063:6;4060:14;4057:34;;;4087:1;4084;4077:12;4057:34;4125:6;4114:9;4110:22;4100:32;;4170:7;4163:4;4159:2;4155:13;4151:27;4141:55;;4192:1;4189;4182:12;4141:55;4232:2;4219:16;4258:2;4250:6;4247:14;4244:34;;;4274:1;4271;4264:12;4244:34;4327:7;4322:2;4312:6;4309:1;4305:14;4301:2;4297:23;4293:32;4290:45;4287:65;;;4348:1;4345;4338:12;4287:65;4379:2;4371:11;;;;;4401:6;;-1:-1:-1;3768:645:112;;-1:-1:-1;;;;3768:645:112:o;4418:2037::-;4505:5;4535:18;4576:2;4568:6;4565:14;4562:40;;;4582:18;;:::i;:::-;4628:6;4625:1;4621:14;4654:4;4676:28;4700:2;4696;4692:11;4676:28;:::i;:::-;4738:21;;;4667:37;-1:-1:-1;4812:15:112;;;;4775:14;;;4839:15;;;4836:35;;;4867:1;4864;4857:12;4836:35;4891:6;4906:1543;4922:6;4917:3;4914:15;4906:1543;;;5008:3;4995:17;5044:2;5031:11;5028:19;5025:109;;;5088:1;5117:2;5113;5106:14;5025:109;5157:24;;5215:6;5201:12;;;5197:25;5194:115;;;5263:1;5292:2;5288;5281:14;5194:115;5335:22;;:::i;:::-;5399:2;5386:16;5431:2;5421:8;5418:16;5415:106;;;5475:1;5504:2;5500;5493:14;5415:106;5544:17;;5584:4;5615:11;;;5611:21;-1:-1:-1;5601:122:112;;5675:1;5705:3;5700;5693:16;5601:122;5760:2;5747:16;5787:2;5782:3;5779:11;5776:37;;;5793:18;;:::i;:::-;5841:52;5865:12;;;-1:-1:-1;;5861:26:112;5857:35;;5841:52;:::i;:::-;5826:67;;5922:3;5913:7;5906:20;5968:3;5963:2;5957:3;5953:2;5949:12;5945:21;5942:30;5939:123;;;6014:1;6044:3;6039;6032:16;5939:123;6119:3;6114:2;6110;6106:11;6101:2;6092:7;6088:16;6075:48;6171:1;6147:17;;;6143:26;;6136:37;6186:22;;-1:-1:-1;6257:11:112;;;6244:25;6228:14;;;6221:49;6294:2;6333:42;6371:3;6357:12;;;6333:42;:::i;:::-;6316:15;;;6309:67;6389:18;;-1:-1:-1;6427:12:112;;;;4939;;4906:1543;;;4910:3;;;;;4418:2037;;;;;:::o;6460:512::-;6571:6;6624:2;6612:9;6603:7;6599:23;6595:32;6592:52;;;6640:1;6637;6630:12;6592:52;6680:9;6667:23;6713:18;6705:6;6702:30;6699:50;;;6745:1;6742;6735:12;6699:50;6768:22;;6821:4;6813:13;;6809:27;-1:-1:-1;6799:55:112;;6850:1;6847;6840:12;6799:55;6873:93;6958:7;6953:2;6940:16;6935:2;6931;6927:11;6873:93;:::i;6977:127::-;7038:10;7033:3;7029:20;7026:1;7019:31;7069:4;7066:1;7059:15;7093:4;7090:1;7083:15;7109:327;7205:4;7263:11;7250:25;7357:2;7353:7;7342:8;7326:14;7322:29;7318:43;7298:18;7294:68;7284:96;;7376:1;7373;7366:12;7284:96;7397:33;;;;;7109:327;-1:-1:-1;;7109:327:112:o;7441:263::-;7516:6;7569:2;7557:9;7548:7;7544:23;7540:32;7537:52;;;7585:1;7582;7575:12;7537:52;7624:9;7611:23;7643:31;7668:5;7643:31;:::i;8198:574::-;8320:4;8326:6;8386:11;8373:25;8480:2;8476:7;8465:8;8449:14;8445:29;8441:43;8421:18;8417:68;8407:96;;8499:1;8496;8489:12;8407:96;8526:33;;8578:20;;;-1:-1:-1;8621:18:112;8610:30;;8607:50;;;8653:1;8650;8643:12;8607:50;8686:4;8674:17;;-1:-1:-1;8737:1:112;8733:14;;;8717;8713:35;8703:46;;8700:66;;;8762:1;8759;8752:12;8777:299;8949:9;8986:84;9055:14;9047:6;9040:5;8986:84;:::i;9081:228::-;9166:6;9219:2;9207:9;9198:7;9194:23;9190:32;9187:52;;;9235:1;9232;9225:12;9187:52;9258:45;9295:7;9284:9;9258:45;:::i;9314:127::-;9375:10;9370:3;9366:20;9363:1;9356:31;9406:4;9403:1;9396:15;9430:4;9427:1;9420:15;9446:135;9485:3;9506:17;;;9503:43;;9526:18;;:::i;:::-;-1:-1:-1;9573:1:112;9562:13;;9446:135::o;9586:125::-;9651:9;;;9672:10;;;9669:36;;;9685:18;;:::i;10527:1250::-;10739:13;;-1:-1:-1;;;;;7775:31:112;7763:44;;10707:3;10692:19;;10820:4;10812:6;10808:17;10802:24;10795:4;10784:9;10780:20;10773:54;10883:4;10875:6;10871:17;10865:24;10858:4;10847:9;10843:20;10836:54;10946:4;10938:6;10934:17;10928:24;10921:4;10910:9;10906:20;10899:54;11009:4;11001:6;10997:17;10991:24;10984:4;10973:9;10969:20;10962:54;11063:4;11055:6;11051:17;11045:24;11078:61;11133:4;11122:9;11118:20;11104:12;9971;;9959:25;;10033:4;10022:16;;;10016:23;10000:14;;9993:47;9898:148;11078:61;;11195:4;11187:6;11183:17;11177:24;11170:4;11159:9;11155:20;11148:54;11251:4;11243:6;11239:17;11233:24;11276:6;11291:54;11341:2;11330:9;11326:18;11310:14;-1:-1:-1;;;;;7775:31:112;7763:44;;7709:104;11291:54;11382:15;;11376:22;;-1:-1:-1;11417:6:112;11432:61;11474:18;;;11376:22;10128:12;;-1:-1:-1;;;;;10124:38:112;10112:51;;10212:4;10201:16;;;10195:23;10179:14;;10172:47;10051:174;11432:61;11530:15;;11524:22;;-1:-1:-1;11565:6:112;11580:61;11622:18;;;11524:22;10309:5;10303:12;10298:3;10291:25;10365:4;10358:5;10354:16;10348:23;10341:4;10336:3;10332:14;10325:47;10435:4;10428:5;10424:16;10418:23;10411:31;10404:39;10397:4;10392:3;10388:14;10381:63;10507:4;10500:5;10496:16;10490:23;10483:31;10476:39;10469:4;10464:3;10460:14;10453:63;;;10230:292;11580:61;11699:6;11691;11687:19;11681:26;11672:6;11661:9;11657:22;11650:58;11766:2;11758:6;11754:15;11748:22;11739:6;11728:9;11724:22;11717:54;;;10527:1250;;;;:::o;11782:422::-;11823:3;11861:5;11855:12;11888:6;11883:3;11876:19;11913:1;11923:162;11937:6;11934:1;11931:13;11923:162;;;11999:4;12055:13;;;12051:22;;12045:29;12027:11;;;12023:20;;12016:59;11952:12;11923:162;;;11927:3;12130:1;12123:4;12114:6;12109:3;12105:16;12101:27;12094:38;12193:4;12186:2;12182:7;12177:2;12169:6;12165:15;12161:29;12156:3;12152:39;12148:50;12141:57;;;11782:422;;;;:::o;12209:217::-;12356:2;12345:9;12338:21;12319:4;12376:44;12416:2;12405:9;12401:18;12393:6;12376:44;:::i;13673:456::-;13779:1;13775;13770:3;13766:11;13762:19;13754:5;13748:12;13744:38;13739:3;13732:51;13832:4;13825:5;13821:16;13815:23;13808:4;13803:3;13799:14;13792:47;13888:4;13881:5;13877:16;13871:23;13864:4;13859:3;13855:14;13848:47;13944:4;13937:5;13933:16;13927:23;13920:4;13915:3;13911:14;13904:47;14000:4;13993:5;13989:16;13983:23;13976:4;13971:3;13967:14;13960:47;14053:4;14046:5;14042:16;14036:23;14068:55;14117:4;14112:3;14108:14;14094:12;10128;;-1:-1:-1;;;;;10124:38:112;10112:51;;10212:4;10201:16;;;10195:23;10179:14;;10172:47;10051:174;14134:385;14385:25;;;14441:2;14426:18;;14419:34;;;14372:3;14357:19;;14462:51;14509:2;14494:18;;14486:6;14462:51;:::i;14524:168::-;14597:9;;;14628;;14645:15;;;14639:22;;14625:37;14615:71;;14666:18;;:::i;14697:319::-;14923:25;;;14911:2;14896:18;;14957:53;15006:2;14991:18;;14983:6;10128:12;;-1:-1:-1;;;;;10124:38:112;10112:51;;10212:4;10201:16;;;10195:23;10179:14;;10172:47;10051:174;15418:387;15656:3;15641:19;;15669:42;15645:9;15693:6;15669:42;:::i;:::-;15742:3;15727:19;;15720:35;;;;15786:3;15771:19;15764:35;15418:387;;-1:-1:-1;15418:387:112:o;15810:315::-;16020:3;16005:19;;16033:42;16009:9;16057:6;16033:42;:::i;:::-;16112:6;16106:3;16095:9;16091:19;16084:35;15810:315;;;;;:::o;16130:386::-;16392:3;16377:19;;16405:42;16381:9;16429:6;16405:42;:::i;:::-;10128:12;;-1:-1:-1;;;;;10124:38:112;16505:3;16490:19;;10112:51;10212:4;10201:16;;10195:23;10179:14;;;10172:47;16456:54;10051:174;16521:217;16561:1;16587;16577:132;;16631:10;16626:3;16622:20;16619:1;16612:31;16666:4;16663:1;16656:15;16694:4;16691:1;16684:15;16577:132;-1:-1:-1;16723:9:112;;16521:217::o;16743:128::-;16810:9;;;16831:11;;;16828:37;;;16845:18;;:::i;16876:277::-;16943:6;16996:2;16984:9;16975:7;16971:23;16967:32;16964:52;;;17012:1;17009;17002:12;16964:52;17044:9;17038:16;17097:5;17090:13;17083:21;17076:5;17073:32;17063:60;;17119:1;17116;17109:12;18055:127;18116:10;18111:3;18107:20;18104:1;18097:31;18147:4;18144:1;18137:15;18171:4;18168:1;18161:15;19706:488;-1:-1:-1;;;;;19975:15:112;;;19957:34;;20027:15;;20022:2;20007:18;;20000:43;20074:2;20059:18;;20052:34;;;20122:3;20117:2;20102:18;;20095:31;;;19900:4;;20143:45;;20168:19;;20160:6;20143:45;:::i;:::-;20135:53;19706:488;-1:-1:-1;;;;;;19706:488:112:o;20199:290::-;20268:6;20321:2;20309:9;20300:7;20296:23;20292:32;20289:52;;;20337:1;20334;20327:12;20289:52;20363:16;;-1:-1:-1;;;;;;20408:32:112;;20398:43;;20388:71;;20455:1;20452;20445:12",
    "linkReferences": {},
    "immutableReferences": {
      "3083": [
        {
          "start": 2872,
          "length": 32
        }
      ],
      "3085": [
        {
          "start": 2830,
          "length": 32
        }
      ],
      "3087": [
        {
          "start": 2788,
          "length": 32
        }
      ],
      "3089": [
        {
          "start": 2955,
          "length": 32
        }
      ],
      "3091": [
        {
          "start": 2992,
          "length": 32
        }
      ],
      "3093": [
        {
          "start": 2913,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "borrow(((address,uint256),(bytes,uint256,(address,uint256,uint256,uint256,uint256,(address,uint256)))[])[])": "b1ce7a6a",
    "offerDigest((address,uint256,uint256,uint256,uint256,(address,uint256)))": "1fbc8a74",
    "onERC721Received(address,address,uint256,bytes)": "150b7a02"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"contract IERC20\",\"name\":\"assetToLend\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"loanToValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expirationDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tranche\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"contract IERC721\",\"name\":\"implem\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"internalType\":\"struct NFToken\",\"name\":\"collateral\",\"type\":\"tuple\"}],\"internalType\":\"struct Offer\",\"name\":\"offer\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"contract IERC721\",\"name\":\"implem\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"internalType\":\"struct NFToken\",\"name\":\"providedNft\",\"type\":\"tuple\"}],\"name\":\"BadCollateral\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"ERC20TransferFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC721MintToTheZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC721TokenAlreadyMinted\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC721TransferToNonERC721ReceiverImplementer\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"firstRequested\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"requested\",\"type\":\"address\"}],\"name\":\"InconsistentAssetRequests\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"firstTrancheIdUsed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"trancheIdFound\",\"type\":\"uint256\"}],\"name\":\"InconsistentTranches\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"nbOfTranches\",\"type\":\"uint256\"}],\"name\":\"InvalidTranche\",\"type\":\"error\"},{\"inputs\":[{\"components\":[{\"internalType\":\"contract IERC20\",\"name\":\"assetToLend\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"loanToValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expirationDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tranche\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"contract IERC721\",\"name\":\"implem\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"internalType\":\"struct NFToken\",\"name\":\"collateral\",\"type\":\"tuple\"}],\"internalType\":\"struct Offer\",\"name\":\"offer\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"expirationDate\",\"type\":\"uint256\"}],\"name\":\"OfferHasExpired\",\"type\":\"error\"},{\"inputs\":[{\"components\":[{\"internalType\":\"contract IERC20\",\"name\":\"assetToLend\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"loanToValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expirationDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tranche\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"contract IERC721\",\"name\":\"implem\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"internalType\":\"struct NFToken\",\"name\":\"collateral\",\"type\":\"tuple\"}],\"internalType\":\"struct Offer\",\"name\":\"offer\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"requested\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lowerBound\",\"type\":\"uint256\"}],\"name\":\"RequestedAmountIsUnderMinimum\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"requested\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"offered\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"contract IERC20\",\"name\":\"assetToLend\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"loanToValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expirationDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tranche\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"contract IERC721\",\"name\":\"implem\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"internalType\":\"struct NFToken\",\"name\":\"collateral\",\"type\":\"tuple\"}],\"internalType\":\"struct Offer\",\"name\":\"offer\",\"type\":\"tuple\"}],\"name\":\"RequestedAmountTooHigh\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"lent\",\"type\":\"uint256\"}],\"name\":\"UnsafeAmountLent\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"minLoanToValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxLoanToValue\",\"type\":\"uint256\"}],\"name\":\"UnsafeOfferLoanToValuesGap\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"loanId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"loan\",\"type\":\"bytes\"}],\"name\":\"Borrow\",\"type\":\"event\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"contract IERC721\",\"name\":\"implem\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"internalType\":\"struct NFToken\",\"name\":\"nft\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"contract IERC20\",\"name\":\"assetToLend\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"loanToValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expirationDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tranche\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"contract IERC721\",\"name\":\"implem\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"internalType\":\"struct NFToken\",\"name\":\"collateral\",\"type\":\"tuple\"}],\"internalType\":\"struct Offer\",\"name\":\"offer\",\"type\":\"tuple\"}],\"internalType\":\"struct OfferArg[]\",\"name\":\"args\",\"type\":\"tuple[]\"}],\"internalType\":\"struct BorrowArg[]\",\"name\":\"args\",\"type\":\"tuple[]\"}],\"name\":\"borrow\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"contract IERC20\",\"name\":\"assetToLend\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"loanToValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expirationDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tranche\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"contract IERC721\",\"name\":\"implem\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"internalType\":\"struct NFToken\",\"name\":\"collateral\",\"type\":\"tuple\"}],\"internalType\":\"struct Offer\",\"name\":\"offer\",\"type\":\"tuple\"}],\"name\":\"offerDigest\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"contract handles all borrowing logic through inheritance\",\"events\":{\"Borrow(uint256,bytes)\":{\"params\":{\"loan\":\"the loan created\",\"loanId\":\"id of the loan\"}}},\"kind\":\"dev\",\"methods\":{\"borrow(((address,uint256),(bytes,uint256,(address,uint256,uint256,uint256,uint256,(address,uint256)))[])[])\":{\"params\":{\"args\":\"list of arguments specifying at which terms each collateral should be used\"}},\"offerDigest((address,uint256,uint256,uint256,uint256,(address,uint256)))\":{\"params\":{\"offer\":\"the loan offer signed/to sign by a supplier\"},\"returns\":{\"_0\":\"digest the digest, ecdsa sign as is to produce a valid loan offer signature\"}},\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"param data must be of format OfferArg[]\",\"params\":{\"data\":\"abi encoded arguments for the loan\",\"operator\":\"account that initialized the transfer action according to the NFT implementation contract\",\"tokenId\":\"token identifier of the NFT sent according to the NFT implementation contract\"},\"returns\":{\"_0\":\"selector `this.onERC721Received.selector` ERC721-compliant response, signaling compatibility\"}}},\"version\":1},\"userdoc\":{\"events\":{\"Borrow(uint256,bytes)\":{\"notice\":\"one loan has been initiated\"}},\"kind\":\"user\",\"methods\":{\"borrow(((address,uint256),(bytes,uint256,(address,uint256,uint256,uint256,uint256,(address,uint256)))[])[])\":{\"notice\":\"take loans, take ownership of NFTs specified as collateral, sends borrowed money to caller\"},\"offerDigest((address,uint256,uint256,uint256,uint256,(address,uint256)))\":{\"notice\":\"computes EIP-712 compliant digest of a loan offer\"},\"onERC721Received(address,address,uint256,bytes)\":{\"notice\":\"borrow using sent NFT as collateral without needing approval through transfer callback\"}},\"notice\":\"public facing methods for borrowing\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/BorrowFacet.sol\":\"BorrowFacet\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/=node_modules/@openzeppelin/\",\":diamond/=node_modules/diamond/\",\":ds-test/=node_modules/ds-test/src/\",\":forge-std/=node_modules/forge-std/src/\",\":solmate/=node_modules/solmate/\"]},\"sources\":{\"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xab28a56179c1db258c9bf5235b382698cb650debecb51b23d12be9e241374b68\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://daae589a9d6fa7e55f99f86c0a16796ca490f243fb3693632c3711c0646c1d56\",\"dweb:/ipfs/QmR3zpd7wNw3rcUdekwiv6FYHJqksuTCXLVioTxu6Fbxk3\"]},\"node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"node_modules/@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269\",\"dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj\"]},\"node_modules/@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c969013129ba9e651a20735ef659fef6d8a1139ea3607bd4b26ddea2d645634\",\"dweb:/ipfs/QmVhVa6LGuzAcB8qgDtVHRkucn4ihj5UZr8xBLcJkP6ucb\"]},\"node_modules/@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xda898fa084aa1ddfdb346e6a40459e00a59d87071cce7c315a46d648dd71d0ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ce501a941f4aa1555c04dabb5e07992503bb6a9b32ff8f7cdcefdb4a742210cb\",\"dweb:/ipfs/QmeScPrUpdrGYs9BytV3Z5ZWJcBXtuAgCW4BLHua4xFUxx\"]},\"node_modules/@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x948d8b2d18f38141ec78c5229d770d950ebc781ed3f44cc9e3ccbb9fded5846a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7311ac950ed2d81f3ccf1784a926efbfc82a86dcb5c98d41eb3792c0cac63a2f\",\"dweb:/ipfs/QmRRwCUHewkPmehx8QRYENFoWyLNx8UEZGULxWYUeSZdTS\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"node_modules/@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b\",\"dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz\"]},\"src/BorrowFacet.sol\":{\"keccak256\":\"0x960ac7f5ddc23fd9c9b87481451b47022b85ce53eefc1c46fe9cdbd34481e2fc\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://3c17390c85d849708b4489909ab63f11ceb8652d2c2f465e2c0b42b7a71fed94\",\"dweb:/ipfs/QmZNQ9RdZhk9QAxQkws1Fsv5UMwfJpra77HokJCxM8wERH\"]},\"src/BorrowLogic/BorrowCheckers.sol\":{\"keccak256\":\"0x023dce239e7e6d534db05e6364715ebb3399c3c9dccf894e9076712ab779745d\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://cfabb6dbacbb9d09ee26887d755e88d9761d266a3daa68a54c070ff967bf2aa8\",\"dweb:/ipfs/QmbdtPZcZ5QSB8LKQMEy6wU5jDZSSkMJvtGVDpEDuN3bz4\"]},\"src/BorrowLogic/BorrowHandlers.sol\":{\"keccak256\":\"0x41dbb5b648ea50541ab227e77e8850607731ad7ebd8171f5d0d96eb829246301\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://780b77c00afd5fa5d97ba16f3d3a7e83bb909608fb54f5f38f19120a16d5bb18\",\"dweb:/ipfs/QmTPZ47VbeFxbWdou6hFMkk86PStsLuh2uNZfhJVoGjyBX\"]},\"src/DataStructure/ERC721Errors.sol\":{\"keccak256\":\"0x0ee13f898a2d61d6662ef236db05001d14086ff4431bef2ae89c1979819d38d0\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://2e1878fe70994d02159dbf4a5a9c79b3665feaae0d08ff420b3f00cb8ed6355a\",\"dweb:/ipfs/QmNYJDoien8bUQFYuc75GyVGVTYuiUagF4RRUSGTTmZNH7\"]},\"src/DataStructure/Errors.sol\":{\"keccak256\":\"0x6c4db7ebc787971449c92a004a1742a0ebed90b3073de98ac677a7471696f8c5\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://b650ca8195bbdf7e6010ec51248ea3beb4a255730fb8e6404196b1680d5f1433\",\"dweb:/ipfs/QmbU8dkitPbxtTkUWgqL4Rgx3KdDzDgkYESY48muSmcTop\"]},\"src/DataStructure/Global.sol\":{\"keccak256\":\"0x9596c1bdf1271dd447db6a8f26ca493253674e252c9f63a7bc13c8689a7b6e49\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://3ff822127c6c674400e9730466eb6832d19a72eaf991f3bbf62d251a6e2b49d5\",\"dweb:/ipfs/QmZPGbWwS7rTPF3NiyjivxDseeBW64GhfkGvVNuaCbnzDv\"]},\"src/DataStructure/Objects.sol\":{\"keccak256\":\"0x251dd6c3f36c5a2c8a6a867aa29c9ba8b4bb7f2ec1a7321d630fea19f6bbd83a\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://a7f620222a6b6d909e8aa2d7191200b312345b6c704eecdf40729982e238f44e\",\"dweb:/ipfs/QmTikrgA5SKJrsJanid1atHw1M7opEvwuGKNRQTbjeM4sq\"]},\"src/DataStructure/Storage.sol\":{\"keccak256\":\"0x8f99f5f94641c826d0b4bd2dadb065745ff877b195fb1eb7392362a026d01380\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://f2c2362ee8472e6076f7f18a51264c96e63a346e61da6a7234abe5e3c034de38\",\"dweb:/ipfs/QmW59HJM49LDieB2svjKnYzo7hdYKG24rLKgb7AfiXht4z\"]},\"src/Signature.sol\":{\"keccak256\":\"0x37073550ae20735f42ae719377540c0bedd633aad9ce97d40e0facb965e4d137\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://d57bda44ce2f1e48f227c8b97cb23cd166d3b92421a3436835c81c1bc42a60ca\",\"dweb:/ipfs/QmU5yS6t3d6nhfUeGmwZnFsbo8LZe7MHED738pZBaUkPna\"]},\"src/SupplyPositionLogic/NFTUtils.sol\":{\"keccak256\":\"0xc1fdc762292d11504da9d1b999d6364d8c76b721c8f6f7369e0030c9dae9af13\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dc9d2a3636065c11ad95bc669381dae82218909711ed54e31ee3085671ade192\",\"dweb:/ipfs/QmfX1zJes16PDd9NUGcSNYBMRvaykMhyaEMEQsmMugVtP4\"]},\"src/SupplyPositionLogic/SafeMint.sol\":{\"keccak256\":\"0xfe55649875c4f7c6fa65c01b8abf9e0f6564cab19ec24fb895bdce6dde90764d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5b0e86c734cce67187b23816bbba38c9eaab5e2154606de75866637f4774fd99\",\"dweb:/ipfs/QmPuJk6rhpUNjhftEAzbm26DA5tZw8sHybzYZ6G4PuWG8G\"]},\"src/interface/IBorrowCheckers.sol\":{\"keccak256\":\"0x581d912358ce65c74e7e3f089486d5c2cc7f45be7cb02ef5ee26a293c9ba1f18\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://18d4d2dee4cf9ccbeb8a33b037dc0021b1315fd3fca864a2127834f36cb6aaba\",\"dweb:/ipfs/QmUWvZMWUqv2DJpooXCHmQuBcr4kTzBhwApQniouAKdEJn\"]},\"src/interface/IBorrowFacet.sol\":{\"keccak256\":\"0xc2351fa73840199deb8c9ecd663294517ce6e457e198d699d53d651b72f1fe43\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://2094053b1d81f799877ee2ccd44a38601d80b97f93d54a14e0dfbc8ba8f3aba7\",\"dweb:/ipfs/QmZwEsKquQgH1H5tnKCQuBEeU9mRcnNBPC2bXZGt8XVuHF\"]},\"src/interface/IBorrowHandlers.sol\":{\"keccak256\":\"0x420bed3254df51bff3c728e252b74a9603fa3f834330c1edf0f0d257444f03ce\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://200955bcca9610fd1a0e3230f761ade89a12285bf60c91a758ef4045f5b55f54\",\"dweb:/ipfs/QmV9vYWeLVvo5ykdi8x6scgK4QDwYuPkhd4KETKWPA5tMv\"]},\"src/interface/ISignature.sol\":{\"keccak256\":\"0x6dadc10c64bc681b36624c2937fd3e108e87ca0056d311510e53a25cd009d065\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://a813951b3d9f26315a9363a779c745c58ad261ee9fa8a997727ea7ddc6c90da1\",\"dweb:/ipfs/QmR8G8XQDm7xjKzPH29PmYw2LnHakapvkdavJXZCT3vKFT\"]},\"src/utils/Erc20CheckedTransfer.sol\":{\"keccak256\":\"0x03a0041ce856ecca1d5d2b67443dca5f2acab9fe38cd592b2d3e897eaa3955d0\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://10515dcb2700e1b01b00f50c704ffc7daba221080221e056d498da890c586c82\",\"dweb:/ipfs/QmRW2ycAG7nsk2YXnp6nk8s56RqTV1EVCuPkLgQsUHyGeW\"]},\"src/utils/NFTokenUtils.sol\":{\"keccak256\":\"0x886dbd7a03bf3a8fd4739b86bc4eba01014e7683029dd485993369ad0a0473c5\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://02591fc4c94a10c37a9132dfbd9f1222f62c919ef5ba7b76a1ca1c1e2dc1d105\",\"dweb:/ipfs/QmVkSSvA12C2gu8gEv8CxBHpKY242THHAy7eNfzHpXdhtT\"]},\"src/utils/RayMath.sol\":{\"keccak256\":\"0x234068d17599aefc86ca6f5febb25be32bb71c0b45326c24936b23dd9cc876ac\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://421375b2a164c6ffa1e018c533e2a231395fc4f582acc3a43672a24e51fbe328\",\"dweb:/ipfs/QmUFEZi7BjELW2fDZuUpeDCTrNw1YhMmeqJvoMk2MfuxDU\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.18+commit.87f61d96"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "struct Offer",
              "name": "offer",
              "type": "tuple",
              "components": [
                {
                  "internalType": "contract IERC20",
                  "name": "assetToLend",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "loanToValue",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "duration",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "expirationDate",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "tranche",
                  "type": "uint256"
                },
                {
                  "internalType": "struct NFToken",
                  "name": "collateral",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "contract IERC721",
                      "name": "implem",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "id",
                      "type": "uint256"
                    }
                  ]
                }
              ]
            },
            {
              "internalType": "struct NFToken",
              "name": "providedNft",
              "type": "tuple",
              "components": [
                {
                  "internalType": "contract IERC721",
                  "name": "implem",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                }
              ]
            }
          ],
          "type": "error",
          "name": "BadCollateral"
        },
        {
          "inputs": [
            {
              "internalType": "contract IERC20",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "ERC20TransferFailed"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ERC721MintToTheZeroAddress"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ERC721TokenAlreadyMinted"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ERC721TransferToNonERC721ReceiverImplementer"
        },
        {
          "inputs": [
            {
              "internalType": "contract IERC20",
              "name": "firstRequested",
              "type": "address"
            },
            {
              "internalType": "contract IERC20",
              "name": "requested",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "InconsistentAssetRequests"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "firstTrancheIdUsed",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "trancheIdFound",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "InconsistentTranches"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "nbOfTranches",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "InvalidTranche"
        },
        {
          "inputs": [
            {
              "internalType": "struct Offer",
              "name": "offer",
              "type": "tuple",
              "components": [
                {
                  "internalType": "contract IERC20",
                  "name": "assetToLend",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "loanToValue",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "duration",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "expirationDate",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "tranche",
                  "type": "uint256"
                },
                {
                  "internalType": "struct NFToken",
                  "name": "collateral",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "contract IERC721",
                      "name": "implem",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "id",
                      "type": "uint256"
                    }
                  ]
                }
              ]
            },
            {
              "internalType": "uint256",
              "name": "expirationDate",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "OfferHasExpired"
        },
        {
          "inputs": [
            {
              "internalType": "struct Offer",
              "name": "offer",
              "type": "tuple",
              "components": [
                {
                  "internalType": "contract IERC20",
                  "name": "assetToLend",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "loanToValue",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "duration",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "expirationDate",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "tranche",
                  "type": "uint256"
                },
                {
                  "internalType": "struct NFToken",
                  "name": "collateral",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "contract IERC721",
                      "name": "implem",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "id",
                      "type": "uint256"
                    }
                  ]
                }
              ]
            },
            {
              "internalType": "uint256",
              "name": "requested",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "lowerBound",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "RequestedAmountIsUnderMinimum"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "requested",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "offered",
              "type": "uint256"
            },
            {
              "internalType": "struct Offer",
              "name": "offer",
              "type": "tuple",
              "components": [
                {
                  "internalType": "contract IERC20",
                  "name": "assetToLend",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "loanToValue",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "duration",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "expirationDate",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "tranche",
                  "type": "uint256"
                },
                {
                  "internalType": "struct NFToken",
                  "name": "collateral",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "contract IERC721",
                      "name": "implem",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "id",
                      "type": "uint256"
                    }
                  ]
                }
              ]
            }
          ],
          "type": "error",
          "name": "RequestedAmountTooHigh"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "lent",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "UnsafeAmountLent"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "minLoanToValue",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxLoanToValue",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "UnsafeOfferLoanToValuesGap"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "loanId",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "bytes",
              "name": "loan",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Borrow",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "struct BorrowArg[]",
              "name": "args",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "struct NFToken",
                  "name": "nft",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "contract IERC721",
                      "name": "implem",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "id",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "struct OfferArg[]",
                  "name": "args",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "bytes",
                      "name": "signature",
                      "type": "bytes"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "struct Offer",
                      "name": "offer",
                      "type": "tuple",
                      "components": [
                        {
                          "internalType": "contract IERC20",
                          "name": "assetToLend",
                          "type": "address"
                        },
                        {
                          "internalType": "uint256",
                          "name": "loanToValue",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "duration",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "expirationDate",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "tranche",
                          "type": "uint256"
                        },
                        {
                          "internalType": "struct NFToken",
                          "name": "collateral",
                          "type": "tuple",
                          "components": [
                            {
                              "internalType": "contract IERC721",
                              "name": "implem",
                              "type": "address"
                            },
                            {
                              "internalType": "uint256",
                              "name": "id",
                              "type": "uint256"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "borrow"
        },
        {
          "inputs": [
            {
              "internalType": "struct Offer",
              "name": "offer",
              "type": "tuple",
              "components": [
                {
                  "internalType": "contract IERC20",
                  "name": "assetToLend",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "loanToValue",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "duration",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "expirationDate",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "tranche",
                  "type": "uint256"
                },
                {
                  "internalType": "struct NFToken",
                  "name": "collateral",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "contract IERC721",
                      "name": "implem",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "id",
                      "type": "uint256"
                    }
                  ]
                }
              ]
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "offerDigest",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "onERC721Received",
          "outputs": [
            {
              "internalType": "bytes4",
              "name": "",
              "type": "bytes4"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "borrow(((address,uint256),(bytes,uint256,(address,uint256,uint256,uint256,uint256,(address,uint256)))[])[])": {
            "params": {
              "args": "list of arguments specifying at which terms each collateral should be used"
            }
          },
          "offerDigest((address,uint256,uint256,uint256,uint256,(address,uint256)))": {
            "params": {
              "offer": "the loan offer signed/to sign by a supplier"
            },
            "returns": {
              "_0": "digest the digest, ecdsa sign as is to produce a valid loan offer signature"
            }
          },
          "onERC721Received(address,address,uint256,bytes)": {
            "details": "param data must be of format OfferArg[]",
            "params": {
              "data": "abi encoded arguments for the loan",
              "operator": "account that initialized the transfer action according to the NFT implementation contract",
              "tokenId": "token identifier of the NFT sent according to the NFT implementation contract"
            },
            "returns": {
              "_0": "selector `this.onERC721Received.selector` ERC721-compliant response, signaling compatibility"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "borrow(((address,uint256),(bytes,uint256,(address,uint256,uint256,uint256,uint256,(address,uint256)))[])[])": {
            "notice": "take loans, take ownership of NFTs specified as collateral, sends borrowed money to caller"
          },
          "offerDigest((address,uint256,uint256,uint256,uint256,(address,uint256)))": {
            "notice": "computes EIP-712 compliant digest of a loan offer"
          },
          "onERC721Received(address,address,uint256,bytes)": {
            "notice": "borrow using sent NFT as collateral without needing approval through transfer callback"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin/=node_modules/@openzeppelin/",
        ":diamond/=node_modules/diamond/",
        ":ds-test/=node_modules/ds-test/src/",
        ":forge-std/=node_modules/forge-std/src/",
        ":solmate/=node_modules/solmate/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/BorrowFacet.sol": "BorrowFacet"
      },
      "libraries": {}
    },
    "sources": {
      "node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b",
        "urls": [
          "bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34",
          "dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol": {
        "keccak256": "0xab28a56179c1db258c9bf5235b382698cb650debecb51b23d12be9e241374b68",
        "urls": [
          "bzz-raw://daae589a9d6fa7e55f99f86c0a16796ca490f243fb3693632c3711c0646c1d56",
          "dweb:/ipfs/QmR3zpd7wNw3rcUdekwiv6FYHJqksuTCXLVioTxu6Fbxk3"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
        "keccak256": "0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da",
        "urls": [
          "bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708",
          "dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Address.sol": {
        "keccak256": "0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1",
        "urls": [
          "bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269",
          "dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Strings.sol": {
        "keccak256": "0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a",
        "urls": [
          "bzz-raw://8c969013129ba9e651a20735ef659fef6d8a1139ea3607bd4b26ddea2d645634",
          "dweb:/ipfs/QmVhVa6LGuzAcB8qgDtVHRkucn4ihj5UZr8xBLcJkP6ucb"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/cryptography/ECDSA.sol": {
        "keccak256": "0xda898fa084aa1ddfdb346e6a40459e00a59d87071cce7c315a46d648dd71d0ba",
        "urls": [
          "bzz-raw://ce501a941f4aa1555c04dabb5e07992503bb6a9b32ff8f7cdcefdb4a742210cb",
          "dweb:/ipfs/QmeScPrUpdrGYs9BytV3Z5ZWJcBXtuAgCW4BLHua4xFUxx"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/cryptography/EIP712.sol": {
        "keccak256": "0x948d8b2d18f38141ec78c5229d770d950ebc781ed3f44cc9e3ccbb9fded5846a",
        "urls": [
          "bzz-raw://7311ac950ed2d81f3ccf1784a926efbfc82a86dcb5c98d41eb3792c0cac63a2f",
          "dweb:/ipfs/QmRRwCUHewkPmehx8QRYENFoWyLNx8UEZGULxWYUeSZdTS"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1",
        "urls": [
          "bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f",
          "dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/math/Math.sol": {
        "keccak256": "0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6",
        "urls": [
          "bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b",
          "dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz"
        ],
        "license": "MIT"
      },
      "src/BorrowFacet.sol": {
        "keccak256": "0x960ac7f5ddc23fd9c9b87481451b47022b85ce53eefc1c46fe9cdbd34481e2fc",
        "urls": [
          "bzz-raw://3c17390c85d849708b4489909ab63f11ceb8652d2c2f465e2c0b42b7a71fed94",
          "dweb:/ipfs/QmZNQ9RdZhk9QAxQkws1Fsv5UMwfJpra77HokJCxM8wERH"
        ],
        "license": "UNLICENSED"
      },
      "src/BorrowLogic/BorrowCheckers.sol": {
        "keccak256": "0x023dce239e7e6d534db05e6364715ebb3399c3c9dccf894e9076712ab779745d",
        "urls": [
          "bzz-raw://cfabb6dbacbb9d09ee26887d755e88d9761d266a3daa68a54c070ff967bf2aa8",
          "dweb:/ipfs/QmbdtPZcZ5QSB8LKQMEy6wU5jDZSSkMJvtGVDpEDuN3bz4"
        ],
        "license": "UNLICENSED"
      },
      "src/BorrowLogic/BorrowHandlers.sol": {
        "keccak256": "0x41dbb5b648ea50541ab227e77e8850607731ad7ebd8171f5d0d96eb829246301",
        "urls": [
          "bzz-raw://780b77c00afd5fa5d97ba16f3d3a7e83bb909608fb54f5f38f19120a16d5bb18",
          "dweb:/ipfs/QmTPZ47VbeFxbWdou6hFMkk86PStsLuh2uNZfhJVoGjyBX"
        ],
        "license": "UNLICENSED"
      },
      "src/DataStructure/ERC721Errors.sol": {
        "keccak256": "0x0ee13f898a2d61d6662ef236db05001d14086ff4431bef2ae89c1979819d38d0",
        "urls": [
          "bzz-raw://2e1878fe70994d02159dbf4a5a9c79b3665feaae0d08ff420b3f00cb8ed6355a",
          "dweb:/ipfs/QmNYJDoien8bUQFYuc75GyVGVTYuiUagF4RRUSGTTmZNH7"
        ],
        "license": "UNLICENSED"
      },
      "src/DataStructure/Errors.sol": {
        "keccak256": "0x6c4db7ebc787971449c92a004a1742a0ebed90b3073de98ac677a7471696f8c5",
        "urls": [
          "bzz-raw://b650ca8195bbdf7e6010ec51248ea3beb4a255730fb8e6404196b1680d5f1433",
          "dweb:/ipfs/QmbU8dkitPbxtTkUWgqL4Rgx3KdDzDgkYESY48muSmcTop"
        ],
        "license": "UNLICENSED"
      },
      "src/DataStructure/Global.sol": {
        "keccak256": "0x9596c1bdf1271dd447db6a8f26ca493253674e252c9f63a7bc13c8689a7b6e49",
        "urls": [
          "bzz-raw://3ff822127c6c674400e9730466eb6832d19a72eaf991f3bbf62d251a6e2b49d5",
          "dweb:/ipfs/QmZPGbWwS7rTPF3NiyjivxDseeBW64GhfkGvVNuaCbnzDv"
        ],
        "license": "UNLICENSED"
      },
      "src/DataStructure/Objects.sol": {
        "keccak256": "0x251dd6c3f36c5a2c8a6a867aa29c9ba8b4bb7f2ec1a7321d630fea19f6bbd83a",
        "urls": [
          "bzz-raw://a7f620222a6b6d909e8aa2d7191200b312345b6c704eecdf40729982e238f44e",
          "dweb:/ipfs/QmTikrgA5SKJrsJanid1atHw1M7opEvwuGKNRQTbjeM4sq"
        ],
        "license": "UNLICENSED"
      },
      "src/DataStructure/Storage.sol": {
        "keccak256": "0x8f99f5f94641c826d0b4bd2dadb065745ff877b195fb1eb7392362a026d01380",
        "urls": [
          "bzz-raw://f2c2362ee8472e6076f7f18a51264c96e63a346e61da6a7234abe5e3c034de38",
          "dweb:/ipfs/QmW59HJM49LDieB2svjKnYzo7hdYKG24rLKgb7AfiXht4z"
        ],
        "license": "UNLICENSED"
      },
      "src/Signature.sol": {
        "keccak256": "0x37073550ae20735f42ae719377540c0bedd633aad9ce97d40e0facb965e4d137",
        "urls": [
          "bzz-raw://d57bda44ce2f1e48f227c8b97cb23cd166d3b92421a3436835c81c1bc42a60ca",
          "dweb:/ipfs/QmU5yS6t3d6nhfUeGmwZnFsbo8LZe7MHED738pZBaUkPna"
        ],
        "license": "UNLICENSED"
      },
      "src/SupplyPositionLogic/NFTUtils.sol": {
        "keccak256": "0xc1fdc762292d11504da9d1b999d6364d8c76b721c8f6f7369e0030c9dae9af13",
        "urls": [
          "bzz-raw://dc9d2a3636065c11ad95bc669381dae82218909711ed54e31ee3085671ade192",
          "dweb:/ipfs/QmfX1zJes16PDd9NUGcSNYBMRvaykMhyaEMEQsmMugVtP4"
        ],
        "license": "MIT"
      },
      "src/SupplyPositionLogic/SafeMint.sol": {
        "keccak256": "0xfe55649875c4f7c6fa65c01b8abf9e0f6564cab19ec24fb895bdce6dde90764d",
        "urls": [
          "bzz-raw://5b0e86c734cce67187b23816bbba38c9eaab5e2154606de75866637f4774fd99",
          "dweb:/ipfs/QmPuJk6rhpUNjhftEAzbm26DA5tZw8sHybzYZ6G4PuWG8G"
        ],
        "license": "MIT"
      },
      "src/interface/IBorrowCheckers.sol": {
        "keccak256": "0x581d912358ce65c74e7e3f089486d5c2cc7f45be7cb02ef5ee26a293c9ba1f18",
        "urls": [
          "bzz-raw://18d4d2dee4cf9ccbeb8a33b037dc0021b1315fd3fca864a2127834f36cb6aaba",
          "dweb:/ipfs/QmUWvZMWUqv2DJpooXCHmQuBcr4kTzBhwApQniouAKdEJn"
        ],
        "license": "UNLICENSED"
      },
      "src/interface/IBorrowFacet.sol": {
        "keccak256": "0xc2351fa73840199deb8c9ecd663294517ce6e457e198d699d53d651b72f1fe43",
        "urls": [
          "bzz-raw://2094053b1d81f799877ee2ccd44a38601d80b97f93d54a14e0dfbc8ba8f3aba7",
          "dweb:/ipfs/QmZwEsKquQgH1H5tnKCQuBEeU9mRcnNBPC2bXZGt8XVuHF"
        ],
        "license": "UNLICENSED"
      },
      "src/interface/IBorrowHandlers.sol": {
        "keccak256": "0x420bed3254df51bff3c728e252b74a9603fa3f834330c1edf0f0d257444f03ce",
        "urls": [
          "bzz-raw://200955bcca9610fd1a0e3230f761ade89a12285bf60c91a758ef4045f5b55f54",
          "dweb:/ipfs/QmV9vYWeLVvo5ykdi8x6scgK4QDwYuPkhd4KETKWPA5tMv"
        ],
        "license": "UNLICENSED"
      },
      "src/interface/ISignature.sol": {
        "keccak256": "0x6dadc10c64bc681b36624c2937fd3e108e87ca0056d311510e53a25cd009d065",
        "urls": [
          "bzz-raw://a813951b3d9f26315a9363a779c745c58ad261ee9fa8a997727ea7ddc6c90da1",
          "dweb:/ipfs/QmR8G8XQDm7xjKzPH29PmYw2LnHakapvkdavJXZCT3vKFT"
        ],
        "license": "UNLICENSED"
      },
      "src/utils/Erc20CheckedTransfer.sol": {
        "keccak256": "0x03a0041ce856ecca1d5d2b67443dca5f2acab9fe38cd592b2d3e897eaa3955d0",
        "urls": [
          "bzz-raw://10515dcb2700e1b01b00f50c704ffc7daba221080221e056d498da890c586c82",
          "dweb:/ipfs/QmRW2ycAG7nsk2YXnp6nk8s56RqTV1EVCuPkLgQsUHyGeW"
        ],
        "license": "UNLICENSED"
      },
      "src/utils/NFTokenUtils.sol": {
        "keccak256": "0x886dbd7a03bf3a8fd4739b86bc4eba01014e7683029dd485993369ad0a0473c5",
        "urls": [
          "bzz-raw://02591fc4c94a10c37a9132dfbd9f1222f62c919ef5ba7b76a1ca1c1e2dc1d105",
          "dweb:/ipfs/QmVkSSvA12C2gu8gEv8CxBHpKY242THHAy7eNfzHpXdhtT"
        ],
        "license": "UNLICENSED"
      },
      "src/utils/RayMath.sol": {
        "keccak256": "0x234068d17599aefc86ca6f5febb25be32bb71c0b45326c24936b23dd9cc876ac",
        "urls": [
          "bzz-raw://421375b2a164c6ffa1e018c533e2a231395fc4f582acc3a43672a24e51fbe328",
          "dweb:/ipfs/QmUFEZi7BjELW2fDZuUpeDCTrNw1YhMmeqJvoMk2MfuxDU"
        ],
        "license": "UNLICENSED"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/BorrowFacet.sol",
    "id": 35058,
    "exportedSymbols": {
      "BorrowArg": [
        36657
      ],
      "BorrowFacet": [
        35057
      ],
      "BorrowHandlers": [
        35686
      ],
      "IBorrowFacet": [
        38562
      ],
      "IERC721": [
        1732
      ],
      "NFToken": [
        36708
      ],
      "Offer": [
        36702
      ],
      "OfferArg": [
        36665
      ],
      "Signature": [
        37405
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:2143:47",
    "nodes": [
      {
        "id": 34940,
        "nodeType": "PragmaDirective",
        "src": "39:23:47",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".18"
        ]
      },
      {
        "id": 34942,
        "nodeType": "ImportDirective",
        "src": "64:73:47",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol",
        "file": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 35058,
        "sourceUnit": 1733,
        "symbolAliases": [
          {
            "foreign": {
              "id": 34941,
              "name": "IERC721",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 1732,
              "src": "72:7:47",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 34944,
        "nodeType": "ImportDirective",
        "src": "139:58:47",
        "nodes": [],
        "absolutePath": "src/interface/IBorrowFacet.sol",
        "file": "./interface/IBorrowFacet.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 35058,
        "sourceUnit": 38563,
        "symbolAliases": [
          {
            "foreign": {
              "id": 34943,
              "name": "IBorrowFacet",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 38562,
              "src": "147:12:47",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 34946,
        "nodeType": "ImportDirective",
        "src": "199:64:47",
        "nodes": [],
        "absolutePath": "src/BorrowLogic/BorrowHandlers.sol",
        "file": "./BorrowLogic/BorrowHandlers.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 35058,
        "sourceUnit": 35687,
        "symbolAliases": [
          {
            "foreign": {
              "id": 34945,
              "name": "BorrowHandlers",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 35686,
              "src": "207:14:47",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 34951,
        "nodeType": "ImportDirective",
        "src": "264:80:47",
        "nodes": [],
        "absolutePath": "src/DataStructure/Objects.sol",
        "file": "./DataStructure/Objects.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 35058,
        "sourceUnit": 36709,
        "symbolAliases": [
          {
            "foreign": {
              "id": 34947,
              "name": "BorrowArg",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 36657,
              "src": "272:9:47",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 34948,
              "name": "NFToken",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 36708,
              "src": "283:7:47",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 34949,
              "name": "Offer",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 36702,
              "src": "292:5:47",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 34950,
              "name": "OfferArg",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 36665,
              "src": "299:8:47",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 34953,
        "nodeType": "ImportDirective",
        "src": "345:42:47",
        "nodes": [],
        "absolutePath": "src/Signature.sol",
        "file": "./Signature.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 35058,
        "sourceUnit": 37406,
        "symbolAliases": [
          {
            "foreign": {
              "id": 34952,
              "name": "Signature",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 37405,
              "src": "353:9:47",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 35057,
        "nodeType": "ContractDefinition",
        "src": "503:1678:47",
        "nodes": [
          {
            "id": 35002,
            "nodeType": "FunctionDefinition",
            "src": "1097:599:47",
            "nodes": [],
            "body": {
              "id": 35001,
              "nodeType": "Block",
              "src": "1260:436:47",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    34976
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 34976,
                      "mutability": "mutable",
                      "name": "args",
                      "nameLocation": "1288:4:47",
                      "nodeType": "VariableDeclaration",
                      "scope": 35001,
                      "src": "1270:22:47",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_OfferArg_$36665_memory_ptr_$dyn_memory_ptr",
                        "typeString": "struct OfferArg[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 34974,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 34973,
                            "name": "OfferArg",
                            "nameLocations": [
                              "1270:8:47"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 36665,
                            "src": "1270:8:47"
                          },
                          "referencedDeclaration": 36665,
                          "src": "1270:8:47",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_OfferArg_$36665_storage_ptr",
                            "typeString": "struct OfferArg"
                          }
                        },
                        "id": 34975,
                        "nodeType": "ArrayTypeName",
                        "src": "1270:10:47",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_OfferArg_$36665_storage_$dyn_storage_ptr",
                          "typeString": "struct OfferArg[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 34984,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 34979,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34967,
                        "src": "1306:4:47",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      },
                      {
                        "components": [
                          {
                            "baseExpression": {
                              "id": 34980,
                              "name": "OfferArg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 36665,
                              "src": "1313:8:47",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_struct$_OfferArg_$36665_storage_ptr_$",
                                "typeString": "type(struct OfferArg storage pointer)"
                              }
                            },
                            "id": 34981,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1313:10:47",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_array$_t_struct$_OfferArg_$36665_memory_ptr_$dyn_memory_ptr_$",
                              "typeString": "type(struct OfferArg memory[] memory)"
                            }
                          }
                        ],
                        "id": 34982,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "1312:12:47",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_array$_t_struct$_OfferArg_$36665_memory_ptr_$dyn_memory_ptr_$",
                          "typeString": "type(struct OfferArg memory[] memory)"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        },
                        {
                          "typeIdentifier": "t_type$_t_array$_t_struct$_OfferArg_$36665_memory_ptr_$dyn_memory_ptr_$",
                          "typeString": "type(struct OfferArg memory[] memory)"
                        }
                      ],
                      "expression": {
                        "id": 34977,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "1295:3:47",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 34978,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "1299:6:47",
                      "memberName": "decode",
                      "nodeType": "MemberAccess",
                      "src": "1295:10:47",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 34983,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1295:30:47",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_OfferArg_$36665_memory_ptr_$dyn_memory_ptr",
                      "typeString": "struct OfferArg memory[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1270:55:47"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 34986,
                        "name": "args",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34976,
                        "src": "1573:4:47",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_OfferArg_$36665_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct OfferArg memory[] memory"
                        }
                      },
                      {
                        "id": 34987,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34961,
                        "src": "1579:8:47",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 34990,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "1614:3:47",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 34991,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "1618:6:47",
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "1614:10:47",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 34989,
                              "name": "IERC721",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1732,
                              "src": "1606:7:47",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC721_$1732_$",
                                "typeString": "type(contract IERC721)"
                              }
                            },
                            "id": 34992,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1606:19:47",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC721_$1732",
                              "typeString": "contract IERC721"
                            }
                          },
                          {
                            "id": 34993,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34965,
                            "src": "1631:7:47",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IERC721_$1732",
                              "typeString": "contract IERC721"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 34988,
                          "name": "NFToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 36708,
                          "src": "1589:7:47",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_NFToken_$36708_storage_ptr_$",
                            "typeString": "type(struct NFToken storage pointer)"
                          }
                        },
                        "id": 34994,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "nameLocations": [
                          "1598:6:47",
                          "1627:2:47"
                        ],
                        "names": [
                          "implem",
                          "id"
                        ],
                        "nodeType": "FunctionCall",
                        "src": "1589:51:47",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_NFToken_$36708_memory_ptr",
                          "typeString": "struct NFToken memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_struct$_OfferArg_$36665_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct OfferArg memory[] memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_struct$_NFToken_$36708_memory_ptr",
                          "typeString": "struct NFToken memory"
                        }
                      ],
                      "id": 34985,
                      "name": "useCollateral",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 35560,
                      "src": "1559:13:47",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_struct$_OfferArg_$36665_memory_ptr_$dyn_memory_ptr_$_t_address_$_t_struct$_NFToken_$36708_memory_ptr_$returns$_t_struct$_Loan_$36780_memory_ptr_$",
                        "typeString": "function (struct OfferArg memory[] memory,address,struct NFToken memory) returns (struct Loan memory)"
                      }
                    },
                    "id": 34995,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1559:82:47",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Loan_$36780_memory_ptr",
                      "typeString": "struct Loan memory"
                    }
                  },
                  "id": 34996,
                  "nodeType": "ExpressionStatement",
                  "src": "1559:82:47"
                },
                {
                  "expression": {
                    "expression": {
                      "expression": {
                        "id": 34997,
                        "name": "this",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -28,
                        "src": "1659:4:47",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BorrowFacet_$35057",
                          "typeString": "contract BorrowFacet"
                        }
                      },
                      "id": 34998,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1664:16:47",
                      "memberName": "onERC721Received",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 35002,
                      "src": "1659:21:47",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
                        "typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
                      }
                    },
                    "id": 34999,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberLocation": "1681:8:47",
                    "memberName": "selector",
                    "nodeType": "MemberAccess",
                    "src": "1659:30:47",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "functionReturnParameters": 34971,
                  "id": 35000,
                  "nodeType": "Return",
                  "src": "1652:37:47"
                }
              ]
            },
            "baseFunctions": [
              1749
            ],
            "documentation": {
              "id": 34959,
              "nodeType": "StructuredDocumentation",
              "src": "562:530:47",
              "text": "@notice borrow using sent NFT as collateral without needing approval through transfer callback\n @param operator account that initialized the transfer action according to the NFT implementation contract\n @param tokenId token identifier of the NFT sent according to the NFT implementation contract\n @param data abi encoded arguments for the loan\n @return selector `this.onERC721Received.selector` ERC721-compliant response, signaling compatibility\n @dev param data must be of format OfferArg[]"
            },
            "functionSelector": "150b7a02",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "onERC721Received",
            "nameLocation": "1106:16:47",
            "parameters": {
              "id": 34968,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 34961,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "1140:8:47",
                  "nodeType": "VariableDeclaration",
                  "scope": 35002,
                  "src": "1132:16:47",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 34960,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1132:7:47",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 34963,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 35002,
                  "src": "1158:7:47",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 34962,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1158:7:47",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 34965,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "1191:7:47",
                  "nodeType": "VariableDeclaration",
                  "scope": 35002,
                  "src": "1183:15:47",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 34964,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1183:7:47",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 34967,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "1223:4:47",
                  "nodeType": "VariableDeclaration",
                  "scope": 35002,
                  "src": "1208:19:47",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 34966,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1208:5:47",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1122:111:47"
            },
            "returnParameters": {
              "id": 34971,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 34970,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 35002,
                  "src": "1252:6:47",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 34969,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "1252:6:47",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1251:8:47"
            },
            "scope": 35057,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 35056,
            "nodeType": "FunctionDefinition",
            "src": "1904:275:47",
            "nodes": [],
            "body": {
              "id": 35055,
              "nodeType": "Block",
              "src": "1956:223:47",
              "nodes": [],
              "statements": [
                {
                  "body": {
                    "id": 35053,
                    "nodeType": "Block",
                    "src": "2008:165:47",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 35027,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "2054:3:47",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 35028,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2058:6:47",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "2054:10:47",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 35031,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "2074:4:47",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_BorrowFacet_$35057",
                                    "typeString": "contract BorrowFacet"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_BorrowFacet_$35057",
                                    "typeString": "contract BorrowFacet"
                                  }
                                ],
                                "id": 35030,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2066:7:47",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 35029,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2066:7:47",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 35032,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2066:13:47",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 35033,
                                    "name": "args",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 35007,
                                    "src": "2081:4:47",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_struct$_BorrowArg_$36657_calldata_ptr_$dyn_calldata_ptr",
                                      "typeString": "struct BorrowArg calldata[] calldata"
                                    }
                                  },
                                  "id": 35035,
                                  "indexExpression": {
                                    "id": 35034,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 35011,
                                    "src": "2086:1:47",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "2081:7:47",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_BorrowArg_$36657_calldata_ptr",
                                    "typeString": "struct BorrowArg calldata"
                                  }
                                },
                                "id": 35036,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "2089:3:47",
                                "memberName": "nft",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 36652,
                                "src": "2081:11:47",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_NFToken_$36708_calldata_ptr",
                                  "typeString": "struct NFToken calldata"
                                }
                              },
                              "id": 35037,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2093:2:47",
                              "memberName": "id",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 36707,
                              "src": "2081:14:47",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "expression": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 35021,
                                    "name": "args",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 35007,
                                    "src": "2022:4:47",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_struct$_BorrowArg_$36657_calldata_ptr_$dyn_calldata_ptr",
                                      "typeString": "struct BorrowArg calldata[] calldata"
                                    }
                                  },
                                  "id": 35023,
                                  "indexExpression": {
                                    "id": 35022,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 35011,
                                    "src": "2027:1:47",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "2022:7:47",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_BorrowArg_$36657_calldata_ptr",
                                    "typeString": "struct BorrowArg calldata"
                                  }
                                },
                                "id": 35024,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "2030:3:47",
                                "memberName": "nft",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 36652,
                                "src": "2022:11:47",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_NFToken_$36708_calldata_ptr",
                                  "typeString": "struct NFToken calldata"
                                }
                              },
                              "id": 35025,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2034:6:47",
                              "memberName": "implem",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 36705,
                              "src": "2022:18:47",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC721_$1732",
                                "typeString": "contract IERC721"
                              }
                            },
                            "id": 35026,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2041:12:47",
                            "memberName": "transferFrom",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1697,
                            "src": "2022:31:47",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256) external"
                            }
                          },
                          "id": 35038,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2022:74:47",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 35039,
                        "nodeType": "ExpressionStatement",
                        "src": "2022:74:47"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "baseExpression": {
                                  "id": 35041,
                                  "name": "args",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 35007,
                                  "src": "2124:4:47",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_BorrowArg_$36657_calldata_ptr_$dyn_calldata_ptr",
                                    "typeString": "struct BorrowArg calldata[] calldata"
                                  }
                                },
                                "id": 35043,
                                "indexExpression": {
                                  "id": 35042,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 35011,
                                  "src": "2129:1:47",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "2124:7:47",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_BorrowArg_$36657_calldata_ptr",
                                  "typeString": "struct BorrowArg calldata"
                                }
                              },
                              "id": 35044,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2132:4:47",
                              "memberName": "args",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 36656,
                              "src": "2124:12:47",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_OfferArg_$36665_calldata_ptr_$dyn_calldata_ptr",
                                "typeString": "struct OfferArg calldata[] calldata"
                              }
                            },
                            {
                              "expression": {
                                "id": 35045,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "2138:3:47",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 35046,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2142:6:47",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "2138:10:47",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "baseExpression": {
                                  "id": 35047,
                                  "name": "args",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 35007,
                                  "src": "2150:4:47",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_BorrowArg_$36657_calldata_ptr_$dyn_calldata_ptr",
                                    "typeString": "struct BorrowArg calldata[] calldata"
                                  }
                                },
                                "id": 35049,
                                "indexExpression": {
                                  "id": 35048,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 35011,
                                  "src": "2155:1:47",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "2150:7:47",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_BorrowArg_$36657_calldata_ptr",
                                  "typeString": "struct BorrowArg calldata"
                                }
                              },
                              "id": 35050,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2158:3:47",
                              "memberName": "nft",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 36652,
                              "src": "2150:11:47",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_NFToken_$36708_calldata_ptr",
                                "typeString": "struct NFToken calldata"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_array$_t_struct$_OfferArg_$36665_calldata_ptr_$dyn_calldata_ptr",
                                "typeString": "struct OfferArg calldata[] calldata"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_struct$_NFToken_$36708_calldata_ptr",
                                "typeString": "struct NFToken calldata"
                              }
                            ],
                            "id": 35040,
                            "name": "useCollateral",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 35560,
                            "src": "2110:13:47",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_struct$_OfferArg_$36665_memory_ptr_$dyn_memory_ptr_$_t_address_$_t_struct$_NFToken_$36708_memory_ptr_$returns$_t_struct$_Loan_$36780_memory_ptr_$",
                              "typeString": "function (struct OfferArg memory[] memory,address,struct NFToken memory) returns (struct Loan memory)"
                            }
                          },
                          "id": 35051,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2110:52:47",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Loan_$36780_memory_ptr",
                            "typeString": "struct Loan memory"
                          }
                        },
                        "id": 35052,
                        "nodeType": "ExpressionStatement",
                        "src": "2110:52:47"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 35017,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 35014,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 35011,
                      "src": "1986:1:47",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 35015,
                        "name": "args",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35007,
                        "src": "1990:4:47",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_BorrowArg_$36657_calldata_ptr_$dyn_calldata_ptr",
                          "typeString": "struct BorrowArg calldata[] calldata"
                        }
                      },
                      "id": 35016,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1995:6:47",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "1990:11:47",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1986:15:47",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 35054,
                  "initializationExpression": {
                    "assignments": [
                      35011
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 35011,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "1979:1:47",
                        "nodeType": "VariableDeclaration",
                        "scope": 35054,
                        "src": "1971:9:47",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 35010,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1971:7:47",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 35013,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 35012,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1983:1:47",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "1971:13:47"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 35019,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "2003:3:47",
                      "subExpression": {
                        "id": 35018,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35011,
                        "src": "2003:1:47",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 35020,
                    "nodeType": "ExpressionStatement",
                    "src": "2003:3:47"
                  },
                  "nodeType": "ForStatement",
                  "src": "1966:207:47"
                }
              ]
            },
            "baseFunctions": [
              38561
            ],
            "documentation": {
              "id": 35003,
              "nodeType": "StructuredDocumentation",
              "src": "1702:197:47",
              "text": "@notice take loans, take ownership of NFTs specified as collateral, sends borrowed money to caller\n @param args list of arguments specifying at which terms each collateral should be used"
            },
            "functionSelector": "b1ce7a6a",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "borrow",
            "nameLocation": "1913:6:47",
            "parameters": {
              "id": 35008,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35007,
                  "mutability": "mutable",
                  "name": "args",
                  "nameLocation": "1941:4:47",
                  "nodeType": "VariableDeclaration",
                  "scope": 35056,
                  "src": "1920:25:47",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_BorrowArg_$36657_calldata_ptr_$dyn_calldata_ptr",
                    "typeString": "struct BorrowArg[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 35005,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 35004,
                        "name": "BorrowArg",
                        "nameLocations": [
                          "1920:9:47"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 36657,
                        "src": "1920:9:47"
                      },
                      "referencedDeclaration": 36657,
                      "src": "1920:9:47",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_BorrowArg_$36657_storage_ptr",
                        "typeString": "struct BorrowArg"
                      }
                    },
                    "id": 35006,
                    "nodeType": "ArrayTypeName",
                    "src": "1920:11:47",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_BorrowArg_$36657_storage_$dyn_storage_ptr",
                      "typeString": "struct BorrowArg[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1919:27:47"
            },
            "returnParameters": {
              "id": 35009,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1956:0:47"
            },
            "scope": 35057,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 34955,
              "name": "IBorrowFacet",
              "nameLocations": [
                "527:12:47"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 38562,
              "src": "527:12:47"
            },
            "id": 34956,
            "nodeType": "InheritanceSpecifier",
            "src": "527:12:47"
          },
          {
            "baseName": {
              "id": 34957,
              "name": "BorrowHandlers",
              "nameLocations": [
                "541:14:47"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 35686,
              "src": "541:14:47"
            },
            "id": 34958,
            "nodeType": "InheritanceSpecifier",
            "src": "541:14:47"
          }
        ],
        "canonicalName": "BorrowFacet",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 34954,
          "nodeType": "StructuredDocumentation",
          "src": "389:114:47",
          "text": "@notice public facing methods for borrowing\n @dev contract handles all borrowing logic through inheritance"
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          35057,
          35686,
          38432,
          38349,
          35197,
          37405,
          3231,
          38562,
          1750,
          38576,
          38542,
          38749
        ],
        "name": "BorrowFacet",
        "nameLocation": "512:11:47",
        "scope": 35058,
        "usedErrors": [
          36455,
          36457,
          36459,
          36489,
          36498,
          36505,
          36514,
          36523,
          36531,
          36537,
          36561,
          36573,
          36577
        ]
      }
    ],
    "license": "UNLICENSED"
  },
  "id": 47
}