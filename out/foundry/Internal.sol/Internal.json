{
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "AssertionFailedCollatStateDontMatch",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "AssertionFailedLoanDontMatch",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "Ray",
          "name": "expected",
          "type": "uint256"
        },
        {
          "internalType": "Ray",
          "name": "actual",
          "type": "uint256"
        }
      ],
      "name": "AssertionFailedRayDontMatch",
      "type": "error"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "contract IERC20",
              "name": "assetToLend",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "loanToValue",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "duration",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "expirationDate",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "tranche",
              "type": "uint256"
            },
            {
              "components": [
                {
                  "internalType": "contract IERC721",
                  "name": "implem",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                }
              ],
              "internalType": "struct NFToken",
              "name": "collateral",
              "type": "tuple"
            }
          ],
          "internalType": "struct Offer",
          "name": "offer",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "contract IERC721",
              "name": "implem",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            }
          ],
          "internalType": "struct NFToken",
          "name": "providedNft",
          "type": "tuple"
        }
      ],
      "name": "BadCollateral",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "loanId",
          "type": "uint256"
        }
      ],
      "name": "BorrowerAlreadyClaimed",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "admin",
          "type": "address"
        }
      ],
      "name": "CallerIsNotOwner",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "endDate",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "loanId",
          "type": "uint256"
        }
      ],
      "name": "CollateralIsNotLiquidableYet",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "ERC20TransferFailed",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ERC721AddressZeroIsNotAValidOwner",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ERC721ApprovalToCurrentOwner",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ERC721ApproveToCaller",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ERC721CallerIsNotOwnerNorApproved",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ERC721CallerIsNotOwnerNorApprovedForAll",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ERC721InvalidTokenId",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ERC721MintToTheZeroAddress",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ERC721TokenAlreadyMinted",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ERC721TransferFromIncorrectOwner",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ERC721TransferToNonERC721ReceiverImplementer",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ERC721TransferToTheZeroAddress",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "firstRequested",
          "type": "address"
        },
        {
          "internalType": "contract IERC20",
          "name": "requested",
          "type": "address"
        }
      ],
      "name": "InconsistentAssetRequests",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "firstTrancheIdUsed",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "trancheIdFound",
          "type": "uint256"
        }
      ],
      "name": "InconsistentTranches",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "nbOfTranches",
          "type": "uint256"
        }
      ],
      "name": "InvalidTranche",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "loanId",
          "type": "uint256"
        }
      ],
      "name": "LoanAlreadyRepaid",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "loanId",
          "type": "uint256"
        }
      ],
      "name": "LoanNotRepaidOrLiquidatedYet",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "loanId",
          "type": "uint256"
        }
      ],
      "name": "NotBorrowerOfTheLoan",
      "type": "error"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "contract IERC20",
              "name": "assetToLend",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "loanToValue",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "duration",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "expirationDate",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "tranche",
              "type": "uint256"
            },
            {
              "components": [
                {
                  "internalType": "contract IERC721",
                  "name": "implem",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                }
              ],
              "internalType": "struct NFToken",
              "name": "collateral",
              "type": "tuple"
            }
          ],
          "internalType": "struct Offer",
          "name": "offer",
          "type": "tuple"
        },
        {
          "internalType": "uint256",
          "name": "expirationDate",
          "type": "uint256"
        }
      ],
      "name": "OfferHasExpired",
      "type": "error"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "contract IERC20",
              "name": "assetToLend",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "loanToValue",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "duration",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "expirationDate",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "tranche",
              "type": "uint256"
            },
            {
              "components": [
                {
                  "internalType": "contract IERC721",
                  "name": "implem",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                }
              ],
              "internalType": "struct NFToken",
              "name": "collateral",
              "type": "tuple"
            }
          ],
          "internalType": "struct Offer",
          "name": "offer",
          "type": "tuple"
        },
        {
          "internalType": "uint256",
          "name": "requested",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "lowerBound",
          "type": "uint256"
        }
      ],
      "name": "RequestedAmountIsUnderMinimum",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "requested",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "offered",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "contract IERC20",
              "name": "assetToLend",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "loanToValue",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "duration",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "expirationDate",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "tranche",
              "type": "uint256"
            },
            {
              "components": [
                {
                  "internalType": "contract IERC721",
                  "name": "implem",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                }
              ],
              "internalType": "struct NFToken",
              "name": "collateral",
              "type": "tuple"
            }
          ],
          "internalType": "struct Offer",
          "name": "offer",
          "type": "tuple"
        }
      ],
      "name": "RequestedAmountTooHigh",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Unauthorized",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "lent",
          "type": "uint256"
        }
      ],
      "name": "UnsafeAmountLent",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "minLoanToValue",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "maxLoanToValue",
          "type": "uint256"
        }
      ],
      "name": "UnsafeOfferLoanToValuesGap",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "loanId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "loan",
          "type": "bytes"
        }
      ],
      "name": "Borrow",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "loanId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "args",
          "type": "bytes"
        }
      ],
      "name": "Buy",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "claimant",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "claimed",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "loanId",
          "type": "uint256"
        }
      ],
      "name": "Claim",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "newAuctionDuration",
          "type": "uint256"
        }
      ],
      "name": "NewAuctionDuration",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "Ray",
          "name": "newAuctionPriceFactor",
          "type": "uint256"
        }
      ],
      "name": "NewAuctionPriceFactor",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "contract IERC20",
          "name": "currency",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "newLowerBound",
          "type": "uint256"
        }
      ],
      "name": "NewBorrowAmountPerOfferLowerBound",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "contract IERC20",
          "name": "currency",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "newMinOfferCost",
          "type": "uint256"
        }
      ],
      "name": "NewMininimumOfferCost",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "Ray",
          "name": "tranche",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "newTrancheId",
          "type": "uint256"
        }
      ],
      "name": "NewTranche",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "loanId",
          "type": "uint256"
        }
      ],
      "name": "Repay",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "log_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "log_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "log_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "name": "log_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "val",
          "type": "address"
        }
      ],
      "name": "log_named_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "val",
          "type": "bytes"
        }
      ],
      "name": "log_named_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "val",
          "type": "bytes32"
        }
      ],
      "name": "log_named_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        }
      ],
      "name": "log_named_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "val",
          "type": "string"
        }
      ],
      "name": "log_named_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "log_named_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "log_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "logs",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "IS_TEST",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "contract IERC721",
                  "name": "implem",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                }
              ],
              "internalType": "struct NFToken",
              "name": "nft",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "bytes",
                  "name": "signature",
                  "type": "bytes"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "components": [
                    {
                      "internalType": "contract IERC20",
                      "name": "assetToLend",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "loanToValue",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "duration",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "expirationDate",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "tranche",
                      "type": "uint256"
                    },
                    {
                      "components": [
                        {
                          "internalType": "contract IERC721",
                          "name": "implem",
                          "type": "address"
                        },
                        {
                          "internalType": "uint256",
                          "name": "id",
                          "type": "uint256"
                        }
                      ],
                      "internalType": "struct NFToken",
                      "name": "collateral",
                      "type": "tuple"
                    }
                  ],
                  "internalType": "struct Offer",
                  "name": "offer",
                  "type": "tuple"
                }
              ],
              "internalType": "struct OfferArg[]",
              "name": "args",
              "type": "tuple[]"
            }
          ],
          "internalType": "struct BorrowArg[]",
          "name": "args",
          "type": "tuple[]"
        }
      ],
      "name": "borrow",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "loanId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            }
          ],
          "internalType": "struct BuyArg[]",
          "name": "args",
          "type": "tuple[]"
        }
      ],
      "name": "buy",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "contract IERC20",
              "name": "assetToLend",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "loanToValue",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "duration",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "expirationDate",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "tranche",
              "type": "uint256"
            },
            {
              "components": [
                {
                  "internalType": "contract IERC721",
                  "name": "implem",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                }
              ],
              "internalType": "struct NFToken",
              "name": "collateral",
              "type": "tuple"
            }
          ],
          "internalType": "struct Offer",
          "name": "offer",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "contract IERC721",
              "name": "implem",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            }
          ],
          "internalType": "struct NFToken",
          "name": "providedNft",
          "type": "tuple"
        }
      ],
      "name": "checkCollateralExternal",
      "outputs": [],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "bytes",
              "name": "signature",
              "type": "bytes"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "components": [
                {
                  "internalType": "contract IERC20",
                  "name": "assetToLend",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "loanToValue",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "duration",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "expirationDate",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "tranche",
                  "type": "uint256"
                },
                {
                  "components": [
                    {
                      "internalType": "contract IERC721",
                      "name": "implem",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "id",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct NFToken",
                  "name": "collateral",
                  "type": "tuple"
                }
              ],
              "internalType": "struct Offer",
              "name": "offer",
              "type": "tuple"
            }
          ],
          "internalType": "struct OfferArg",
          "name": "arg",
          "type": "tuple"
        }
      ],
      "name": "checkOfferArgExternal",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256[]",
          "name": "positionIds",
          "type": "uint256[]"
        }
      ],
      "name": "claim",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "sent",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256[]",
          "name": "loanIds",
          "type": "uint256[]"
        }
      ],
      "name": "claimAsBorrower",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "sent",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "Ray",
          "name": "newTranche",
          "type": "uint256"
        }
      ],
      "name": "createTranche",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "newTrancheId",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeArtifacts",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "excludedArtifacts_",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeContracts",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "excludedContracts_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeSenders",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "excludedSenders_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "failed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "getLoan",
      "outputs": [
        {
          "components": [
            {
              "internalType": "contract IERC20",
              "name": "assetLent",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "lent",
              "type": "uint256"
            },
            {
              "internalType": "Ray",
              "name": "shareLent",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "startDate",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "endDate",
              "type": "uint256"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "duration",
                  "type": "uint256"
                },
                {
                  "internalType": "Ray",
                  "name": "priceFactor",
                  "type": "uint256"
                }
              ],
              "internalType": "struct Auction",
              "name": "auction",
              "type": "tuple"
            },
            {
              "internalType": "Ray",
              "name": "interestPerSecond",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "borrower",
              "type": "address"
            },
            {
              "components": [
                {
                  "internalType": "contract IERC721",
                  "name": "implem",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                }
              ],
              "internalType": "struct NFToken",
              "name": "collateral",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "paid",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "minInterestsToRepay",
                  "type": "uint256"
                },
                {
                  "internalType": "bool",
                  "name": "liquidated",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "borrowerClaimed",
                  "type": "bool"
                }
              ],
              "internalType": "struct Payment",
              "name": "payment",
              "type": "tuple"
            },
            {
              "internalType": "uint256",
              "name": "supplyPositionIndex",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "nbOfPositions",
              "type": "uint256"
            }
          ],
          "internalType": "struct Loan",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "currency",
          "type": "address"
        }
      ],
      "name": "getMinOfferCostAndBorrowableAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "minOfferCost",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "offerBorrowAmountLowerBound",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getParameters",
      "outputs": [
        {
          "internalType": "Ray",
          "name": "auctionPriceFactor",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "auctionDuration",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "nbOfLoans",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "nbOfTranches",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "getRateOfTranche",
      "outputs": [
        {
          "internalType": "Ray",
          "name": "rate",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "contract IERC20",
              "name": "assetToLend",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "loanToValue",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "duration",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "expirationDate",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "tranche",
              "type": "uint256"
            },
            {
              "components": [
                {
                  "internalType": "contract IERC721",
                  "name": "implem",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                }
              ],
              "internalType": "struct NFToken",
              "name": "collateral",
              "type": "tuple"
            }
          ],
          "internalType": "struct Offer",
          "name": "offer",
          "type": "tuple"
        }
      ],
      "name": "offerDigest",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "onERC721Received",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "position",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "Ray",
              "name": "share",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "loanId",
              "type": "uint256"
            }
          ],
          "internalType": "struct Provision",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "loanId",
          "type": "uint256"
        }
      ],
      "name": "price",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256[]",
          "name": "loanIds",
          "type": "uint256[]"
        }
      ],
      "name": "repay",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "contract IERC20",
              "name": "assetLent",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "lent",
              "type": "uint256"
            },
            {
              "internalType": "Ray",
              "name": "shareLent",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "startDate",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "endDate",
              "type": "uint256"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "duration",
                  "type": "uint256"
                },
                {
                  "internalType": "Ray",
                  "name": "priceFactor",
                  "type": "uint256"
                }
              ],
              "internalType": "struct Auction",
              "name": "auction",
              "type": "tuple"
            },
            {
              "internalType": "Ray",
              "name": "interestPerSecond",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "borrower",
              "type": "address"
            },
            {
              "components": [
                {
                  "internalType": "contract IERC721",
                  "name": "implem",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                }
              ],
              "internalType": "struct NFToken",
              "name": "collateral",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "paid",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "minInterestsToRepay",
                  "type": "uint256"
                },
                {
                  "internalType": "bool",
                  "name": "liquidated",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "borrowerClaimed",
                  "type": "bool"
                }
              ],
              "internalType": "struct Payment",
              "name": "payment",
              "type": "tuple"
            },
            {
              "internalType": "uint256",
              "name": "supplyPositionIndex",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "nbOfPositions",
              "type": "uint256"
            }
          ],
          "internalType": "struct Loan",
          "name": "loan",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "Ray",
              "name": "share",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "loanId",
              "type": "uint256"
            }
          ],
          "internalType": "struct Provision",
          "name": "provision",
          "type": "tuple"
        }
      ],
      "name": "sendInterestsExternal",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "contract IERC20",
              "name": "assetLent",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "lent",
              "type": "uint256"
            },
            {
              "internalType": "Ray",
              "name": "shareLent",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "startDate",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "endDate",
              "type": "uint256"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "duration",
                  "type": "uint256"
                },
                {
                  "internalType": "Ray",
                  "name": "priceFactor",
                  "type": "uint256"
                }
              ],
              "internalType": "struct Auction",
              "name": "auction",
              "type": "tuple"
            },
            {
              "internalType": "Ray",
              "name": "interestPerSecond",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "borrower",
              "type": "address"
            },
            {
              "components": [
                {
                  "internalType": "contract IERC721",
                  "name": "implem",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                }
              ],
              "internalType": "struct NFToken",
              "name": "collateral",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "paid",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "minInterestsToRepay",
                  "type": "uint256"
                },
                {
                  "internalType": "bool",
                  "name": "liquidated",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "borrowerClaimed",
                  "type": "bool"
                }
              ],
              "internalType": "struct Payment",
              "name": "payment",
              "type": "tuple"
            },
            {
              "internalType": "uint256",
              "name": "supplyPositionIndex",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "nbOfPositions",
              "type": "uint256"
            }
          ],
          "internalType": "struct Loan",
          "name": "loan",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "Ray",
              "name": "share",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "loanId",
              "type": "uint256"
            }
          ],
          "internalType": "struct Provision",
          "name": "provision",
          "type": "tuple"
        }
      ],
      "name": "sendShareOfSaleAsSupplierExternal",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newAuctionDuration",
          "type": "uint256"
        }
      ],
      "name": "setAuctionDuration",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "Ray",
          "name": "newAuctionPriceFactor",
          "type": "uint256"
        }
      ],
      "name": "setAuctionPriceFactor",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "currency",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "newLowerBound",
          "type": "uint256"
        }
      ],
      "name": "setBorrowAmountPerOfferLowerBound",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "currency",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "newMinOfferCost",
          "type": "uint256"
        }
      ],
      "name": "setMinOfferCost",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetArtifactSelectors",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes4[]",
              "name": "selectors",
              "type": "bytes4[]"
            }
          ],
          "internalType": "struct StdInvariant.FuzzSelector[]",
          "name": "targetedArtifactSelectors_",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetArtifacts",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "targetedArtifacts_",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetContracts",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "targetedContracts_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetSelectors",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes4[]",
              "name": "selectors",
              "type": "bytes4[]"
            }
          ],
          "internalType": "struct StdInvariant.FuzzSelector[]",
          "name": "targetedSelectors_",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetSenders",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "targetedSenders_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "bytes",
              "name": "signature",
              "type": "bytes"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "components": [
                {
                  "internalType": "contract IERC20",
                  "name": "assetToLend",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "loanToValue",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "duration",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "expirationDate",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "tranche",
                  "type": "uint256"
                },
                {
                  "components": [
                    {
                      "internalType": "contract IERC721",
                      "name": "implem",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "id",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct NFToken",
                  "name": "collateral",
                  "type": "tuple"
                }
              ],
              "internalType": "struct Offer",
              "name": "offer",
              "type": "tuple"
            }
          ],
          "internalType": "struct OfferArg[]",
          "name": "args",
          "type": "tuple[]"
        },
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "contract IERC721",
              "name": "implem",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            }
          ],
          "internalType": "struct NFToken",
          "name": "nft",
          "type": "tuple"
        }
      ],
      "name": "useCollateralExternal",
      "outputs": [
        {
          "components": [
            {
              "internalType": "contract IERC20",
              "name": "assetLent",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "lent",
              "type": "uint256"
            },
            {
              "internalType": "Ray",
              "name": "shareLent",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "startDate",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "endDate",
              "type": "uint256"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "duration",
                  "type": "uint256"
                },
                {
                  "internalType": "Ray",
                  "name": "priceFactor",
                  "type": "uint256"
                }
              ],
              "internalType": "struct Auction",
              "name": "auction",
              "type": "tuple"
            },
            {
              "internalType": "Ray",
              "name": "interestPerSecond",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "borrower",
              "type": "address"
            },
            {
              "components": [
                {
                  "internalType": "contract IERC721",
                  "name": "implem",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                }
              ],
              "internalType": "struct NFToken",
              "name": "collateral",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "paid",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "minInterestsToRepay",
                  "type": "uint256"
                },
                {
                  "internalType": "bool",
                  "name": "liquidated",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "borrowerClaimed",
                  "type": "bool"
                }
              ],
              "internalType": "struct Payment",
              "name": "payment",
              "type": "tuple"
            },
            {
              "internalType": "uint256",
              "name": "supplyPositionIndex",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "nbOfPositions",
              "type": "uint256"
            }
          ],
          "internalType": "struct Loan",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "bytes",
              "name": "signature",
              "type": "bytes"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "components": [
                {
                  "internalType": "contract IERC20",
                  "name": "assetToLend",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "loanToValue",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "duration",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "expirationDate",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "tranche",
                  "type": "uint256"
                },
                {
                  "components": [
                    {
                      "internalType": "contract IERC721",
                      "name": "implem",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "id",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct NFToken",
                  "name": "collateral",
                  "type": "tuple"
                }
              ],
              "internalType": "struct Offer",
              "name": "offer",
              "type": "tuple"
            }
          ],
          "internalType": "struct OfferArg",
          "name": "arg",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "Ray",
              "name": "matched",
              "type": "uint256"
            },
            {
              "internalType": "contract IERC20",
              "name": "assetLent",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tranche",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "minOfferDuration",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "minOfferLoanToValue",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxOfferLoanToValue",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "components": [
                {
                  "internalType": "contract IERC721",
                  "name": "implem",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                }
              ],
              "internalType": "struct NFToken",
              "name": "nft",
              "type": "tuple"
            },
            {
              "internalType": "uint256",
              "name": "loanId",
              "type": "uint256"
            }
          ],
          "internalType": "struct CollateralState",
          "name": "collatState",
          "type": "tuple"
        }
      ],
      "name": "useOfferExternal",
      "outputs": [
        {
          "components": [
            {
              "internalType": "Ray",
              "name": "matched",
              "type": "uint256"
            },
            {
              "internalType": "contract IERC20",
              "name": "assetLent",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tranche",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "minOfferDuration",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "minOfferLoanToValue",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxOfferLoanToValue",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "components": [
                {
                  "internalType": "contract IERC721",
                  "name": "implem",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                }
              ],
              "internalType": "struct NFToken",
              "name": "nft",
              "type": "tuple"
            },
            {
              "internalType": "uint256",
              "name": "loanId",
              "type": "uint256"
            }
          ],
          "internalType": "struct CollateralState",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "",
    "sourceMap": "663:2848:101:-:0;;;1572:26:28;;;1594:4;-1:-1:-1;;1572:26:28;;;;;;;;3288:44:31;;;;;;;;;;;741:907:101;;;;;;;;;;2464:602:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2464:602:14;;;1665:32:104;1688:8;1665:18;1681:1;1665:11;1673:2;720:4:54;1665:7:104;;;;;;:11;;;;:::i;:::-;:15;;;;;;:18;;;;:::i;:::-;:22;;;;;;:32;;;;:::i;:::-;1650:47;;1720:16;;;1734:1;1720:16;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1707:29:104;;;;:10;;-1:-1:-1;1707:29:104;;;;:::i;:::-;;1762:1;1746:10;1757:1;1746:13;;;;;;;;:::i;:::-;;;;;;;;;;:17;1782:12;;-1:-1:-1;;;;;;1782:12:104;;1105:7;1782:12;;;424:25:112;-1:-1:-1;;;;;;;;;;;1782:7:104;;;397:18:112;;1782:12:104;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1773:21:104;;;1814:13;;-1:-1:-1;;;;;;1814:13:104;;1151:5;1814:13;;;424:25:112;-1:-1:-1;;;;;;;;;;;1814:7:104;;;397:18:112;;1814:13:104;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1804:23:104;;;1837:30;;;-1:-1:-1;;;1837:30:104;;1278:39;1837:30;;;967:51:112;1034:18;;;1027:30;;;;1093:1;1073:18;;;1066:29;-1:-1:-1;;;1111:18:112;;;1104:38;-1:-1:-1;;;;;;;;;;;1837:8:104;;;1159:19:112;;1837:30:104;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1877:24:104;;;-1:-1:-1;;;1877:24:104;;1357:36;1877:24;;;1401:51:112;1468:18;;;1461:30;;;;1527:1;1507:18;;;1500:29;-1:-1:-1;;;1545:18:112;;;1538:35;-1:-1:-1;;;;;;;;;;;1877:8:104;-1:-1:-1;1877:8:104;;-1:-1:-1;1590:19:112;;1877:24:104;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1920:6:104;;1911:26;;;-1:-1:-1;;;1911:26:104;;-1:-1:-1;;;;;1850:32:112;;;1911:26:104;;;1832:51:112;1899:18;;;1892:30;1958:1;1938:18;;;1931:29;-1:-1:-1;;;1976:18:112;;;1969:36;-1:-1:-1;;;;;;;;;;;1911:8:104;-1:-1:-1;1911:8:104;;-1:-1:-1;2022:19:112;;1911:26:104;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1956:7:104;;1947:28;;;-1:-1:-1;;;1947:28:104;;-1:-1:-1;;;;;2282:32:112;;;1947:28:104;;;2264:51:112;2331:18;;;2324:30;2390:1;2370:18;;;2363:29;-1:-1:-1;;;2408:18:112;;;2401:37;-1:-1:-1;;;;;;;;;;;1947:8:104;-1:-1:-1;1947:8:104;;-1:-1:-1;2455:19:112;;1947:28:104;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2018:56;;;;;;;;;;;;;;;;;;5319:23:84;;;;;;;;5235:111;2018:56:104;-1:-1:-1;;;;;;1985:89:104;;;2121:62;;;;;;;;;;;;;;;;;;;;;5319:23:84;;;;;;;;5235:111;2121:62:104;-1:-1:-1;;;;;;2084:99:104;;;2215:8;2197:15;:26;2193:74;;;2239:17;;-1:-1:-1;;;2239:17:104;;2247:8;2239:17;;;424:25:112;-1:-1:-1;;;;;;;;;;;2239:7:104;;;397:18:112;;2239:17:104;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2193:74;2550:22:14;;;;;;;;;;2606:25;;;;;;;;;2787;;;;2822:31;;;;2882:13;2863:32;;2660:117;2932:58;2660:117;2550:22;2606:25;3642:73;;;;;;5803:25:112;;;5844:18;;;5837:34;;;5887:18;;;5880:34;;;3686:13:14;5930:18:112;;;5923:34;3709:4:14;5973:19:112;;;5966:61;3606:7:14;;5775:19:112;;3642:73:14;;;;;;;;;;;;3632:84;;;;;;3625:91;;3466:257;;;;;;2932:58;2905:85;;3023:4;3000:28;;3038:21;;-1:-1:-1;;765:32:101;;;;;;;;;;;;;-1:-1:-1;;;765:32:101;;;;;;;;859:18;:22;;;;910:12;;-1:-1:-1;891:16:101;;:13;:16;;;:31;765:32;;-1:-1:-1;438:41:54;;-1:-1:-1;960:10:101;;720:4:54;;968:1:101;;960:7;;;;;:10;;:::i;:::-;932:25;;;:38;1005:6;932:13;;;980:31;1021:5;:64;;-1:-1:-1;;;;;;1021:64:101;1035:49;1021:64;;;;;;1095:34;;-1:-1:-1;;;1095:34:101;;-1:-1:-1;;;;;;;;;;;1095:7:101;;;:34;;1035:49;1119:9;;1095:34;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1156:5:101;;1139:33;;;-1:-1:-1;;;1139:33:101;;-1:-1:-1;;;;;1156:5:101;;;1139:33;;;3542:51:112;3609:18;;;3602:30;3668:1;3648:18;;;3641:29;-1:-1:-1;;;3686:18:112;;;3679:35;-1:-1:-1;;;;;;;;;;;1139:8:101;-1:-1:-1;1139:8:101;;-1:-1:-1;3731:19:112;;1139:33:101;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1182:6:101;:66;;-1:-1:-1;;;;;;1182:66:101;1197:50;1182:66;;;;;;1258:35;;-1:-1:-1;;;1258:35:101;;-1:-1:-1;;;;;;;;;;;1258:7:101;-1:-1:-1;1258:7:101;;-1:-1:-1;1258:35:101;;1197:50;1283:9;;1258:35;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1320:6:101;;1303:35;;;-1:-1:-1;;;1303:35:101;;-1:-1:-1;;;;;1320:6:101;;;1303:35;;;3973:51:112;4040:18;;;4033:30;4099:1;4079:18;;;4072:29;-1:-1:-1;;;4117:18:112;;;4110:36;-1:-1:-1;;;;;;;;;;;1303:8:101;-1:-1:-1;1303:8:101;;-1:-1:-1;4163:19:112;;1303:35:101;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1348:3:101;:58;;-1:-1:-1;;;;;;1348:58:101;1358:47;1348:58;;;;;;1416:32;;-1:-1:-1;;;1416:32:101;;-1:-1:-1;;;;;;;;;;;1416:7:101;-1:-1:-1;1416:7:101;;-1:-1:-1;1416:32:101;;1358:47;1438:9;;1416:32;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1475:3:101;;1458:29;;;-1:-1:-1;;;1458:29:101;;-1:-1:-1;;;;;1475:3:101;;;1458:29;;;4405:51:112;4472:18;;;4465:30;4531:1;4511:18;;;4504:29;-1:-1:-1;;;4549:18:112;;;4542:33;-1:-1:-1;;;;;;;;;;;1458:8:101;-1:-1:-1;1458:8:101;;-1:-1:-1;4592:19:112;;1458:29:101;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1497:4:101;:60;;-1:-1:-1;;;;;;1497:60:101;1508:48;1497:60;;;;;;1567:33;;-1:-1:-1;;;1567:33:101;;-1:-1:-1;;;;;;;;;;;1567:7:101;-1:-1:-1;1567:7:101;;-1:-1:-1;1567:33:101;;1508:48;1590:9;;1567:33;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1627:4:101;;1610:31;;;-1:-1:-1;;;1610:31:101;;-1:-1:-1;;;;;1627:4:101;;;1610:31;;;;4834:51:112;;;;4901:18;;;4894:30;;;;4940:18;;;4933:29;-1:-1:-1;;;4978:18:112;;;4971:34;-1:-1:-1;;;;;;;;;;;1610:8:101;-1:-1:-1;1610:8:101;;-1:-1:-1;5022:19:112;;1610:31:101;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;755:893;;663:2848;;1454:110:86;1508:3;1539:17;1555:1;1550;1539:17;:::i;:::-;1523:34;;1454:110;;;;;:::o;919:::-;973:3;1004:17;1020:1;1015;1004:17;:::i;663:2848:101:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;663:2848:101;;;-1:-1:-1;663:2848:101;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;146:127:112;207:10;202:3;198:20;195:1;188:31;238:4;235:1;228:15;262:4;259:1;252:15;460:290;530:6;583:2;571:9;562:7;558:23;554:32;551:52;;;599:1;596;589:12;551:52;625:16;;-1:-1:-1;;;;;670:31:112;;660:42;;650:70;;716:1;713;706:12;650:70;739:5;460:290;-1:-1:-1;;;460:290:112:o;2682:643::-;2886:1;2882;2877:3;2873:11;2869:19;2861:6;2857:32;2846:9;2839:51;2820:4;2909:2;2947;2942;2931:9;2927:18;2920:30;2979:6;2973:13;3022:6;3017:2;3006:9;3002:18;2995:34;3047:1;3057:140;3071:6;3068:1;3065:13;3057:140;;;3166:14;;;3162:23;;3156:30;3132:17;;;3151:2;3128:26;3121:66;3086:10;;3057:140;;;3061:3;3246:1;3241:2;3232:6;3221:9;3217:22;3213:31;3206:42;3316:2;3309;3305:7;3300:2;3292:6;3288:15;3284:29;3273:9;3269:45;3265:54;3257:62;;;;2682:643;;;;;:::o;5052:217::-;5092:1;5118;5108:132;;5162:10;5157:3;5153:20;5150:1;5143:31;5197:4;5194:1;5187:15;5225:4;5222:1;5215:15;5108:132;-1:-1:-1;5254:9:112;;5052:217::o;5274:265::-;5347:9;;;5378;;5395:15;;;5389:22;;5375:37;5365:168;;5455:10;5450:3;5446:20;5443:1;5436:31;5490:4;5487:1;5480:15;5518:4;5515:1;5508:15;5544:489;663:2848:101;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "",
    "sourceMap": "663:2848:101:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1405:76:62;;;;;;:::i;:::-;-1:-1:-1;1473:4:62;;1405:76;;;;565:14:112;;558:22;540:41;;528:2;513:18;1405:76:62;;;;;;;;2365:153;;;:::i;:::-;;;;;;;:::i;3070:121::-;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;1806:32:112;;;1788:51;;1776:2;1761:18;3070:121:62;1642:203:112;2687:377:62;;;;;;:::i;:::-;;:::i;:::-;;948:2304:59;;;;;;:::i;:::-;;:::i;759:124:58:-;;;;;;:::i;:::-;;:::i;:::-;;;5152:25:112;;;5140:2;5125:18;759:124:58;4981:202:112;1097:599:47;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;;6291:33:112;;;6273:52;;6261:2;6246:18;1097:599:47;6129:202:112;1123:114:61;;;:::i;3115:224:45:-;;;;;;:::i;:::-;;:::i;2161:134:34:-;;;:::i;:::-;;;;;;;:::i;1151:133:60:-;;;;;;:::i;:::-;;:::i;2876:126:101:-;;;;;;:::i;:::-;;:::i;3503:248:62:-;;;;;;:::i;:::-;;:::i;1444:1217:46:-;;;;;;:::i;:::-;;:::i;2112:353:101:-;;;;;;:::i;:::-;;:::i;2592:1347:50:-;;;;;;:::i;:::-;;:::i;2930:133:34:-;;;:::i;2631:141::-;;;:::i;3757:140:62:-;;;;;;:::i;:::-;;:::i;1964:115:58:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;2246:113:62:-;;;;;;:::i;:::-;;:::i;2447:178:34:-;;;:::i;:::-;;;;;;;:::i;2471:399:101:-;;;;;;:::i;:::-;;:::i;1230:1113:50:-;;;;;;:::i;:::-;;:::i;1964:276:62:-;;;;;;:::i;:::-;;:::i;3567:263:45:-;;;;;;:::i;:::-;;:::i;2301:140:34:-;;;:::i;:::-;;;;;;;:::i;2527:352:58:-;;;;;;:::i;:::-;;:::i;:::-;;;;19614:25:112;;;19670:2;19655:18;;19648:34;;;;19587:18;2527:352:58;19440:248:112;2778:146:34;;;:::i;2084:296:45:-;;;;;;:::i;:::-;;:::i;2524:157:62:-;;;:::i;1137:143:46:-;;;;;;:::i;:::-;;:::i;3197:142:62:-;;;;;;:::i;:::-;;:::i;1180:200:45:-;;;;;;:::i;:::-;;:::i;1435:411:58:-;;;:::i;:::-;;;;21825:25:112;;;21881:2;21866:18;;21859:34;;;;21909:18;;;21902:34;21967:2;21952:18;;21945:34;21812:3;21797:19;1435:411:58;21569:416:112;1902:204:101;;;;;;:::i;:::-;;:::i;1904:275:47:-;;;;;;:::i;:::-;;:::i;1866:141:34:-;;;:::i;3903:280:62:-;;;;;;:::i;:::-;;:::i;1819:584:28:-;;;:::i;1699:197:101:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;2013:142:34:-;;;:::i;1581:342:45:-;;;;;;:::i;:::-;;:::i;3345:152:62:-;;;;;;:::i;:::-;;:::i;717:277:61:-;;;;;;:::i;:::-;;:::i;:::-;;;;27569:13:112;;27551:32;;27639:4;27627:17;;;27621:24;27599:20;;;27592:54;27690:17;;;27684:24;27662:20;;;27655:54;27539:2;27524:18;717:277:61;27349:366:112;1572:26:28;;;;;;;;;3008:147:101;;;;;;:::i;:::-;;:::i;2365:153:62:-;2410:13;2435:25;2463:23;:21;:23::i;:::-;2435:51;;2504:2;:7;;2497:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2365:153;:::o;3070:121::-;3137:7;3163:21;3176:7;3163:12;:21::i;:::-;3156:28;3070:121;-1:-1:-1;;3070:121:62:o;2687:377::-;2758:13;2774:16;2782:7;2774;:16::i;:::-;2758:32;;2810:5;-1:-1:-1;;;;;2804:11:62;:2;-1:-1:-1;;;;;2804:11:62;;2800:79;;2838:30;;-1:-1:-1;;;2838:30:62;;;;;;;;;;;2800:79;2892:10;-1:-1:-1;;;;;2892:19:62;;;;;;:59;;;2916:35;2933:5;2940:10;2916:16;:35::i;:::-;2915:36;2892:59;2888:138;;;2974:41;;-1:-1:-1;;;2974:41:62;;;;;;;;;;;2888:138;3036:21;3045:2;3049:7;3036:8;:21::i;:::-;2748:316;2687:377;;:::o;948:2304:59:-;1008:22;1033:17;:15;:17::i;:::-;1008:42;;1060:17;1087:12;1109:17;1136:15;1167:9;1162:2084;1186:7;:14;1182:1;:18;1162:2084;;;1228:5;:10;;:22;1239:7;1247:1;1239:10;;;;;;;;:::i;:::-;;;;;;;1228:22;;;;;;;;;;;1221:29;;1402:1;1382:4;:12;;:17;;;:21;:53;;;-1:-1:-1;1407:28:59;;;;;;;;;1382:53;:80;;;-1:-1:-1;1439:23:59;;;;;;1382:80;1378:155;;;1507:7;1515:1;1507:10;;;;;;;;:::i;:::-;;;;;;;1489:29;;-1:-1:-1;;;1489:29:59;;;;;;5152:25:112;;5140:2;5125:18;;4981:202;1489:29:59;;;;;;;;1378:155;1553:4;:9;;;1546:16;;1759:1123;2748:70;2757:60;2802:4;:14;;;2784:15;:32;;;;:::i;:::-;2757:22;;;;;:26;:60::i;:::-;2748:4;;:8;:70::i;:::-;2836:32;;;;1759:11;:1123::i;:::-;1747:1135;-1:-1:-1;2906:16:59;1747:1135;2906:4;:16;:::i;:::-;2936:12;;;:27;;;2977:28;;;:35;;-1:-1:-1;;2977:35:59;;;;;3026:14;;2896:26;;-1:-1:-1;3026:70:59;;-1:-1:-1;;;;;3026:14:59;3061:10;3081:4;2896:26;3026:34;:70::i;:::-;3110:15;;;:22;3165:13;;;;3180:18;;;;3110:89;;-1:-1:-1;;;3110:89:59;;-1:-1:-1;;;;;3110:22:59;;;;:39;;:89;;3158:4;;3165:13;;;;;3110:89;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3224:7;3232:1;3224:10;;;;;;;;:::i;:::-;;;;;;;3218:17;;;;;;;;;;1202:3;;;;:::i;:::-;;;;1162:2084;;;;998:2254;;;;;948:2304;:::o;759:124:58:-;820:8;847:17;:15;:17::i;:::-;:29;;;;:25;;:29;;-1:-1:-1;847:29:58;;;;;759:124::o;1097:599:47:-;1252:6;;1295:30;;;;1306:4;1295:30;:::i;:::-;1270:55;;1559:82;1573:4;1579:8;1589:51;;;;;;;;1614:10;-1:-1:-1;;;;;1589:51:47;;;;;1631:7;1589:51;;;1559:13;:82::i;:::-;-1:-1:-1;;;;1659:30:47;1097:599;-1:-1:-1;;;;;;;1097:599:47:o;1123:114:61:-;1169:7;1195:23;:21;:23::i;:::-;:35;;;1188:42;;1123:114;:::o;3115:224:45:-;858:13;898:4;-1:-1:-1;;;;;874:36:45;;:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;858:54;-1:-1:-1;926:10:45;-1:-1:-1;;;;;926:19:45;;;922:80;;968:23;;-1:-1:-1;;;968:23:45;;-1:-1:-1;;;;;1806:32:112;;968:23:45;;;1788:51:112;1761:18;;968:23:45;1642:203:112;922:80:45;3254:15:::1;3211:17;:15;:17::i;:::-;-1:-1:-1::0;;;;;3211:40:45;::::1;;::::0;;;:30:::1;::::0;;;::::1;:40;::::0;;;;;:58;;;;3284:48;;3316:15;;3211:40;3284:48:::1;::::0;::::1;770:249:::0;3115:224;;:::o;2161:134:34:-;2208:33;2272:16;2253:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2253:35:34;;;;;;;;;;;;;;;;;;;;;;;2161:134;:::o;1151:133:60:-;1213:7;1239:38;1256:20;1270:5;1256:13;:20::i;:::-;1239:16;:38::i;2876:126:101:-;2951:7;2977:18;2991:3;2977:13;:18::i;3503:248:62:-;3598:39;3617:10;3629:7;3598:18;:39::i;:::-;3593:113;;3660:35;;-1:-1:-1;;;3660:35:62;;;;;;;;;;;3593:113;3716:28;3726:4;3732:2;3736:7;3716:9;:28::i;1444:1217:46:-;1496:7;1515:17;1535;:15;:17::i;:::-;:30;;;;:22;;;;;:30;;;;;1597:12;;;;1535:30;;-1:-1:-1;1597:12:46;1649:29;1597:12;1649:15;:29;:::i;:::-;1619:59;;1689:23;1705:6;1689:15;:23::i;:::-;1936:12;;;:21;1890:20;;1913:44;;;:133;;2023:12;;;:21;1991:55;;1999:46;;:19;;:23;:46::i;:::-;-1:-1:-1;;;720:4:54;1991:7:46;:55::i;:::-;1913:133;;;789:1:54;1913:133:46;1890:156;;2320:22;2345:38;2359:23;2367:4;:14;;;-1:-1:-1;;;2359:7:46;;:23;;;;:::i;:::-;2345:9;;;;;:13;:38::i;:::-;2320:63;;2588:66;2637:16;2588:44;2607:4;:12;;:24;;;2588:14;:18;;:44;;;;:::i;:::-;:48;;:66::i;:::-;2581:73;1444:1217;-1:-1:-1;;;;;;;1444:1217:46:o;2112:353:101:-;2207:7;2226:22;2251:17;:15;:17::i;:::-;2278:13;;;;:10;;;;:13;;;;;;;;:20;;;;-1:-1:-1;;;;;;2278:20:101;;;-1:-1:-1;;;;;2278:20:101;;;;;;;;;;-1:-1:-1;2278:20:101;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2278:20:101;;;;;;-1:-1:-1;;2278:20:101;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:10;;-1:-1:-1;2336:23:101;:21;:23::i;:::-;2369:15;;;;:12;;;:15;;;;;;;;:27;;;;;;;;;;;;;;;;;;;;2427:10;;;:13;;;;2442:15;;;2308:51;;-1:-1:-1;2413:45:101;;2427:13;2413;:45::i;:::-;2406:52;2112:353;-1:-1:-1;;;;;2112:353:101:o;2592:1347:50:-;2663:12;2687:22;2712:17;:15;:17::i;:::-;2687:42;-1:-1:-1;2739:17:50;;;;2817:1116;2837:18;;;2817:1116;;;2885:7;;2893:1;2885:10;;;;;;;:::i;:::-;;;;;;;;;;2916:18;;;;:10;;;:18;;;;;;;2952:13;;;;2916:18;;-1:-1:-1;2885:10:50;;-1:-1:-1;;;;;;;2952:13:50;2969:10;2952:27;2948:101;;3006:28;;-1:-1:-1;;;3006:28:50;;;;;5152:25:112;;;5125:18;;3006:28:50;4981:202:112;2948:101:50;3066:28;;;;;;;;;3062:104;;;3121:30;;-1:-1:-1;;;3121:30:50;;;;;5152:25:112;;;5125:18;;3121:30:50;4981:202:112;3062:104:50;3183:23;;;;;;3179:346;;;3226:28;;;:35;;-1:-1:-1;;3226:35:50;;;;;:28;3412:14;;;3382:46;;3404:23;;-1:-1:-1;;;720:4:54;3404:7:50;:23::i;:::-;3382:12;;;:17;;:21;:46::i;:::-;3371:57;;3179:346;;;3474:36;;-1:-1:-1;;;3474:36:50;;;;;5152:25:112;;;5125:18;;3474:36:50;4981:202:112;3179:346:50;3542:12;;3538:385;;3764:14;;:52;;-1:-1:-1;;;;;3764:14:50;3795:10;3807:8;3764:30;:52::i;:::-;3834:16;3842:8;3834:16;;:::i;:::-;3873:35;;3834:16;;-1:-1:-1;3901:6:50;;3891:8;;3879:10;;3873:35;;;;;3538:385;2857:3;;;;:::i;:::-;;;;2817:1116;;;;2677:1262;;;;2592:1347;;;;:::o;2930:133:34:-;2976:33;3040:16;3021:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3021:35:34;;;;;;;;;;;;;;;;;;;;;;2930:133;:::o;2631:141::-;2679:35;2747:18;2726:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2726:39:34;;;;;;;;;;;;;;;;;;;;;;2631:141;:::o;3757:140:62:-;3851:39;3868:4;3874:2;3878:7;3851:39;;;;;;;;;;;;:16;:39::i;1964:115:58:-;2016:11;;:::i;:::-;2046:17;:15;:17::i;:::-;:26;;;;:22;;;;:26;;;;;;;;;2039:33;;;;;;;;;-1:-1:-1;;;;;2039:33:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2039:33:58;1964:115::o;2246:113:62:-;2309:7;2335:17;2344:7;2335:8;:17::i;2447:178:34:-;2503:48;2592:26;2563:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2563:55:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2563:55:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2447:178;:::o;2471:399:101:-;2600:7;2619:22;2644:17;:15;:17::i;:::-;2671:13;;;;:10;;;;:13;;;;;;;;:20;;;;-1:-1:-1;;;;;;2671:20:101;;;-1:-1:-1;;;;;2671:20:101;;;;;;;;;;-1:-1:-1;2671:20:101;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2671:20:101;;;;;;-1:-1:-1;;2671:20:101;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:10;;-1:-1:-1;2729:23:101;:21;:23::i;:::-;2762:15;;;;:12;;;:15;;;;;;;;:27;;;;;;;;;;;;;;;;;;;;2832:10;;;:13;;;;2847:15;;;2701:51;;-1:-1:-1;2806:57:101;;2832:13;2806:25;:57::i;1230:1113:50:-;1295:12;1319:22;1344:17;:15;:17::i;:::-;1319:42;;1371:25;1399:23;:21;:23::i;:::-;1371:51;;1432:17;1459:27;1496:14;1520:16;1552:9;1547:790;1567:22;;;1547:790;;;1615:46;1634:10;1646:11;;1658:1;1646:14;;;;;;;:::i;:::-;;;;;;;1615:18;:46::i;:::-;1610:128;;1688:35;;-1:-1:-1;;;1688:35:50;;;;;;;;;;;1610:128;1751:21;1757:11;;1769:1;1757:14;;;;;;;:::i;:::-;;;;;;;1751:5;:21::i;:::-;1798:2;:12;;:28;1811:11;;1823:1;1811:14;;;;;;;:::i;:::-;;;;;;;1798:28;;;;;;;;;;;1786:40;;1849:9;:16;;;1840:25;;1886:5;:10;;:18;1897:6;1886:18;;;;;;;;;;;1879:25;;1923:4;:12;;:23;;;;;;;;;;;;1919:324;;;1977:42;2003:4;2009:9;1977:25;:42::i;:::-;1966:53;;1919:324;;;2062:12;;;:17;;:22;2058:112;;2115:36;;-1:-1:-1;;;2115:36:50;;;;;5152:25:112;;;5125:18;;2115:36:50;4981:202:112;2058:112:50;2198:30;2212:4;2218:9;2198:13;:30::i;:::-;2187:41;;1919:324;2261:35;;2289:6;;2279:8;;2267:10;;2261:35;;;;;2310:16;2318:8;2310:16;;:::i;:::-;;-1:-1:-1;1591:3:50;;;;:::i;:::-;;;;1547:790;;;;1309:1034;;;;;;1230:1113;;;;:::o;1964:276:62:-;2027:7;2046:25;2074:23;:21;:23::i;:::-;2046:51;-1:-1:-1;;;;;;2112:19:62;;2108:92;;2154:35;;-1:-1:-1;;;2154:35:62;;;;;;;;;;;2108:92;-1:-1:-1;;;;;2216:17:62;;;;;;;:10;;;;:17;;-1:-1:-1;2216:17:62;;;;;1964:276::o;3567:263:45:-;858:13;898:4;-1:-1:-1;;;;;874:36:45;;:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;858:54;-1:-1:-1;926:10:45;-1:-1:-1;;;;;926:19:45;;;922:80;;968:23;;-1:-1:-1;;;968:23:45;;-1:-1:-1;;;;;1806:32:112;;968:23:45;;;1788:51:112;1761:18;;968:23:45;1642:203:112;922:80:45;3737:13:::1;3679:17;:15;:17::i;:::-;-1:-1:-1::0;;;;;3679:55:45;::::1;;::::0;;;:45:::1;::::0;;;::::1;:55;::::0;;;;;:71;;;;3765:58;;3809:13;;3679:55;3765:58:::1;::::0;::::1;770:249:::0;3567:263;;:::o;2301:140:34:-;2349:34;2416:18;2395:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2527:352:58;2625:20;2647:35;2694:22;2719:17;:15;:17::i;:::-;-1:-1:-1;;;;;2761:28:58;;;;;;;:18;;;:28;;;;;;;;;2829:33;;;;:43;;;;;;2761:28;;2527:352;-1:-1:-1;;;2527:352:58:o;2778:146:34:-;2826:40;2899:18;2878:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2878:39:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2878:39:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2084:296:45;2151:20;858:13;898:4;-1:-1:-1;;;;;874:36:45;;:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;858:54;-1:-1:-1;926:10:45;-1:-1:-1;;;;;926:19:45;;;922:80;;968:23;;-1:-1:-1;;;968:23:45;;-1:-1:-1;;;;;1806:32:112;;968:23:45;;;1788:51:112;1761:18;;968:23:45;1642:203:112;922:80:45;2183:22:::1;2208:17;:15;:17::i;:::-;2251:18;::::0;::::1;:20:::0;;2183:42;;-1:-1:-1;2251:18:45::1;:20;::::0;::::1;:::i;:::-;::::0;;;-1:-1:-1;2281:27:45::1;::::0;;;:13:::1;::::0;::::1;:27;::::0;;;;;:40;;;2337:36;2236:35;;-1:-1:-1;2236:35:45;;2311:10;;2337:36:::1;::::0;::::1;2173:207;770:249:::0;2084:296;;;:::o;2524:157:62:-;2571:13;2596:25;2624:23;:21;:23::i;:::-;2596:51;;2665:2;:9;;2658:16;;;;;:::i;1137:143:46:-;1196:9;1191:83;1215:4;:11;1211:1;:15;1191:83;;;1247:16;1255:4;1260:1;1255:7;;;;;;;;:::i;:::-;;;;;;;1247;:16::i;:::-;1228:3;;;;:::i;:::-;;;;1191:83;;;;1137:143;:::o;3197:142:62:-;3282:50;3301:10;3313:8;3323;3282:18;:50::i;1180:200:45:-;858:13;898:4;-1:-1:-1;;;;;874:36:45;;:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;858:54;-1:-1:-1;926:10:45;-1:-1:-1;;;;;926:19:45;;;922:80;;968:23;;-1:-1:-1;;;968:23:45;;-1:-1:-1;;;;;1806:32:112;;968:23:45;;;1788:51:112;1761:18;;968:23:45;1642:203:112;922:80:45;1302:18:::1;1265:17;:15;:17::i;:::-;:25;;:55:::0;1335:38:::1;::::0;1354:18;;1335:38:::1;::::0;1265:34:::1;::::0;1335:38:::1;770:249:::0;1180:200;:::o;1435:411:58:-;1507:22;1531:23;1556:17;1575:20;1611:22;1636:17;:15;:17::i;:::-;1684:25;;;;:13;;;1737:22;1781:15;;1684:25;1821:18;;;;1684:25;;1737:22;;-1:-1:-1;1781:15:58;;-1:-1:-1;1821:18:58;-1:-1:-1;1435:411:58;-1:-1:-1;;1435:411:58:o;1902:204:101:-;2039:11;;:::i;:::-;2069:30;2083:4;2089;2095:3;2069:13;:30::i;:::-;2062:37;;1902:204;;;;;;:::o;1904:275:47:-;1971:9;1966:207;1986:15;;;1966:207;;;2022:4;;2027:1;2022:7;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;:18;;;;;;;:::i;:::-;-1:-1:-1;;;;;2022:31:47;;2054:10;2074:4;2081;;2086:1;2081:7;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;2022:74;;-1:-1:-1;;;;;;2022:74:47;;;;;;;;;;;2081:14;;;;2022:74;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2110:52;2124:4;;2129:1;2124:7;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;:12;;;;;;;:::i;:::-;2110:52;;;:::i;:::-;2138:10;2150:4;;2155:1;2150:7;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;2110:52;;;;;;;;;;:::i;:::-;:13;:52::i;:::-;-1:-1:-1;2003:3:47;;;;:::i;:::-;;;;1966:207;;1866:141:34;1915:34;1982:18;1961:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3903:280:62;4021:39;4040:10;4052:7;4021:18;:39::i;:::-;4016:113;;4083:35;;-1:-1:-1;;;4083:35:62;;;;;;;;;;;4016:113;4138:38;4152:4;4158:2;4162:7;4171:4;4138:13;:38::i;:::-;3903:280;;;;:::o;1819:584:28:-;1853:4;1873:7;;;;;;;1869:528;;;-1:-1:-1;1903:7:28;;;;;;;;1819:584::o;1869:528::-;1941:17;2997:42;2985:55;3066:16;1980:374;;2196:43;;;1671:64;2196:43;;;32033:51:112;;;-1:-1:-1;;;32100:18:112;;;32093:34;2196:43:28;;;;;;;;;32006:18:112;;;2196:43:28;;;-1:-1:-1;;1671:64:28;;2086:175;;2135:34;;2086:175;;;:::i;:::-;;;;-1:-1:-1;;2086:175:28;;;;;;;;;;2047:232;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2020:259;;;2323:7;2312:27;;;;;;;;;;;;:::i;:::-;2297:42;;2002:352;1980:374;2374:12;1819:584;-1:-1:-1;1819:584:28:o;1699:197:101:-;1822:22;;:::i;:::-;1863:26;1872:3;1877:11;1863:8;:26::i;2013:142:34:-;2062:35;2130:18;2109:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2109:39:34;;;;;;;;;;;;;;;;;;;;;;2013:142;:::o;1581:342:45:-;858:13;898:4;-1:-1:-1;;;;;874:36:45;;:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;858:54;-1:-1:-1;926:10:45;-1:-1:-1;;;;;926:19:45;;;922:80;;968:23;;-1:-1:-1;;;968:23:45;;-1:-1:-1;;;;;1806:32:112;;968:23:45;;;1788:51:112;1761:18;;968:23:45;1642:203:112;922:80:45;1737:44:::1;1763:17;1778:1;1763:10;-1:-1:-1::0;;;1771:1:45::1;1763:7;:10::i;:::-;:14:::0;::::1;:17::i;:::-;1737:21:::0;2445:30:86;;;2372:110;1737:44:45::1;1729:57;;;::::0;-1:-1:-1;;;1729:57:45;;33271:2:112;1729:57:45::1;::::0;::::1;33253:21:112::0;-1:-1:-1;33290:18:112;;;33283:29;33329:18;;1729:57:45::1;33069:284:112::0;1729:57:45::1;1836:21;1796:17;:15;:17::i;:::-;:37:::0;;:61;1872:44:::1;::::0;1894:21;;1872:44:::1;::::0;;;::::1;770:249:::0;1581:342;:::o;3345:152:62:-;3433:4;3456:34;3474:5;3481:8;3456:17;:34::i;717:277:61:-;775:16;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;775:16:61;803:25;831:23;:21;:23::i;:::-;803:51;;879:2;:14;;;869:7;:24;865:84;;;916:22;;-1:-1:-1;;;916:22:61;;;;;;;;;;;865:84;966:21;;;;:12;;:21;;;;;;;;;959:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;959:28:61;717:277::o;3008:147:101:-;3113:35;3129:5;3136:11;3113:15;:35::i;1454:110:86:-;1508:3;1539:17;1555:1;1550;1539:17;:::i;919:110::-;973:3;1004:17;1020:1;1015;1004:17;:::i;1221:215:54:-;510:48;;1221:215::o;5221:228:63:-;5283:7;5307:16;5315:7;5307;:16::i;:::-;5302:77;;5346:22;;-1:-1:-1;;;5346:22:63;;;;;;;;;;;5302:77;5396:23;:21;:23::i;:::-;:46;;;;:37;;:46;;-1:-1:-1;5396:46:63;;;;-1:-1:-1;;;;;5396:46:63;;5221:228::o;3901:219::-;3967:25;3995:23;:21;:23::i;:::-;4029:25;;;;:16;;;:25;;;;;:30;;-1:-1:-1;;;;;;4029:30:63;-1:-1:-1;;;;;4029:30:63;;;;;:16;-1:-1:-1;4069:44:63;4082:17;4029:25;4082:8;:17::i;:::-;2687:377:62;;1002:217:54;438:41;;1002:217::o;1088:112:86:-;1142:7;-1:-1:-1;;;1169:17:86;1184:1;1169;:17;:::i;:::-;1168:25;;;;:::i;2768:104::-;2826:7;2856:1;2852;:5;:13;;2864:1;2852:13;;;-1:-1:-1;2860:1:86;;2768:104;-1:-1:-1;2768:104:86:o;237:230:83:-;349:39;;-1:-1:-1;;;349:39:83;;-1:-1:-1;;;;;349:21:83;;;;;:39;;371:4;;377:2;;381:6;;349:39;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;344:117;;411:39;;-1:-1:-1;;;411:39:83;;-1:-1:-1;;;;;34025:15:112;;;411:39:83;;;34007:34:112;34077:15;;;34057:18;;;34050:43;34129:15;;34109:18;;;34102:43;33942:18;;411:39:83;33753:398:112;5421:1155:49;5550:16;;:::i;:::-;5578:34;5615:46;5642:4;5647:1;5642:7;;;;;;;;:::i;:::-;;;;;;;5651:4;5657:3;5615:26;:46::i;:::-;5578:83;;5769:29;5801:23;:21;:23::i;:::-;:35;;;:39;;5839:1;5801:39;:::i;:::-;5871:11;;5769:71;;-1:-1:-1;5850:18:49;;5963:146;5987:10;5983:1;:14;5963:146;;;6032:30;6041:4;6046:1;6041:7;;;;;;;;:::i;:::-;;;;;;;6050:11;6032:8;:30::i;:::-;6018:44;;6084:4;6089:1;6084:7;;;;;;;;:::i;:::-;;;;;;;:14;;;6076:22;;;;;:::i;:::-;;-1:-1:-1;5999:3:49;;;;:::i;:::-;;;;5963:146;;;;6294:4;6287;:11;6283:71;;;6321:22;;-1:-1:-1;;;6321:22:49;;;;;5152:25:112;;;5125:18;;6321:22:49;4981:202:112;6283:71:49;6370:80;6386:11;6399:4;6405:3;6410:10;6422:4;6428:21;6370:15;:80::i;:::-;6363:87;;6505:4;6460:17;:15;:17::i;:::-;6483:18;;;;;;6460:42;;;;:22;;;;:42;;;;;;;;;:49;;;;-1:-1:-1;;;;;;6460:49:49;;;-1:-1:-1;;;;;6460:49:49;;;;;;;;;;-1:-1:-1;6460:49:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6460:49:49;;;;;;-1:-1:-1;;6460:49:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6532:18;6552:16;;6525:44;;6552:16;;6563:4;;6552:16;;:::i;:::-;;;;-1:-1:-1;;6552:16:49;;;;;;;;;;6525:44;;;:::i;:::-;;;;;;;;5568:1008;;;;5421:1155;;;;;:::o;1703:462:60:-;1769:7;454:220;1902:5;:17;;;1941:5;:17;;;1980:5;:14;;;2016:5;:20;;;2058:5;:13;;;2093:33;2109:5;:16;;;2093:15;:33::i;:::-;1834:310;;;;;;34708:25:112;;;;-1:-1:-1;;;;;34769:32:112;;;34749:18;;;34742:60;;;;34818:18;;;34811:34;;;;34861:18;;;34854:34;;;;34904:19;;;34897:35;34948:19;;;34941:35;34992:19;;;34985:35;34680:19;;1834:310:60;;;;;;;;;;;;;1807:351;;;;;;1788:370;;1703:462;;;:::o;4348:165:14:-;4425:7;4451:55;4473:20;:18;:20::i;:::-;4495:10;8470:57:13;;-1:-1:-1;;;8470:57:13;;;38511:27:112;38554:11;;;38547:27;;;38590:12;;;38583:28;;;8434:7:13;;38627:12:112;;8470:57:13;;;;;;;;;;;;8460:68;;;;;;8453:75;;8341:194;;;;;1077:1776:48;1144:14;1170:22;1195:17;:15;:17::i;:::-;1170:42;;1569:52;1583:22;1595:3;:9;;;1583:11;:22::i;:::-;1607:13;;1569;:52::i;:::-;2144:9;;;;;:21;-1:-1:-1;;;;;2110:56:48;2083:24;2110:56;;;:33;;;:56;;;;;;;;2183:10;;;;1560:61;;-1:-1:-1;2110:56:48;2183:29;-1:-1:-1;2177:140:48;;2266:3;:9;;;2277:3;:10;;;2289:16;2236:70;;-1:-1:-1;;;2236:70:48;;;;;;;;;;:::i;2177:140::-;2481:3;:9;;;:24;;;2463:15;:42;2459:132;;;2544:9;;;;;2555:24;;;;2528:52;;-1:-1:-1;;;2528:52:48;;;;2555:24;2528:52;;;:::i;2459:132::-;2761:5;:18;;;2740:3;:9;;;:17;;;:39;2736:111;;2817:5;:18;;;2802:34;;-1:-1:-1;;;2802:34:48;;;;;;5152:25:112;;5140:2;5125:18;;4981:202;2736:111:48;1160:1693;;1077:1776;;;:::o;4966:249:63:-;5051:4;5067:13;5083:17;5092:7;5083:8;:17::i;:::-;5067:33;;5129:5;-1:-1:-1;;;;;5118:16:63;:7;-1:-1:-1;;;;;5118:16:63;;:53;;;;5138:33;5156:5;5163:7;5138:17;:33::i;:::-;5118:89;;;;5200:7;-1:-1:-1;;;;;5175:32:63;:21;5188:7;5175:12;:21::i;:::-;-1:-1:-1;;;;;5175:32:63;;5118:89;5110:98;4966:249;-1:-1:-1;;;;4966:249:63:o;3328:567::-;3409:25;3437:23;:21;:23::i;:::-;3409:51;;3496:4;-1:-1:-1;;;;;3475:25:63;:17;3484:7;3475:8;:17::i;:::-;-1:-1:-1;;;;;3475:25:63;;3471:97;;3523:34;;-1:-1:-1;;;3523:34:63;;;;;;;;;;;3471:97;-1:-1:-1;;;;;3581:16:63;;3577:86;;3620:32;;-1:-1:-1;;;3620:32:63;;;;;;;;;;;3577:86;3724:29;3741:1;3745:7;3724:8;:29::i;:::-;-1:-1:-1;;;;;3764:16:63;;;;;;:10;;;:16;;;;;:21;;3784:1;;3764:16;:21;;3784:1;;3764:21;:::i;:::-;;;;-1:-1:-1;;;;;;;3795:14:63;;;;;;:10;;;:14;;;;;:19;;3813:1;;3795:14;:19;;3813:1;;3795:19;:::i;:::-;;;;-1:-1:-1;;3824:17:63;;;;:8;;;:17;;;;;:22;;-1:-1:-1;;;;;;3824:22:63;-1:-1:-1;;;;;3824:22:63;;;;;3857:31;2687:377:62;3506:371:46;3571:17;3591;:15;:17::i;:::-;:22;;:30;3614:6;3591:30;;;;;;;;;;;3571:50;;3654:4;:12;;;3636:15;:30;3632:118;;;3718:12;;;;;3689:50;;-1:-1:-1;;;3689:50:46;;;;;19614:25:112;19655:18;;;19648:34;;;19587:18;;3689:50:46;19440:248:112;3632:118:46;3763:12;;;:17;:22;;;:49;;-1:-1:-1;3789:23:46;;;;;;3763:49;3759:112;;;3835:25;;-1:-1:-1;;;3835:25:46;;;;;5152::112;;;5125:18;;3835:25:46;4981:202:112;1804:110:86;1862:3;1905:1;1894:7;-1:-1:-1;;;1894:1:86;:7;:::i;557:118::-;607:3;638:29;665:1;649;638:29;:::i;4159:815:50:-;4248:12;4272:17;4312:4;:9;;;4292:4;:12;;:17;;;:29;;;;:::i;:::-;4348:32;;;;4272:49;;-1:-1:-1;4335:45:50;;4331:579;;4604:18;;;;4592:30;;:9;:30;:::i;:::-;4572:16;;:51;;;;:::i;:::-;4565:58;;4331:579;;;4890:9;;;;4869:16;;4856:30;;:9;:30;:::i;:::-;4855:44;;;;:::i;:::-;4836:16;;:63;;;;:::i;:::-;4829:70;;4331:579;4919:14;;:48;;-1:-1:-1;;;;;4919:14:50;4950:10;4962:4;4919:30;:48::i;:::-;4262:712;4159:815;;;;:::o;473:211:83:-;567:29;;-1:-1:-1;;;567:29:83;;-1:-1:-1;;;;;32051:32:112;;;567:29:83;;;32033:51:112;32100:18;;;32093:34;;;567:17:83;;;;;32006:18:112;;567:29:83;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;562:116;;619:48;;-1:-1:-1;;;619:48:83;;-1:-1:-1;;;;;34025:15:112;;;619:48:83;;;34007:34:112;657:4:83;34057:18:112;;;34050:43;34129:15;;34109:18;;;34102:43;33942:18;;619:48:83;33753:398:112;4671:289:63;4729:7;4748:25;4776:23;:21;:23::i;:::-;4810:13;4826:17;;;:8;;;:17;;;;;;4748:51;;-1:-1:-1;;;;;;4826:17:63;;4853:79;;4899:22;;-1:-1:-1;;;4899:22:63;;;;;;;;;;;5227:373:50;5519:15;;;;5497:12;;;:17;5350:12;;5497:38;;:17;:21;:38::i;:::-;5545:14;;5490:45;;-1:-1:-1;5545:48:50;;-1:-1:-1;;;;;5545:14:50;5576:10;5490:45;5545:30;:48::i;2984:338:63:-;3035:25;3063:23;:21;:23::i;:::-;3035:51;;3097:13;3113:17;3122:7;3113:8;:17::i;:::-;3097:33;;3168:29;3185:1;3189:7;3168:8;:29::i;:::-;-1:-1:-1;;;;;3208:17:63;;;;;;:10;;;:17;;;;;:22;;3229:1;;3208:17;:22;;3229:1;;3208:22;:::i;:::-;;;;-1:-1:-1;;3247:17:63;;;;:8;;;:17;;;;;3240:24;;-1:-1:-1;;;;;;3240:24:63;;;3275:40;;3288:5;;3256:7;3275:40;:::i;2758:635:46:-;2813:17;2833;:15;:17::i;:::-;2856:10;;2833:34;;;;:22;;;;;:34;;;;;2894:10;;2833:34;;-1:-1:-1;2878:27:46;;:15;:27::i;:::-;2915:13;2931:17;2937:3;:10;;;2931:5;:17::i;:::-;3103:23;;;:30;;-1:-1:-1;;3103:30:46;3129:4;3103:30;;;:12;;;3143:25;;;3178:14;;2915:33;;-1:-1:-1;3178:68:46;;-1:-1:-1;;;;;3178:14:46;3213:10;3233:4;2915:33;3178:34;:68::i;:::-;3256:15;;;:22;3311:6;;;;3319:18;;;;3256:82;;-1:-1:-1;;;3256:82:46;;-1:-1:-1;;;;;3256:22:46;;;;:39;;:82;;3304:4;;3256:82;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3358:10:46;;3370:15;;;;;;;36679:32:112;;;36759:17;;36753:24;-1:-1:-1;;;;;36749:50:112;36727:20;;;36720:80;3370:15:46;;;;;;;;;36652:18:112;;;;3370:15:46;;;;3358:10;;-1:-1:-1;3354:32:46;;-1:-1:-1;3354:32:46;;3370:15;3354:32;:::i;:::-;;;;;;;;2803:590;;2758:635;:::o;4126:353:63:-;4221:25;4249:23;:21;:23::i;:::-;4221:51;;4296:8;-1:-1:-1;;;;;4287:17:63;:5;-1:-1:-1;;;;;4287:17:63;;4283:78;;4327:23;;-1:-1:-1;;;4327:23:63;;;;;;;;;;;4283:78;-1:-1:-1;;;;;4370:26:63;;;;;;;:19;;;:26;;;;;;;;:36;;;;;;;;;:47;;-1:-1:-1;;4370:47:63;;;;;;;4427:45;2687:377:62;1910:280:63;2014:28;2024:4;2030:2;2034:7;2014:9;:28::i;:::-;2057:47;2080:4;2086:2;2090:7;2099:4;2057:22;:47::i;:::-;2052:132;;2127:46;;-1:-1:-1;;;2127:46:63;;;;;;;;;;;1424:3701:49;1539:22;;:::i;:::-;1573:14;1590:18;1604:3;1590:13;:18::i;:::-;1573:35;;1618:16;1674:11;:21;;;-1:-1:-1;;;;;1649:46:49;:3;:9;;;:21;;;-1:-1:-1;;;;;1649:46:49;;1645:232;;1821:21;;;;1844:9;;;;;:21;1795:71;;-1:-1:-1;;;1795:71:49;;-1:-1:-1;;;;;37069:15:112;;;1795:71:49;;;37051:34:112;37121:15;;37101:18;;;37094:43;36986:18;;1795:71:49;36811:332:112;1645:232:49;1911:11;:19;;;1890:3;:9;;;:17;;;:40;1886:231;;2067:11;:19;;;2088:3;:9;;;:17;;;2046:60;;-1:-1:-1;;;2046:60:49;;;;;;;;19614:25:112;;;19670:2;19655:18;;19648:34;19602:2;19587:18;;19440:248;1886:231:49;2127:43;2143:3;:9;;;2154:11;:15;;;2127;:43::i;:::-;2314:37;2329:3;:9;;;:21;;;2314:3;:10;;;:14;;:37;;;;:::i;:::-;2383:19;;2299:52;;-1:-1:-1;2383:37:49;;2299:52;2383:23;:37::i;:::-;2361:59;;;-1:-1:-1;;;;2660:247:49;;;2754:10;;;;2816:19;;2782:73;;2808:46;;2816:37;;2840:12;2816:23;:37::i;2808:46::-;2782:9;;;;:21;;;;:25;:73::i;:::-;2873:3;:9;;;2714:182;;-1:-1:-1;;;2714:182:49;;;;;;;;;;:::i;2660:247::-;3050:11;:28;;;3029:3;:9;;;:18;;;:49;3025:129;;;3125:9;;;;;:18;;3094:28;;;:49;3025:129;3191:11;:31;;;3167:3;:9;;;:21;;;:55;3163:141;;;3272:9;;;;:21;;;3238:31;;;:55;3163:141;3341:11;:31;;;3317:3;:9;;;:21;;;:55;3313:141;;;3422:9;;;;:21;;;3388:31;;;:55;3313:141;4522:31;;;;:35;;4556:1;4522:35;:::i;:::-;4488:11;:31;;;:69;4484:245;;;4624:31;;;;4673;;;;4580:138;;-1:-1:-1;;;4580:138:49;;;;;19614:25:112;;;;19655:18;;;19648:34;19587:18;;4580:138:49;19440:248:112;4484:245:49;4814:79;4856:6;4864:11;:16;;;4882:3;:10;;;4814:11;:21;;;-1:-1:-1;;;;;4814:41:49;;;:79;;;;;;:::i;:::-;4990:98;4999:6;5007:80;;;;;;;;5026:3;:10;;;5007:80;;;;5045:12;5007:80;;;;5067:11;:18;;;5007:80;;;4990:8;:98::i;:::-;-1:-1:-1;5106:11:49;;1424:3701;-1:-1:-1;;;;1424:3701:49:o;5455:170:63:-;5538:4;5561:23;:21;:23::i;:::-;-1:-1:-1;;;;;5561:47:63;;;;;;;:40;;;;;:47;;;;;;;;:57;;;;;;;;;;-1:-1:-1;5561:57:63;;;;;5455:170::o;3076:301:48:-;3272:16;;;;:32;;3292:11;3272:19;:32::i;:::-;3267:104;;3341:5;3348:11;3327:33;;-1:-1:-1;;;3327:33:48;;;;;;;;;:::i;4485:180:63:-;4542:4;4558:25;4586:23;:21;:23::i;:::-;4656:1;4627:17;;;:8;;:17;;-1:-1:-1;;4627:17:63;;;;-1:-1:-1;;;;;4627:17:63;:31;;;4485:180::o;7022:763:49:-;7171:22;;:::i;:::-;7224:554;;;;;;;;7276:1;7224:554;;;;7307:13;:19;;;:31;;;-1:-1:-1;;;;;7224:554:49;;;;;7365:13;:19;;;:27;;;7224:554;;;;7428:13;:19;;;:28;;;7224:554;;;;7495:13;:19;;;:31;;;7224:554;;;;7565:13;:19;;;:31;;;7224:554;;;;7620:4;-1:-1:-1;;;;;7224:554:49;;;;;7647:3;7224:554;;;;7678:17;:15;:17::i;:::-;7676:29;;7678:27;;7676:29;;;:::i;:::-;;;;;-1:-1:-1;7224:554:49;;7205:573;7022:763;-1:-1:-1;;;;7022:763:49:o;8319:2665::-;8556:11;;:::i;:::-;8579:22;8604:17;:15;:17::i;:::-;8579:42;;8769:15;8805:11;:28;;;8787:15;:46;;;;:::i;:::-;8769:64;;8843:22;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8843:22:49;9589:21;;;;;-1:-1:-1;;;;;9570:41:49;;;;;:18;;;:41;;;;;;;9557:54;;:10;:54;:::i;:::-;9527:27;;;;:84;;;;9641:1336;;;;;;;;9675:21;;;;-1:-1:-1;;;;;9641:1336:49;;;;;;;;;;;;9753:19;;9641:1336;;;;9801:15;9641:1336;;;;;;;;;;;10195:83;;;;;;;10214:13;;;:22;10195:83;;10251:25;;;;10195:83;;;;9641:1336;;;;10524:19;;;;-1:-1:-1;10510:34:49;;;:13;;;;:34;;;;;;;9641:1336;;;;;;;;;;;;;;;;;;;-1:-1:-1;9641:1336:49;;;;;;;;;;;;;;;;;;;8319:2665::o;1421:145:60:-;1489:7;762:47;1554:3;1525:33;;;;;;;;;:::i;3152:308:14:-;3205:7;3236:4;-1:-1:-1;;;;;3245:12:14;3228:29;;:66;;;;;3278:16;3261:13;:33;3228:66;3224:230;;;-1:-1:-1;3317:24:14;;3152:308::o;3224:230::-;-1:-1:-1;3642:73:14;;;3401:10;3642:73;;;;39657:25:112;;;;3413:12:14;39698:18:112;;;39691:34;3427:15:14;39741:18:112;;;39734:34;3686:13:14;39784:18:112;;;39777:34;3709:4:14;39827:19:112;;;;39820:61;;;;3642:73:14;;;;;;;;;;39629:19:112;;;;3642:73:14;;;3632:84;;;;;;3152:308::o;3661:227:13:-;3739:7;3759:17;3778:18;3800:27;3811:4;3817:9;3800:10;:27::i;:::-;3758:69;;;;3837:18;3849:5;3837:11;:18::i;:::-;-1:-1:-1;3872:9:13;3661:227;-1:-1:-1;;;3661:227:13:o;1035:869:63:-;1185:4;-1:-1:-1;;;;;1205:13:63;;1465:19:10;:23;1201:697:63;;1240:69;;-1:-1:-1;;;1240:69:63;;-1:-1:-1;;;;;1240:36:63;;;;;:69;;1277:10;;1289:4;;1295:7;;1304:4;;1240:69;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1240:69:63;;;;;;;;-1:-1:-1;;1240:69:63;;;;;;;;;;;;:::i;:::-;;;1236:610;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1506:6;:13;1523:1;1506:18;1502:330;;1555:46;;-1:-1:-1;;;1555:46:63;;;;;;;;;;;1502:330;1784:6;1778:13;1769:6;1765:2;1761:15;1754:38;1236:610;-1:-1:-1;;;;;;1389:51:63;-1:-1:-1;;;1389:51:63;;-1:-1:-1;1382:58:63;;1201:697;-1:-1:-1;1883:4:63;1035:869;;;;;;:::o;380:118:86:-;430:3;461:29;488:1;472;461:29;:::i;678:273:64:-;754:15;781:25;809:23;:21;:23::i;:::-;781:51;;855:2;:14;;;853:16;;;;;:::i;:::-;;;;;-1:-1:-1;879:21:64;;;;:12;;;:21;;;;;;;;;:33;;;;;;;;;;;;;;;;;;;;;853:16;-1:-1:-1;922:22:64;932:2;853:16;922:9;:22::i;245:139:85:-;316:4;348:1;:4;;;340:1;:4;;;:12;:36;;;;-1:-1:-1;;368:8:85;356;;-1:-1:-1;;;;;356:20:85;;;;;;;245:139::o;2145:730:13:-;2226:7;2235:12;2263:9;:16;2283:2;2263:22;2259:610;;2599:4;2584:20;;2578:27;2648:4;2633:20;;2627:27;2705:4;2690:20;;2684:27;2301:9;2676:36;2746:25;2757:4;2676:36;2578:27;2627;2746:10;:25::i;:::-;2739:32;;;;;;;;;2259:610;-1:-1:-1;2818:1:13;;-1:-1:-1;2822:35:13;2259:610;2145:730;;;;;:::o;570:511::-;647:20;638:5;:29;;;;;;;;:::i;:::-;;634:441;;570:511;:::o;634:441::-;743:29;734:5;:38;;;;;;;;:::i;:::-;;730:345;;788:34;;-1:-1:-1;;;788:34:13;;40226:2:112;788:34:13;;;40208:21:112;40265:2;40245:18;;;40238:30;40304:26;40284:18;;;40277:54;40348:18;;788:34:13;40024:348:112;730:345:13;852:35;843:5;:44;;;;;;;;:::i;:::-;;839:236;;903:41;;-1:-1:-1;;;903:41:13;;40579:2:112;903:41:13;;;40561:21:112;40618:2;40598:18;;;40591:30;40657:33;40637:18;;;40630:61;40708:18;;903:41:13;40377:355:112;839:236:13;974:30;965:5;:39;;;;;;;;:::i;:::-;;961:114;;1020:44;;-1:-1:-1;;;1020:44:13;;40939:2:112;1020:44:13;;;40921:21:112;40978:2;40958:18;;;40951:30;41017:34;40997:18;;;40990:62;-1:-1:-1;;;41068:18:112;;;41061:32;41110:19;;1020:44:13;40737:398:112;2196:100:63;2263:26;2273:2;2277:7;2263:26;;;;;;;;;;;;:9;:26::i;5069:1494:13:-;5195:7;;6119:66;6106:79;;6102:161;;;-1:-1:-1;6217:1:13;;-1:-1:-1;6221:30:13;6201:51;;6102:161;6374:24;;;6357:14;6374:24;;;;;;;;;41367:25:112;;;41440:4;41428:17;;41408:18;;;41401:45;;;;41462:18;;;41455:34;;;41505:18;;;41498:34;;;6374:24:13;;41339:19:112;;6374:24:13;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6374:24:13;;-1:-1:-1;;6374:24:13;;;-1:-1:-1;;;;;;;6412:20:13;;6408:101;;6464:1;6468:29;6448:50;;;;;;;6408:101;6527:6;-1:-1:-1;6535:20:13;;-1:-1:-1;5069:1494:13;;;;;;;;:::o;2302:258:63:-;2388:18;2394:2;2398:7;2388:5;:18::i;:::-;2421:53;2452:1;2456:2;2460:7;2469:4;2421:22;:53::i;:::-;2416:138;;2497:46;;-1:-1:-1;;;2497:46:63;;;;;;;;;;;2566:412;2629:25;2657:23;:21;:23::i;:::-;2629:51;-1:-1:-1;;;;;;2695:16:63;;2691:82;;2734:28;;-1:-1:-1;;;2734:28:63;;;;;;;;;;;2691:82;2786:16;2794:7;2786;:16::i;:::-;2782:80;;;2825:26;;-1:-1:-1;;;2825:26:63;;;;;;;;;;;2782:80;-1:-1:-1;;;;;2872:14:63;;;;;;:10;;;:14;;;;;:19;;2890:1;;2872:14;:19;;2890:1;;2872:19;:::i;:::-;;;;-1:-1:-1;;2901:17:63;;;;:8;;;:17;;;;;:22;;-1:-1:-1;;;;;;2901:22:63;-1:-1:-1;;;;;2901:22:63;;;;;2934:37;;2901:22;:17;2934:37;:::i;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;14:131:112:-;-1:-1:-1;;;;;;88:32:112;;78:43;;68:71;;135:1;132;125:12;150:245;208:6;261:2;249:9;240:7;236:23;232:32;229:52;;;277:1;274;267:12;229:52;316:9;303:23;335:30;359:5;335:30;:::i;592:250::-;677:1;687:113;701:6;698:1;695:13;687:113;;;777:11;;;771:18;758:11;;;751:39;723:2;716:10;687:113;;;-1:-1:-1;;834:1:112;816:16;;809:27;592:250::o;847:271::-;889:3;927:5;921:12;954:6;949:3;942:19;970:76;1039:6;1032:4;1027:3;1023:14;1016:4;1009:5;1005:16;970:76;:::i;:::-;1100:2;1079:15;-1:-1:-1;;1075:29:112;1066:39;;;;1107:4;1062:50;;847:271;-1:-1:-1;;847:271:112:o;1123:220::-;1272:2;1261:9;1254:21;1235:4;1292:45;1333:2;1322:9;1318:18;1310:6;1292:45;:::i;1348:180::-;1407:6;1460:2;1448:9;1439:7;1435:23;1431:32;1428:52;;;1476:1;1473;1466:12;1428:52;-1:-1:-1;1499:23:112;;1348:180;-1:-1:-1;1348:180:112:o;1850:131::-;-1:-1:-1;;;;;1925:31:112;;1915:42;;1905:70;;1971:1;1968;1961:12;1986:134;2054:20;;2083:31;2054:20;2083:31;:::i;2125:315::-;2193:6;2201;2254:2;2242:9;2233:7;2229:23;2225:32;2222:52;;;2270:1;2267;2260:12;2222:52;2309:9;2296:23;2328:31;2353:5;2328:31;:::i;:::-;2378:5;2430:2;2415:18;;;;2402:32;;-1:-1:-1;;;2125:315:112:o;2445:127::-;2506:10;2501:3;2497:20;2494:1;2487:31;2537:4;2534:1;2527:15;2561:4;2558:1;2551:15;2577:257;2649:4;2643:11;;;2681:17;;-1:-1:-1;;;;;2713:34:112;;2749:22;;;2710:62;2707:88;;;2775:18;;:::i;:::-;2811:4;2804:24;2577:257;:::o;2839:253::-;2911:2;2905:9;2953:4;2941:17;;-1:-1:-1;;;;;2973:34:112;;3009:22;;;2970:62;2967:88;;;3035:18;;:::i;3097:255::-;3169:2;3163:9;3211:6;3199:19;;-1:-1:-1;;;;;3233:34:112;;3269:22;;;3230:62;3227:88;;;3295:18;;:::i;3357:255::-;3429:2;3423:9;3471:6;3459:19;;-1:-1:-1;;;;;3493:34:112;;3529:22;;;3490:62;3487:88;;;3555:18;;:::i;3617:275::-;3688:2;3682:9;3753:2;3734:13;;-1:-1:-1;;3730:27:112;3718:40;;-1:-1:-1;;;;;3773:34:112;;3809:22;;;3770:62;3767:88;;;3835:18;;:::i;:::-;3871:2;3864:22;3617:275;;-1:-1:-1;3617:275:112:o;3897:183::-;3957:4;-1:-1:-1;;;;;3982:6:112;3979:30;3976:56;;;4012:18;;:::i;:::-;-1:-1:-1;4057:1:112;4053:14;4069:4;4049:25;;3897:183::o;4085:891::-;4169:6;4200:2;4243;4231:9;4222:7;4218:23;4214:32;4211:52;;;4259:1;4256;4249:12;4211:52;4299:9;4286:23;-1:-1:-1;;;;;4324:6:112;4321:30;4318:50;;;4364:1;4361;4354:12;4318:50;4387:22;;4440:4;4432:13;;4428:27;-1:-1:-1;4418:55:112;;4469:1;4466;4459:12;4418:55;4505:2;4492:16;4528:60;4544:43;4584:2;4544:43;:::i;:::-;4528:60;:::i;:::-;4622:15;;;4704:1;4700:10;;;;4692:19;;4688:28;;;4653:12;;;;4728:19;;;4725:39;;;4760:1;4757;4750:12;4725:39;4784:11;;;;4804:142;4820:6;4815:3;4812:15;4804:142;;;4886:17;;4874:30;;4837:12;;;;4924;;;;4804:142;;5188:936;5285:6;5293;5301;5309;5317;5370:3;5358:9;5349:7;5345:23;5341:33;5338:53;;;5387:1;5384;5377:12;5338:53;5426:9;5413:23;5445:31;5470:5;5445:31;:::i;:::-;5495:5;-1:-1:-1;5552:2:112;5537:18;;5524:32;5565:33;5524:32;5565:33;:::i;:::-;5617:7;-1:-1:-1;5671:2:112;5656:18;;5643:32;;-1:-1:-1;5726:2:112;5711:18;;5698:32;-1:-1:-1;;;;;5779:14:112;;;5776:34;;;5806:1;5803;5796:12;5776:34;5844:6;5833:9;5829:22;5819:32;;5889:7;5882:4;5878:2;5874:13;5870:27;5860:55;;5911:1;5908;5901:12;5860:55;5951:2;5938:16;5977:2;5969:6;5966:14;5963:34;;;5993:1;5990;5983:12;5963:34;6038:7;6033:2;6024:6;6020:2;6016:15;6012:24;6009:37;6006:57;;;6059:1;6056;6049:12;6006:57;5188:936;;;;-1:-1:-1;5188:936:112;;-1:-1:-1;6090:2:112;6082:11;;6112:6;5188:936;-1:-1:-1;;;5188:936:112:o;6852:658::-;7023:2;7075:21;;;7145:13;;7048:18;;;7167:22;;;6994:4;;7023:2;7246:15;;;;7220:2;7205:18;;;6994:4;7289:195;7303:6;7300:1;7297:13;7289:195;;;7368:13;;-1:-1:-1;;;;;7364:39:112;7352:52;;7459:15;;;;7424:12;;;;7400:1;7318:9;7289:195;;;-1:-1:-1;7501:3:112;;6852:658;-1:-1:-1;;;;;;6852:658:112:o;7515:355::-;7569:5;7617:4;7605:9;7600:3;7596:19;7592:30;7589:50;;;7635:1;7632;7625:12;7589:50;7657:22;;:::i;:::-;7648:31;;7716:9;7703:23;7735:33;7760:7;7735:33;:::i;:::-;7791:7;7784:5;7777:22;;7859:2;7848:9;7844:18;7831:32;7826:2;7819:5;7815:14;7808:56;7515:355;;;;:::o;7875:829::-;7927:5;7975:4;7963:9;7958:3;7954:19;7950:30;7947:50;;;7993:1;7990;7983:12;7947:50;8026:2;8020:9;8068:4;8060:6;8056:17;8139:6;8127:10;8124:22;-1:-1:-1;;;;;8091:10:112;8088:34;8085:62;8082:88;;;8150:18;;:::i;:::-;8186:2;8179:22;8219:6;-1:-1:-1;8219:6:112;8249:23;;8281:33;8249:23;8281:33;:::i;:::-;8338:7;8330:6;8323:23;;8407:2;8396:9;8392:18;8379:32;8374:2;8366:6;8362:15;8355:57;8473:2;8462:9;8458:18;8445:32;8440:2;8432:6;8428:15;8421:57;8539:2;8528:9;8524:18;8511:32;8506:2;8498:6;8494:15;8487:57;8606:3;8595:9;8591:19;8578:33;8572:3;8564:6;8560:16;8553:59;8646:51;8693:3;8687;8676:9;8672:19;8646:51;:::i;:::-;8640:3;8632:6;8628:16;8621:77;;7875:829;;;;:::o;8709:225::-;8792:6;8845:3;8833:9;8824:7;8820:23;8816:33;8813:53;;;8862:1;8859;8852:12;8813:53;8885:43;8920:7;8909:9;8885:43;:::i;9121:530::-;9163:5;9216:3;9209:4;9201:6;9197:17;9193:27;9183:55;;9234:1;9231;9224:12;9183:55;9270:6;9257:20;-1:-1:-1;;;;;9292:2:112;9289:26;9286:52;;;9318:18;;:::i;:::-;9362:55;9405:2;9386:13;;-1:-1:-1;;9382:27:112;9411:4;9378:38;9362:55;:::i;:::-;9442:2;9433:7;9426:19;9488:3;9481:4;9476:2;9468:6;9464:15;9460:26;9457:35;9454:55;;;9505:1;9502;9495:12;9454:55;9570:2;9563:4;9555:6;9551:17;9544:4;9535:7;9531:18;9518:55;9618:1;9593:16;;;9611:4;9589:27;9582:38;;;;9597:7;9121:530;-1:-1:-1;;;9121:530:112:o;9656:493::-;9711:5;9759:6;9747:9;9742:3;9738:19;9734:32;9731:52;;;9779:1;9776;9769:12;9731:52;9801:22;;:::i;:::-;9792:31;;9859:9;9846:23;-1:-1:-1;;;;;9884:6:112;9881:30;9878:50;;;9924:1;9921;9914:12;9878:50;9951:45;9992:3;9983:6;9972:9;9968:22;9951:45;:::i;:::-;9944:5;9937:60;;10057:2;10046:9;10042:18;10029:32;10024:2;10017:5;10013:14;10006:56;10094:48;10138:3;10133:2;10122:9;10118:18;10094:48;:::i;:::-;10089:2;10082:5;10078:14;10071:72;9656:493;;;;:::o;10154:348::-;10240:6;10293:2;10281:9;10272:7;10268:23;10264:32;10261:52;;;10309:1;10306;10299:12;10261:52;10349:9;10336:23;-1:-1:-1;;;;;10374:6:112;10371:30;10368:50;;;10414:1;10411;10404:12;10368:50;10437:59;10488:7;10479:6;10468:9;10464:22;10437:59;:::i;10507:456::-;10584:6;10592;10600;10653:2;10641:9;10632:7;10628:23;10624:32;10621:52;;;10669:1;10666;10659:12;10621:52;10708:9;10695:23;10727:31;10752:5;10727:31;:::i;:::-;10777:5;-1:-1:-1;10834:2:112;10819:18;;10806:32;10847:33;10806:32;10847:33;:::i;:::-;10507:456;;10899:7;;-1:-1:-1;;;10953:2:112;10938:18;;;;10925:32;;10507:456::o;10968:282::-;11022:5;11070:4;11058:9;11053:3;11049:19;11045:30;11042:50;;;11088:1;11085;11078:12;11042:50;11110:22;;:::i;:::-;11101:31;;11168:9;11155:23;11148:5;11141:38;11239:2;11228:9;11224:18;11211:32;11206:2;11199:5;11195:14;11188:56;10968:282;;;;:::o;11255:118::-;11341:5;11334:13;11327:21;11320:5;11317:32;11307:60;;11363:1;11360;11353:12;11378:744;11432:5;11480:4;11468:9;11463:3;11459:19;11455:30;11452:50;;;11498:1;11495;11488:12;11452:50;11531:2;11525:9;11573:4;11565:6;11561:17;11644:6;11632:10;11629:22;-1:-1:-1;;;;;11596:10:112;11593:34;11590:62;11587:88;;;11655:18;;:::i;:::-;11695:10;11691:2;11684:22;;11724:6;11715:15;;11767:9;11754:23;11746:6;11739:39;11839:2;11828:9;11824:18;11811:32;11806:2;11798:6;11794:15;11787:57;11896:2;11885:9;11881:18;11868:32;11909:30;11931:7;11909:30;:::i;:::-;11967:2;11955:15;;11948:32;12032:2;12017:18;;12004:32;12045:30;12004:32;12045:30;:::i;:::-;12103:2;12091:15;;;;12084:32;11378:744;;-1:-1:-1;;11378:744:112:o;12127:349::-;12183:5;12231:4;12219:9;12214:3;12210:19;12206:30;12203:50;;;12249:1;12246;12239:12;12203:50;12271:22;;:::i;:::-;12262:31;;12329:9;12316:23;12309:5;12302:38;12400:2;12389:9;12385:18;12372:32;12367:2;12360:5;12356:14;12349:56;12465:2;12454:9;12450:18;12437:32;12432:2;12425:5;12421:14;12414:56;12127:349;;;;:::o;12481:1356::-;12600:6;12608;12652:9;12643:7;12639:23;12682:3;12678:2;12674:12;12671:32;;;12699:1;12696;12689:12;12671:32;12722:6;12748:2;12744;12740:11;12737:31;;;12764:1;12761;12754:12;12737:31;12790:22;;:::i;:::-;12777:35;;12835:29;12854:9;12835:29;:::i;:::-;12828:5;12821:44;12925:2;12914:9;12910:18;12897:32;12892:2;12885:5;12881:14;12874:56;12990:2;12979:9;12975:18;12962:32;12957:2;12950:5;12946:14;12939:56;13055:2;13044:9;13040:18;13027:32;13022:2;13015:5;13011:14;13004:56;13121:3;13110:9;13106:19;13093:33;13087:3;13080:5;13076:15;13069:58;13160:55;13207:7;13201:3;13190:9;13186:19;13160:55;:::i;:::-;13154:3;13147:5;13143:15;13136:80;13278:3;13267:9;13263:19;13250:33;13243:4;13236:5;13232:16;13225:59;13303:3;13339:38;13373:2;13362:9;13358:18;13339:38;:::i;:::-;13333:3;13326:5;13322:15;13315:63;13397:3;13432:54;13478:7;13473:2;13462:9;13458:18;13432:54;:::i;:::-;13427:2;13420:5;13416:14;13409:78;13506:3;13496:13;;13541:54;13587:7;13582:2;13571:9;13567:18;13541:54;:::i;:::-;13536:2;13529:5;13525:14;13518:78;;13660:3;13649:9;13645:19;13632:33;13623:6;13616:5;13612:18;13605:61;13726:3;13715:9;13711:19;13698:33;13693:2;13686:5;13682:14;13675:57;;13751:5;13741:15;;13775:56;13823:7;13818:2;13807:9;13803:18;13775:56;:::i;:::-;13765:66;;;;12481:1356;;;;;:::o;13842:367::-;13905:8;13915:6;13969:3;13962:4;13954:6;13950:17;13946:27;13936:55;;13987:1;13984;13977:12;13936:55;-1:-1:-1;14010:20:112;;-1:-1:-1;;;;;14042:30:112;;14039:50;;;14085:1;14082;14075:12;14039:50;14122:4;14114:6;14110:17;14098:29;;14182:3;14175:4;14165:6;14162:1;14158:14;14150:6;14146:27;14142:38;14139:47;14136:67;;;14199:1;14196;14189:12;14214:437;14300:6;14308;14361:2;14349:9;14340:7;14336:23;14332:32;14329:52;;;14377:1;14374;14367:12;14329:52;14417:9;14404:23;-1:-1:-1;;;;;14442:6:112;14439:30;14436:50;;;14482:1;14479;14472:12;14436:50;14521:70;14583:7;14574:6;14563:9;14559:22;14521:70;:::i;:::-;14610:8;;14495:96;;-1:-1:-1;14214:437:112;-1:-1:-1;;;;14214:437:112:o;15285:1250::-;15497:13;;-1:-1:-1;;;;;1599:31:112;1587:44;;15465:3;15450:19;;15578:4;15570:6;15566:17;15560:24;15553:4;15542:9;15538:20;15531:54;15641:4;15633:6;15629:17;15623:24;15616:4;15605:9;15601:20;15594:54;15704:4;15696:6;15692:17;15686:24;15679:4;15668:9;15664:20;15657:54;15767:4;15759:6;15755:17;15749:24;15742:4;15731:9;15727:20;15720:54;15821:4;15813:6;15809:17;15803:24;15836:61;15891:4;15880:9;15876:20;15862:12;14729;;14717:25;;14791:4;14780:16;;;14774:23;14758:14;;14751:47;14656:148;15836:61;;15953:4;15945:6;15941:17;15935:24;15928:4;15917:9;15913:20;15906:54;16009:4;16001:6;15997:17;15991:24;16034:6;16049:54;16099:2;16088:9;16084:18;16068:14;-1:-1:-1;;;;;1599:31:112;1587:44;;1533:104;16049:54;16140:15;;16134:22;;-1:-1:-1;16175:6:112;16190:61;16232:18;;;16134:22;14886:12;;-1:-1:-1;;;;;14882:38:112;14870:51;;14970:4;14959:16;;;14953:23;14937:14;;14930:47;14809:174;16190:61;16288:15;;16282:22;;-1:-1:-1;16323:6:112;16338:61;16380:18;;;16282:22;15067:5;15061:12;15056:3;15049:25;15123:4;15116:5;15112:16;15106:23;15099:4;15094:3;15090:14;15083:47;15193:4;15186:5;15182:16;15176:23;15169:31;15162:39;15155:4;15150:3;15146:14;15139:63;15265:4;15258:5;15254:16;15248:23;15241:31;15234:39;15227:4;15222:3;15218:14;15211:63;;;14988:292;16338:61;16457:6;16449;16445:19;16439:26;16430:6;16419:9;16415:22;16408:58;16524:2;16516:6;16512:15;16506:22;16497:6;16486:9;16482:22;16475:54;;;15285:1250;;;;:::o;16540:1569::-;16744:4;16773:2;16813;16802:9;16798:18;16843:2;16832:9;16825:21;16866:6;16901;16895:13;16932:6;16924;16917:22;16958:2;16948:12;;16991:2;16980:9;16976:18;16969:25;;17053:2;17043:6;17040:1;17036:14;17025:9;17021:30;17017:39;17091:2;17083:6;17079:15;17112:1;17133;17143:937;17159:6;17154:3;17151:15;17143:937;;;17228:22;;;-1:-1:-1;;17224:36:112;17212:49;;17284:13;;17371:9;;-1:-1:-1;;;;;17367:35:112;17352:51;;17442:11;;17436:18;17474:15;;;17467:27;;;17555:19;;17324:15;;;17587:24;;;17677:21;;;;17722:1;;17645:2;17633:15;;;17736:236;17752:8;17747:3;17744:17;17736:236;;;17833:15;;-1:-1:-1;;;;;;17829:42:112;17815:57;;17941:17;;;;17780:1;17771:11;;;;;17898:14;;;;17736:236;;;-1:-1:-1;18058:12:112;;;;17995:5;-1:-1:-1;;;18023:15:112;;;;17185:1;17176:11;17143:937;;;-1:-1:-1;18097:6:112;;16540:1569;-1:-1:-1;;;;;;;;;16540:1569:112:o;18114:247::-;18173:6;18226:2;18214:9;18205:7;18201:23;18197:32;18194:52;;;18242:1;18239;18232:12;18194:52;18281:9;18268:23;18300:31;18325:5;18300:31;:::i;18366:803::-;18528:4;18557:2;18597;18586:9;18582:18;18627:2;18616:9;18609:21;18650:6;18685;18679:13;18716:6;18708;18701:22;18754:2;18743:9;18739:18;18732:25;;18816:2;18806:6;18803:1;18799:14;18788:9;18784:30;18780:39;18766:53;;18854:2;18846:6;18842:15;18875:1;18885:255;18899:6;18896:1;18893:13;18885:255;;;18992:2;18988:7;18976:9;18968:6;18964:22;18960:36;18955:3;18948:49;19020:40;19053:6;19044;19038:13;19020:40;:::i;:::-;19010:50;-1:-1:-1;19118:12:112;;;;19083:15;;;;18921:1;18914:9;18885:255;;;-1:-1:-1;19157:6:112;;18366:803;-1:-1:-1;;;;;;;18366:803:112:o;19903:1274::-;20012:6;20043:2;20086;20074:9;20065:7;20061:23;20057:32;20054:52;;;20102:1;20099;20092:12;20054:52;20142:9;20129:23;-1:-1:-1;;;;;20167:6:112;20164:30;20161:50;;;20207:1;20204;20197:12;20161:50;20230:22;;20283:4;20275:13;;20271:27;-1:-1:-1;20261:55:112;;20312:1;20309;20302:12;20261:55;20348:2;20335:16;20371:60;20387:43;20427:2;20387:43;:::i;20371:60::-;20465:15;;;20547:1;20543:10;;;;20535:19;;20531:28;;;20496:12;;;;20571:19;;;20568:39;;;20603:1;20600;20593:12;20568:39;20627:11;;;;20647:500;20663:6;20658:3;20655:15;20647:500;;;20745:4;20739:3;20730:7;20726:17;20722:28;20719:118;;;20791:1;20820:2;20816;20809:14;20719:118;20863:22;;:::i;:::-;20925:3;20912:17;20905:5;20898:32;20980:2;20975:3;20971:12;20958:26;20997:33;21022:7;20997:33;:::i;:::-;21050:14;;;21043:31;21087:18;;20689:4;20680:14;;;;;21125:12;;;;20647:500;;21182:382;21247:6;21255;21308:2;21296:9;21287:7;21283:23;21279:32;21276:52;;;21324:1;21321;21314:12;21276:52;21363:9;21350:23;21382:31;21407:5;21382:31;:::i;:::-;21432:5;-1:-1:-1;21489:2:112;21474:18;;21461:32;21502:30;21461:32;21502:30;:::i;:::-;21551:7;21541:17;;;21182:382;;;;;:::o;21990:792::-;22077:5;22106:64;22122:47;22162:6;22122:47;:::i;22106:64::-;22204:21;;;22097:73;-1:-1:-1;22244:4:112;22264:14;;;;22317:1;22313:14;;;22301:27;;22340:15;;;22337:35;;;22368:1;22365;22358:12;22337:35;22392:6;22407:369;22423:6;22418:3;22415:15;22407:369;;;22509:3;22496:17;-1:-1:-1;;;;;22532:11:112;22529:35;22526:125;;;22605:1;22634:2;22630;22623:14;22526:125;22676:57;22729:3;22715:11;22707:6;22703:24;22676:57;:::i;:::-;22664:70;;-1:-1:-1;22754:12:112;;;;22440;;22407:369;;;22411:3;;;;21990:792;;;;;:::o;22787:260::-;22849:5;22902:3;22895:4;22887:6;22883:17;22879:27;22869:55;;22920:1;22917;22910:12;22869:55;22942:99;23037:3;23028:6;23015:20;23008:4;23000:6;22996:17;22942:99;:::i;23052:635::-;23207:6;23215;23223;23276:3;23264:9;23255:7;23251:23;23247:33;23244:53;;;23293:1;23290;23283:12;23244:53;23333:9;23320:23;-1:-1:-1;;;;;23358:6:112;23355:30;23352:50;;;23398:1;23395;23388:12;23352:50;23421:69;23482:7;23473:6;23462:9;23458:22;23421:69;:::i;:::-;23411:79;;;23540:2;23529:9;23525:18;23512:32;23553:31;23578:5;23553:31;:::i;:::-;23603:5;-1:-1:-1;23627:54:112;23673:7;23668:2;23653:18;;23627:54;:::i;:::-;23617:64;;23052:635;;;;;:::o;24164:665::-;24259:6;24267;24275;24283;24336:3;24324:9;24315:7;24311:23;24307:33;24304:53;;;24353:1;24350;24343:12;24304:53;24392:9;24379:23;24411:31;24436:5;24411:31;:::i;:::-;24461:5;-1:-1:-1;24518:2:112;24503:18;;24490:32;24531:33;24490:32;24531:33;:::i;:::-;24583:7;-1:-1:-1;24637:2:112;24622:18;;24609:32;;-1:-1:-1;24692:2:112;24677:18;;24664:32;-1:-1:-1;;;;;24708:30:112;;24705:50;;;24751:1;24748;24741:12;24705:50;24774:49;24815:7;24806:6;24795:9;24791:22;24774:49;:::i;:::-;24764:59;;;24164:665;;;;;;;:::o;24834:1208::-;24963:6;24971;25015:9;25006:7;25002:23;25045:3;25041:2;25037:12;25034:32;;;25062:1;25059;25052:12;25034:32;25102:9;25089:23;-1:-1:-1;;;;;25127:6:112;25124:30;25121:50;;;25167:1;25164;25157:12;25121:50;25190:59;25241:7;25232:6;25221:9;25217:22;25190:59;:::i;:::-;25180:69;;;25268:6;25308:2;25302;25298:7;25294:2;25290:16;25286:25;25283:45;;;25324:1;25321;25314:12;25283:45;25350:22;;:::i;:::-;25337:35;;25423:2;25412:9;25408:18;25395:32;25388:5;25381:47;25460:38;25494:2;25483:9;25479:18;25460:38;:::i;:::-;25455:2;25448:5;25444:14;25437:62;25559:2;25548:9;25544:18;25531:32;25526:2;25519:5;25515:14;25508:56;25624:3;25613:9;25609:19;25596:33;25591:2;25584:5;25580:14;25573:57;25691:3;25680:9;25676:19;25663:33;25657:3;25650:5;25646:15;25639:58;25758:3;25747:9;25743:19;25730:33;25724:3;25717:5;25713:15;25706:58;25797:39;25831:3;25820:9;25816:19;25797:39;:::i;:::-;25791:3;25784:5;25780:15;25773:64;25856:3;25892:54;25938:7;25933:2;25922:9;25918:18;25892:54;:::i;:::-;25886:3;25875:15;;25868:79;25992:18;;25979:32;25963:14;;;25956:56;;;;-1:-1:-1;24834:1208:112;25879:5;;-1:-1:-1;24834:1208:112:o;26047:904::-;26207:4;26249:3;26238:9;26234:19;26226:27;;26286:6;26280:13;26269:9;26262:32;26379:1;26375;26370:3;26366:11;26362:19;26354:4;26346:6;26342:17;26336:24;26332:50;26325:4;26314:9;26310:20;26303:80;26439:4;26431:6;26427:17;26421:24;26414:4;26403:9;26399:20;26392:54;26502:4;26494:6;26490:17;26484:24;26477:4;26466:9;26462:20;26455:54;26565:4;26557:6;26553:17;26547:24;26540:4;26529:9;26525:20;26518:54;26628:4;26620:6;26616:17;26610:24;26603:4;26592:9;26588:20;26581:54;26682:4;26674:6;26670:17;26664:24;26697:54;26745:4;26734:9;26730:20;26716:12;-1:-1:-1;;;;;1599:31:112;1587:44;;1533:104;26697:54;;26800:4;26792:6;26788:17;26782:24;26815:63;26872:4;26861:9;26857:20;26841:14;14886:12;;-1:-1:-1;;;;;14882:38:112;14870:51;;14970:4;14959:16;;;14953:23;14937:14;;14930:47;14809:174;26815:63;;26936:6;26928;26924:19;26918:26;26909:6;26898:9;26894:22;26887:58;26047:904;;;;:::o;26956:388::-;27024:6;27032;27085:2;27073:9;27064:7;27060:23;27056:32;27053:52;;;27101:1;27098;27091:12;27053:52;27140:9;27127:23;27159:31;27184:5;27159:31;:::i;:::-;27209:5;-1:-1:-1;27266:2:112;27251:18;;27238:32;27279:33;27238:32;27279:33;:::i;27720:342::-;27838:6;27846;27899:3;27887:9;27878:7;27874:23;27870:33;27867:53;;;27916:1;27913;27906:12;27867:53;27939:43;27974:7;27963:9;27939:43;:::i;:::-;27929:53;;28001:55;28048:7;28042:3;28031:9;28027:19;28001:55;:::i;:::-;27991:65;;27720:342;;;;;:::o;28067:380::-;28146:1;28142:12;;;;28189;;;28210:61;;28264:4;28256:6;28252:17;28242:27;;28210:61;28317:2;28309:6;28306:14;28286:18;28283:38;28280:161;;28363:10;28358:3;28354:20;28351:1;28344:31;28398:4;28395:1;28388:15;28426:4;28423:1;28416:15;28280:161;;28067:380;;;:::o;28452:127::-;28513:10;28508:3;28504:20;28501:1;28494:31;28544:4;28541:1;28534:15;28568:4;28565:1;28558:15;28584:127;28645:10;28640:3;28636:20;28633:1;28626:31;28676:4;28673:1;28666:15;28700:4;28697:1;28690:15;28716:128;28783:9;;;28804:11;;;28801:37;;;28818:18;;:::i;28849:125::-;28914:9;;;28935:10;;;28932:36;;;28948:18;;:::i;28979:375::-;-1:-1:-1;;;;;29237:15:112;;;29219:34;;29289:15;;;;29284:2;29269:18;;29262:43;29336:2;29321:18;;29314:34;;;;29169:2;29154:18;;28979:375::o;29359:135::-;29398:3;29419:17;;;29416:43;;29439:18;;:::i;:::-;-1:-1:-1;29486:1:112;29475:13;;29359:135::o;29499:383::-;29610:6;29663:2;29651:9;29642:7;29638:23;29634:32;29631:52;;;29679:1;29676;29669:12;29631:52;29719:9;29706:23;-1:-1:-1;;;;;29744:6:112;29741:30;29738:50;;;29784:1;29781;29774:12;29738:50;29807:69;29868:7;29859:6;29848:9;29844:22;29807:69;:::i;29887:251::-;29957:6;30010:2;29998:9;29989:7;29985:23;29981:32;29978:52;;;30026:1;30023;30016:12;29978:52;30058:9;30052:16;30077:31;30102:5;30077:31;:::i;30143:327::-;30239:4;30297:11;30284:25;30391:2;30387:7;30376:8;30360:14;30356:29;30352:43;30332:18;30328:68;30318:96;;30410:1;30407;30400:12;30318:96;30431:33;;;;;30143:327;-1:-1:-1;;30143:327:112:o;30743:574::-;30865:4;30871:6;30931:11;30918:25;31025:2;31021:7;31010:8;30994:14;30990:29;30986:43;30966:18;30962:68;30952:96;;31044:1;31041;31034:12;30952:96;31071:33;;31123:20;;;-1:-1:-1;;;;;;31155:30:112;;31152:50;;;31198:1;31195;31188:12;31152:50;31231:4;31219:17;;-1:-1:-1;31282:1:112;31278:14;;;31262;31258:35;31248:46;;31245:66;;;31307:1;31304;31297:12;31322:299;31494:9;31531:84;31600:14;31592:6;31585:5;31531:84;:::i;31626:228::-;31711:6;31764:2;31752:9;31743:7;31739:23;31735:32;31732:52;;;31780:1;31777;31770:12;31732:52;31803:45;31840:7;31829:9;31803:45;:::i;32138:384::-;-1:-1:-1;;;;;;32323:33:112;;32311:46;;32380:13;;32293:3;;32402:74;32380:13;32465:1;32456:11;;32449:4;32437:17;;32402:74;:::i;:::-;32496:16;;;;32514:1;32492:24;;32138:384;-1:-1:-1;;;32138:384:112:o;32527:287::-;32656:3;32694:6;32688:13;32710:66;32769:6;32764:3;32757:4;32749:6;32745:17;32710:66;:::i;32819:245::-;32886:6;32939:2;32927:9;32918:7;32914:23;32910:32;32907:52;;;32955:1;32952;32945:12;32907:52;32987:9;32981:16;33006:28;33028:5;33006:28;:::i;33358:217::-;33398:1;33424;33414:132;;33468:10;33463:3;33459:20;33456:1;33449:31;33503:4;33500:1;33493:15;33531:4;33528:1;33521:15;33414:132;-1:-1:-1;33560:9:112;;33358:217::o;33580:168::-;33653:9;;;33684;;33701:15;;;33695:22;;33681:37;33671:71;;33722:18;;:::i;35031:456::-;35137:1;35133;35128:3;35124:11;35120:19;35112:5;35106:12;35102:38;35097:3;35090:51;35190:4;35183:5;35179:16;35173:23;35166:4;35161:3;35157:14;35150:47;35246:4;35239:5;35235:16;35229:23;35222:4;35217:3;35213:14;35206:47;35302:4;35295:5;35291:16;35285:23;35278:4;35273:3;35269:14;35262:47;35358:4;35351:5;35347:16;35341:23;35334:4;35329:3;35325:14;35318:47;35411:4;35404:5;35400:16;35394:23;35426:55;35475:4;35470:3;35466:14;35452:12;14886;;-1:-1:-1;;;;;14882:38:112;14870:51;;14970:4;14959:16;;;14953:23;14937:14;;14930:47;14809:174;35492:387;35730:3;35715:19;;35743:42;35719:9;35767:6;35743:42;:::i;:::-;35816:3;35801:19;;35794:35;;;;35860:3;35845:19;35838:35;35492:387;;-1:-1:-1;35492:387:112:o;35884:315::-;36094:3;36079:19;;36107:42;36083:9;36131:6;36107:42;:::i;:::-;36186:6;36180:3;36169:9;36165:19;36158:35;35884:315;;;;;:::o;37148:385::-;37399:25;;;37455:2;37440:18;;37433:34;;;37386:3;37371:19;;37476:51;37523:2;37508:18;;37500:6;37476:51;:::i;37538:386::-;37800:3;37785:19;;37813:42;37789:9;37837:6;37813:42;:::i;:::-;14886:12;;-1:-1:-1;;;;;14882:38:112;37913:3;37898:19;;14870:51;14970:4;14959:16;;14953:23;14937:14;;;14930:47;37864:54;14809:174;37929:319;38155:25;;;38143:2;38128:18;;38189:53;38238:2;38223:18;;38215:6;14886:12;;-1:-1:-1;;;;;14882:38:112;14870:51;;14970:4;14959:16;;;14953:23;14937:14;;14930:47;14809:174;38650:489;-1:-1:-1;;;;;38919:15:112;;;38901:34;;38971:15;;38966:2;38951:18;;38944:43;39018:2;39003:18;;38996:34;;;39066:3;39061:2;39046:18;;39039:31;;;38844:4;;39087:46;;39113:19;;39105:6;39087:46;:::i;:::-;39079:54;38650:489;-1:-1:-1;;;;;;38650:489:112:o;39144:249::-;39213:6;39266:2;39254:9;39245:7;39241:23;39237:32;39234:52;;;39282:1;39279;39272:12;39234:52;39314:9;39308:16;39333:30;39357:5;39333:30;:::i;39892:127::-;39953:10;39948:3;39944:20;39941:1;39934:31;39984:4;39981:1;39974:15;40008:4;40005:1;39998:15",
    "linkReferences": {},
    "immutableReferences": {
      "3083": [
        {
          "start": 13053,
          "length": 32
        }
      ],
      "3085": [
        {
          "start": 13011,
          "length": 32
        }
      ],
      "3087": [
        {
          "start": 12969,
          "length": 32
        }
      ],
      "3089": [
        {
          "start": 13136,
          "length": 32
        }
      ],
      "3091": [
        {
          "start": 13173,
          "length": 32
        }
      ],
      "3093": [
        {
          "start": 13094,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "IS_TEST()": "fa7626d4",
    "approve(address,uint256)": "095ea7b3",
    "balanceOf(address)": "70a08231",
    "borrow(((address,uint256),(bytes,uint256,(address,uint256,uint256,uint256,uint256,(address,uint256)))[])[])": "b1ce7a6a",
    "buy((uint256,address)[])": "980b13c5",
    "checkCollateralExternal((address,uint256,uint256,uint256,uint256,(address,uint256)),(address,uint256))": "ff9d3a77",
    "checkOfferArgExternal((bytes,uint256,(address,uint256,uint256,uint256,uint256,(address,uint256))))": "20906871",
    "claim(uint256[])": "6ba4c138",
    "claimAsBorrower(uint256[])": "3d6fd5be",
    "createTranche(uint256)": "92eab80e",
    "excludeArtifacts()": "b5508aa9",
    "excludeContracts()": "e20c9f71",
    "excludeSenders()": "1ed7831c",
    "failed()": "ba414fa6",
    "getApproved(uint256)": "081812fc",
    "getLoan(uint256)": "504006ca",
    "getMinOfferCostAndBorrowableAmount(address)": "8d116c7a",
    "getParameters()": "a5ea11da",
    "getRateOfTranche(uint256)": "14aab74f",
    "isApprovedForAll(address,address)": "e985e9c5",
    "name()": "06fdde03",
    "offerDigest((address,uint256,uint256,uint256,uint256,(address,uint256)))": "1fbc8a74",
    "onERC721Received(address,address,uint256,bytes)": "150b7a02",
    "ownerOf(uint256)": "6352211e",
    "position(uint256)": "f7a95a9e",
    "price(uint256)": "26a49e37",
    "repay(uint256[])": "0c72ad20",
    "safeTransferFrom(address,address,uint256)": "42842e0e",
    "safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
    "sendInterestsExternal((address,uint256,uint256,uint256,uint256,(uint256,uint256),uint256,address,(address,uint256),(uint256,uint256,bool,bool),uint256,uint256),(uint256,uint256,uint256))": "2efe69b3",
    "sendShareOfSaleAsSupplierExternal((address,uint256,uint256,uint256,uint256,(uint256,uint256),uint256,address,(address,uint256),(uint256,uint256,bool,bool),uint256,uint256),(uint256,uint256,uint256))": "6a974035",
    "setApprovalForAll(address,bool)": "a22cb465",
    "setAuctionDuration(uint256)": "a497e674",
    "setAuctionPriceFactor(uint256)": "e7af8fed",
    "setBorrowAmountPerOfferLowerBound(address,uint256)": "7660e109",
    "setMinOfferCost(address,uint256)": "1a34c700",
    "supportsInterface(bytes4)": "01ffc9a7",
    "symbol()": "95d89b41",
    "targetArtifactSelectors()": "66d9a9a0",
    "targetArtifacts()": "85226c81",
    "targetContracts()": "3f7286f4",
    "targetSelectors()": "916a17c6",
    "targetSenders()": "3e5e3c23",
    "totalSupply()": "18160ddd",
    "transferFrom(address,address,uint256)": "23b872dd",
    "useCollateralExternal((bytes,uint256,(address,uint256,uint256,uint256,uint256,(address,uint256)))[],address,(address,uint256))": "ac989819",
    "useOfferExternal((bytes,uint256,(address,uint256,uint256,uint256,uint256,(address,uint256))),(uint256,address,uint256,uint256,uint256,uint256,address,(address,uint256),uint256))": "bbf1dd1d"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AssertionFailedCollatStateDontMatch\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"AssertionFailedLoanDontMatch\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"Ray\",\"name\":\"expected\",\"type\":\"uint256\"},{\"internalType\":\"Ray\",\"name\":\"actual\",\"type\":\"uint256\"}],\"name\":\"AssertionFailedRayDontMatch\",\"type\":\"error\"},{\"inputs\":[{\"components\":[{\"internalType\":\"contract IERC20\",\"name\":\"assetToLend\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"loanToValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expirationDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tranche\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"contract IERC721\",\"name\":\"implem\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"internalType\":\"struct NFToken\",\"name\":\"collateral\",\"type\":\"tuple\"}],\"internalType\":\"struct Offer\",\"name\":\"offer\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"contract IERC721\",\"name\":\"implem\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"internalType\":\"struct NFToken\",\"name\":\"providedNft\",\"type\":\"tuple\"}],\"name\":\"BadCollateral\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"loanId\",\"type\":\"uint256\"}],\"name\":\"BorrowerAlreadyClaimed\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"CallerIsNotOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"endDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"loanId\",\"type\":\"uint256\"}],\"name\":\"CollateralIsNotLiquidableYet\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"ERC20TransferFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC721AddressZeroIsNotAValidOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC721ApprovalToCurrentOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC721ApproveToCaller\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC721CallerIsNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC721CallerIsNotOwnerNorApprovedForAll\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC721InvalidTokenId\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC721MintToTheZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC721TokenAlreadyMinted\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC721TransferFromIncorrectOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC721TransferToNonERC721ReceiverImplementer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC721TransferToTheZeroAddress\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"firstRequested\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"requested\",\"type\":\"address\"}],\"name\":\"InconsistentAssetRequests\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"firstTrancheIdUsed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"trancheIdFound\",\"type\":\"uint256\"}],\"name\":\"InconsistentTranches\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"nbOfTranches\",\"type\":\"uint256\"}],\"name\":\"InvalidTranche\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"loanId\",\"type\":\"uint256\"}],\"name\":\"LoanAlreadyRepaid\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"loanId\",\"type\":\"uint256\"}],\"name\":\"LoanNotRepaidOrLiquidatedYet\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"loanId\",\"type\":\"uint256\"}],\"name\":\"NotBorrowerOfTheLoan\",\"type\":\"error\"},{\"inputs\":[{\"components\":[{\"internalType\":\"contract IERC20\",\"name\":\"assetToLend\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"loanToValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expirationDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tranche\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"contract IERC721\",\"name\":\"implem\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"internalType\":\"struct NFToken\",\"name\":\"collateral\",\"type\":\"tuple\"}],\"internalType\":\"struct Offer\",\"name\":\"offer\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"expirationDate\",\"type\":\"uint256\"}],\"name\":\"OfferHasExpired\",\"type\":\"error\"},{\"inputs\":[{\"components\":[{\"internalType\":\"contract IERC20\",\"name\":\"assetToLend\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"loanToValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expirationDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tranche\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"contract IERC721\",\"name\":\"implem\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"internalType\":\"struct NFToken\",\"name\":\"collateral\",\"type\":\"tuple\"}],\"internalType\":\"struct Offer\",\"name\":\"offer\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"requested\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lowerBound\",\"type\":\"uint256\"}],\"name\":\"RequestedAmountIsUnderMinimum\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"requested\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"offered\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"contract IERC20\",\"name\":\"assetToLend\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"loanToValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expirationDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tranche\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"contract IERC721\",\"name\":\"implem\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"internalType\":\"struct NFToken\",\"name\":\"collateral\",\"type\":\"tuple\"}],\"internalType\":\"struct Offer\",\"name\":\"offer\",\"type\":\"tuple\"}],\"name\":\"RequestedAmountTooHigh\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Unauthorized\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"lent\",\"type\":\"uint256\"}],\"name\":\"UnsafeAmountLent\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"minLoanToValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxLoanToValue\",\"type\":\"uint256\"}],\"name\":\"UnsafeOfferLoanToValuesGap\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"loanId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"loan\",\"type\":\"bytes\"}],\"name\":\"Borrow\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"loanId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"args\",\"type\":\"bytes\"}],\"name\":\"Buy\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"claimant\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"claimed\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"loanId\",\"type\":\"uint256\"}],\"name\":\"Claim\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"newAuctionDuration\",\"type\":\"uint256\"}],\"name\":\"NewAuctionDuration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"Ray\",\"name\":\"newAuctionPriceFactor\",\"type\":\"uint256\"}],\"name\":\"NewAuctionPriceFactor\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IERC20\",\"name\":\"currency\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"newLowerBound\",\"type\":\"uint256\"}],\"name\":\"NewBorrowAmountPerOfferLowerBound\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IERC20\",\"name\":\"currency\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"newMinOfferCost\",\"type\":\"uint256\"}],\"name\":\"NewMininimumOfferCost\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"Ray\",\"name\":\"tranche\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"newTrancheId\",\"type\":\"uint256\"}],\"name\":\"NewTranche\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"loanId\",\"type\":\"uint256\"}],\"name\":\"Repay\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"log_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"log_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"log_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"name\":\"log_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"val\",\"type\":\"address\"}],\"name\":\"log_named_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"val\",\"type\":\"bytes\"}],\"name\":\"log_named_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"val\",\"type\":\"bytes32\"}],\"name\":\"log_named_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"}],\"name\":\"log_named_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"val\",\"type\":\"string\"}],\"name\":\"log_named_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"log_named_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"log_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"logs\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"IS_TEST\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"contract IERC721\",\"name\":\"implem\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"internalType\":\"struct NFToken\",\"name\":\"nft\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"contract IERC20\",\"name\":\"assetToLend\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"loanToValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expirationDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tranche\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"contract IERC721\",\"name\":\"implem\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"internalType\":\"struct NFToken\",\"name\":\"collateral\",\"type\":\"tuple\"}],\"internalType\":\"struct Offer\",\"name\":\"offer\",\"type\":\"tuple\"}],\"internalType\":\"struct OfferArg[]\",\"name\":\"args\",\"type\":\"tuple[]\"}],\"internalType\":\"struct BorrowArg[]\",\"name\":\"args\",\"type\":\"tuple[]\"}],\"name\":\"borrow\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"loanId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"internalType\":\"struct BuyArg[]\",\"name\":\"args\",\"type\":\"tuple[]\"}],\"name\":\"buy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"contract IERC20\",\"name\":\"assetToLend\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"loanToValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expirationDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tranche\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"contract IERC721\",\"name\":\"implem\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"internalType\":\"struct NFToken\",\"name\":\"collateral\",\"type\":\"tuple\"}],\"internalType\":\"struct Offer\",\"name\":\"offer\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"contract IERC721\",\"name\":\"implem\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"internalType\":\"struct NFToken\",\"name\":\"providedNft\",\"type\":\"tuple\"}],\"name\":\"checkCollateralExternal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"contract IERC20\",\"name\":\"assetToLend\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"loanToValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expirationDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tranche\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"contract IERC721\",\"name\":\"implem\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"internalType\":\"struct NFToken\",\"name\":\"collateral\",\"type\":\"tuple\"}],\"internalType\":\"struct Offer\",\"name\":\"offer\",\"type\":\"tuple\"}],\"internalType\":\"struct OfferArg\",\"name\":\"arg\",\"type\":\"tuple\"}],\"name\":\"checkOfferArgExternal\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"positionIds\",\"type\":\"uint256[]\"}],\"name\":\"claim\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"sent\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"loanIds\",\"type\":\"uint256[]\"}],\"name\":\"claimAsBorrower\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"sent\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"Ray\",\"name\":\"newTranche\",\"type\":\"uint256\"}],\"name\":\"createTranche\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"newTrancheId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeArtifacts\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"excludedArtifacts_\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"excludedContracts_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeSenders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"excludedSenders_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"failed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"getLoan\",\"outputs\":[{\"components\":[{\"internalType\":\"contract IERC20\",\"name\":\"assetLent\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"lent\",\"type\":\"uint256\"},{\"internalType\":\"Ray\",\"name\":\"shareLent\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endDate\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"internalType\":\"Ray\",\"name\":\"priceFactor\",\"type\":\"uint256\"}],\"internalType\":\"struct Auction\",\"name\":\"auction\",\"type\":\"tuple\"},{\"internalType\":\"Ray\",\"name\":\"interestPerSecond\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"contract IERC721\",\"name\":\"implem\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"internalType\":\"struct NFToken\",\"name\":\"collateral\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"paid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minInterestsToRepay\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"liquidated\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"borrowerClaimed\",\"type\":\"bool\"}],\"internalType\":\"struct Payment\",\"name\":\"payment\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"supplyPositionIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nbOfPositions\",\"type\":\"uint256\"}],\"internalType\":\"struct Loan\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"currency\",\"type\":\"address\"}],\"name\":\"getMinOfferCostAndBorrowableAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"minOfferCost\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"offerBorrowAmountLowerBound\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getParameters\",\"outputs\":[{\"internalType\":\"Ray\",\"name\":\"auctionPriceFactor\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"auctionDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nbOfLoans\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nbOfTranches\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"getRateOfTranche\",\"outputs\":[{\"internalType\":\"Ray\",\"name\":\"rate\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"contract IERC20\",\"name\":\"assetToLend\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"loanToValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expirationDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tranche\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"contract IERC721\",\"name\":\"implem\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"internalType\":\"struct NFToken\",\"name\":\"collateral\",\"type\":\"tuple\"}],\"internalType\":\"struct Offer\",\"name\":\"offer\",\"type\":\"tuple\"}],\"name\":\"offerDigest\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"position\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"Ray\",\"name\":\"share\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"loanId\",\"type\":\"uint256\"}],\"internalType\":\"struct Provision\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"loanId\",\"type\":\"uint256\"}],\"name\":\"price\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"loanIds\",\"type\":\"uint256[]\"}],\"name\":\"repay\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"contract IERC20\",\"name\":\"assetLent\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"lent\",\"type\":\"uint256\"},{\"internalType\":\"Ray\",\"name\":\"shareLent\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endDate\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"internalType\":\"Ray\",\"name\":\"priceFactor\",\"type\":\"uint256\"}],\"internalType\":\"struct Auction\",\"name\":\"auction\",\"type\":\"tuple\"},{\"internalType\":\"Ray\",\"name\":\"interestPerSecond\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"contract IERC721\",\"name\":\"implem\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"internalType\":\"struct NFToken\",\"name\":\"collateral\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"paid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minInterestsToRepay\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"liquidated\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"borrowerClaimed\",\"type\":\"bool\"}],\"internalType\":\"struct Payment\",\"name\":\"payment\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"supplyPositionIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nbOfPositions\",\"type\":\"uint256\"}],\"internalType\":\"struct Loan\",\"name\":\"loan\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"Ray\",\"name\":\"share\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"loanId\",\"type\":\"uint256\"}],\"internalType\":\"struct Provision\",\"name\":\"provision\",\"type\":\"tuple\"}],\"name\":\"sendInterestsExternal\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"contract IERC20\",\"name\":\"assetLent\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"lent\",\"type\":\"uint256\"},{\"internalType\":\"Ray\",\"name\":\"shareLent\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endDate\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"internalType\":\"Ray\",\"name\":\"priceFactor\",\"type\":\"uint256\"}],\"internalType\":\"struct Auction\",\"name\":\"auction\",\"type\":\"tuple\"},{\"internalType\":\"Ray\",\"name\":\"interestPerSecond\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"contract IERC721\",\"name\":\"implem\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"internalType\":\"struct NFToken\",\"name\":\"collateral\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"paid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minInterestsToRepay\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"liquidated\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"borrowerClaimed\",\"type\":\"bool\"}],\"internalType\":\"struct Payment\",\"name\":\"payment\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"supplyPositionIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nbOfPositions\",\"type\":\"uint256\"}],\"internalType\":\"struct Loan\",\"name\":\"loan\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"Ray\",\"name\":\"share\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"loanId\",\"type\":\"uint256\"}],\"internalType\":\"struct Provision\",\"name\":\"provision\",\"type\":\"tuple\"}],\"name\":\"sendShareOfSaleAsSupplierExternal\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newAuctionDuration\",\"type\":\"uint256\"}],\"name\":\"setAuctionDuration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"Ray\",\"name\":\"newAuctionPriceFactor\",\"type\":\"uint256\"}],\"name\":\"setAuctionPriceFactor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"newLowerBound\",\"type\":\"uint256\"}],\"name\":\"setBorrowAmountPerOfferLowerBound\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"newMinOfferCost\",\"type\":\"uint256\"}],\"name\":\"setMinOfferCost\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetArtifactSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzSelector[]\",\"name\":\"targetedArtifactSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetArtifacts\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"targetedArtifacts_\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targetedContracts_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzSelector[]\",\"name\":\"targetedSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetSenders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targetedSenders_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"contract IERC20\",\"name\":\"assetToLend\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"loanToValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expirationDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tranche\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"contract IERC721\",\"name\":\"implem\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"internalType\":\"struct NFToken\",\"name\":\"collateral\",\"type\":\"tuple\"}],\"internalType\":\"struct Offer\",\"name\":\"offer\",\"type\":\"tuple\"}],\"internalType\":\"struct OfferArg[]\",\"name\":\"args\",\"type\":\"tuple[]\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"contract IERC721\",\"name\":\"implem\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"internalType\":\"struct NFToken\",\"name\":\"nft\",\"type\":\"tuple\"}],\"name\":\"useCollateralExternal\",\"outputs\":[{\"components\":[{\"internalType\":\"contract IERC20\",\"name\":\"assetLent\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"lent\",\"type\":\"uint256\"},{\"internalType\":\"Ray\",\"name\":\"shareLent\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endDate\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"internalType\":\"Ray\",\"name\":\"priceFactor\",\"type\":\"uint256\"}],\"internalType\":\"struct Auction\",\"name\":\"auction\",\"type\":\"tuple\"},{\"internalType\":\"Ray\",\"name\":\"interestPerSecond\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"contract IERC721\",\"name\":\"implem\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"internalType\":\"struct NFToken\",\"name\":\"collateral\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"paid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minInterestsToRepay\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"liquidated\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"borrowerClaimed\",\"type\":\"bool\"}],\"internalType\":\"struct Payment\",\"name\":\"payment\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"supplyPositionIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nbOfPositions\",\"type\":\"uint256\"}],\"internalType\":\"struct Loan\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"contract IERC20\",\"name\":\"assetToLend\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"loanToValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expirationDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tranche\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"contract IERC721\",\"name\":\"implem\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"internalType\":\"struct NFToken\",\"name\":\"collateral\",\"type\":\"tuple\"}],\"internalType\":\"struct Offer\",\"name\":\"offer\",\"type\":\"tuple\"}],\"internalType\":\"struct OfferArg\",\"name\":\"arg\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"Ray\",\"name\":\"matched\",\"type\":\"uint256\"},{\"internalType\":\"contract IERC20\",\"name\":\"assetLent\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tranche\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minOfferDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minOfferLoanToValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxOfferLoanToValue\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"contract IERC721\",\"name\":\"implem\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"internalType\":\"struct NFToken\",\"name\":\"nft\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"loanId\",\"type\":\"uint256\"}],\"internalType\":\"struct CollateralState\",\"name\":\"collatState\",\"type\":\"tuple\"}],\"name\":\"useOfferExternal\",\"outputs\":[{\"components\":[{\"internalType\":\"Ray\",\"name\":\"matched\",\"type\":\"uint256\"},{\"internalType\":\"contract IERC20\",\"name\":\"assetLent\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tranche\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minOfferDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minOfferLoanToValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxOfferLoanToValue\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"contract IERC721\",\"name\":\"implem\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"internalType\":\"struct NFToken\",\"name\":\"nft\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"loanId\",\"type\":\"uint256\"}],\"internalType\":\"struct CollateralState\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"inherit from this contract to perform tests from INSIDE kairos\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Borrow(uint256,bytes)\":{\"params\":{\"loan\":\"the loan created\",\"loanId\":\"id of the loan\"}},\"Buy(uint256,bytes)\":{\"params\":{\"args\":\"arguments NFT sold\",\"loanId\":\"identifier of the loan previously backed by the sold collateral\"}},\"Claim(address,uint256,uint256)\":{\"params\":{\"claimant\":\"who received the liquidity\",\"claimed\":\"amount sent\",\"loanId\":\"loan identifier where the claim rights come from\"}},\"NewAuctionDuration(uint256)\":{\"params\":{\"newAuctionDuration\":\"duration of liquidation for new loans\"}},\"NewAuctionPriceFactor(uint256)\":{\"params\":{\"newAuctionPriceFactor\":\"factor of loan to value setting initial price of auctions\"}},\"NewBorrowAmountPerOfferLowerBound(address,uint256)\":{\"params\":{\"currency\":\"the erc20 on which a new borrow amount lower bound is taking effect\",\"newLowerBound\":\"the new lower bound\"}},\"NewMininimumOfferCost(address,uint256)\":{\"params\":{\"currency\":\"the erc20 on which a new minimum borrow cost is taking effect\",\"newMinOfferCost\":\"the new minimum amount that will need to be repaid per loan offer used\"}},\"NewTranche(uint256,uint256)\":{\"params\":{\"newTrancheId\":\"identifier of the new tranche\",\"tranche\":\"the interest rate of the new tranche, in multiplier per second\"}},\"Repay(uint256)\":{\"params\":{\"loanId\":\"loan identifier\"}},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"borrow(((address,uint256),(bytes,uint256,(address,uint256,uint256,uint256,uint256,(address,uint256)))[])[])\":{\"params\":{\"args\":\"list of arguments specifying at which terms each collateral should be used\"}},\"buy((uint256,address)[])\":{\"params\":{\"args\":\"arguments on what and how to buy\"}},\"claim(uint256[])\":{\"params\":{\"positionIds\":\"identifiers of one or multiple supply position to burn\"},\"returns\":{\"sent\":\"amount sent\"}},\"claimAsBorrower(uint256[])\":{\"params\":{\"loanIds\":\"loan identifiers of one or multiple loans where the borrower wants to claim liquidation share\"},\"returns\":{\"sent\":\"amount sent\"}},\"createTranche(uint256)\":{\"params\":{\"newTranche\":\"the interest rate of the new tranche\"}},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"getLoan(uint256)\":{\"params\":{\"id\":\"loan identifier\"},\"returns\":{\"_0\":\"loan the corresponding loan\"}},\"getMinOfferCostAndBorrowableAmount(address)\":{\"params\":{\"currency\":\"the erc20 asset lent on which the parameters apply\"},\"returns\":{\"minOfferCost\":\"the minimal amount to repay per offer used in loan\",\"offerBorrowAmountLowerBound\":\" minimum amount to borrow per offer used in loan\"}},\"getParameters()\":{\"returns\":{\"auctionDuration\":\"number of seconds after the auction start when the price hits 0\",\"auctionPriceFactor\":\"factor multiplied with the loan to value of a loan to get initial price         of a collateral on sale\",\"nbOfLoans\":\"total number of loans ever issued (active and ended)\",\"nbOfTranches\":\"total number of interest rates tranches ever created (active and inactive)\"}},\"getRateOfTranche(uint256)\":{\"params\":{\"id\":\"rate identifier\"},\"returns\":{\"rate\":\"the rate of the tranche, as a Ray, multiplier per second of the amount to repay (non compounding)         I.e lent * time since loan start * tranche = interests to repay\"}},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"offerDigest((address,uint256,uint256,uint256,uint256,(address,uint256)))\":{\"params\":{\"offer\":\"the loan offer signed/to sign by a supplier\"},\"returns\":{\"_0\":\"digest the digest, ecdsa sign as is to produce a valid loan offer signature\"}},\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"param data must be of format OfferArg[]\",\"params\":{\"data\":\"abi encoded arguments for the loan\",\"operator\":\"account that initialized the transfer action according to the NFT implementation contract\",\"tokenId\":\"token identifier of the NFT sent according to the NFT implementation contract\"},\"returns\":{\"_0\":\"selector `this.onERC721Received.selector` ERC721-compliant response, signaling compatibility\"}},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"position(uint256)\":{\"params\":{\"tokenId\":\"token identifier of the supply position\"},\"returns\":{\"_0\":\"provision metadata\"}},\"price(uint256)\":{\"params\":{\"loanId\":\"identifier of the loan\"},\"returns\":{\"_0\":\"price computed price\"}},\"repay(uint256[])\":{\"details\":\"repay on behalf is activated, the collateral goes to the original borrower\",\"params\":{\"loanIds\":\"identifiers of loans to repay\"}},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setAuctionDuration(uint256)\":{\"params\":{\"newAuctionDuration\":\"number of seconds of the duration\"}},\"setAuctionPriceFactor(uint256)\":{\"params\":{\"newAuctionPriceFactor\":\"the new factor multiplied to the loan to value\"}},\"setBorrowAmountPerOfferLowerBound(address,uint256)\":{\"params\":{\"currency\":\"the erc20 on which a new borrow amount lower bound is taking effect\",\"newLowerBound\":\"the new lower bound\"}},\"setMinOfferCost(address,uint256)\":{\"params\":{\"currency\":\"the erc20 on which a new minimum borrow cost will take effect\",\"newMinOfferCost\":\"the new minimum amount that will need to be repaid per loan offer used\"}},\"supportsInterface(bytes4)\":{\"details\":\"don't use this method for inclusion in the facet function selectors     prefer the LibDiamond implementation for this method     it is included here for IERC721-compliance\"},\"totalSupply()\":{\"returns\":{\"_0\":\"totalSupply the number\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"events\":{\"Borrow(uint256,bytes)\":{\"notice\":\"one loan has been initiated\"},\"Buy(uint256,bytes)\":{\"notice\":\"a NFT collateral has been sold as part of a liquidation\"},\"Claim(address,uint256,uint256)\":{\"notice\":\"some liquidity has been claimed as principal plus interests or share of liquidation\"},\"NewAuctionDuration(uint256)\":{\"notice\":\"duration of future auctions has been updated\"},\"NewAuctionPriceFactor(uint256)\":{\"notice\":\"initial price factor of future auctions has been updated\"},\"NewBorrowAmountPerOfferLowerBound(address,uint256)\":{\"notice\":\"the borrow amount lower bound per offer has been updated\"},\"NewMininimumOfferCost(address,uint256)\":{\"notice\":\"the minimum cost to repay per used loan offer     when borrowing a certain currency has been updated\"},\"NewTranche(uint256,uint256)\":{\"notice\":\"a new interest rate tranche has been created\"},\"Repay(uint256)\":{\"notice\":\"a loan has been repaid with interests by its borrower\"}},\"kind\":\"user\",\"methods\":{\"borrow(((address,uint256),(bytes,uint256,(address,uint256,uint256,uint256,uint256,(address,uint256)))[])[])\":{\"notice\":\"take loans, take ownership of NFTs specified as collateral, sends borrowed money to caller\"},\"buy((uint256,address)[])\":{\"notice\":\"buy one or multiple NFTs in liquidation\"},\"claim(uint256[])\":{\"notice\":\"claims principal plus interests or liquidation share due as a supplier\"},\"claimAsBorrower(uint256[])\":{\"notice\":\"claims share of liquidation due to a borrower who's collateral has been sold\"},\"createTranche(uint256)\":{\"notice\":\"creates a new tranche at a new identifier for lenders to provide offers for\"},\"getLoan(uint256)\":{\"notice\":\"get loan metadata\"},\"getMinOfferCostAndBorrowableAmount(address)\":{\"notice\":\"get the minimal amount to repay per offer used in loan and minimum amount to borrow per offer.     Gives currently active settings, may not concern loans already issued.\"},\"getParameters()\":{\"notice\":\"gets current values of parameters impacting loans behavior and total number of loans (active and ended)\"},\"getRateOfTranche(uint256)\":{\"notice\":\"gets the rate of tranche `id`\"},\"offerDigest((address,uint256,uint256,uint256,uint256,(address,uint256)))\":{\"notice\":\"computes EIP-712 compliant digest of a loan offer\"},\"onERC721Received(address,address,uint256,bytes)\":{\"notice\":\"borrow using sent NFT as collateral without needing approval through transfer callback\"},\"position(uint256)\":{\"notice\":\"get metadata on provision linked to the supply position\"},\"price(uint256)\":{\"notice\":\"gets the price to buy the underlying collateral of the loan\"},\"repay(uint256[])\":{\"notice\":\"repay one or multiple loans, gives collaterals back\"},\"setAuctionDuration(uint256)\":{\"notice\":\"sets the time it takes to auction prices to fall to 0 for future loans\"},\"setAuctionPriceFactor(uint256)\":{\"notice\":\"sets the factor applied to the loan to value setting initial price of auction for future loans\"},\"setBorrowAmountPerOfferLowerBound(address,uint256)\":{\"notice\":\"updates the borrow amount lower bound per offer for one currency\"},\"setMinOfferCost(address,uint256)\":{\"notice\":\"updates the minimum amount to repay per used loan offer when borrowing a certain currency\"},\"totalSupply()\":{\"notice\":\"total number of supply positions ever minted (counting burned ones)\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"test/Commons/Internal.sol\":\"Internal\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/=node_modules/@openzeppelin/\",\":diamond/=node_modules/diamond/\",\":ds-test/=node_modules/ds-test/src/\",\":forge-std/=node_modules/forge-std/src/\",\":solmate/=node_modules/solmate/\"]},\"sources\":{\"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x4ffc0547c02ad22925310c585c0f166f8759e2648a09e9b489100c42f15dd98d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15f52f51413a9de1ff191e2f6367c62178e1df7806d7880fe857a98b0b66253d\",\"dweb:/ipfs/QmaQG1fwfgUt5E9nu2cccFiV47B2V78MM1tCy1qB7n4MsH\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x1e854874c68bec05be100dc0092cb5fbbc71253d370ae98ddef248bbfc3fe118\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef0fb6e809779426dc2ac201149bbad4aecdc5810874f2843b050e8b5fef8d30\",\"dweb:/ipfs/QmPDRjaNxmcyxLUKvv8Fxk5eWcf7xvC5S9JpbtqvE7Cadu\"]},\"node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xab28a56179c1db258c9bf5235b382698cb650debecb51b23d12be9e241374b68\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://daae589a9d6fa7e55f99f86c0a16796ca490f243fb3693632c3711c0646c1d56\",\"dweb:/ipfs/QmR3zpd7wNw3rcUdekwiv6FYHJqksuTCXLVioTxu6Fbxk3\"]},\"node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"node_modules/@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":{\"keccak256\":\"0xa8796bd16014cefb8c26449413981a49c510f92a98d6828494f5fd046223ced3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://63a5e0bb5a7d182e0d0eef87033f78115eab791de3626a929bc98c157087880a\",\"dweb:/ipfs/QmetkXAu2CJKS4qrZtEQPU8okAPwUwa6HL4XYwk8vrYMk8\"]},\"node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol\":{\"keccak256\":\"0xd1556954440b31c97a142c6ba07d5cade45f96fafd52091d33a14ebe365aecbf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://26fef835622b46a5ba08b3ef6b46a22e94b5f285d0f0fb66b703bd30217d2c34\",\"dweb:/ipfs/QmZ548qdwfL1qF7aXz3xh1GCdTiST81kGGuKRqVUfYmPZR\"]},\"node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"node_modules/@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269\",\"dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj\"]},\"node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"node_modules/@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c969013129ba9e651a20735ef659fef6d8a1139ea3607bd4b26ddea2d645634\",\"dweb:/ipfs/QmVhVa6LGuzAcB8qgDtVHRkucn4ihj5UZr8xBLcJkP6ucb\"]},\"node_modules/@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xda898fa084aa1ddfdb346e6a40459e00a59d87071cce7c315a46d648dd71d0ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ce501a941f4aa1555c04dabb5e07992503bb6a9b32ff8f7cdcefdb4a742210cb\",\"dweb:/ipfs/QmeScPrUpdrGYs9BytV3Z5ZWJcBXtuAgCW4BLHua4xFUxx\"]},\"node_modules/@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x948d8b2d18f38141ec78c5229d770d950ebc781ed3f44cc9e3ccbb9fded5846a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7311ac950ed2d81f3ccf1784a926efbfc82a86dcb5c98d41eb3792c0cac63a2f\",\"dweb:/ipfs/QmRRwCUHewkPmehx8QRYENFoWyLNx8UEZGULxWYUeSZdTS\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"node_modules/@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b\",\"dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz\"]},\"node_modules/diamond/contracts/facets/OwnershipFacet.sol\":{\"keccak256\":\"0x6502a171801d68e68de6c5a2b879d5e12a3a1539cdc568c2bfcc268fbdf6c5a9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e8094a53d216df365a5cbdaa0e4292c6faae493e88c62e7a616ccb4b5440c097\",\"dweb:/ipfs/QmNXspNxT83mcL1mynUiUrfj94aVe8rz2UyZUJJn7gfWWe\"]},\"node_modules/diamond/contracts/interfaces/IDiamond.sol\":{\"keccak256\":\"0x37be579b243559c0c16a8de037d2c428e8fafdfdd9cde69fa165a07f5adfda2c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0f16b9edb01e35edf96566f6460c4986fcc3fb9bff6291fab5be17d256cd0fd2\",\"dweb:/ipfs/Qmdq869cYabBjfnYZgcF5BSHsFQXT1EZNg2umHMAxZqWEH\"]},\"node_modules/diamond/contracts/interfaces/IDiamondCut.sol\":{\"keccak256\":\"0x9ecd4a637b7cb44c26a4ab7760766defce42a6dc36a355b92dfeef9ce4391fee\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cd0e7ad69374bc41bc62c90428f9795c8a06360599c4c6b06e76bd8a1b91e28f\",\"dweb:/ipfs/QmfZk5ZiKQQaudjYf3qEumVsW87gELxcYMNRu3AHSLuk4n\"]},\"node_modules/diamond/contracts/interfaces/IDiamondLoupe.sol\":{\"keccak256\":\"0x10884024af2c0f7deca0fac4ddf84e76da5dba35b6e02fabeac8ea54c1a5c6f7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df3404a4aed3bbda2f5e441d7035b354237d8c9d7c27b149ccf66d13a1d81d45\",\"dweb:/ipfs/QmZvHWgRCge8tLJ3x3Lf3JQkbNTgAN6LzwCGBabbgk8tew\"]},\"node_modules/diamond/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x7541f7408d0f74162bc4664d5e012427f2ceaab2abadca0353269ef15ee03d8b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a8e7a34b3ea39f4c0dfa6f5ace5d9415e4d0c90cb3f4264e6946b808f2d4011c\",\"dweb:/ipfs/QmWdcRF4krMMb1ua3hmV8avdHKYa4XXt1iw7sxx1ntsEJa\"]},\"node_modules/diamond/contracts/interfaces/IERC173.sol\":{\"keccak256\":\"0x001e07b0fbc894300b939d496ffb005abe398b5bc609802d319b8cdeafe5d36b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e59f66879ef993892410cbe834b1d2dd34891f47066b7be601ff825b0748361\",\"dweb:/ipfs/QmZedQ668we8ohPPZF5tPP5gKpJ5n22h3FDFkoFT5VXpEu\"]},\"node_modules/diamond/contracts/libraries/LibDiamond.sol\":{\"keccak256\":\"0x4090c1e2191d081ff33e1631eabbebfb69e29ac1bf67516d7f4430bb2e0b2983\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3c66e113d032be747262abe642abcec8c132400fe156414721590412d9af6485\",\"dweb:/ipfs/QmfLg3p9wZ748cSDrfh4TmxCuMU8oVZU9BzAGhJSFQysWM\"]},\"node_modules/ds-test/src/test.sol\":{\"keccak256\":\"0x8758531bbac3972efcf1fa46383dbe1d276406fe527bc7abb2f236486278e83b\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://1f64264d61506847acf8761e84aff690cebe830958eac00bac7924d8be569240\",\"dweb:/ipfs/QmSekDJvJ82MZAmr63n7YvfLzQ7gS4NLSHPmHL3GN3rw8k\"]},\"node_modules/forge-std/src/Base.sol\":{\"keccak256\":\"0x609e3a00319169988cc8272e837f350a9ba77cf8f8f62e4897a8e4a8a5f0fb27\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b24435e35ba5b080ebd6e8976c23fb735c7212d042be8462ffd2ea50c5250363\",\"dweb:/ipfs/QmPeVvN7FS4oMmCuYAeRdZihTfrG4tA7Vvunuvv59a6wre\"]},\"node_modules/forge-std/src/StdAssertions.sol\":{\"keccak256\":\"0xdb05fd11858f232b8b5c6c9175229bdd061c277c34f13b0bdc64d333bcbd2617\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08ae865564d9c1fa1012b61db77a2da2844ac1ae0a216b16c9fe9ab65ddf80af\",\"dweb:/ipfs/QmfFfmkjb2Qfc5dPJvwQgjTMbeQ12dTPFeAQ8Gb944U44g\"]},\"node_modules/forge-std/src/StdChains.sol\":{\"keccak256\":\"0x097b75f7171af89f433407e040d11b22fc26e2fe03793c2cfe18cad390d7af8b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://19d1dca7b398e517499ffa65ad44df69cdd016f37dc57e2d07d50279d3ddee17\",\"dweb:/ipfs/QmfMFR25367GB5PoBi1KZxWs1hZcJtC3eANiioG3dKj8ah\"]},\"node_modules/forge-std/src/StdCheats.sol\":{\"keccak256\":\"0x3c536209b4d4e1879adc4d91b12e237985f0f8f91e71828dacd8fca3bdf2fa99\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://65adfc61088d242dbab8faa738d104005531e3a52ed993329b54fa7ee45e53ab\",\"dweb:/ipfs/QmP1d4thtELTT2vup4XmrCSKXZ91Eq756pgKq1z5hq2NGP\"]},\"node_modules/forge-std/src/StdError.sol\":{\"keccak256\":\"0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6\",\"dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj\"]},\"node_modules/forge-std/src/StdInvariant.sol\":{\"keccak256\":\"0xd855e1fea6247f1bef118e2bee9f0039832988b7173fd17766bba4014ae26a3c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c58c0f0b66852dfd3c76fb7958d8b023489d7a874c7cb1ad4f2021f9ec8ab477\",\"dweb:/ipfs/Qmd3MX9HAkNUhPddL29ekwhqgRnjAobZ35UzchaJZNACCN\"]},\"node_modules/forge-std/src/StdJson.sol\":{\"keccak256\":\"0x9e2a7521190c462a0667706385f1c52a816220a9813ca8ac520fba7ba45d660b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d23017fe6570b28130a731b86179352b93a5fb5af32f11559837afc1186293c\",\"dweb:/ipfs/QmR3p6zG5Kmcr8gKocFCSopLHfXv1AziPJbH17nKyMxwxV\"]},\"node_modules/forge-std/src/StdMath.sol\":{\"keccak256\":\"0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92\",\"dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC\"]},\"node_modules/forge-std/src/StdStorage.sol\":{\"keccak256\":\"0xd1517df281f973dba8b7ba52c02d3df552b60d91b8f47e4669049da648778673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://52e43264f58a5dcfd985f3c99aa81064805aa8f1c2b4c6521fd63d45cdbba8d5\",\"dweb:/ipfs/QmUMTF6cRjt5tCQrrgQDXVRmHQLjevNsTvLFdaA1m9TBj9\"]},\"node_modules/forge-std/src/StdStyle.sol\":{\"keccak256\":\"0x2882555b0f58e48144e46e9aa5118a506b31ad7485327d54e8f681e8b414c337\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2850bcb1322de9d9dd87ded42debbe0e8fc4048173788d4c00c98b50e5f76985\",\"dweb:/ipfs/QmUiPKnj7GZLLQbJGY7bVDu79Q9jGEYNjR5ZBgwFy8mH97\"]},\"node_modules/forge-std/src/StdUtils.sol\":{\"keccak256\":\"0x6584855fecbe5b6a9f8ebdb26b37c58532c5bc5cc6e1737dfa7c8a045087be55\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40a35a4d292b4fed02e11d5f25fb474f10a7c4eb99f75b5383dc23fcb6e55d3c\",\"dweb:/ipfs/QmYZ2nz1EmNh4xLWf4YybZoa1Da1z3Wq3w4pneMhkouMi4\"]},\"node_modules/forge-std/src/Test.sol\":{\"keccak256\":\"0xddf16afce2bb7bbb69ed868d4c7ee8b4ea4ffbf8929427fe799682f107534945\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://52f6ebde2a4cb9d08aea5fb3d62b2f15961bb9a29d6d9e30dd0859d0d631cabf\",\"dweb:/ipfs/QmeJ9Dp1GYUggzjGiwTZkxCfB15NfyfgcyrNZL5tyWZbVZ\"]},\"node_modules/forge-std/src/Vm.sol\":{\"keccak256\":\"0xdd9f518aade851117d3ca3122cae6ed413a8b8355d43d69db336e94da3214a96\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://939ede17edec5c78176379839f4c68851b1316e8f5789efb2f01cbdae09b88ef\",\"dweb:/ipfs/QmYiBBb7Nyuse7HoEFkCeauUwcpef9S33ozZYDqXCEXEtH\"]},\"node_modules/forge-std/src/console.sol\":{\"keccak256\":\"0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70\",\"dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec\"]},\"node_modules/forge-std/src/console2.sol\":{\"keccak256\":\"0xcd5706f5a7025825d9fd389c89b49bf571f9abaea8a062dc4048320b5b43bf46\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c066485a7d4bd18d44efb4c89274b0959e8066b9a480383a2ce07d7f31555f88\",\"dweb:/ipfs/QmckeYfA5FtAjcxaytq69Dpj6uY57tbQ61kNPPxXi9kgbW\"]},\"node_modules/forge-std/src/interfaces/IMulticall3.sol\":{\"keccak256\":\"0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0\",\"dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2\"]},\"src/AdminFacet.sol\":{\"keccak256\":\"0x1a2d8498fd8fd33bdda336678927e9f541b02b454d82994cd4a650f1f3a2942a\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://53f331f3125c77de8a8efa62288c88b9e72f93763cf7b255ee039a661198e936\",\"dweb:/ipfs/QmPvkNQKNyRf3BVyjet6YmWmzhBKC5tFq3BZTx66U167u2\"]},\"src/AuctionFacet.sol\":{\"keccak256\":\"0x41a60f4e0ea36dd4a1acb8845d07f8eee2e788aa0acc7eeea3c3443448231f22\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://049a623687b02d8ceb7f933cdad6b6de5f28d826cb7eb828c1b2ecfba1b02b48\",\"dweb:/ipfs/QmRSjXjDZqys1KWaK2YbWhuMju5A45KLETF9KtjzHVFGbM\"]},\"src/BorrowFacet.sol\":{\"keccak256\":\"0x960ac7f5ddc23fd9c9b87481451b47022b85ce53eefc1c46fe9cdbd34481e2fc\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://3c17390c85d849708b4489909ab63f11ceb8652d2c2f465e2c0b42b7a71fed94\",\"dweb:/ipfs/QmZNQ9RdZhk9QAxQkws1Fsv5UMwfJpra77HokJCxM8wERH\"]},\"src/BorrowLogic/BorrowCheckers.sol\":{\"keccak256\":\"0x023dce239e7e6d534db05e6364715ebb3399c3c9dccf894e9076712ab779745d\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://cfabb6dbacbb9d09ee26887d755e88d9761d266a3daa68a54c070ff967bf2aa8\",\"dweb:/ipfs/QmbdtPZcZ5QSB8LKQMEy6wU5jDZSSkMJvtGVDpEDuN3bz4\"]},\"src/BorrowLogic/BorrowHandlers.sol\":{\"keccak256\":\"0x41dbb5b648ea50541ab227e77e8850607731ad7ebd8171f5d0d96eb829246301\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://780b77c00afd5fa5d97ba16f3d3a7e83bb909608fb54f5f38f19120a16d5bb18\",\"dweb:/ipfs/QmTPZ47VbeFxbWdou6hFMkk86PStsLuh2uNZfhJVoGjyBX\"]},\"src/ClaimFacet.sol\":{\"keccak256\":\"0x06a664d0d467d20ffc78de21c78670a08f134752f4872db55d5dc587e76ecec2\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://e1312cb1cff9ba34218db3219647e9d63685e32a88ed5007858d8af76b440653\",\"dweb:/ipfs/QmbazoYdTrS6FaMjbXM5eWWaz41JGV9QzazuxXAVdDsk1K\"]},\"src/DataStructure/ERC721Errors.sol\":{\"keccak256\":\"0x0ee13f898a2d61d6662ef236db05001d14086ff4431bef2ae89c1979819d38d0\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://2e1878fe70994d02159dbf4a5a9c79b3665feaae0d08ff420b3f00cb8ed6355a\",\"dweb:/ipfs/QmNYJDoien8bUQFYuc75GyVGVTYuiUagF4RRUSGTTmZNH7\"]},\"src/DataStructure/Errors.sol\":{\"keccak256\":\"0x6c4db7ebc787971449c92a004a1742a0ebed90b3073de98ac677a7471696f8c5\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://b650ca8195bbdf7e6010ec51248ea3beb4a255730fb8e6404196b1680d5f1433\",\"dweb:/ipfs/QmbU8dkitPbxtTkUWgqL4Rgx3KdDzDgkYESY48muSmcTop\"]},\"src/DataStructure/Global.sol\":{\"keccak256\":\"0x9596c1bdf1271dd447db6a8f26ca493253674e252c9f63a7bc13c8689a7b6e49\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://3ff822127c6c674400e9730466eb6832d19a72eaf991f3bbf62d251a6e2b49d5\",\"dweb:/ipfs/QmZPGbWwS7rTPF3NiyjivxDseeBW64GhfkGvVNuaCbnzDv\"]},\"src/DataStructure/Objects.sol\":{\"keccak256\":\"0x251dd6c3f36c5a2c8a6a867aa29c9ba8b4bb7f2ec1a7321d630fea19f6bbd83a\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://a7f620222a6b6d909e8aa2d7191200b312345b6c704eecdf40729982e238f44e\",\"dweb:/ipfs/QmTikrgA5SKJrsJanid1atHw1M7opEvwuGKNRQTbjeM4sq\"]},\"src/DataStructure/Storage.sol\":{\"keccak256\":\"0x8f99f5f94641c826d0b4bd2dadb065745ff877b195fb1eb7392362a026d01380\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://f2c2362ee8472e6076f7f18a51264c96e63a346e61da6a7234abe5e3c034de38\",\"dweb:/ipfs/QmW59HJM49LDieB2svjKnYzo7hdYKG24rLKgb7AfiXht4z\"]},\"src/ProtocolFacet.sol\":{\"keccak256\":\"0x9c1c8deb2d61a8e39028c31154e51f6f4acccd71d4995cd82442e5addd9a5916\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://9e1d0cfcefa35601756a9f9aec29fcd1a072dc3e5e37d78def17d72ace29909d\",\"dweb:/ipfs/QmeCgh2tqzoz5Nf8X6UGY7ZeKTiyrvgoxZdzU3P9ua4JKX\"]},\"src/RepayFacet.sol\":{\"keccak256\":\"0x5b5c777a189495808271068b7757f73542bbc27b6141599752eaf4bef63c8e89\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://d6b289c89769655e173cecb2c20d8147d48ada74c5c6596060b70df7eed4b609\",\"dweb:/ipfs/Qmas7puaEDtvyLhMPUZGouNnVvky3gRKZCLemCxdLWALsF\"]},\"src/Signature.sol\":{\"keccak256\":\"0x37073550ae20735f42ae719377540c0bedd633aad9ce97d40e0facb965e4d137\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://d57bda44ce2f1e48f227c8b97cb23cd166d3b92421a3436835c81c1bc42a60ca\",\"dweb:/ipfs/QmU5yS6t3d6nhfUeGmwZnFsbo8LZe7MHED738pZBaUkPna\"]},\"src/SupplyPositionFacet.sol\":{\"keccak256\":\"0xd96da66c04a30bc8d665bdbec2eebbf23998aff501e00f64fc26d7ed0c4df780\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://bc62b16dbddf140812eb18fc39e7af0618c0b38c2b83ba9ee3efb67974963ad5\",\"dweb:/ipfs/QmYV7aBahd6EqmcjFK1Lncp27XeG2AKnLtQRFRnGsGu9Mz\"]},\"src/SupplyPositionLogic/DiamondERC721.sol\":{\"keccak256\":\"0xdb5734014944ffbfc70b937c0cb2ab310d15c7ceb93e852bf5c6aef64c24584b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://51bc9d846048e67e83c9e708aedd5f68ce240bd87c1c4a68526ee224553c0279\",\"dweb:/ipfs/QmUWcdYokYYxTNpJtSwM22Q4WBKxJEjfhtyAU97NFh1VdZ\"]},\"src/SupplyPositionLogic/NFTUtils.sol\":{\"keccak256\":\"0xc1fdc762292d11504da9d1b999d6364d8c76b721c8f6f7369e0030c9dae9af13\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dc9d2a3636065c11ad95bc669381dae82218909711ed54e31ee3085671ade192\",\"dweb:/ipfs/QmfX1zJes16PDd9NUGcSNYBMRvaykMhyaEMEQsmMugVtP4\"]},\"src/SupplyPositionLogic/SafeMint.sol\":{\"keccak256\":\"0xfe55649875c4f7c6fa65c01b8abf9e0f6564cab19ec24fb895bdce6dde90764d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5b0e86c734cce67187b23816bbba38c9eaab5e2154606de75866637f4774fd99\",\"dweb:/ipfs/QmPuJk6rhpUNjhftEAzbm26DA5tZw8sHybzYZ6G4PuWG8G\"]},\"src/interface/IAdminFacet.sol\":{\"keccak256\":\"0xfc9606029a4ef8d26d8c86c377d77c3caf1e26335f3e155f279581e487bcc640\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://5a04932fe22d016e66e172bff16c0611abcb8804e1039f99678a5d22e130daee\",\"dweb:/ipfs/QmUKzRKB5CPD3tE81Pbn8HHesuY1j64L5Xfbi4E8xsja8h\"]},\"src/interface/IAuctionFacet.sol\":{\"keccak256\":\"0x142cf5565d929cf20c8b042f791360b7b76289620efcd42c90a37f2d8179e49f\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://3aa1107c4c11a419c7340aff9624e3f539196759ffbe4eed5fde26cbbf1b4567\",\"dweb:/ipfs/QmfS88KKuQskg2RQP6GoVEbk9uUhbmVYH6Fps7yNUpfMCc\"]},\"src/interface/IBorrowCheckers.sol\":{\"keccak256\":\"0x581d912358ce65c74e7e3f089486d5c2cc7f45be7cb02ef5ee26a293c9ba1f18\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://18d4d2dee4cf9ccbeb8a33b037dc0021b1315fd3fca864a2127834f36cb6aaba\",\"dweb:/ipfs/QmUWvZMWUqv2DJpooXCHmQuBcr4kTzBhwApQniouAKdEJn\"]},\"src/interface/IBorrowFacet.sol\":{\"keccak256\":\"0xc2351fa73840199deb8c9ecd663294517ce6e457e198d699d53d651b72f1fe43\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://2094053b1d81f799877ee2ccd44a38601d80b97f93d54a14e0dfbc8ba8f3aba7\",\"dweb:/ipfs/QmZwEsKquQgH1H5tnKCQuBEeU9mRcnNBPC2bXZGt8XVuHF\"]},\"src/interface/IBorrowHandlers.sol\":{\"keccak256\":\"0x420bed3254df51bff3c728e252b74a9603fa3f834330c1edf0f0d257444f03ce\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://200955bcca9610fd1a0e3230f761ade89a12285bf60c91a758ef4045f5b55f54\",\"dweb:/ipfs/QmV9vYWeLVvo5ykdi8x6scgK4QDwYuPkhd4KETKWPA5tMv\"]},\"src/interface/IClaimFacet.sol\":{\"keccak256\":\"0xa797f893096a5828eb1614b941df05b54afcf72ff1fde42a106976bf70d5e71c\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://19be4abca0237cf076fb66e9d4fa9119c7bd9004a9e34a39c162cc3a1bb8e0cc\",\"dweb:/ipfs/QmaLkzLvZLwbcWn8CXmL9JYwVYPHeNWsMKD9JPMRozDBSQ\"]},\"src/interface/IOwnershipFacet.sol\":{\"keccak256\":\"0x505b2f2d275a0aa2861d08564f6d03e44e8d10cd8a1c6fbdea1105383e0e9a4d\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://4ca7e3a48787d056da5f3569965f9c2015e65d8ceb124e9346cf73d55e55c8b2\",\"dweb:/ipfs/QmWJmUsegbVtaJ71yCJZiEpedEvhSuw73NyjBfRFCkxt2z\"]},\"src/interface/IProtocolFacet.sol\":{\"keccak256\":\"0x41ef10bad154ed0a98a1fa46046869d6d6ab744953186caa287ced95b80ddc4a\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://8a45399f560a088b94d3d5e14a104a3cbc02cec1083cf1eec5a8b135341c7d53\",\"dweb:/ipfs/QmcCDJmFCkRZoeHojqmvaMsavwZXcBeZV54i5eAfxmjcH5\"]},\"src/interface/IRepayFacet.sol\":{\"keccak256\":\"0x932b0a489b740c46361e4cd5f5103c765b954cedfd41a823dd0549f435f0b7d4\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://fddbb0a0401cd79a17b794c9caaa6f3c2e9381a1a3fd6ea04c43e2148786c572\",\"dweb:/ipfs/QmUKSTezv4twtFPVCXRSQZBfKNW5Zkd22w4HWFfJrV7VyQ\"]},\"src/interface/ISignature.sol\":{\"keccak256\":\"0x6dadc10c64bc681b36624c2937fd3e108e87ca0056d311510e53a25cd009d065\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://a813951b3d9f26315a9363a779c745c58ad261ee9fa8a997727ea7ddc6c90da1\",\"dweb:/ipfs/QmR8G8XQDm7xjKzPH29PmYw2LnHakapvkdavJXZCT3vKFT\"]},\"src/mock/Money.sol\":{\"keccak256\":\"0x5e3ad642d66b67ba5606b3e566bd6d61aaf1fb041f65b147c8f73abdf502d8d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ae809b748f38d9d9e4a4bd8d211e7b30c8d56b5e632204cc27654daf995e5c3\",\"dweb:/ipfs/QmUKMtSDrZG3QHFWRUAh5FPAxGXpSGZsafStRhoESxxL52\"]},\"src/mock/NFT.sol\":{\"keccak256\":\"0xc9930007614632c7dc1393745990ec87c310b4178f387f1cbe52b50f4016fb64\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://b1bd12749aec08d1d0f5d2d4d8d32259c9c23ab243f1aa16b0106d89955f4e50\",\"dweb:/ipfs/QmRohEtgT3y7kTbeSbzQkxBTJemznmkxJey2vTKmZCBvFT\"]},\"src/mock/TestCurrency.sol\":{\"keccak256\":\"0xea5129d4a21ac381a780017790fc8f0c888aa8354314bd97d396056f4bdd20f0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://98c46c988468539ee172a1bad7e9e666707bec019b62c90207c552679a644960\",\"dweb:/ipfs/QmexsmkJdB934t2Tc6x9oPE64NbdYNjLMz8r3CituThgnB\"]},\"src/utils/Erc20CheckedTransfer.sol\":{\"keccak256\":\"0x03a0041ce856ecca1d5d2b67443dca5f2acab9fe38cd592b2d3e897eaa3955d0\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://10515dcb2700e1b01b00f50c704ffc7daba221080221e056d498da890c586c82\",\"dweb:/ipfs/QmRW2ycAG7nsk2YXnp6nk8s56RqTV1EVCuPkLgQsUHyGeW\"]},\"src/utils/FuncSelectors.h.sol\":{\"keccak256\":\"0xa79f6e8531c9a91f3e26e48ef5d7b0c8327e17b5352400668880cc1a98f36ddc\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://518f86fef198ec19ccba9d2438c8f490581f326cb2bdba8d3e6634c4797cebc0\",\"dweb:/ipfs/Qmb1NGp72szB8owp5MjaFWF7zngPtQ6EHUUMy38tn3BCqi\"]},\"src/utils/NFTokenUtils.sol\":{\"keccak256\":\"0x886dbd7a03bf3a8fd4739b86bc4eba01014e7683029dd485993369ad0a0473c5\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://02591fc4c94a10c37a9132dfbd9f1222f62c919ef5ba7b76a1ca1c1e2dc1d105\",\"dweb:/ipfs/QmVkSSvA12C2gu8gEv8CxBHpKY242THHAy7eNfzHpXdhtT\"]},\"src/utils/RayMath.sol\":{\"keccak256\":\"0x234068d17599aefc86ca6f5febb25be32bb71c0b45326c24936b23dd9cc876ac\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://421375b2a164c6ffa1e018c533e2a231395fc4f582acc3a43672a24e51fbe328\",\"dweb:/ipfs/QmUFEZi7BjELW2fDZuUpeDCTrNw1YhMmeqJvoMk2MfuxDU\"]},\"test/Commons/BigKairos.sol\":{\"keccak256\":\"0xe5e4959e7dca0aa52e2d35459a1f71b91a2af9a70fbb1465c31a98b53823eddc\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://25e44dd8b518574592079f2137651440fd7ce1360cfe5ad35d8c6993e8c4622a\",\"dweb:/ipfs/QmcqGbDvgGu2oHqD17PURL2matovxNPyuGgYajw57Q6SCj\"]},\"test/Commons/Internal.sol\":{\"keccak256\":\"0x12507426f01169802f333a2fb704fd70c35659ff2854c66d928a901673fca132\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://7ee48041714fd79f61fd382d6d9427732be1af960af57aff862432129ecac4e6\",\"dweb:/ipfs/QmT9p8LiAYfH2622zT7FD9UmcvTmywmG6N7CKyuPJjL3nj\"]},\"test/Commons/Loggers.sol\":{\"keccak256\":\"0x5ad09ea0e54173023d712d84e06faa58267cadc7b34404adabc1c11c28c0f238\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://dfd5aafd6dca411217e0928b82f211b16a9b8e937389838cadd307db638b83eb\",\"dweb:/ipfs/QmbB4vPdgPrrVhb4W9z9UeLQPBzU7xXQ1dkk2zzQNkwX85\"]},\"test/Commons/TestCommons.sol\":{\"keccak256\":\"0x661e48bcca61c615c6b5f082c744281af6a886b3d4de4d0607fce24a1be2d565\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://95556855c33b1be5e827c505e6ab6fa54534c0bc4e8610986cd0361e59c5a1bf\",\"dweb:/ipfs/QmY4VKfqcLa8hAN9C3L1N4hTyAfc74nPkUxCAUZm9nw2N1\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.18+commit.87f61d96"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "AssertionFailedCollatStateDontMatch"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "AssertionFailedLoanDontMatch"
        },
        {
          "inputs": [
            {
              "internalType": "Ray",
              "name": "expected",
              "type": "uint256"
            },
            {
              "internalType": "Ray",
              "name": "actual",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "AssertionFailedRayDontMatch"
        },
        {
          "inputs": [
            {
              "internalType": "struct Offer",
              "name": "offer",
              "type": "tuple",
              "components": [
                {
                  "internalType": "contract IERC20",
                  "name": "assetToLend",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "loanToValue",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "duration",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "expirationDate",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "tranche",
                  "type": "uint256"
                },
                {
                  "internalType": "struct NFToken",
                  "name": "collateral",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "contract IERC721",
                      "name": "implem",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "id",
                      "type": "uint256"
                    }
                  ]
                }
              ]
            },
            {
              "internalType": "struct NFToken",
              "name": "providedNft",
              "type": "tuple",
              "components": [
                {
                  "internalType": "contract IERC721",
                  "name": "implem",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                }
              ]
            }
          ],
          "type": "error",
          "name": "BadCollateral"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "loanId",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "BorrowerAlreadyClaimed"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "admin",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "CallerIsNotOwner"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "endDate",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "loanId",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "CollateralIsNotLiquidableYet"
        },
        {
          "inputs": [
            {
              "internalType": "contract IERC20",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "ERC20TransferFailed"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ERC721AddressZeroIsNotAValidOwner"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ERC721ApprovalToCurrentOwner"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ERC721ApproveToCaller"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ERC721CallerIsNotOwnerNorApproved"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ERC721CallerIsNotOwnerNorApprovedForAll"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ERC721InvalidTokenId"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ERC721MintToTheZeroAddress"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ERC721TokenAlreadyMinted"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ERC721TransferFromIncorrectOwner"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ERC721TransferToNonERC721ReceiverImplementer"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ERC721TransferToTheZeroAddress"
        },
        {
          "inputs": [
            {
              "internalType": "contract IERC20",
              "name": "firstRequested",
              "type": "address"
            },
            {
              "internalType": "contract IERC20",
              "name": "requested",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "InconsistentAssetRequests"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "firstTrancheIdUsed",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "trancheIdFound",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "InconsistentTranches"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "nbOfTranches",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "InvalidTranche"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "loanId",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "LoanAlreadyRepaid"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "loanId",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "LoanNotRepaidOrLiquidatedYet"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "loanId",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "NotBorrowerOfTheLoan"
        },
        {
          "inputs": [
            {
              "internalType": "struct Offer",
              "name": "offer",
              "type": "tuple",
              "components": [
                {
                  "internalType": "contract IERC20",
                  "name": "assetToLend",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "loanToValue",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "duration",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "expirationDate",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "tranche",
                  "type": "uint256"
                },
                {
                  "internalType": "struct NFToken",
                  "name": "collateral",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "contract IERC721",
                      "name": "implem",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "id",
                      "type": "uint256"
                    }
                  ]
                }
              ]
            },
            {
              "internalType": "uint256",
              "name": "expirationDate",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "OfferHasExpired"
        },
        {
          "inputs": [
            {
              "internalType": "struct Offer",
              "name": "offer",
              "type": "tuple",
              "components": [
                {
                  "internalType": "contract IERC20",
                  "name": "assetToLend",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "loanToValue",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "duration",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "expirationDate",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "tranche",
                  "type": "uint256"
                },
                {
                  "internalType": "struct NFToken",
                  "name": "collateral",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "contract IERC721",
                      "name": "implem",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "id",
                      "type": "uint256"
                    }
                  ]
                }
              ]
            },
            {
              "internalType": "uint256",
              "name": "requested",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "lowerBound",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "RequestedAmountIsUnderMinimum"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "requested",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "offered",
              "type": "uint256"
            },
            {
              "internalType": "struct Offer",
              "name": "offer",
              "type": "tuple",
              "components": [
                {
                  "internalType": "contract IERC20",
                  "name": "assetToLend",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "loanToValue",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "duration",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "expirationDate",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "tranche",
                  "type": "uint256"
                },
                {
                  "internalType": "struct NFToken",
                  "name": "collateral",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "contract IERC721",
                      "name": "implem",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "id",
                      "type": "uint256"
                    }
                  ]
                }
              ]
            }
          ],
          "type": "error",
          "name": "RequestedAmountTooHigh"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Unauthorized"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "lent",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "UnsafeAmountLent"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "minLoanToValue",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxLoanToValue",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "UnsafeOfferLoanToValuesGap"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "approved",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Approval",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bool",
              "name": "approved",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ApprovalForAll",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "loanId",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "bytes",
              "name": "loan",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Borrow",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "loanId",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "bytes",
              "name": "args",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Buy",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "claimant",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "claimed",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "loanId",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Claim",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "newAuctionDuration",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "NewAuctionDuration",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "Ray",
              "name": "newAuctionPriceFactor",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "NewAuctionPriceFactor",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "contract IERC20",
              "name": "currency",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "newLowerBound",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "NewBorrowAmountPerOfferLowerBound",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "contract IERC20",
              "name": "currency",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "newMinOfferCost",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "NewMininimumOfferCost",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "Ray",
              "name": "tranche",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "newTrancheId",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "NewTranche",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "loanId",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Repay",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Transfer",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256",
              "name": "",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "val",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "val",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "val",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "val",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "logs",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "IS_TEST",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "approve"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct BorrowArg[]",
              "name": "args",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "struct NFToken",
                  "name": "nft",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "contract IERC721",
                      "name": "implem",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "id",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "struct OfferArg[]",
                  "name": "args",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "bytes",
                      "name": "signature",
                      "type": "bytes"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "struct Offer",
                      "name": "offer",
                      "type": "tuple",
                      "components": [
                        {
                          "internalType": "contract IERC20",
                          "name": "assetToLend",
                          "type": "address"
                        },
                        {
                          "internalType": "uint256",
                          "name": "loanToValue",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "duration",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "expirationDate",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "tranche",
                          "type": "uint256"
                        },
                        {
                          "internalType": "struct NFToken",
                          "name": "collateral",
                          "type": "tuple",
                          "components": [
                            {
                              "internalType": "contract IERC721",
                              "name": "implem",
                              "type": "address"
                            },
                            {
                              "internalType": "uint256",
                              "name": "id",
                              "type": "uint256"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "borrow"
        },
        {
          "inputs": [
            {
              "internalType": "struct BuyArg[]",
              "name": "args",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "loanId",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "buy"
        },
        {
          "inputs": [
            {
              "internalType": "struct Offer",
              "name": "offer",
              "type": "tuple",
              "components": [
                {
                  "internalType": "contract IERC20",
                  "name": "assetToLend",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "loanToValue",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "duration",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "expirationDate",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "tranche",
                  "type": "uint256"
                },
                {
                  "internalType": "struct NFToken",
                  "name": "collateral",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "contract IERC721",
                      "name": "implem",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "id",
                      "type": "uint256"
                    }
                  ]
                }
              ]
            },
            {
              "internalType": "struct NFToken",
              "name": "providedNft",
              "type": "tuple",
              "components": [
                {
                  "internalType": "contract IERC721",
                  "name": "implem",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                }
              ]
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "checkCollateralExternal"
        },
        {
          "inputs": [
            {
              "internalType": "struct OfferArg",
              "name": "arg",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes",
                  "name": "signature",
                  "type": "bytes"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "struct Offer",
                  "name": "offer",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "contract IERC20",
                      "name": "assetToLend",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "loanToValue",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "duration",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "expirationDate",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "tranche",
                      "type": "uint256"
                    },
                    {
                      "internalType": "struct NFToken",
                      "name": "collateral",
                      "type": "tuple",
                      "components": [
                        {
                          "internalType": "contract IERC721",
                          "name": "implem",
                          "type": "address"
                        },
                        {
                          "internalType": "uint256",
                          "name": "id",
                          "type": "uint256"
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "checkOfferArgExternal",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "positionIds",
              "type": "uint256[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "claim",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "sent",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "loanIds",
              "type": "uint256[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "claimAsBorrower",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "sent",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "Ray",
              "name": "newTranche",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "createTranche",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "newTrancheId",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeArtifacts",
          "outputs": [
            {
              "internalType": "string[]",
              "name": "excludedArtifacts_",
              "type": "string[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeContracts",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "excludedContracts_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeSenders",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "excludedSenders_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "failed",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getApproved",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getLoan",
          "outputs": [
            {
              "internalType": "struct Loan",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "contract IERC20",
                  "name": "assetLent",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "lent",
                  "type": "uint256"
                },
                {
                  "internalType": "Ray",
                  "name": "shareLent",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "startDate",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "endDate",
                  "type": "uint256"
                },
                {
                  "internalType": "struct Auction",
                  "name": "auction",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "duration",
                      "type": "uint256"
                    },
                    {
                      "internalType": "Ray",
                      "name": "priceFactor",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "Ray",
                  "name": "interestPerSecond",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "borrower",
                  "type": "address"
                },
                {
                  "internalType": "struct NFToken",
                  "name": "collateral",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "contract IERC721",
                      "name": "implem",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "id",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "struct Payment",
                  "name": "payment",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "paid",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "minInterestsToRepay",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bool",
                      "name": "liquidated",
                      "type": "bool"
                    },
                    {
                      "internalType": "bool",
                      "name": "borrowerClaimed",
                      "type": "bool"
                    }
                  ]
                },
                {
                  "internalType": "uint256",
                  "name": "supplyPositionIndex",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "nbOfPositions",
                  "type": "uint256"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract IERC20",
              "name": "currency",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getMinOfferCostAndBorrowableAmount",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "minOfferCost",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "offerBorrowAmountLowerBound",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getParameters",
          "outputs": [
            {
              "internalType": "Ray",
              "name": "auctionPriceFactor",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "auctionDuration",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "nbOfLoans",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "nbOfTranches",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRateOfTranche",
          "outputs": [
            {
              "internalType": "Ray",
              "name": "rate",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isApprovedForAll",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct Offer",
              "name": "offer",
              "type": "tuple",
              "components": [
                {
                  "internalType": "contract IERC20",
                  "name": "assetToLend",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "loanToValue",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "duration",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "expirationDate",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "tranche",
                  "type": "uint256"
                },
                {
                  "internalType": "struct NFToken",
                  "name": "collateral",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "contract IERC721",
                      "name": "implem",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "id",
                      "type": "uint256"
                    }
                  ]
                }
              ]
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "offerDigest",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "onERC721Received",
          "outputs": [
            {
              "internalType": "bytes4",
              "name": "",
              "type": "bytes4"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "ownerOf",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "position",
          "outputs": [
            {
              "internalType": "struct Provision",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "Ray",
                  "name": "share",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "loanId",
                  "type": "uint256"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "loanId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "price",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "loanIds",
              "type": "uint256[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "repay"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "safeTransferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "safeTransferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "struct Loan",
              "name": "loan",
              "type": "tuple",
              "components": [
                {
                  "internalType": "contract IERC20",
                  "name": "assetLent",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "lent",
                  "type": "uint256"
                },
                {
                  "internalType": "Ray",
                  "name": "shareLent",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "startDate",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "endDate",
                  "type": "uint256"
                },
                {
                  "internalType": "struct Auction",
                  "name": "auction",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "duration",
                      "type": "uint256"
                    },
                    {
                      "internalType": "Ray",
                      "name": "priceFactor",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "Ray",
                  "name": "interestPerSecond",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "borrower",
                  "type": "address"
                },
                {
                  "internalType": "struct NFToken",
                  "name": "collateral",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "contract IERC721",
                      "name": "implem",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "id",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "struct Payment",
                  "name": "payment",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "paid",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "minInterestsToRepay",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bool",
                      "name": "liquidated",
                      "type": "bool"
                    },
                    {
                      "internalType": "bool",
                      "name": "borrowerClaimed",
                      "type": "bool"
                    }
                  ]
                },
                {
                  "internalType": "uint256",
                  "name": "supplyPositionIndex",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "nbOfPositions",
                  "type": "uint256"
                }
              ]
            },
            {
              "internalType": "struct Provision",
              "name": "provision",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "Ray",
                  "name": "share",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "loanId",
                  "type": "uint256"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "sendInterestsExternal",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct Loan",
              "name": "loan",
              "type": "tuple",
              "components": [
                {
                  "internalType": "contract IERC20",
                  "name": "assetLent",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "lent",
                  "type": "uint256"
                },
                {
                  "internalType": "Ray",
                  "name": "shareLent",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "startDate",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "endDate",
                  "type": "uint256"
                },
                {
                  "internalType": "struct Auction",
                  "name": "auction",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "duration",
                      "type": "uint256"
                    },
                    {
                      "internalType": "Ray",
                      "name": "priceFactor",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "Ray",
                  "name": "interestPerSecond",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "borrower",
                  "type": "address"
                },
                {
                  "internalType": "struct NFToken",
                  "name": "collateral",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "contract IERC721",
                      "name": "implem",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "id",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "struct Payment",
                  "name": "payment",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "paid",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "minInterestsToRepay",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bool",
                      "name": "liquidated",
                      "type": "bool"
                    },
                    {
                      "internalType": "bool",
                      "name": "borrowerClaimed",
                      "type": "bool"
                    }
                  ]
                },
                {
                  "internalType": "uint256",
                  "name": "supplyPositionIndex",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "nbOfPositions",
                  "type": "uint256"
                }
              ]
            },
            {
              "internalType": "struct Provision",
              "name": "provision",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "Ray",
                  "name": "share",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "loanId",
                  "type": "uint256"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "sendShareOfSaleAsSupplierExternal",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "approved",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setApprovalForAll"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "newAuctionDuration",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setAuctionDuration"
        },
        {
          "inputs": [
            {
              "internalType": "Ray",
              "name": "newAuctionPriceFactor",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setAuctionPriceFactor"
        },
        {
          "inputs": [
            {
              "internalType": "contract IERC20",
              "name": "currency",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "newLowerBound",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setBorrowAmountPerOfferLowerBound"
        },
        {
          "inputs": [
            {
              "internalType": "contract IERC20",
              "name": "currency",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "newMinOfferCost",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setMinOfferCost"
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetArtifactSelectors",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzSelector[]",
              "name": "targetedArtifactSelectors_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes4[]",
                  "name": "selectors",
                  "type": "bytes4[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetArtifacts",
          "outputs": [
            {
              "internalType": "string[]",
              "name": "targetedArtifacts_",
              "type": "string[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetContracts",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "targetedContracts_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetSelectors",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzSelector[]",
              "name": "targetedSelectors_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes4[]",
                  "name": "selectors",
                  "type": "bytes4[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetSenders",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "targetedSenders_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "struct OfferArg[]",
              "name": "args",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "bytes",
                  "name": "signature",
                  "type": "bytes"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "struct Offer",
                  "name": "offer",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "contract IERC20",
                      "name": "assetToLend",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "loanToValue",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "duration",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "expirationDate",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "tranche",
                      "type": "uint256"
                    },
                    {
                      "internalType": "struct NFToken",
                      "name": "collateral",
                      "type": "tuple",
                      "components": [
                        {
                          "internalType": "contract IERC721",
                          "name": "implem",
                          "type": "address"
                        },
                        {
                          "internalType": "uint256",
                          "name": "id",
                          "type": "uint256"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "struct NFToken",
              "name": "nft",
              "type": "tuple",
              "components": [
                {
                  "internalType": "contract IERC721",
                  "name": "implem",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "useCollateralExternal",
          "outputs": [
            {
              "internalType": "struct Loan",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "contract IERC20",
                  "name": "assetLent",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "lent",
                  "type": "uint256"
                },
                {
                  "internalType": "Ray",
                  "name": "shareLent",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "startDate",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "endDate",
                  "type": "uint256"
                },
                {
                  "internalType": "struct Auction",
                  "name": "auction",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "duration",
                      "type": "uint256"
                    },
                    {
                      "internalType": "Ray",
                      "name": "priceFactor",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "Ray",
                  "name": "interestPerSecond",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "borrower",
                  "type": "address"
                },
                {
                  "internalType": "struct NFToken",
                  "name": "collateral",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "contract IERC721",
                      "name": "implem",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "id",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "struct Payment",
                  "name": "payment",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "paid",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "minInterestsToRepay",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bool",
                      "name": "liquidated",
                      "type": "bool"
                    },
                    {
                      "internalType": "bool",
                      "name": "borrowerClaimed",
                      "type": "bool"
                    }
                  ]
                },
                {
                  "internalType": "uint256",
                  "name": "supplyPositionIndex",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "nbOfPositions",
                  "type": "uint256"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct OfferArg",
              "name": "arg",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes",
                  "name": "signature",
                  "type": "bytes"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "struct Offer",
                  "name": "offer",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "contract IERC20",
                      "name": "assetToLend",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "loanToValue",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "duration",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "expirationDate",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "tranche",
                      "type": "uint256"
                    },
                    {
                      "internalType": "struct NFToken",
                      "name": "collateral",
                      "type": "tuple",
                      "components": [
                        {
                          "internalType": "contract IERC721",
                          "name": "implem",
                          "type": "address"
                        },
                        {
                          "internalType": "uint256",
                          "name": "id",
                          "type": "uint256"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "internalType": "struct CollateralState",
              "name": "collatState",
              "type": "tuple",
              "components": [
                {
                  "internalType": "Ray",
                  "name": "matched",
                  "type": "uint256"
                },
                {
                  "internalType": "contract IERC20",
                  "name": "assetLent",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tranche",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "minOfferDuration",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "minOfferLoanToValue",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxOfferLoanToValue",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "struct NFToken",
                  "name": "nft",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "contract IERC721",
                      "name": "implem",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "id",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "uint256",
                  "name": "loanId",
                  "type": "uint256"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "useOfferExternal",
          "outputs": [
            {
              "internalType": "struct CollateralState",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "Ray",
                  "name": "matched",
                  "type": "uint256"
                },
                {
                  "internalType": "contract IERC20",
                  "name": "assetLent",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tranche",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "minOfferDuration",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "minOfferLoanToValue",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxOfferLoanToValue",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "struct NFToken",
                  "name": "nft",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "contract IERC721",
                      "name": "implem",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "id",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "uint256",
                  "name": "loanId",
                  "type": "uint256"
                }
              ]
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "approve(address,uint256)": {
            "details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
          },
          "balanceOf(address)": {
            "details": "Returns the number of tokens in ``owner``'s account."
          },
          "borrow(((address,uint256),(bytes,uint256,(address,uint256,uint256,uint256,uint256,(address,uint256)))[])[])": {
            "params": {
              "args": "list of arguments specifying at which terms each collateral should be used"
            }
          },
          "buy((uint256,address)[])": {
            "params": {
              "args": "arguments on what and how to buy"
            }
          },
          "claim(uint256[])": {
            "params": {
              "positionIds": "identifiers of one or multiple supply position to burn"
            },
            "returns": {
              "sent": "amount sent"
            }
          },
          "claimAsBorrower(uint256[])": {
            "params": {
              "loanIds": "loan identifiers of one or multiple loans where the borrower wants to claim liquidation share"
            },
            "returns": {
              "sent": "amount sent"
            }
          },
          "createTranche(uint256)": {
            "params": {
              "newTranche": "the interest rate of the new tranche"
            }
          },
          "getApproved(uint256)": {
            "details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
          },
          "getLoan(uint256)": {
            "params": {
              "id": "loan identifier"
            },
            "returns": {
              "_0": "loan the corresponding loan"
            }
          },
          "getMinOfferCostAndBorrowableAmount(address)": {
            "params": {
              "currency": "the erc20 asset lent on which the parameters apply"
            },
            "returns": {
              "minOfferCost": "the minimal amount to repay per offer used in loan",
              "offerBorrowAmountLowerBound": " minimum amount to borrow per offer used in loan"
            }
          },
          "getParameters()": {
            "returns": {
              "auctionDuration": "number of seconds after the auction start when the price hits 0",
              "auctionPriceFactor": "factor multiplied with the loan to value of a loan to get initial price         of a collateral on sale",
              "nbOfLoans": "total number of loans ever issued (active and ended)",
              "nbOfTranches": "total number of interest rates tranches ever created (active and inactive)"
            }
          },
          "getRateOfTranche(uint256)": {
            "params": {
              "id": "rate identifier"
            },
            "returns": {
              "rate": "the rate of the tranche, as a Ray, multiplier per second of the amount to repay (non compounding)         I.e lent * time since loan start * tranche = interests to repay"
            }
          },
          "isApprovedForAll(address,address)": {
            "details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
          },
          "offerDigest((address,uint256,uint256,uint256,uint256,(address,uint256)))": {
            "params": {
              "offer": "the loan offer signed/to sign by a supplier"
            },
            "returns": {
              "_0": "digest the digest, ecdsa sign as is to produce a valid loan offer signature"
            }
          },
          "onERC721Received(address,address,uint256,bytes)": {
            "details": "param data must be of format OfferArg[]",
            "params": {
              "data": "abi encoded arguments for the loan",
              "operator": "account that initialized the transfer action according to the NFT implementation contract",
              "tokenId": "token identifier of the NFT sent according to the NFT implementation contract"
            },
            "returns": {
              "_0": "selector `this.onERC721Received.selector` ERC721-compliant response, signaling compatibility"
            }
          },
          "ownerOf(uint256)": {
            "details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
          },
          "position(uint256)": {
            "params": {
              "tokenId": "token identifier of the supply position"
            },
            "returns": {
              "_0": "provision metadata"
            }
          },
          "price(uint256)": {
            "params": {
              "loanId": "identifier of the loan"
            },
            "returns": {
              "_0": "price computed price"
            }
          },
          "repay(uint256[])": {
            "details": "repay on behalf is activated, the collateral goes to the original borrower",
            "params": {
              "loanIds": "identifiers of loans to repay"
            }
          },
          "safeTransferFrom(address,address,uint256)": {
            "details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
          },
          "safeTransferFrom(address,address,uint256,bytes)": {
            "details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
          },
          "setAuctionDuration(uint256)": {
            "params": {
              "newAuctionDuration": "number of seconds of the duration"
            }
          },
          "setAuctionPriceFactor(uint256)": {
            "params": {
              "newAuctionPriceFactor": "the new factor multiplied to the loan to value"
            }
          },
          "setBorrowAmountPerOfferLowerBound(address,uint256)": {
            "params": {
              "currency": "the erc20 on which a new borrow amount lower bound is taking effect",
              "newLowerBound": "the new lower bound"
            }
          },
          "setMinOfferCost(address,uint256)": {
            "params": {
              "currency": "the erc20 on which a new minimum borrow cost will take effect",
              "newMinOfferCost": "the new minimum amount that will need to be repaid per loan offer used"
            }
          },
          "supportsInterface(bytes4)": {
            "details": "don't use this method for inclusion in the facet function selectors     prefer the LibDiamond implementation for this method     it is included here for IERC721-compliance"
          },
          "totalSupply()": {
            "returns": {
              "_0": "totalSupply the number"
            }
          },
          "transferFrom(address,address,uint256)": {
            "details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "borrow(((address,uint256),(bytes,uint256,(address,uint256,uint256,uint256,uint256,(address,uint256)))[])[])": {
            "notice": "take loans, take ownership of NFTs specified as collateral, sends borrowed money to caller"
          },
          "buy((uint256,address)[])": {
            "notice": "buy one or multiple NFTs in liquidation"
          },
          "claim(uint256[])": {
            "notice": "claims principal plus interests or liquidation share due as a supplier"
          },
          "claimAsBorrower(uint256[])": {
            "notice": "claims share of liquidation due to a borrower who's collateral has been sold"
          },
          "createTranche(uint256)": {
            "notice": "creates a new tranche at a new identifier for lenders to provide offers for"
          },
          "getLoan(uint256)": {
            "notice": "get loan metadata"
          },
          "getMinOfferCostAndBorrowableAmount(address)": {
            "notice": "get the minimal amount to repay per offer used in loan and minimum amount to borrow per offer.     Gives currently active settings, may not concern loans already issued."
          },
          "getParameters()": {
            "notice": "gets current values of parameters impacting loans behavior and total number of loans (active and ended)"
          },
          "getRateOfTranche(uint256)": {
            "notice": "gets the rate of tranche `id`"
          },
          "offerDigest((address,uint256,uint256,uint256,uint256,(address,uint256)))": {
            "notice": "computes EIP-712 compliant digest of a loan offer"
          },
          "onERC721Received(address,address,uint256,bytes)": {
            "notice": "borrow using sent NFT as collateral without needing approval through transfer callback"
          },
          "position(uint256)": {
            "notice": "get metadata on provision linked to the supply position"
          },
          "price(uint256)": {
            "notice": "gets the price to buy the underlying collateral of the loan"
          },
          "repay(uint256[])": {
            "notice": "repay one or multiple loans, gives collaterals back"
          },
          "setAuctionDuration(uint256)": {
            "notice": "sets the time it takes to auction prices to fall to 0 for future loans"
          },
          "setAuctionPriceFactor(uint256)": {
            "notice": "sets the factor applied to the loan to value setting initial price of auction for future loans"
          },
          "setBorrowAmountPerOfferLowerBound(address,uint256)": {
            "notice": "updates the borrow amount lower bound per offer for one currency"
          },
          "setMinOfferCost(address,uint256)": {
            "notice": "updates the minimum amount to repay per used loan offer when borrowing a certain currency"
          },
          "totalSupply()": {
            "notice": "total number of supply positions ever minted (counting burned ones)"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin/=node_modules/@openzeppelin/",
        ":diamond/=node_modules/diamond/",
        ":ds-test/=node_modules/ds-test/src/",
        ":forge-std/=node_modules/forge-std/src/",
        ":solmate/=node_modules/solmate/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "test/Commons/Internal.sol": "Internal"
      },
      "libraries": {}
    },
    "sources": {
      "node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol": {
        "keccak256": "0x4ffc0547c02ad22925310c585c0f166f8759e2648a09e9b489100c42f15dd98d",
        "urls": [
          "bzz-raw://15f52f51413a9de1ff191e2f6367c62178e1df7806d7880fe857a98b0b66253d",
          "dweb:/ipfs/QmaQG1fwfgUt5E9nu2cccFiV47B2V78MM1tCy1qB7n4MsH"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b",
        "urls": [
          "bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34",
          "dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "keccak256": "0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca",
        "urls": [
          "bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd",
          "dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol": {
        "keccak256": "0x1e854874c68bec05be100dc0092cb5fbbc71253d370ae98ddef248bbfc3fe118",
        "urls": [
          "bzz-raw://ef0fb6e809779426dc2ac201149bbad4aecdc5810874f2843b050e8b5fef8d30",
          "dweb:/ipfs/QmPDRjaNxmcyxLUKvv8Fxk5eWcf7xvC5S9JpbtqvE7Cadu"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol": {
        "keccak256": "0xab28a56179c1db258c9bf5235b382698cb650debecb51b23d12be9e241374b68",
        "urls": [
          "bzz-raw://daae589a9d6fa7e55f99f86c0a16796ca490f243fb3693632c3711c0646c1d56",
          "dweb:/ipfs/QmR3zpd7wNw3rcUdekwiv6FYHJqksuTCXLVioTxu6Fbxk3"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
        "keccak256": "0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da",
        "urls": [
          "bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708",
          "dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol": {
        "keccak256": "0xa8796bd16014cefb8c26449413981a49c510f92a98d6828494f5fd046223ced3",
        "urls": [
          "bzz-raw://63a5e0bb5a7d182e0d0eef87033f78115eab791de3626a929bc98c157087880a",
          "dweb:/ipfs/QmetkXAu2CJKS4qrZtEQPU8okAPwUwa6HL4XYwk8vrYMk8"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol": {
        "keccak256": "0xd1556954440b31c97a142c6ba07d5cade45f96fafd52091d33a14ebe365aecbf",
        "urls": [
          "bzz-raw://26fef835622b46a5ba08b3ef6b46a22e94b5f285d0f0fb66b703bd30217d2c34",
          "dweb:/ipfs/QmZ548qdwfL1qF7aXz3xh1GCdTiST81kGGuKRqVUfYmPZR"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
        "keccak256": "0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9",
        "urls": [
          "bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146",
          "dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Address.sol": {
        "keccak256": "0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1",
        "urls": [
          "bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269",
          "dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Strings.sol": {
        "keccak256": "0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a",
        "urls": [
          "bzz-raw://8c969013129ba9e651a20735ef659fef6d8a1139ea3607bd4b26ddea2d645634",
          "dweb:/ipfs/QmVhVa6LGuzAcB8qgDtVHRkucn4ihj5UZr8xBLcJkP6ucb"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/cryptography/ECDSA.sol": {
        "keccak256": "0xda898fa084aa1ddfdb346e6a40459e00a59d87071cce7c315a46d648dd71d0ba",
        "urls": [
          "bzz-raw://ce501a941f4aa1555c04dabb5e07992503bb6a9b32ff8f7cdcefdb4a742210cb",
          "dweb:/ipfs/QmeScPrUpdrGYs9BytV3Z5ZWJcBXtuAgCW4BLHua4xFUxx"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/cryptography/EIP712.sol": {
        "keccak256": "0x948d8b2d18f38141ec78c5229d770d950ebc781ed3f44cc9e3ccbb9fded5846a",
        "urls": [
          "bzz-raw://7311ac950ed2d81f3ccf1784a926efbfc82a86dcb5c98d41eb3792c0cac63a2f",
          "dweb:/ipfs/QmRRwCUHewkPmehx8QRYENFoWyLNx8UEZGULxWYUeSZdTS"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol": {
        "keccak256": "0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b",
        "urls": [
          "bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d",
          "dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1",
        "urls": [
          "bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f",
          "dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/math/Math.sol": {
        "keccak256": "0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6",
        "urls": [
          "bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b",
          "dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz"
        ],
        "license": "MIT"
      },
      "node_modules/diamond/contracts/facets/OwnershipFacet.sol": {
        "keccak256": "0x6502a171801d68e68de6c5a2b879d5e12a3a1539cdc568c2bfcc268fbdf6c5a9",
        "urls": [
          "bzz-raw://e8094a53d216df365a5cbdaa0e4292c6faae493e88c62e7a616ccb4b5440c097",
          "dweb:/ipfs/QmNXspNxT83mcL1mynUiUrfj94aVe8rz2UyZUJJn7gfWWe"
        ],
        "license": "MIT"
      },
      "node_modules/diamond/contracts/interfaces/IDiamond.sol": {
        "keccak256": "0x37be579b243559c0c16a8de037d2c428e8fafdfdd9cde69fa165a07f5adfda2c",
        "urls": [
          "bzz-raw://0f16b9edb01e35edf96566f6460c4986fcc3fb9bff6291fab5be17d256cd0fd2",
          "dweb:/ipfs/Qmdq869cYabBjfnYZgcF5BSHsFQXT1EZNg2umHMAxZqWEH"
        ],
        "license": "MIT"
      },
      "node_modules/diamond/contracts/interfaces/IDiamondCut.sol": {
        "keccak256": "0x9ecd4a637b7cb44c26a4ab7760766defce42a6dc36a355b92dfeef9ce4391fee",
        "urls": [
          "bzz-raw://cd0e7ad69374bc41bc62c90428f9795c8a06360599c4c6b06e76bd8a1b91e28f",
          "dweb:/ipfs/QmfZk5ZiKQQaudjYf3qEumVsW87gELxcYMNRu3AHSLuk4n"
        ],
        "license": "MIT"
      },
      "node_modules/diamond/contracts/interfaces/IDiamondLoupe.sol": {
        "keccak256": "0x10884024af2c0f7deca0fac4ddf84e76da5dba35b6e02fabeac8ea54c1a5c6f7",
        "urls": [
          "bzz-raw://df3404a4aed3bbda2f5e441d7035b354237d8c9d7c27b149ccf66d13a1d81d45",
          "dweb:/ipfs/QmZvHWgRCge8tLJ3x3Lf3JQkbNTgAN6LzwCGBabbgk8tew"
        ],
        "license": "MIT"
      },
      "node_modules/diamond/contracts/interfaces/IERC165.sol": {
        "keccak256": "0x7541f7408d0f74162bc4664d5e012427f2ceaab2abadca0353269ef15ee03d8b",
        "urls": [
          "bzz-raw://a8e7a34b3ea39f4c0dfa6f5ace5d9415e4d0c90cb3f4264e6946b808f2d4011c",
          "dweb:/ipfs/QmWdcRF4krMMb1ua3hmV8avdHKYa4XXt1iw7sxx1ntsEJa"
        ],
        "license": "MIT"
      },
      "node_modules/diamond/contracts/interfaces/IERC173.sol": {
        "keccak256": "0x001e07b0fbc894300b939d496ffb005abe398b5bc609802d319b8cdeafe5d36b",
        "urls": [
          "bzz-raw://8e59f66879ef993892410cbe834b1d2dd34891f47066b7be601ff825b0748361",
          "dweb:/ipfs/QmZedQ668we8ohPPZF5tPP5gKpJ5n22h3FDFkoFT5VXpEu"
        ],
        "license": "MIT"
      },
      "node_modules/diamond/contracts/libraries/LibDiamond.sol": {
        "keccak256": "0x4090c1e2191d081ff33e1631eabbebfb69e29ac1bf67516d7f4430bb2e0b2983",
        "urls": [
          "bzz-raw://3c66e113d032be747262abe642abcec8c132400fe156414721590412d9af6485",
          "dweb:/ipfs/QmfLg3p9wZ748cSDrfh4TmxCuMU8oVZU9BzAGhJSFQysWM"
        ],
        "license": "MIT"
      },
      "node_modules/ds-test/src/test.sol": {
        "keccak256": "0x8758531bbac3972efcf1fa46383dbe1d276406fe527bc7abb2f236486278e83b",
        "urls": [
          "bzz-raw://1f64264d61506847acf8761e84aff690cebe830958eac00bac7924d8be569240",
          "dweb:/ipfs/QmSekDJvJ82MZAmr63n7YvfLzQ7gS4NLSHPmHL3GN3rw8k"
        ],
        "license": "GPL-3.0-or-later"
      },
      "node_modules/forge-std/src/Base.sol": {
        "keccak256": "0x609e3a00319169988cc8272e837f350a9ba77cf8f8f62e4897a8e4a8a5f0fb27",
        "urls": [
          "bzz-raw://b24435e35ba5b080ebd6e8976c23fb735c7212d042be8462ffd2ea50c5250363",
          "dweb:/ipfs/QmPeVvN7FS4oMmCuYAeRdZihTfrG4tA7Vvunuvv59a6wre"
        ],
        "license": "MIT"
      },
      "node_modules/forge-std/src/StdAssertions.sol": {
        "keccak256": "0xdb05fd11858f232b8b5c6c9175229bdd061c277c34f13b0bdc64d333bcbd2617",
        "urls": [
          "bzz-raw://08ae865564d9c1fa1012b61db77a2da2844ac1ae0a216b16c9fe9ab65ddf80af",
          "dweb:/ipfs/QmfFfmkjb2Qfc5dPJvwQgjTMbeQ12dTPFeAQ8Gb944U44g"
        ],
        "license": "MIT"
      },
      "node_modules/forge-std/src/StdChains.sol": {
        "keccak256": "0x097b75f7171af89f433407e040d11b22fc26e2fe03793c2cfe18cad390d7af8b",
        "urls": [
          "bzz-raw://19d1dca7b398e517499ffa65ad44df69cdd016f37dc57e2d07d50279d3ddee17",
          "dweb:/ipfs/QmfMFR25367GB5PoBi1KZxWs1hZcJtC3eANiioG3dKj8ah"
        ],
        "license": "MIT"
      },
      "node_modules/forge-std/src/StdCheats.sol": {
        "keccak256": "0x3c536209b4d4e1879adc4d91b12e237985f0f8f91e71828dacd8fca3bdf2fa99",
        "urls": [
          "bzz-raw://65adfc61088d242dbab8faa738d104005531e3a52ed993329b54fa7ee45e53ab",
          "dweb:/ipfs/QmP1d4thtELTT2vup4XmrCSKXZ91Eq756pgKq1z5hq2NGP"
        ],
        "license": "MIT"
      },
      "node_modules/forge-std/src/StdError.sol": {
        "keccak256": "0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77",
        "urls": [
          "bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6",
          "dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj"
        ],
        "license": "MIT"
      },
      "node_modules/forge-std/src/StdInvariant.sol": {
        "keccak256": "0xd855e1fea6247f1bef118e2bee9f0039832988b7173fd17766bba4014ae26a3c",
        "urls": [
          "bzz-raw://c58c0f0b66852dfd3c76fb7958d8b023489d7a874c7cb1ad4f2021f9ec8ab477",
          "dweb:/ipfs/Qmd3MX9HAkNUhPddL29ekwhqgRnjAobZ35UzchaJZNACCN"
        ],
        "license": "MIT"
      },
      "node_modules/forge-std/src/StdJson.sol": {
        "keccak256": "0x9e2a7521190c462a0667706385f1c52a816220a9813ca8ac520fba7ba45d660b",
        "urls": [
          "bzz-raw://7d23017fe6570b28130a731b86179352b93a5fb5af32f11559837afc1186293c",
          "dweb:/ipfs/QmR3p6zG5Kmcr8gKocFCSopLHfXv1AziPJbH17nKyMxwxV"
        ],
        "license": "MIT"
      },
      "node_modules/forge-std/src/StdMath.sol": {
        "keccak256": "0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2",
        "urls": [
          "bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92",
          "dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC"
        ],
        "license": "MIT"
      },
      "node_modules/forge-std/src/StdStorage.sol": {
        "keccak256": "0xd1517df281f973dba8b7ba52c02d3df552b60d91b8f47e4669049da648778673",
        "urls": [
          "bzz-raw://52e43264f58a5dcfd985f3c99aa81064805aa8f1c2b4c6521fd63d45cdbba8d5",
          "dweb:/ipfs/QmUMTF6cRjt5tCQrrgQDXVRmHQLjevNsTvLFdaA1m9TBj9"
        ],
        "license": "MIT"
      },
      "node_modules/forge-std/src/StdStyle.sol": {
        "keccak256": "0x2882555b0f58e48144e46e9aa5118a506b31ad7485327d54e8f681e8b414c337",
        "urls": [
          "bzz-raw://2850bcb1322de9d9dd87ded42debbe0e8fc4048173788d4c00c98b50e5f76985",
          "dweb:/ipfs/QmUiPKnj7GZLLQbJGY7bVDu79Q9jGEYNjR5ZBgwFy8mH97"
        ],
        "license": "MIT"
      },
      "node_modules/forge-std/src/StdUtils.sol": {
        "keccak256": "0x6584855fecbe5b6a9f8ebdb26b37c58532c5bc5cc6e1737dfa7c8a045087be55",
        "urls": [
          "bzz-raw://40a35a4d292b4fed02e11d5f25fb474f10a7c4eb99f75b5383dc23fcb6e55d3c",
          "dweb:/ipfs/QmYZ2nz1EmNh4xLWf4YybZoa1Da1z3Wq3w4pneMhkouMi4"
        ],
        "license": "MIT"
      },
      "node_modules/forge-std/src/Test.sol": {
        "keccak256": "0xddf16afce2bb7bbb69ed868d4c7ee8b4ea4ffbf8929427fe799682f107534945",
        "urls": [
          "bzz-raw://52f6ebde2a4cb9d08aea5fb3d62b2f15961bb9a29d6d9e30dd0859d0d631cabf",
          "dweb:/ipfs/QmeJ9Dp1GYUggzjGiwTZkxCfB15NfyfgcyrNZL5tyWZbVZ"
        ],
        "license": "MIT"
      },
      "node_modules/forge-std/src/Vm.sol": {
        "keccak256": "0xdd9f518aade851117d3ca3122cae6ed413a8b8355d43d69db336e94da3214a96",
        "urls": [
          "bzz-raw://939ede17edec5c78176379839f4c68851b1316e8f5789efb2f01cbdae09b88ef",
          "dweb:/ipfs/QmYiBBb7Nyuse7HoEFkCeauUwcpef9S33ozZYDqXCEXEtH"
        ],
        "license": "MIT"
      },
      "node_modules/forge-std/src/console.sol": {
        "keccak256": "0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba",
        "urls": [
          "bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70",
          "dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec"
        ],
        "license": "MIT"
      },
      "node_modules/forge-std/src/console2.sol": {
        "keccak256": "0xcd5706f5a7025825d9fd389c89b49bf571f9abaea8a062dc4048320b5b43bf46",
        "urls": [
          "bzz-raw://c066485a7d4bd18d44efb4c89274b0959e8066b9a480383a2ce07d7f31555f88",
          "dweb:/ipfs/QmckeYfA5FtAjcxaytq69Dpj6uY57tbQ61kNPPxXi9kgbW"
        ],
        "license": "MIT"
      },
      "node_modules/forge-std/src/interfaces/IMulticall3.sol": {
        "keccak256": "0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a",
        "urls": [
          "bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0",
          "dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2"
        ],
        "license": "MIT"
      },
      "src/AdminFacet.sol": {
        "keccak256": "0x1a2d8498fd8fd33bdda336678927e9f541b02b454d82994cd4a650f1f3a2942a",
        "urls": [
          "bzz-raw://53f331f3125c77de8a8efa62288c88b9e72f93763cf7b255ee039a661198e936",
          "dweb:/ipfs/QmPvkNQKNyRf3BVyjet6YmWmzhBKC5tFq3BZTx66U167u2"
        ],
        "license": "UNLICENSED"
      },
      "src/AuctionFacet.sol": {
        "keccak256": "0x41a60f4e0ea36dd4a1acb8845d07f8eee2e788aa0acc7eeea3c3443448231f22",
        "urls": [
          "bzz-raw://049a623687b02d8ceb7f933cdad6b6de5f28d826cb7eb828c1b2ecfba1b02b48",
          "dweb:/ipfs/QmRSjXjDZqys1KWaK2YbWhuMju5A45KLETF9KtjzHVFGbM"
        ],
        "license": "UNLICENSED"
      },
      "src/BorrowFacet.sol": {
        "keccak256": "0x960ac7f5ddc23fd9c9b87481451b47022b85ce53eefc1c46fe9cdbd34481e2fc",
        "urls": [
          "bzz-raw://3c17390c85d849708b4489909ab63f11ceb8652d2c2f465e2c0b42b7a71fed94",
          "dweb:/ipfs/QmZNQ9RdZhk9QAxQkws1Fsv5UMwfJpra77HokJCxM8wERH"
        ],
        "license": "UNLICENSED"
      },
      "src/BorrowLogic/BorrowCheckers.sol": {
        "keccak256": "0x023dce239e7e6d534db05e6364715ebb3399c3c9dccf894e9076712ab779745d",
        "urls": [
          "bzz-raw://cfabb6dbacbb9d09ee26887d755e88d9761d266a3daa68a54c070ff967bf2aa8",
          "dweb:/ipfs/QmbdtPZcZ5QSB8LKQMEy6wU5jDZSSkMJvtGVDpEDuN3bz4"
        ],
        "license": "UNLICENSED"
      },
      "src/BorrowLogic/BorrowHandlers.sol": {
        "keccak256": "0x41dbb5b648ea50541ab227e77e8850607731ad7ebd8171f5d0d96eb829246301",
        "urls": [
          "bzz-raw://780b77c00afd5fa5d97ba16f3d3a7e83bb909608fb54f5f38f19120a16d5bb18",
          "dweb:/ipfs/QmTPZ47VbeFxbWdou6hFMkk86PStsLuh2uNZfhJVoGjyBX"
        ],
        "license": "UNLICENSED"
      },
      "src/ClaimFacet.sol": {
        "keccak256": "0x06a664d0d467d20ffc78de21c78670a08f134752f4872db55d5dc587e76ecec2",
        "urls": [
          "bzz-raw://e1312cb1cff9ba34218db3219647e9d63685e32a88ed5007858d8af76b440653",
          "dweb:/ipfs/QmbazoYdTrS6FaMjbXM5eWWaz41JGV9QzazuxXAVdDsk1K"
        ],
        "license": "UNLICENSED"
      },
      "src/DataStructure/ERC721Errors.sol": {
        "keccak256": "0x0ee13f898a2d61d6662ef236db05001d14086ff4431bef2ae89c1979819d38d0",
        "urls": [
          "bzz-raw://2e1878fe70994d02159dbf4a5a9c79b3665feaae0d08ff420b3f00cb8ed6355a",
          "dweb:/ipfs/QmNYJDoien8bUQFYuc75GyVGVTYuiUagF4RRUSGTTmZNH7"
        ],
        "license": "UNLICENSED"
      },
      "src/DataStructure/Errors.sol": {
        "keccak256": "0x6c4db7ebc787971449c92a004a1742a0ebed90b3073de98ac677a7471696f8c5",
        "urls": [
          "bzz-raw://b650ca8195bbdf7e6010ec51248ea3beb4a255730fb8e6404196b1680d5f1433",
          "dweb:/ipfs/QmbU8dkitPbxtTkUWgqL4Rgx3KdDzDgkYESY48muSmcTop"
        ],
        "license": "UNLICENSED"
      },
      "src/DataStructure/Global.sol": {
        "keccak256": "0x9596c1bdf1271dd447db6a8f26ca493253674e252c9f63a7bc13c8689a7b6e49",
        "urls": [
          "bzz-raw://3ff822127c6c674400e9730466eb6832d19a72eaf991f3bbf62d251a6e2b49d5",
          "dweb:/ipfs/QmZPGbWwS7rTPF3NiyjivxDseeBW64GhfkGvVNuaCbnzDv"
        ],
        "license": "UNLICENSED"
      },
      "src/DataStructure/Objects.sol": {
        "keccak256": "0x251dd6c3f36c5a2c8a6a867aa29c9ba8b4bb7f2ec1a7321d630fea19f6bbd83a",
        "urls": [
          "bzz-raw://a7f620222a6b6d909e8aa2d7191200b312345b6c704eecdf40729982e238f44e",
          "dweb:/ipfs/QmTikrgA5SKJrsJanid1atHw1M7opEvwuGKNRQTbjeM4sq"
        ],
        "license": "UNLICENSED"
      },
      "src/DataStructure/Storage.sol": {
        "keccak256": "0x8f99f5f94641c826d0b4bd2dadb065745ff877b195fb1eb7392362a026d01380",
        "urls": [
          "bzz-raw://f2c2362ee8472e6076f7f18a51264c96e63a346e61da6a7234abe5e3c034de38",
          "dweb:/ipfs/QmW59HJM49LDieB2svjKnYzo7hdYKG24rLKgb7AfiXht4z"
        ],
        "license": "UNLICENSED"
      },
      "src/ProtocolFacet.sol": {
        "keccak256": "0x9c1c8deb2d61a8e39028c31154e51f6f4acccd71d4995cd82442e5addd9a5916",
        "urls": [
          "bzz-raw://9e1d0cfcefa35601756a9f9aec29fcd1a072dc3e5e37d78def17d72ace29909d",
          "dweb:/ipfs/QmeCgh2tqzoz5Nf8X6UGY7ZeKTiyrvgoxZdzU3P9ua4JKX"
        ],
        "license": "UNLICENSED"
      },
      "src/RepayFacet.sol": {
        "keccak256": "0x5b5c777a189495808271068b7757f73542bbc27b6141599752eaf4bef63c8e89",
        "urls": [
          "bzz-raw://d6b289c89769655e173cecb2c20d8147d48ada74c5c6596060b70df7eed4b609",
          "dweb:/ipfs/Qmas7puaEDtvyLhMPUZGouNnVvky3gRKZCLemCxdLWALsF"
        ],
        "license": "UNLICENSED"
      },
      "src/Signature.sol": {
        "keccak256": "0x37073550ae20735f42ae719377540c0bedd633aad9ce97d40e0facb965e4d137",
        "urls": [
          "bzz-raw://d57bda44ce2f1e48f227c8b97cb23cd166d3b92421a3436835c81c1bc42a60ca",
          "dweb:/ipfs/QmU5yS6t3d6nhfUeGmwZnFsbo8LZe7MHED738pZBaUkPna"
        ],
        "license": "UNLICENSED"
      },
      "src/SupplyPositionFacet.sol": {
        "keccak256": "0xd96da66c04a30bc8d665bdbec2eebbf23998aff501e00f64fc26d7ed0c4df780",
        "urls": [
          "bzz-raw://bc62b16dbddf140812eb18fc39e7af0618c0b38c2b83ba9ee3efb67974963ad5",
          "dweb:/ipfs/QmYV7aBahd6EqmcjFK1Lncp27XeG2AKnLtQRFRnGsGu9Mz"
        ],
        "license": "UNLICENSED"
      },
      "src/SupplyPositionLogic/DiamondERC721.sol": {
        "keccak256": "0xdb5734014944ffbfc70b937c0cb2ab310d15c7ceb93e852bf5c6aef64c24584b",
        "urls": [
          "bzz-raw://51bc9d846048e67e83c9e708aedd5f68ce240bd87c1c4a68526ee224553c0279",
          "dweb:/ipfs/QmUWcdYokYYxTNpJtSwM22Q4WBKxJEjfhtyAU97NFh1VdZ"
        ],
        "license": "MIT"
      },
      "src/SupplyPositionLogic/NFTUtils.sol": {
        "keccak256": "0xc1fdc762292d11504da9d1b999d6364d8c76b721c8f6f7369e0030c9dae9af13",
        "urls": [
          "bzz-raw://dc9d2a3636065c11ad95bc669381dae82218909711ed54e31ee3085671ade192",
          "dweb:/ipfs/QmfX1zJes16PDd9NUGcSNYBMRvaykMhyaEMEQsmMugVtP4"
        ],
        "license": "MIT"
      },
      "src/SupplyPositionLogic/SafeMint.sol": {
        "keccak256": "0xfe55649875c4f7c6fa65c01b8abf9e0f6564cab19ec24fb895bdce6dde90764d",
        "urls": [
          "bzz-raw://5b0e86c734cce67187b23816bbba38c9eaab5e2154606de75866637f4774fd99",
          "dweb:/ipfs/QmPuJk6rhpUNjhftEAzbm26DA5tZw8sHybzYZ6G4PuWG8G"
        ],
        "license": "MIT"
      },
      "src/interface/IAdminFacet.sol": {
        "keccak256": "0xfc9606029a4ef8d26d8c86c377d77c3caf1e26335f3e155f279581e487bcc640",
        "urls": [
          "bzz-raw://5a04932fe22d016e66e172bff16c0611abcb8804e1039f99678a5d22e130daee",
          "dweb:/ipfs/QmUKzRKB5CPD3tE81Pbn8HHesuY1j64L5Xfbi4E8xsja8h"
        ],
        "license": "UNLICENSED"
      },
      "src/interface/IAuctionFacet.sol": {
        "keccak256": "0x142cf5565d929cf20c8b042f791360b7b76289620efcd42c90a37f2d8179e49f",
        "urls": [
          "bzz-raw://3aa1107c4c11a419c7340aff9624e3f539196759ffbe4eed5fde26cbbf1b4567",
          "dweb:/ipfs/QmfS88KKuQskg2RQP6GoVEbk9uUhbmVYH6Fps7yNUpfMCc"
        ],
        "license": "UNLICENSED"
      },
      "src/interface/IBorrowCheckers.sol": {
        "keccak256": "0x581d912358ce65c74e7e3f089486d5c2cc7f45be7cb02ef5ee26a293c9ba1f18",
        "urls": [
          "bzz-raw://18d4d2dee4cf9ccbeb8a33b037dc0021b1315fd3fca864a2127834f36cb6aaba",
          "dweb:/ipfs/QmUWvZMWUqv2DJpooXCHmQuBcr4kTzBhwApQniouAKdEJn"
        ],
        "license": "UNLICENSED"
      },
      "src/interface/IBorrowFacet.sol": {
        "keccak256": "0xc2351fa73840199deb8c9ecd663294517ce6e457e198d699d53d651b72f1fe43",
        "urls": [
          "bzz-raw://2094053b1d81f799877ee2ccd44a38601d80b97f93d54a14e0dfbc8ba8f3aba7",
          "dweb:/ipfs/QmZwEsKquQgH1H5tnKCQuBEeU9mRcnNBPC2bXZGt8XVuHF"
        ],
        "license": "UNLICENSED"
      },
      "src/interface/IBorrowHandlers.sol": {
        "keccak256": "0x420bed3254df51bff3c728e252b74a9603fa3f834330c1edf0f0d257444f03ce",
        "urls": [
          "bzz-raw://200955bcca9610fd1a0e3230f761ade89a12285bf60c91a758ef4045f5b55f54",
          "dweb:/ipfs/QmV9vYWeLVvo5ykdi8x6scgK4QDwYuPkhd4KETKWPA5tMv"
        ],
        "license": "UNLICENSED"
      },
      "src/interface/IClaimFacet.sol": {
        "keccak256": "0xa797f893096a5828eb1614b941df05b54afcf72ff1fde42a106976bf70d5e71c",
        "urls": [
          "bzz-raw://19be4abca0237cf076fb66e9d4fa9119c7bd9004a9e34a39c162cc3a1bb8e0cc",
          "dweb:/ipfs/QmaLkzLvZLwbcWn8CXmL9JYwVYPHeNWsMKD9JPMRozDBSQ"
        ],
        "license": "UNLICENSED"
      },
      "src/interface/IOwnershipFacet.sol": {
        "keccak256": "0x505b2f2d275a0aa2861d08564f6d03e44e8d10cd8a1c6fbdea1105383e0e9a4d",
        "urls": [
          "bzz-raw://4ca7e3a48787d056da5f3569965f9c2015e65d8ceb124e9346cf73d55e55c8b2",
          "dweb:/ipfs/QmWJmUsegbVtaJ71yCJZiEpedEvhSuw73NyjBfRFCkxt2z"
        ],
        "license": "UNLICENSED"
      },
      "src/interface/IProtocolFacet.sol": {
        "keccak256": "0x41ef10bad154ed0a98a1fa46046869d6d6ab744953186caa287ced95b80ddc4a",
        "urls": [
          "bzz-raw://8a45399f560a088b94d3d5e14a104a3cbc02cec1083cf1eec5a8b135341c7d53",
          "dweb:/ipfs/QmcCDJmFCkRZoeHojqmvaMsavwZXcBeZV54i5eAfxmjcH5"
        ],
        "license": "UNLICENSED"
      },
      "src/interface/IRepayFacet.sol": {
        "keccak256": "0x932b0a489b740c46361e4cd5f5103c765b954cedfd41a823dd0549f435f0b7d4",
        "urls": [
          "bzz-raw://fddbb0a0401cd79a17b794c9caaa6f3c2e9381a1a3fd6ea04c43e2148786c572",
          "dweb:/ipfs/QmUKSTezv4twtFPVCXRSQZBfKNW5Zkd22w4HWFfJrV7VyQ"
        ],
        "license": "UNLICENSED"
      },
      "src/interface/ISignature.sol": {
        "keccak256": "0x6dadc10c64bc681b36624c2937fd3e108e87ca0056d311510e53a25cd009d065",
        "urls": [
          "bzz-raw://a813951b3d9f26315a9363a779c745c58ad261ee9fa8a997727ea7ddc6c90da1",
          "dweb:/ipfs/QmR8G8XQDm7xjKzPH29PmYw2LnHakapvkdavJXZCT3vKFT"
        ],
        "license": "UNLICENSED"
      },
      "src/mock/Money.sol": {
        "keccak256": "0x5e3ad642d66b67ba5606b3e566bd6d61aaf1fb041f65b147c8f73abdf502d8d6",
        "urls": [
          "bzz-raw://4ae809b748f38d9d9e4a4bd8d211e7b30c8d56b5e632204cc27654daf995e5c3",
          "dweb:/ipfs/QmUKMtSDrZG3QHFWRUAh5FPAxGXpSGZsafStRhoESxxL52"
        ],
        "license": "MIT"
      },
      "src/mock/NFT.sol": {
        "keccak256": "0xc9930007614632c7dc1393745990ec87c310b4178f387f1cbe52b50f4016fb64",
        "urls": [
          "bzz-raw://b1bd12749aec08d1d0f5d2d4d8d32259c9c23ab243f1aa16b0106d89955f4e50",
          "dweb:/ipfs/QmRohEtgT3y7kTbeSbzQkxBTJemznmkxJey2vTKmZCBvFT"
        ],
        "license": "UNLICENSED"
      },
      "src/mock/TestCurrency.sol": {
        "keccak256": "0xea5129d4a21ac381a780017790fc8f0c888aa8354314bd97d396056f4bdd20f0",
        "urls": [
          "bzz-raw://98c46c988468539ee172a1bad7e9e666707bec019b62c90207c552679a644960",
          "dweb:/ipfs/QmexsmkJdB934t2Tc6x9oPE64NbdYNjLMz8r3CituThgnB"
        ],
        "license": "MIT"
      },
      "src/utils/Erc20CheckedTransfer.sol": {
        "keccak256": "0x03a0041ce856ecca1d5d2b67443dca5f2acab9fe38cd592b2d3e897eaa3955d0",
        "urls": [
          "bzz-raw://10515dcb2700e1b01b00f50c704ffc7daba221080221e056d498da890c586c82",
          "dweb:/ipfs/QmRW2ycAG7nsk2YXnp6nk8s56RqTV1EVCuPkLgQsUHyGeW"
        ],
        "license": "UNLICENSED"
      },
      "src/utils/FuncSelectors.h.sol": {
        "keccak256": "0xa79f6e8531c9a91f3e26e48ef5d7b0c8327e17b5352400668880cc1a98f36ddc",
        "urls": [
          "bzz-raw://518f86fef198ec19ccba9d2438c8f490581f326cb2bdba8d3e6634c4797cebc0",
          "dweb:/ipfs/Qmb1NGp72szB8owp5MjaFWF7zngPtQ6EHUUMy38tn3BCqi"
        ],
        "license": "UNLICENSED"
      },
      "src/utils/NFTokenUtils.sol": {
        "keccak256": "0x886dbd7a03bf3a8fd4739b86bc4eba01014e7683029dd485993369ad0a0473c5",
        "urls": [
          "bzz-raw://02591fc4c94a10c37a9132dfbd9f1222f62c919ef5ba7b76a1ca1c1e2dc1d105",
          "dweb:/ipfs/QmVkSSvA12C2gu8gEv8CxBHpKY242THHAy7eNfzHpXdhtT"
        ],
        "license": "UNLICENSED"
      },
      "src/utils/RayMath.sol": {
        "keccak256": "0x234068d17599aefc86ca6f5febb25be32bb71c0b45326c24936b23dd9cc876ac",
        "urls": [
          "bzz-raw://421375b2a164c6ffa1e018c533e2a231395fc4f582acc3a43672a24e51fbe328",
          "dweb:/ipfs/QmUFEZi7BjELW2fDZuUpeDCTrNw1YhMmeqJvoMk2MfuxDU"
        ],
        "license": "UNLICENSED"
      },
      "test/Commons/BigKairos.sol": {
        "keccak256": "0xe5e4959e7dca0aa52e2d35459a1f71b91a2af9a70fbb1465c31a98b53823eddc",
        "urls": [
          "bzz-raw://25e44dd8b518574592079f2137651440fd7ce1360cfe5ad35d8c6993e8c4622a",
          "dweb:/ipfs/QmcqGbDvgGu2oHqD17PURL2matovxNPyuGgYajw57Q6SCj"
        ],
        "license": "UNLICENSED"
      },
      "test/Commons/Internal.sol": {
        "keccak256": "0x12507426f01169802f333a2fb704fd70c35659ff2854c66d928a901673fca132",
        "urls": [
          "bzz-raw://7ee48041714fd79f61fd382d6d9427732be1af960af57aff862432129ecac4e6",
          "dweb:/ipfs/QmT9p8LiAYfH2622zT7FD9UmcvTmywmG6N7CKyuPJjL3nj"
        ],
        "license": "UNLICENSED"
      },
      "test/Commons/Loggers.sol": {
        "keccak256": "0x5ad09ea0e54173023d712d84e06faa58267cadc7b34404adabc1c11c28c0f238",
        "urls": [
          "bzz-raw://dfd5aafd6dca411217e0928b82f211b16a9b8e937389838cadd307db638b83eb",
          "dweb:/ipfs/QmbB4vPdgPrrVhb4W9z9UeLQPBzU7xXQ1dkk2zzQNkwX85"
        ],
        "license": "UNLICENSED"
      },
      "test/Commons/TestCommons.sol": {
        "keccak256": "0x661e48bcca61c615c6b5f082c744281af6a886b3d4de4d0607fce24a1be2d565",
        "urls": [
          "bzz-raw://95556855c33b1be5e827c505e6ab6fa54534c0bc4e8610986cd0361e59c5a1bf",
          "dweb:/ipfs/QmY4VKfqcLa8hAN9C3L1N4hTyAfc74nPkUxCAUZm9nw2N1"
        ],
        "license": "UNLICENSED"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "test/Commons/Internal.sol",
    "id": 45037,
    "exportedSymbols": {
      "BigKairos": [
        44067
      ],
      "CollateralState": [
        36687
      ],
      "Internal": [
        45036
      ],
      "Loan": [
        36780
      ],
      "Money": [
        38786
      ],
      "NFT": [
        38912
      ],
      "NFToken": [
        36708
      ],
      "ONE": [
        36604
      ],
      "Offer": [
        36702
      ],
      "OfferArg": [
        36665
      ],
      "Protocol": [
        36749
      ],
      "Provision": [
        36827
      ],
      "Ray": [
        36644
      ],
      "RayMath": [
        39997
      ],
      "SupplyPosition": [
        36819
      ],
      "TestCommons": [
        46681
      ],
      "protocolStorage": [
        36624
      ],
      "supplyPositionStorage": [
        36636
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:3473:101",
    "nodes": [
      {
        "id": 44616,
        "nodeType": "PragmaDirective",
        "src": "39:23:101",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".18"
        ]
      },
      {
        "id": 44618,
        "nodeType": "ImportDirective",
        "src": "64:42:101",
        "nodes": [],
        "absolutePath": "test/Commons/BigKairos.sol",
        "file": "./BigKairos.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 45037,
        "sourceUnit": 44068,
        "symbolAliases": [
          {
            "foreign": {
              "id": 44617,
              "name": "BigKairos",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 44067,
              "src": "72:9:101",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 44624,
        "nodeType": "ImportDirective",
        "src": "107:99:101",
        "nodes": [],
        "absolutePath": "src/DataStructure/Objects.sol",
        "file": "../../src/DataStructure/Objects.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 45037,
        "sourceUnit": 36709,
        "symbolAliases": [
          {
            "foreign": {
              "id": 44619,
              "name": "CollateralState",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 36687,
              "src": "115:15:101",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 44620,
              "name": "NFToken",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 36708,
              "src": "132:7:101",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 44621,
              "name": "Offer",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 36702,
              "src": "141:5:101",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 44622,
              "name": "OfferArg",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 36665,
              "src": "148:8:101",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 44623,
              "name": "Ray",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 36644,
              "src": "158:3:101",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 44629,
        "nodeType": "ImportDirective",
        "src": "207:94:101",
        "nodes": [],
        "absolutePath": "src/DataStructure/Storage.sol",
        "file": "../../src/DataStructure/Storage.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 45037,
        "sourceUnit": 36828,
        "symbolAliases": [
          {
            "foreign": {
              "id": 44625,
              "name": "Loan",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 36780,
              "src": "215:4:101",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 44626,
              "name": "Protocol",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 36749,
              "src": "221:8:101",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 44627,
              "name": "Provision",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 36827,
              "src": "231:9:101",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 44628,
              "name": "SupplyPosition",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 36819,
              "src": "242:14:101",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 44631,
        "nodeType": "ImportDirective",
        "src": "302:47:101",
        "nodes": [],
        "absolutePath": "src/mock/Money.sol",
        "file": "../../src/mock/Money.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 45037,
        "sourceUnit": 38787,
        "symbolAliases": [
          {
            "foreign": {
              "id": 44630,
              "name": "Money",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 38786,
              "src": "310:5:101",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 44633,
        "nodeType": "ImportDirective",
        "src": "350:43:101",
        "nodes": [],
        "absolutePath": "src/mock/NFT.sol",
        "file": "../../src/mock/NFT.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 45037,
        "sourceUnit": 38913,
        "symbolAliases": [
          {
            "foreign": {
              "id": 44632,
              "name": "NFT",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 38912,
              "src": "358:3:101",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 44637,
        "nodeType": "ImportDirective",
        "src": "394:95:101",
        "nodes": [],
        "absolutePath": "src/DataStructure/Global.sol",
        "file": "../../src/DataStructure/Global.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 45037,
        "sourceUnit": 36637,
        "symbolAliases": [
          {
            "foreign": {
              "id": 44634,
              "name": "ONE",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 36604,
              "src": "402:3:101",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 44635,
              "name": "protocolStorage",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 36624,
              "src": "407:15:101",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 44636,
              "name": "supplyPositionStorage",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 36636,
              "src": "424:21:101",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 44639,
        "nodeType": "ImportDirective",
        "src": "490:52:101",
        "nodes": [],
        "absolutePath": "src/utils/RayMath.sol",
        "file": "../../src/utils/RayMath.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 45037,
        "sourceUnit": 39998,
        "symbolAliases": [
          {
            "foreign": {
              "id": 44638,
              "name": "RayMath",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 39997,
              "src": "498:7:101",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 44641,
        "nodeType": "ImportDirective",
        "src": "543:46:101",
        "nodes": [],
        "absolutePath": "test/Commons/TestCommons.sol",
        "file": "./TestCommons.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 45037,
        "sourceUnit": 46682,
        "symbolAliases": [
          {
            "foreign": {
              "id": 44640,
              "name": "TestCommons",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 46681,
              "src": "551:11:101",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 45036,
        "nodeType": "ContractDefinition",
        "src": "663:2848:101",
        "nodes": [
          {
            "id": 44650,
            "nodeType": "UsingForDirective",
            "src": "713:22:101",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 44647,
              "name": "RayMath",
              "nameLocations": [
                "719:7:101"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 39997,
              "src": "719:7:101"
            },
            "typeName": {
              "id": 44649,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 44648,
                "name": "Ray",
                "nameLocations": [
                  "731:3:101"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 36644,
                "src": "731:3:101"
              },
              "referencedDeclaration": 36644,
              "src": "731:3:101",
              "typeDescriptions": {
                "typeIdentifier": "t_userDefinedValueType$_Ray_$36644",
                "typeString": "Ray"
              }
            }
          },
          {
            "id": 44833,
            "nodeType": "FunctionDefinition",
            "src": "741:907:101",
            "nodes": [],
            "body": {
              "id": 44832,
              "nodeType": "Block",
              "src": "755:893:101",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    44654
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 44654,
                      "mutability": "mutable",
                      "name": "randoCode",
                      "nameLocation": "778:9:101",
                      "nodeType": "VariableDeclaration",
                      "scope": 44832,
                      "src": "765:22:101",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 44653,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "765:5:101",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 44656,
                  "initialValue": {
                    "hexValue": "01",
                    "id": 44655,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "hexString",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "790:7:101",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_5fe7f977e71dba2ea1a68e21057beebb9be2ac30c6410aa38d4f3fbe41dcffd2",
                      "typeString": "literal_string hex\"01\""
                    },
                    "value": "\u0001"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "765:32:101"
                },
                {
                  "assignments": [
                    44659
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 44659,
                      "mutability": "mutable",
                      "name": "proto",
                      "nameLocation": "824:5:101",
                      "nodeType": "VariableDeclaration",
                      "scope": 44832,
                      "src": "807:22:101",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Protocol_$36749_storage_ptr",
                        "typeString": "struct Protocol"
                      },
                      "typeName": {
                        "id": 44658,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 44657,
                          "name": "Protocol",
                          "nameLocations": [
                            "807:8:101"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 36749,
                          "src": "807:8:101"
                        },
                        "referencedDeclaration": 36749,
                        "src": "807:8:101",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Protocol_$36749_storage_ptr",
                          "typeString": "struct Protocol"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 44662,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 44660,
                      "name": "protocolStorage",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 36624,
                      "src": "832:15:101",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_Protocol_$36749_storage_ptr_$",
                        "typeString": "function () pure returns (struct Protocol storage pointer)"
                      }
                    },
                    "id": 44661,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "832:17:101",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Protocol_$36749_storage_ptr",
                      "typeString": "struct Protocol storage pointer"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "807:42:101"
                },
                {
                  "expression": {
                    "id": 44667,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 44663,
                        "name": "proto",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44659,
                        "src": "859:5:101",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Protocol_$36749_storage_ptr",
                          "typeString": "struct Protocol storage pointer"
                        }
                      },
                      "id": 44665,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "865:12:101",
                      "memberName": "nbOfTranches",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 36725,
                      "src": "859:18:101",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 44666,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "880:1:101",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "859:22:101",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 44668,
                  "nodeType": "ExpressionStatement",
                  "src": "859:22:101"
                },
                {
                  "expression": {
                    "id": 44675,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "expression": {
                          "id": 44669,
                          "name": "proto",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 44659,
                          "src": "891:5:101",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Protocol_$36749_storage_ptr",
                            "typeString": "struct Protocol storage pointer"
                          }
                        },
                        "id": 44672,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "897:7:101",
                        "memberName": "tranche",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 36733,
                        "src": "891:13:101",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_userDefinedValueType$_Ray_$36644_$",
                          "typeString": "mapping(uint256 => Ray)"
                        }
                      },
                      "id": 44673,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 44671,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "905:1:101",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "891:16:101",
                      "typeDescriptions": {
                        "typeIdentifier": "t_userDefinedValueType$_Ray_$36644",
                        "typeString": "Ray"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 44674,
                      "name": "apr40percent",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45981,
                      "src": "910:12:101",
                      "typeDescriptions": {
                        "typeIdentifier": "t_userDefinedValueType$_Ray_$36644",
                        "typeString": "Ray"
                      }
                    },
                    "src": "891:31:101",
                    "typeDescriptions": {
                      "typeIdentifier": "t_userDefinedValueType$_Ray_$36644",
                      "typeString": "Ray"
                    }
                  },
                  "id": 44676,
                  "nodeType": "ExpressionStatement",
                  "src": "891:31:101"
                },
                {
                  "expression": {
                    "id": 44686,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "expression": {
                          "id": 44677,
                          "name": "proto",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 44659,
                          "src": "932:5:101",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Protocol_$36749_storage_ptr",
                            "typeString": "struct Protocol storage pointer"
                          }
                        },
                        "id": 44680,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "938:7:101",
                        "memberName": "auction",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 36728,
                        "src": "932:13:101",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Auction_$36721_storage",
                          "typeString": "struct Auction storage ref"
                        }
                      },
                      "id": 44681,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "946:11:101",
                      "memberName": "priceFactor",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 36720,
                      "src": "932:25:101",
                      "typeDescriptions": {
                        "typeIdentifier": "t_userDefinedValueType$_Ray_$36644",
                        "typeString": "Ray"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "33",
                          "id": 44684,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "968:1:101",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_3_by_1",
                            "typeString": "int_const 3"
                          },
                          "value": "3"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_3_by_1",
                            "typeString": "int_const 3"
                          }
                        ],
                        "expression": {
                          "id": 44682,
                          "name": "ONE",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 36604,
                          "src": "960:3:101",
                          "typeDescriptions": {
                            "typeIdentifier": "t_userDefinedValueType$_Ray_$36644",
                            "typeString": "Ray"
                          }
                        },
                        "id": 44683,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "964:3:101",
                        "memberName": "mul",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 39767,
                        "src": "960:7:101",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_userDefinedValueType$_Ray_$36644_$_t_uint256_$returns$_t_userDefinedValueType$_Ray_$36644_$attached_to$_t_userDefinedValueType$_Ray_$36644_$",
                          "typeString": "function (Ray,uint256) pure returns (Ray)"
                        }
                      },
                      "id": 44685,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "960:10:101",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_userDefinedValueType$_Ray_$36644",
                        "typeString": "Ray"
                      }
                    },
                    "src": "932:38:101",
                    "typeDescriptions": {
                      "typeIdentifier": "t_userDefinedValueType$_Ray_$36644",
                      "typeString": "Ray"
                    }
                  },
                  "id": 44687,
                  "nodeType": "ExpressionStatement",
                  "src": "932:38:101"
                },
                {
                  "expression": {
                    "id": 44694,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "expression": {
                          "id": 44688,
                          "name": "proto",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 44659,
                          "src": "980:5:101",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Protocol_$36749_storage_ptr",
                            "typeString": "struct Protocol storage pointer"
                          }
                        },
                        "id": 44691,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "986:7:101",
                        "memberName": "auction",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 36728,
                        "src": "980:13:101",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Auction_$36721_storage",
                          "typeString": "struct Auction storage ref"
                        }
                      },
                      "id": 44692,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "994:8:101",
                      "memberName": "duration",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 36717,
                      "src": "980:22:101",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "33",
                      "id": 44693,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1005:6:101",
                      "subdenomination": "days",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_259200_by_1",
                        "typeString": "int_const 259200"
                      },
                      "value": "3"
                    },
                    "src": "980:31:101",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 44695,
                  "nodeType": "ExpressionStatement",
                  "src": "980:31:101"
                },
                {
                  "expression": {
                    "id": 44708,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 44696,
                      "name": "money",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46040,
                      "src": "1021:5:101",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Money_$38786",
                        "typeString": "contract Money"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "hexValue": "6d6f636b2061646472657373206d6f6e6579",
                                      "id": 44703,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "string",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "1061:20:101",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_stringliteral_62c4386b05def01bdda7f75de4204db813fd67da96e63de7bb348b518130ee5b",
                                        "typeString": "literal_string \"mock address money\""
                                      },
                                      "value": "mock address money"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_stringliteral_62c4386b05def01bdda7f75de4204db813fd67da96e63de7bb348b518130ee5b",
                                        "typeString": "literal_string \"mock address money\""
                                      }
                                    ],
                                    "id": 44702,
                                    "name": "keccak256",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -8,
                                    "src": "1051:9:101",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                      "typeString": "function (bytes memory) pure returns (bytes32)"
                                    }
                                  },
                                  "id": 44704,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "1051:31:101",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                ],
                                "id": 44701,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1043:7:101",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_bytes20_$",
                                  "typeString": "type(bytes20)"
                                },
                                "typeName": {
                                  "id": 44700,
                                  "name": "bytes20",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1043:7:101",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 44705,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1043:40:101",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes20",
                                "typeString": "bytes20"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes20",
                                "typeString": "bytes20"
                              }
                            ],
                            "id": 44699,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1035:7:101",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 44698,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1035:7:101",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 44706,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1035:49:101",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 44697,
                        "name": "Money",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38786,
                        "src": "1029:5:101",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Money_$38786_$",
                          "typeString": "type(contract Money)"
                        }
                      },
                      "id": 44707,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1029:56:101",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Money_$38786",
                        "typeString": "contract Money"
                      }
                    },
                    "src": "1021:64:101",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Money_$38786",
                      "typeString": "contract Money"
                    }
                  },
                  "id": 44709,
                  "nodeType": "ExpressionStatement",
                  "src": "1021:64:101"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 44715,
                            "name": "money",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 46040,
                            "src": "1111:5:101",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Money_$38786",
                              "typeString": "contract Money"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Money_$38786",
                              "typeString": "contract Money"
                            }
                          ],
                          "id": 44714,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1103:7:101",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 44713,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1103:7:101",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 44716,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1103:14:101",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 44717,
                        "name": "randoCode",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44654,
                        "src": "1119:9:101",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 44710,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7912,
                        "src": "1095:2:101",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$18138",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 44712,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1098:4:101",
                      "memberName": "etch",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17867,
                      "src": "1095:7:101",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,bytes memory) external"
                      }
                    },
                    "id": 44718,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1095:34:101",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44719,
                  "nodeType": "ExpressionStatement",
                  "src": "1095:34:101"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 44725,
                            "name": "money",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 46040,
                            "src": "1156:5:101",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Money_$38786",
                              "typeString": "contract Money"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Money_$38786",
                              "typeString": "contract Money"
                            }
                          ],
                          "id": 44724,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1148:7:101",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 44723,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1148:7:101",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 44726,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1148:14:101",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "6d6f6e6579",
                        "id": 44727,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1164:7:101",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_db053ba01301c135152299d3a1d1474ae702a0cb048f99cf686379d60c340eb1",
                          "typeString": "literal_string \"money\""
                        },
                        "value": "money"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_db053ba01301c135152299d3a1d1474ae702a0cb048f99cf686379d60c340eb1",
                          "typeString": "literal_string \"money\""
                        }
                      ],
                      "expression": {
                        "id": 44720,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7912,
                        "src": "1139:2:101",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$18138",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 44722,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1142:5:101",
                      "memberName": "label",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17208,
                      "src": "1139:8:101",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,string memory) external"
                      }
                    },
                    "id": 44728,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1139:33:101",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44729,
                  "nodeType": "ExpressionStatement",
                  "src": "1139:33:101"
                },
                {
                  "expression": {
                    "id": 44742,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 44730,
                      "name": "money2",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46043,
                      "src": "1182:6:101",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Money_$38786",
                        "typeString": "contract Money"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "hexValue": "6d6f636b2061646472657373206d6f6e657932",
                                      "id": 44737,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "string",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "1223:21:101",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_stringliteral_f01ddd9e071f32c3c4cb7c0ab117e392793b658e8e9f8b7361ba47c22e1ca47a",
                                        "typeString": "literal_string \"mock address money2\""
                                      },
                                      "value": "mock address money2"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_stringliteral_f01ddd9e071f32c3c4cb7c0ab117e392793b658e8e9f8b7361ba47c22e1ca47a",
                                        "typeString": "literal_string \"mock address money2\""
                                      }
                                    ],
                                    "id": 44736,
                                    "name": "keccak256",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -8,
                                    "src": "1213:9:101",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                      "typeString": "function (bytes memory) pure returns (bytes32)"
                                    }
                                  },
                                  "id": 44738,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "1213:32:101",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                ],
                                "id": 44735,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1205:7:101",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_bytes20_$",
                                  "typeString": "type(bytes20)"
                                },
                                "typeName": {
                                  "id": 44734,
                                  "name": "bytes20",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1205:7:101",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 44739,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1205:41:101",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes20",
                                "typeString": "bytes20"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes20",
                                "typeString": "bytes20"
                              }
                            ],
                            "id": 44733,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1197:7:101",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 44732,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1197:7:101",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 44740,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1197:50:101",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 44731,
                        "name": "Money",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38786,
                        "src": "1191:5:101",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Money_$38786_$",
                          "typeString": "type(contract Money)"
                        }
                      },
                      "id": 44741,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1191:57:101",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Money_$38786",
                        "typeString": "contract Money"
                      }
                    },
                    "src": "1182:66:101",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Money_$38786",
                      "typeString": "contract Money"
                    }
                  },
                  "id": 44743,
                  "nodeType": "ExpressionStatement",
                  "src": "1182:66:101"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 44749,
                            "name": "money2",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 46043,
                            "src": "1274:6:101",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Money_$38786",
                              "typeString": "contract Money"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Money_$38786",
                              "typeString": "contract Money"
                            }
                          ],
                          "id": 44748,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1266:7:101",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 44747,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1266:7:101",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 44750,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1266:15:101",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 44751,
                        "name": "randoCode",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44654,
                        "src": "1283:9:101",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 44744,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7912,
                        "src": "1258:2:101",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$18138",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 44746,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1261:4:101",
                      "memberName": "etch",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17867,
                      "src": "1258:7:101",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,bytes memory) external"
                      }
                    },
                    "id": 44752,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1258:35:101",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44753,
                  "nodeType": "ExpressionStatement",
                  "src": "1258:35:101"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 44759,
                            "name": "money2",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 46043,
                            "src": "1320:6:101",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Money_$38786",
                              "typeString": "contract Money"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Money_$38786",
                              "typeString": "contract Money"
                            }
                          ],
                          "id": 44758,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1312:7:101",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 44757,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1312:7:101",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 44760,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1312:15:101",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "6d6f6e657932",
                        "id": 44761,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1329:8:101",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9eed851715ef5b87dd60fa5f85ca3880c4b69ad7aefb147895f0940479715e39",
                          "typeString": "literal_string \"money2\""
                        },
                        "value": "money2"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9eed851715ef5b87dd60fa5f85ca3880c4b69ad7aefb147895f0940479715e39",
                          "typeString": "literal_string \"money2\""
                        }
                      ],
                      "expression": {
                        "id": 44754,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7912,
                        "src": "1303:2:101",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$18138",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 44756,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1306:5:101",
                      "memberName": "label",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17208,
                      "src": "1303:8:101",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,string memory) external"
                      }
                    },
                    "id": 44762,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1303:35:101",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44763,
                  "nodeType": "ExpressionStatement",
                  "src": "1303:35:101"
                },
                {
                  "expression": {
                    "id": 44776,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 44764,
                      "name": "nft",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46046,
                      "src": "1348:3:101",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_NFT_$38912",
                        "typeString": "contract NFT"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "hexValue": "6d6f636b2061646472657373206e6674",
                                      "id": 44771,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "string",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "1384:18:101",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_stringliteral_d4012c96ff3e41834211c6855097b1198c4132d0fdb46b5996941831c5d8afa7",
                                        "typeString": "literal_string \"mock address nft\""
                                      },
                                      "value": "mock address nft"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_stringliteral_d4012c96ff3e41834211c6855097b1198c4132d0fdb46b5996941831c5d8afa7",
                                        "typeString": "literal_string \"mock address nft\""
                                      }
                                    ],
                                    "id": 44770,
                                    "name": "keccak256",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -8,
                                    "src": "1374:9:101",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                      "typeString": "function (bytes memory) pure returns (bytes32)"
                                    }
                                  },
                                  "id": 44772,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "1374:29:101",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                ],
                                "id": 44769,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1366:7:101",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_bytes20_$",
                                  "typeString": "type(bytes20)"
                                },
                                "typeName": {
                                  "id": 44768,
                                  "name": "bytes20",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1366:7:101",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 44773,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1366:38:101",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes20",
                                "typeString": "bytes20"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes20",
                                "typeString": "bytes20"
                              }
                            ],
                            "id": 44767,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1358:7:101",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 44766,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1358:7:101",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 44774,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1358:47:101",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 44765,
                        "name": "NFT",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38912,
                        "src": "1354:3:101",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_NFT_$38912_$",
                          "typeString": "type(contract NFT)"
                        }
                      },
                      "id": 44775,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1354:52:101",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_NFT_$38912",
                        "typeString": "contract NFT"
                      }
                    },
                    "src": "1348:58:101",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_NFT_$38912",
                      "typeString": "contract NFT"
                    }
                  },
                  "id": 44777,
                  "nodeType": "ExpressionStatement",
                  "src": "1348:58:101"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 44783,
                            "name": "nft",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 46046,
                            "src": "1432:3:101",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_NFT_$38912",
                              "typeString": "contract NFT"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_NFT_$38912",
                              "typeString": "contract NFT"
                            }
                          ],
                          "id": 44782,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1424:7:101",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 44781,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1424:7:101",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 44784,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1424:12:101",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 44785,
                        "name": "randoCode",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44654,
                        "src": "1438:9:101",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 44778,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7912,
                        "src": "1416:2:101",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$18138",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 44780,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1419:4:101",
                      "memberName": "etch",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17867,
                      "src": "1416:7:101",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,bytes memory) external"
                      }
                    },
                    "id": 44786,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1416:32:101",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44787,
                  "nodeType": "ExpressionStatement",
                  "src": "1416:32:101"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 44793,
                            "name": "nft",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 46046,
                            "src": "1475:3:101",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_NFT_$38912",
                              "typeString": "contract NFT"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_NFT_$38912",
                              "typeString": "contract NFT"
                            }
                          ],
                          "id": 44792,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1467:7:101",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 44791,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1467:7:101",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 44794,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1467:12:101",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "6e6674",
                        "id": 44795,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1481:5:101",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7dd481eb4b63b94bb55e6b98aabb06c3b8484f82a4d656d6bca0b0cf9b446be0",
                          "typeString": "literal_string \"nft\""
                        },
                        "value": "nft"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7dd481eb4b63b94bb55e6b98aabb06c3b8484f82a4d656d6bca0b0cf9b446be0",
                          "typeString": "literal_string \"nft\""
                        }
                      ],
                      "expression": {
                        "id": 44788,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7912,
                        "src": "1458:2:101",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$18138",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 44790,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1461:5:101",
                      "memberName": "label",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17208,
                      "src": "1458:8:101",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,string memory) external"
                      }
                    },
                    "id": 44796,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1458:29:101",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44797,
                  "nodeType": "ExpressionStatement",
                  "src": "1458:29:101"
                },
                {
                  "expression": {
                    "id": 44810,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 44798,
                      "name": "nft2",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46049,
                      "src": "1497:4:101",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_NFT_$38912",
                        "typeString": "contract NFT"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "hexValue": "6d6f636b2061646472657373206e667432",
                                      "id": 44805,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "string",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "1534:19:101",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_stringliteral_1652741cbfd3d52d1855561158e475c32924d5bcb78d311690f62f74626e8045",
                                        "typeString": "literal_string \"mock address nft2\""
                                      },
                                      "value": "mock address nft2"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_stringliteral_1652741cbfd3d52d1855561158e475c32924d5bcb78d311690f62f74626e8045",
                                        "typeString": "literal_string \"mock address nft2\""
                                      }
                                    ],
                                    "id": 44804,
                                    "name": "keccak256",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -8,
                                    "src": "1524:9:101",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                      "typeString": "function (bytes memory) pure returns (bytes32)"
                                    }
                                  },
                                  "id": 44806,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "1524:30:101",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                ],
                                "id": 44803,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1516:7:101",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_bytes20_$",
                                  "typeString": "type(bytes20)"
                                },
                                "typeName": {
                                  "id": 44802,
                                  "name": "bytes20",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1516:7:101",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 44807,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1516:39:101",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes20",
                                "typeString": "bytes20"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes20",
                                "typeString": "bytes20"
                              }
                            ],
                            "id": 44801,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1508:7:101",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 44800,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1508:7:101",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 44808,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1508:48:101",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 44799,
                        "name": "NFT",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38912,
                        "src": "1504:3:101",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_NFT_$38912_$",
                          "typeString": "type(contract NFT)"
                        }
                      },
                      "id": 44809,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1504:53:101",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_NFT_$38912",
                        "typeString": "contract NFT"
                      }
                    },
                    "src": "1497:60:101",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_NFT_$38912",
                      "typeString": "contract NFT"
                    }
                  },
                  "id": 44811,
                  "nodeType": "ExpressionStatement",
                  "src": "1497:60:101"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 44817,
                            "name": "nft2",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 46049,
                            "src": "1583:4:101",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_NFT_$38912",
                              "typeString": "contract NFT"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_NFT_$38912",
                              "typeString": "contract NFT"
                            }
                          ],
                          "id": 44816,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1575:7:101",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 44815,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1575:7:101",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 44818,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1575:13:101",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 44819,
                        "name": "randoCode",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44654,
                        "src": "1590:9:101",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 44812,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7912,
                        "src": "1567:2:101",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$18138",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 44814,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1570:4:101",
                      "memberName": "etch",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17867,
                      "src": "1567:7:101",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,bytes memory) external"
                      }
                    },
                    "id": 44820,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1567:33:101",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44821,
                  "nodeType": "ExpressionStatement",
                  "src": "1567:33:101"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 44827,
                            "name": "nft2",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 46049,
                            "src": "1627:4:101",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_NFT_$38912",
                              "typeString": "contract NFT"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_NFT_$38912",
                              "typeString": "contract NFT"
                            }
                          ],
                          "id": 44826,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1619:7:101",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 44825,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1619:7:101",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 44828,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1619:13:101",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "6e667432",
                        "id": 44829,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1634:6:101",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_67c8519527bd3e4b6d48527beb4573276c0631e05c5fb7d98d657d584d813cdc",
                          "typeString": "literal_string \"nft2\""
                        },
                        "value": "nft2"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_67c8519527bd3e4b6d48527beb4573276c0631e05c5fb7d98d657d584d813cdc",
                          "typeString": "literal_string \"nft2\""
                        }
                      ],
                      "expression": {
                        "id": 44822,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7912,
                        "src": "1610:2:101",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$18138",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 44824,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1613:5:101",
                      "memberName": "label",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17208,
                      "src": "1610:8:101",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,string memory) external"
                      }
                    },
                    "id": 44830,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1610:31:101",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44831,
                  "nodeType": "ExpressionStatement",
                  "src": "1610:31:101"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 44651,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "752:2:101"
            },
            "returnParameters": {
              "id": 44652,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "755:0:101"
            },
            "scope": 45036,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 44851,
            "nodeType": "FunctionDefinition",
            "src": "1699:197:101",
            "nodes": [],
            "body": {
              "id": 44850,
              "nodeType": "Block",
              "src": "1846:50:101",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 44846,
                        "name": "arg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44836,
                        "src": "1872:3:101",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_OfferArg_$36665_memory_ptr",
                          "typeString": "struct OfferArg memory"
                        }
                      },
                      {
                        "id": 44847,
                        "name": "collatState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44839,
                        "src": "1877:11:101",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_CollateralState_$36687_memory_ptr",
                          "typeString": "struct CollateralState memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_OfferArg_$36665_memory_ptr",
                          "typeString": "struct OfferArg memory"
                        },
                        {
                          "typeIdentifier": "t_struct$_CollateralState_$36687_memory_ptr",
                          "typeString": "struct CollateralState memory"
                        }
                      ],
                      "id": 44845,
                      "name": "useOffer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 35450,
                      "src": "1863:8:101",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_OfferArg_$36665_memory_ptr_$_t_struct$_CollateralState_$36687_memory_ptr_$returns$_t_struct$_CollateralState_$36687_memory_ptr_$",
                        "typeString": "function (struct OfferArg memory,struct CollateralState memory) returns (struct CollateralState memory)"
                      }
                    },
                    "id": 44848,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1863:26:101",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_CollateralState_$36687_memory_ptr",
                      "typeString": "struct CollateralState memory"
                    }
                  },
                  "functionReturnParameters": 44844,
                  "id": 44849,
                  "nodeType": "Return",
                  "src": "1856:33:101"
                }
              ]
            },
            "functionSelector": "bbf1dd1d",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "useOfferExternal",
            "nameLocation": "1708:16:101",
            "parameters": {
              "id": 44840,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 44836,
                  "mutability": "mutable",
                  "name": "arg",
                  "nameLocation": "1750:3:101",
                  "nodeType": "VariableDeclaration",
                  "scope": 44851,
                  "src": "1734:19:101",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_OfferArg_$36665_memory_ptr",
                    "typeString": "struct OfferArg"
                  },
                  "typeName": {
                    "id": 44835,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 44834,
                      "name": "OfferArg",
                      "nameLocations": [
                        "1734:8:101"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 36665,
                      "src": "1734:8:101"
                    },
                    "referencedDeclaration": 36665,
                    "src": "1734:8:101",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_OfferArg_$36665_storage_ptr",
                      "typeString": "struct OfferArg"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 44839,
                  "mutability": "mutable",
                  "name": "collatState",
                  "nameLocation": "1786:11:101",
                  "nodeType": "VariableDeclaration",
                  "scope": 44851,
                  "src": "1763:34:101",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_CollateralState_$36687_memory_ptr",
                    "typeString": "struct CollateralState"
                  },
                  "typeName": {
                    "id": 44838,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 44837,
                      "name": "CollateralState",
                      "nameLocations": [
                        "1763:15:101"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 36687,
                      "src": "1763:15:101"
                    },
                    "referencedDeclaration": 36687,
                    "src": "1763:15:101",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_CollateralState_$36687_storage_ptr",
                      "typeString": "struct CollateralState"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1724:79:101"
            },
            "returnParameters": {
              "id": 44844,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 44843,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 44851,
                  "src": "1822:22:101",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_CollateralState_$36687_memory_ptr",
                    "typeString": "struct CollateralState"
                  },
                  "typeName": {
                    "id": 44842,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 44841,
                      "name": "CollateralState",
                      "nameLocations": [
                        "1822:15:101"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 36687,
                      "src": "1822:15:101"
                    },
                    "referencedDeclaration": 36687,
                    "src": "1822:15:101",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_CollateralState_$36687_storage_ptr",
                      "typeString": "struct CollateralState"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1821:24:101"
            },
            "scope": 45036,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 44873,
            "nodeType": "FunctionDefinition",
            "src": "1902:204:101",
            "nodes": [],
            "body": {
              "id": 44872,
              "nodeType": "Block",
              "src": "2052:54:101",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 44867,
                        "name": "args",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44855,
                        "src": "2083:4:101",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_OfferArg_$36665_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct OfferArg memory[] memory"
                        }
                      },
                      {
                        "id": 44868,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44857,
                        "src": "2089:4:101",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 44869,
                        "name": "nft",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44860,
                        "src": "2095:3:101",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_NFToken_$36708_memory_ptr",
                          "typeString": "struct NFToken memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_struct$_OfferArg_$36665_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct OfferArg memory[] memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_struct$_NFToken_$36708_memory_ptr",
                          "typeString": "struct NFToken memory"
                        }
                      ],
                      "id": 44866,
                      "name": "useCollateral",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 35560,
                      "src": "2069:13:101",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_struct$_OfferArg_$36665_memory_ptr_$dyn_memory_ptr_$_t_address_$_t_struct$_NFToken_$36708_memory_ptr_$returns$_t_struct$_Loan_$36780_memory_ptr_$",
                        "typeString": "function (struct OfferArg memory[] memory,address,struct NFToken memory) returns (struct Loan memory)"
                      }
                    },
                    "id": 44870,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2069:30:101",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Loan_$36780_memory_ptr",
                      "typeString": "struct Loan memory"
                    }
                  },
                  "functionReturnParameters": 44865,
                  "id": 44871,
                  "nodeType": "Return",
                  "src": "2062:37:101"
                }
              ]
            },
            "functionSelector": "ac989819",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "useCollateralExternal",
            "nameLocation": "1911:21:101",
            "parameters": {
              "id": 44861,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 44855,
                  "mutability": "mutable",
                  "name": "args",
                  "nameLocation": "1960:4:101",
                  "nodeType": "VariableDeclaration",
                  "scope": 44873,
                  "src": "1942:22:101",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_OfferArg_$36665_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct OfferArg[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 44853,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 44852,
                        "name": "OfferArg",
                        "nameLocations": [
                          "1942:8:101"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 36665,
                        "src": "1942:8:101"
                      },
                      "referencedDeclaration": 36665,
                      "src": "1942:8:101",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_OfferArg_$36665_storage_ptr",
                        "typeString": "struct OfferArg"
                      }
                    },
                    "id": 44854,
                    "nodeType": "ArrayTypeName",
                    "src": "1942:10:101",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_OfferArg_$36665_storage_$dyn_storage_ptr",
                      "typeString": "struct OfferArg[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 44857,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "1982:4:101",
                  "nodeType": "VariableDeclaration",
                  "scope": 44873,
                  "src": "1974:12:101",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 44856,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1974:7:101",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 44860,
                  "mutability": "mutable",
                  "name": "nft",
                  "nameLocation": "2011:3:101",
                  "nodeType": "VariableDeclaration",
                  "scope": 44873,
                  "src": "1996:18:101",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_NFToken_$36708_memory_ptr",
                    "typeString": "struct NFToken"
                  },
                  "typeName": {
                    "id": 44859,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 44858,
                      "name": "NFToken",
                      "nameLocations": [
                        "1996:7:101"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 36708,
                      "src": "1996:7:101"
                    },
                    "referencedDeclaration": 36708,
                    "src": "1996:7:101",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_NFToken_$36708_storage_ptr",
                      "typeString": "struct NFToken"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1932:88:101"
            },
            "returnParameters": {
              "id": 44865,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 44864,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 44873,
                  "src": "2039:11:101",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Loan_$36780_memory_ptr",
                    "typeString": "struct Loan"
                  },
                  "typeName": {
                    "id": 44863,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 44862,
                      "name": "Loan",
                      "nameLocations": [
                        "2039:4:101"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 36780,
                      "src": "2039:4:101"
                    },
                    "referencedDeclaration": 36780,
                    "src": "2039:4:101",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Loan_$36780_storage_ptr",
                      "typeString": "struct Loan"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2038:13:101"
            },
            "scope": 45036,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 44924,
            "nodeType": "FunctionDefinition",
            "src": "2112:353:101",
            "nodes": [],
            "body": {
              "id": 44923,
              "nodeType": "Block",
              "src": "2216:249:101",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    44886
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 44886,
                      "mutability": "mutable",
                      "name": "proto",
                      "nameLocation": "2243:5:101",
                      "nodeType": "VariableDeclaration",
                      "scope": 44923,
                      "src": "2226:22:101",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Protocol_$36749_storage_ptr",
                        "typeString": "struct Protocol"
                      },
                      "typeName": {
                        "id": 44885,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 44884,
                          "name": "Protocol",
                          "nameLocations": [
                            "2226:8:101"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 36749,
                          "src": "2226:8:101"
                        },
                        "referencedDeclaration": 36749,
                        "src": "2226:8:101",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Protocol_$36749_storage_ptr",
                          "typeString": "struct Protocol"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 44889,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 44887,
                      "name": "protocolStorage",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 36624,
                      "src": "2251:15:101",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_Protocol_$36749_storage_ptr_$",
                        "typeString": "function () pure returns (struct Protocol storage pointer)"
                      }
                    },
                    "id": 44888,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2251:17:101",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Protocol_$36749_storage_ptr",
                      "typeString": "struct Protocol storage pointer"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2226:42:101"
                },
                {
                  "expression": {
                    "id": 44896,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "expression": {
                          "id": 44890,
                          "name": "proto",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 44886,
                          "src": "2278:5:101",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Protocol_$36749_storage_ptr",
                            "typeString": "struct Protocol storage pointer"
                          }
                        },
                        "id": 44893,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2284:4:101",
                        "memberName": "loan",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 36738,
                        "src": "2278:10:101",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Loan_$36780_storage_$",
                          "typeString": "mapping(uint256 => struct Loan storage ref)"
                        }
                      },
                      "id": 44894,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 44892,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2289:1:101",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2278:13:101",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Loan_$36780_storage",
                        "typeString": "struct Loan storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 44895,
                      "name": "loan",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44876,
                      "src": "2294:4:101",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Loan_$36780_memory_ptr",
                        "typeString": "struct Loan memory"
                      }
                    },
                    "src": "2278:20:101",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Loan_$36780_storage",
                      "typeString": "struct Loan storage ref"
                    }
                  },
                  "id": 44897,
                  "nodeType": "ExpressionStatement",
                  "src": "2278:20:101"
                },
                {
                  "assignments": [
                    44900
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 44900,
                      "mutability": "mutable",
                      "name": "sp",
                      "nameLocation": "2331:2:101",
                      "nodeType": "VariableDeclaration",
                      "scope": 44923,
                      "src": "2308:25:101",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_SupplyPosition_$36819_storage_ptr",
                        "typeString": "struct SupplyPosition"
                      },
                      "typeName": {
                        "id": 44899,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 44898,
                          "name": "SupplyPosition",
                          "nameLocations": [
                            "2308:14:101"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 36819,
                          "src": "2308:14:101"
                        },
                        "referencedDeclaration": 36819,
                        "src": "2308:14:101",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_SupplyPosition_$36819_storage_ptr",
                          "typeString": "struct SupplyPosition"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 44903,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 44901,
                      "name": "supplyPositionStorage",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 36636,
                      "src": "2336:21:101",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_SupplyPosition_$36819_storage_ptr_$",
                        "typeString": "function () pure returns (struct SupplyPosition storage pointer)"
                      }
                    },
                    "id": 44902,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2336:23:101",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_SupplyPosition_$36819_storage_ptr",
                      "typeString": "struct SupplyPosition storage pointer"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2308:51:101"
                },
                {
                  "expression": {
                    "id": 44910,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "expression": {
                          "id": 44904,
                          "name": "sp",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 44900,
                          "src": "2369:2:101",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_SupplyPosition_$36819_storage_ptr",
                            "typeString": "struct SupplyPosition storage pointer"
                          }
                        },
                        "id": 44907,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2372:9:101",
                        "memberName": "provision",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 36818,
                        "src": "2369:12:101",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Provision_$36827_storage_$",
                          "typeString": "mapping(uint256 => struct Provision storage ref)"
                        }
                      },
                      "id": 44908,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 44906,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2382:1:101",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2369:15:101",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Provision_$36827_storage",
                        "typeString": "struct Provision storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 44909,
                      "name": "provision",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44879,
                      "src": "2387:9:101",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Provision_$36827_memory_ptr",
                        "typeString": "struct Provision memory"
                      }
                    },
                    "src": "2369:27:101",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Provision_$36827_storage",
                      "typeString": "struct Provision storage ref"
                    }
                  },
                  "id": 44911,
                  "nodeType": "ExpressionStatement",
                  "src": "2369:27:101"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 44913,
                            "name": "proto",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44886,
                            "src": "2427:5:101",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Protocol_$36749_storage_ptr",
                              "typeString": "struct Protocol storage pointer"
                            }
                          },
                          "id": 44914,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2433:4:101",
                          "memberName": "loan",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 36738,
                          "src": "2427:10:101",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Loan_$36780_storage_$",
                            "typeString": "mapping(uint256 => struct Loan storage ref)"
                          }
                        },
                        "id": 44916,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 44915,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2438:1:101",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2427:13:101",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Loan_$36780_storage",
                          "typeString": "struct Loan storage ref"
                        }
                      },
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 44917,
                            "name": "sp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44900,
                            "src": "2442:2:101",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_SupplyPosition_$36819_storage_ptr",
                              "typeString": "struct SupplyPosition storage pointer"
                            }
                          },
                          "id": 44918,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2445:9:101",
                          "memberName": "provision",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 36818,
                          "src": "2442:12:101",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Provision_$36827_storage_$",
                            "typeString": "mapping(uint256 => struct Provision storage ref)"
                          }
                        },
                        "id": 44920,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 44919,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2455:1:101",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2442:15:101",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Provision_$36827_storage",
                          "typeString": "struct Provision storage ref"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Loan_$36780_storage",
                          "typeString": "struct Loan storage ref"
                        },
                        {
                          "typeIdentifier": "t_struct$_Provision_$36827_storage",
                          "typeString": "struct Provision storage ref"
                        }
                      ],
                      "id": 44912,
                      "name": "sendInterests",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 36057,
                      "src": "2413:13:101",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Loan_$36780_storage_ptr_$_t_struct$_Provision_$36827_storage_ptr_$returns$_t_uint256_$",
                        "typeString": "function (struct Loan storage pointer,struct Provision storage pointer) returns (uint256)"
                      }
                    },
                    "id": 44921,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2413:45:101",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 44883,
                  "id": 44922,
                  "nodeType": "Return",
                  "src": "2406:52:101"
                }
              ]
            },
            "functionSelector": "2efe69b3",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "sendInterestsExternal",
            "nameLocation": "2121:21:101",
            "parameters": {
              "id": 44880,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 44876,
                  "mutability": "mutable",
                  "name": "loan",
                  "nameLocation": "2155:4:101",
                  "nodeType": "VariableDeclaration",
                  "scope": 44924,
                  "src": "2143:16:101",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Loan_$36780_memory_ptr",
                    "typeString": "struct Loan"
                  },
                  "typeName": {
                    "id": 44875,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 44874,
                      "name": "Loan",
                      "nameLocations": [
                        "2143:4:101"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 36780,
                      "src": "2143:4:101"
                    },
                    "referencedDeclaration": 36780,
                    "src": "2143:4:101",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Loan_$36780_storage_ptr",
                      "typeString": "struct Loan"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 44879,
                  "mutability": "mutable",
                  "name": "provision",
                  "nameLocation": "2178:9:101",
                  "nodeType": "VariableDeclaration",
                  "scope": 44924,
                  "src": "2161:26:101",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Provision_$36827_memory_ptr",
                    "typeString": "struct Provision"
                  },
                  "typeName": {
                    "id": 44878,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 44877,
                      "name": "Provision",
                      "nameLocations": [
                        "2161:9:101"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 36827,
                      "src": "2161:9:101"
                    },
                    "referencedDeclaration": 36827,
                    "src": "2161:9:101",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Provision_$36827_storage_ptr",
                      "typeString": "struct Provision"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2142:46:101"
            },
            "returnParameters": {
              "id": 44883,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 44882,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 44924,
                  "src": "2207:7:101",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 44881,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2207:7:101",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2206:9:101"
            },
            "scope": 45036,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 44975,
            "nodeType": "FunctionDefinition",
            "src": "2471:399:101",
            "nodes": [],
            "body": {
              "id": 44974,
              "nodeType": "Block",
              "src": "2609:261:101",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    44937
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 44937,
                      "mutability": "mutable",
                      "name": "proto",
                      "nameLocation": "2636:5:101",
                      "nodeType": "VariableDeclaration",
                      "scope": 44974,
                      "src": "2619:22:101",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Protocol_$36749_storage_ptr",
                        "typeString": "struct Protocol"
                      },
                      "typeName": {
                        "id": 44936,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 44935,
                          "name": "Protocol",
                          "nameLocations": [
                            "2619:8:101"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 36749,
                          "src": "2619:8:101"
                        },
                        "referencedDeclaration": 36749,
                        "src": "2619:8:101",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Protocol_$36749_storage_ptr",
                          "typeString": "struct Protocol"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 44940,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 44938,
                      "name": "protocolStorage",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 36624,
                      "src": "2644:15:101",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_Protocol_$36749_storage_ptr_$",
                        "typeString": "function () pure returns (struct Protocol storage pointer)"
                      }
                    },
                    "id": 44939,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2644:17:101",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Protocol_$36749_storage_ptr",
                      "typeString": "struct Protocol storage pointer"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2619:42:101"
                },
                {
                  "expression": {
                    "id": 44947,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "expression": {
                          "id": 44941,
                          "name": "proto",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 44937,
                          "src": "2671:5:101",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Protocol_$36749_storage_ptr",
                            "typeString": "struct Protocol storage pointer"
                          }
                        },
                        "id": 44944,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2677:4:101",
                        "memberName": "loan",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 36738,
                        "src": "2671:10:101",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Loan_$36780_storage_$",
                          "typeString": "mapping(uint256 => struct Loan storage ref)"
                        }
                      },
                      "id": 44945,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 44943,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2682:1:101",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2671:13:101",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Loan_$36780_storage",
                        "typeString": "struct Loan storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 44946,
                      "name": "loan",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44927,
                      "src": "2687:4:101",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Loan_$36780_memory_ptr",
                        "typeString": "struct Loan memory"
                      }
                    },
                    "src": "2671:20:101",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Loan_$36780_storage",
                      "typeString": "struct Loan storage ref"
                    }
                  },
                  "id": 44948,
                  "nodeType": "ExpressionStatement",
                  "src": "2671:20:101"
                },
                {
                  "assignments": [
                    44951
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 44951,
                      "mutability": "mutable",
                      "name": "sp",
                      "nameLocation": "2724:2:101",
                      "nodeType": "VariableDeclaration",
                      "scope": 44974,
                      "src": "2701:25:101",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_SupplyPosition_$36819_storage_ptr",
                        "typeString": "struct SupplyPosition"
                      },
                      "typeName": {
                        "id": 44950,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 44949,
                          "name": "SupplyPosition",
                          "nameLocations": [
                            "2701:14:101"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 36819,
                          "src": "2701:14:101"
                        },
                        "referencedDeclaration": 36819,
                        "src": "2701:14:101",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_SupplyPosition_$36819_storage_ptr",
                          "typeString": "struct SupplyPosition"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 44954,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 44952,
                      "name": "supplyPositionStorage",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 36636,
                      "src": "2729:21:101",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_SupplyPosition_$36819_storage_ptr_$",
                        "typeString": "function () pure returns (struct SupplyPosition storage pointer)"
                      }
                    },
                    "id": 44953,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2729:23:101",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_SupplyPosition_$36819_storage_ptr",
                      "typeString": "struct SupplyPosition storage pointer"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2701:51:101"
                },
                {
                  "expression": {
                    "id": 44961,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "expression": {
                          "id": 44955,
                          "name": "sp",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 44951,
                          "src": "2762:2:101",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_SupplyPosition_$36819_storage_ptr",
                            "typeString": "struct SupplyPosition storage pointer"
                          }
                        },
                        "id": 44958,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2765:9:101",
                        "memberName": "provision",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 36818,
                        "src": "2762:12:101",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Provision_$36827_storage_$",
                          "typeString": "mapping(uint256 => struct Provision storage ref)"
                        }
                      },
                      "id": 44959,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 44957,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2775:1:101",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2762:15:101",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Provision_$36827_storage",
                        "typeString": "struct Provision storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 44960,
                      "name": "provision",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44930,
                      "src": "2780:9:101",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Provision_$36827_memory_ptr",
                        "typeString": "struct Provision memory"
                      }
                    },
                    "src": "2762:27:101",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Provision_$36827_storage",
                      "typeString": "struct Provision storage ref"
                    }
                  },
                  "id": 44962,
                  "nodeType": "ExpressionStatement",
                  "src": "2762:27:101"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 44964,
                            "name": "proto",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44937,
                            "src": "2832:5:101",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Protocol_$36749_storage_ptr",
                              "typeString": "struct Protocol storage pointer"
                            }
                          },
                          "id": 44965,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2838:4:101",
                          "memberName": "loan",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 36738,
                          "src": "2832:10:101",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Loan_$36780_storage_$",
                            "typeString": "mapping(uint256 => struct Loan storage ref)"
                          }
                        },
                        "id": 44967,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 44966,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2843:1:101",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2832:13:101",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Loan_$36780_storage",
                          "typeString": "struct Loan storage ref"
                        }
                      },
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 44968,
                            "name": "sp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44951,
                            "src": "2847:2:101",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_SupplyPosition_$36819_storage_ptr",
                              "typeString": "struct SupplyPosition storage pointer"
                            }
                          },
                          "id": 44969,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2850:9:101",
                          "memberName": "provision",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 36818,
                          "src": "2847:12:101",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Provision_$36827_storage_$",
                            "typeString": "mapping(uint256 => struct Provision storage ref)"
                          }
                        },
                        "id": 44971,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 44970,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2860:1:101",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2847:15:101",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Provision_$36827_storage",
                          "typeString": "struct Provision storage ref"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Loan_$36780_storage",
                          "typeString": "struct Loan storage ref"
                        },
                        {
                          "typeIdentifier": "t_struct$_Provision_$36827_storage",
                          "typeString": "struct Provision storage ref"
                        }
                      ],
                      "id": 44963,
                      "name": "sendShareOfSaleAsSupplier",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 36090,
                      "src": "2806:25:101",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Loan_$36780_storage_ptr_$_t_struct$_Provision_$36827_storage_ptr_$returns$_t_uint256_$",
                        "typeString": "function (struct Loan storage pointer,struct Provision storage pointer) returns (uint256)"
                      }
                    },
                    "id": 44972,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2806:57:101",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 44934,
                  "id": 44973,
                  "nodeType": "Return",
                  "src": "2799:64:101"
                }
              ]
            },
            "functionSelector": "6a974035",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "sendShareOfSaleAsSupplierExternal",
            "nameLocation": "2480:33:101",
            "parameters": {
              "id": 44931,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 44927,
                  "mutability": "mutable",
                  "name": "loan",
                  "nameLocation": "2535:4:101",
                  "nodeType": "VariableDeclaration",
                  "scope": 44975,
                  "src": "2523:16:101",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Loan_$36780_memory_ptr",
                    "typeString": "struct Loan"
                  },
                  "typeName": {
                    "id": 44926,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 44925,
                      "name": "Loan",
                      "nameLocations": [
                        "2523:4:101"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 36780,
                      "src": "2523:4:101"
                    },
                    "referencedDeclaration": 36780,
                    "src": "2523:4:101",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Loan_$36780_storage_ptr",
                      "typeString": "struct Loan"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 44930,
                  "mutability": "mutable",
                  "name": "provision",
                  "nameLocation": "2566:9:101",
                  "nodeType": "VariableDeclaration",
                  "scope": 44975,
                  "src": "2549:26:101",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Provision_$36827_memory_ptr",
                    "typeString": "struct Provision"
                  },
                  "typeName": {
                    "id": 44929,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 44928,
                      "name": "Provision",
                      "nameLocations": [
                        "2549:9:101"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 36827,
                      "src": "2549:9:101"
                    },
                    "referencedDeclaration": 36827,
                    "src": "2549:9:101",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Provision_$36827_storage_ptr",
                      "typeString": "struct Provision"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2513:68:101"
            },
            "returnParameters": {
              "id": 44934,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 44933,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 44975,
                  "src": "2600:7:101",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 44932,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2600:7:101",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2599:9:101"
            },
            "scope": 45036,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 44988,
            "nodeType": "FunctionDefinition",
            "src": "2876:126:101",
            "nodes": [],
            "body": {
              "id": 44987,
              "nodeType": "Block",
              "src": "2960:42:101",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 44984,
                        "name": "arg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44978,
                        "src": "2991:3:101",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_OfferArg_$36665_memory_ptr",
                          "typeString": "struct OfferArg memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_OfferArg_$36665_memory_ptr",
                          "typeString": "struct OfferArg memory"
                        }
                      ],
                      "id": 44983,
                      "name": "checkOfferArg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 35172,
                      "src": "2977:13:101",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_OfferArg_$36665_memory_ptr_$returns$_t_address_$",
                        "typeString": "function (struct OfferArg memory) view returns (address)"
                      }
                    },
                    "id": 44985,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2977:18:101",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 44982,
                  "id": 44986,
                  "nodeType": "Return",
                  "src": "2970:25:101"
                }
              ]
            },
            "functionSelector": "20906871",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "checkOfferArgExternal",
            "nameLocation": "2885:21:101",
            "parameters": {
              "id": 44979,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 44978,
                  "mutability": "mutable",
                  "name": "arg",
                  "nameLocation": "2923:3:101",
                  "nodeType": "VariableDeclaration",
                  "scope": 44988,
                  "src": "2907:19:101",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_OfferArg_$36665_memory_ptr",
                    "typeString": "struct OfferArg"
                  },
                  "typeName": {
                    "id": 44977,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 44976,
                      "name": "OfferArg",
                      "nameLocations": [
                        "2907:8:101"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 36665,
                      "src": "2907:8:101"
                    },
                    "referencedDeclaration": 36665,
                    "src": "2907:8:101",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_OfferArg_$36665_storage_ptr",
                      "typeString": "struct OfferArg"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2906:21:101"
            },
            "returnParameters": {
              "id": 44982,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 44981,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 44988,
                  "src": "2951:7:101",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 44980,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2951:7:101",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2950:9:101"
            },
            "scope": 45036,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 45003,
            "nodeType": "FunctionDefinition",
            "src": "3008:147:101",
            "nodes": [],
            "body": {
              "id": 45002,
              "nodeType": "Block",
              "src": "3103:52:101",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 44998,
                        "name": "offer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44991,
                        "src": "3129:5:101",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Offer_$36702_memory_ptr",
                          "typeString": "struct Offer memory"
                        }
                      },
                      {
                        "id": 44999,
                        "name": "providedNft",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44994,
                        "src": "3136:11:101",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_NFToken_$36708_memory_ptr",
                          "typeString": "struct NFToken memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Offer_$36702_memory_ptr",
                          "typeString": "struct Offer memory"
                        },
                        {
                          "typeIdentifier": "t_struct$_NFToken_$36708_memory_ptr",
                          "typeString": "struct NFToken memory"
                        }
                      ],
                      "id": 44997,
                      "name": "checkCollateral",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 35196,
                      "src": "3113:15:101",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_struct$_Offer_$36702_memory_ptr_$_t_struct$_NFToken_$36708_memory_ptr_$returns$__$",
                        "typeString": "function (struct Offer memory,struct NFToken memory) pure"
                      }
                    },
                    "id": 45000,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3113:35:101",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45001,
                  "nodeType": "ExpressionStatement",
                  "src": "3113:35:101"
                }
              ]
            },
            "functionSelector": "ff9d3a77",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "checkCollateralExternal",
            "nameLocation": "3017:23:101",
            "parameters": {
              "id": 44995,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 44991,
                  "mutability": "mutable",
                  "name": "offer",
                  "nameLocation": "3054:5:101",
                  "nodeType": "VariableDeclaration",
                  "scope": 45003,
                  "src": "3041:18:101",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Offer_$36702_memory_ptr",
                    "typeString": "struct Offer"
                  },
                  "typeName": {
                    "id": 44990,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 44989,
                      "name": "Offer",
                      "nameLocations": [
                        "3041:5:101"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 36702,
                      "src": "3041:5:101"
                    },
                    "referencedDeclaration": 36702,
                    "src": "3041:5:101",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Offer_$36702_storage_ptr",
                      "typeString": "struct Offer"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 44994,
                  "mutability": "mutable",
                  "name": "providedNft",
                  "nameLocation": "3076:11:101",
                  "nodeType": "VariableDeclaration",
                  "scope": 45003,
                  "src": "3061:26:101",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_NFToken_$36708_memory_ptr",
                    "typeString": "struct NFToken"
                  },
                  "typeName": {
                    "id": 44993,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 44992,
                      "name": "NFToken",
                      "nameLocations": [
                        "3061:7:101"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 36708,
                      "src": "3061:7:101"
                    },
                    "referencedDeclaration": 36708,
                    "src": "3061:7:101",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_NFToken_$36708_storage_ptr",
                      "typeString": "struct NFToken"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3040:48:101"
            },
            "returnParameters": {
              "id": 44996,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3103:0:101"
            },
            "scope": 45036,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 45018,
            "nodeType": "FunctionDefinition",
            "src": "3198:127:101",
            "nodes": [],
            "body": {
              "id": 45017,
              "nodeType": "Block",
              "src": "3283:42:101",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 45014,
                        "name": "offer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45007,
                        "src": "3312:5:101",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Offer_$36702_memory_ptr",
                          "typeString": "struct Offer memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Offer_$36702_memory_ptr",
                          "typeString": "struct Offer memory"
                        }
                      ],
                      "id": 45013,
                      "name": "offerDigest",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37355,
                      "src": "3300:11:101",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_Offer_$36702_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (struct Offer memory) view returns (bytes32)"
                      }
                    },
                    "id": 45015,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3300:18:101",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 45012,
                  "id": 45016,
                  "nodeType": "Return",
                  "src": "3293:25:101"
                }
              ]
            },
            "baseFunctions": [
              46154
            ],
            "documentation": {
              "id": 45004,
              "nodeType": "StructuredDocumentation",
              "src": "3161:32:101",
              "text": "@dev use only in TestCommons"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getOfferDigest",
            "nameLocation": "3207:14:101",
            "overrides": {
              "id": 45009,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3256:8:101"
            },
            "parameters": {
              "id": 45008,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 45007,
                  "mutability": "mutable",
                  "name": "offer",
                  "nameLocation": "3235:5:101",
                  "nodeType": "VariableDeclaration",
                  "scope": 45018,
                  "src": "3222:18:101",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Offer_$36702_memory_ptr",
                    "typeString": "struct Offer"
                  },
                  "typeName": {
                    "id": 45006,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 45005,
                      "name": "Offer",
                      "nameLocations": [
                        "3222:5:101"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 36702,
                      "src": "3222:5:101"
                    },
                    "referencedDeclaration": 36702,
                    "src": "3222:5:101",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Offer_$36702_storage_ptr",
                      "typeString": "struct Offer"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3221:20:101"
            },
            "returnParameters": {
              "id": 45012,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 45011,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 45018,
                  "src": "3274:7:101",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 45010,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3274:7:101",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3273:9:101"
            },
            "scope": 45036,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 45035,
            "nodeType": "FunctionDefinition",
            "src": "3368:141:101",
            "nodes": [],
            "body": {
              "id": 45034,
              "nodeType": "Block",
              "src": "3449:60:101",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "expression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 45028,
                          "name": "protocolStorage",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 36624,
                          "src": "3466:15:101",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_Protocol_$36749_storage_ptr_$",
                            "typeString": "function () pure returns (struct Protocol storage pointer)"
                          }
                        },
                        "id": 45029,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3466:17:101",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Protocol_$36749_storage_ptr",
                          "typeString": "struct Protocol storage pointer"
                        }
                      },
                      "id": 45030,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3484:7:101",
                      "memberName": "tranche",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 36733,
                      "src": "3466:25:101",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_userDefinedValueType$_Ray_$36644_$",
                        "typeString": "mapping(uint256 => Ray)"
                      }
                    },
                    "id": 45032,
                    "indexExpression": {
                      "id": 45031,
                      "name": "trancheId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45021,
                      "src": "3492:9:101",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3466:36:101",
                    "typeDescriptions": {
                      "typeIdentifier": "t_userDefinedValueType$_Ray_$36644",
                      "typeString": "Ray"
                    }
                  },
                  "functionReturnParameters": 45027,
                  "id": 45033,
                  "nodeType": "Return",
                  "src": "3459:43:101"
                }
              ]
            },
            "baseFunctions": [
              46426
            ],
            "documentation": {
              "id": 45019,
              "nodeType": "StructuredDocumentation",
              "src": "3331:32:101",
              "text": "@dev use only in TestCommons"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTranche",
            "nameLocation": "3377:10:101",
            "overrides": {
              "id": 45023,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3421:8:101"
            },
            "parameters": {
              "id": 45022,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 45021,
                  "mutability": "mutable",
                  "name": "trancheId",
                  "nameLocation": "3396:9:101",
                  "nodeType": "VariableDeclaration",
                  "scope": 45035,
                  "src": "3388:17:101",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 45020,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3388:7:101",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3387:19:101"
            },
            "returnParameters": {
              "id": 45027,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 45026,
                  "mutability": "mutable",
                  "name": "rate",
                  "nameLocation": "3443:4:101",
                  "nodeType": "VariableDeclaration",
                  "scope": 45035,
                  "src": "3439:8:101",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_userDefinedValueType$_Ray_$36644",
                    "typeString": "Ray"
                  },
                  "typeName": {
                    "id": 45025,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 45024,
                      "name": "Ray",
                      "nameLocations": [
                        "3439:3:101"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 36644,
                      "src": "3439:3:101"
                    },
                    "referencedDeclaration": 36644,
                    "src": "3439:3:101",
                    "typeDescriptions": {
                      "typeIdentifier": "t_userDefinedValueType$_Ray_$36644",
                      "typeString": "Ray"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3438:10:101"
            },
            "scope": 45036,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 44643,
              "name": "TestCommons",
              "nameLocations": [
                "684:11:101"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 46681,
              "src": "684:11:101"
            },
            "id": 44644,
            "nodeType": "InheritanceSpecifier",
            "src": "684:11:101"
          },
          {
            "baseName": {
              "id": 44645,
              "name": "BigKairos",
              "nameLocations": [
                "697:9:101"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 44067,
              "src": "697:9:101"
            },
            "id": 44646,
            "nodeType": "InheritanceSpecifier",
            "src": "697:9:101"
          }
        ],
        "canonicalName": "Internal",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 44642,
          "nodeType": "StructuredDocumentation",
          "src": "591:72:101",
          "text": "@dev inherit from this contract to perform tests from INSIDE kairos"
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          45036,
          44067,
          37461,
          37782,
          37306,
          38736,
          37116,
          38722,
          36091,
          35057,
          35686,
          34938,
          38432,
          38349,
          1732,
          3267,
          38607,
          38588,
          35197,
          37405,
          3231,
          38562,
          1750,
          38576,
          38542,
          38749,
          38535,
          34657,
          38509,
          46681,
          45648,
          16818,
          7919,
          7916,
          16769,
          12568,
          12278,
          11599,
          10027,
          9333,
          7859
        ],
        "name": "Internal",
        "nameLocation": "672:8:101",
        "scope": 45037,
        "usedErrors": [
          36445,
          36447,
          36449,
          36451,
          36453,
          36455,
          36457,
          36459,
          36461,
          36463,
          36465,
          36489,
          36498,
          36505,
          36514,
          36523,
          36531,
          36537,
          36541,
          36545,
          36549,
          36553,
          36557,
          36561,
          36567,
          36573,
          36577,
          37490,
          45983,
          45991,
          45993
        ]
      }
    ],
    "license": "UNLICENSED"
  },
  "id": 101
}