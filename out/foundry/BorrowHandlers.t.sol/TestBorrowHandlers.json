{
  "abi": [
    {
      "inputs": [],
      "name": "AssertionFailedCollatStateDontMatch",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "AssertionFailedLoanDontMatch",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "Ray",
          "name": "expected",
          "type": "uint256"
        },
        {
          "internalType": "Ray",
          "name": "actual",
          "type": "uint256"
        }
      ],
      "name": "AssertionFailedRayDontMatch",
      "type": "error"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "contract IERC20",
              "name": "assetToLend",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "loanToValue",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "duration",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "expirationDate",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "tranche",
              "type": "uint256"
            },
            {
              "components": [
                {
                  "internalType": "contract IERC721",
                  "name": "implem",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                }
              ],
              "internalType": "struct NFToken",
              "name": "collateral",
              "type": "tuple"
            }
          ],
          "internalType": "struct Offer",
          "name": "offer",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "contract IERC721",
              "name": "implem",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            }
          ],
          "internalType": "struct NFToken",
          "name": "providedNft",
          "type": "tuple"
        }
      ],
      "name": "BadCollateral",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "loanId",
          "type": "uint256"
        }
      ],
      "name": "BorrowerAlreadyClaimed",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "admin",
          "type": "address"
        }
      ],
      "name": "CallerIsNotOwner",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "endDate",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "loanId",
          "type": "uint256"
        }
      ],
      "name": "CollateralIsNotLiquidableYet",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "ERC20TransferFailed",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ERC721AddressZeroIsNotAValidOwner",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ERC721ApprovalToCurrentOwner",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ERC721ApproveToCaller",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ERC721CallerIsNotOwnerNorApproved",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ERC721CallerIsNotOwnerNorApprovedForAll",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ERC721InvalidTokenId",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ERC721MintToTheZeroAddress",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ERC721TokenAlreadyMinted",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ERC721TransferFromIncorrectOwner",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ERC721TransferToNonERC721ReceiverImplementer",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ERC721TransferToTheZeroAddress",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "firstRequested",
          "type": "address"
        },
        {
          "internalType": "contract IERC20",
          "name": "requested",
          "type": "address"
        }
      ],
      "name": "InconsistentAssetRequests",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "firstTrancheIdUsed",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "trancheIdFound",
          "type": "uint256"
        }
      ],
      "name": "InconsistentTranches",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "nbOfTranches",
          "type": "uint256"
        }
      ],
      "name": "InvalidTranche",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "loanId",
          "type": "uint256"
        }
      ],
      "name": "LoanAlreadyRepaid",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "loanId",
          "type": "uint256"
        }
      ],
      "name": "LoanNotRepaidOrLiquidatedYet",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "loanId",
          "type": "uint256"
        }
      ],
      "name": "NotBorrowerOfTheLoan",
      "type": "error"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "contract IERC20",
              "name": "assetToLend",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "loanToValue",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "duration",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "expirationDate",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "tranche",
              "type": "uint256"
            },
            {
              "components": [
                {
                  "internalType": "contract IERC721",
                  "name": "implem",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                }
              ],
              "internalType": "struct NFToken",
              "name": "collateral",
              "type": "tuple"
            }
          ],
          "internalType": "struct Offer",
          "name": "offer",
          "type": "tuple"
        },
        {
          "internalType": "uint256",
          "name": "expirationDate",
          "type": "uint256"
        }
      ],
      "name": "OfferHasExpired",
      "type": "error"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "contract IERC20",
              "name": "assetToLend",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "loanToValue",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "duration",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "expirationDate",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "tranche",
              "type": "uint256"
            },
            {
              "components": [
                {
                  "internalType": "contract IERC721",
                  "name": "implem",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                }
              ],
              "internalType": "struct NFToken",
              "name": "collateral",
              "type": "tuple"
            }
          ],
          "internalType": "struct Offer",
          "name": "offer",
          "type": "tuple"
        },
        {
          "internalType": "uint256",
          "name": "requested",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "lowerBound",
          "type": "uint256"
        }
      ],
      "name": "RequestedAmountIsUnderMinimum",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "requested",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "offered",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "contract IERC20",
              "name": "assetToLend",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "loanToValue",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "duration",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "expirationDate",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "tranche",
              "type": "uint256"
            },
            {
              "components": [
                {
                  "internalType": "contract IERC721",
                  "name": "implem",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                }
              ],
              "internalType": "struct NFToken",
              "name": "collateral",
              "type": "tuple"
            }
          ],
          "internalType": "struct Offer",
          "name": "offer",
          "type": "tuple"
        }
      ],
      "name": "RequestedAmountTooHigh",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Unauthorized",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "lent",
          "type": "uint256"
        }
      ],
      "name": "UnsafeAmountLent",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "minLoanToValue",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "maxLoanToValue",
          "type": "uint256"
        }
      ],
      "name": "UnsafeOfferLoanToValuesGap",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "loanId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "loan",
          "type": "bytes"
        }
      ],
      "name": "Borrow",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "loanId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "args",
          "type": "bytes"
        }
      ],
      "name": "Buy",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "claimant",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "claimed",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "loanId",
          "type": "uint256"
        }
      ],
      "name": "Claim",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "newAuctionDuration",
          "type": "uint256"
        }
      ],
      "name": "NewAuctionDuration",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "Ray",
          "name": "newAuctionPriceFactor",
          "type": "uint256"
        }
      ],
      "name": "NewAuctionPriceFactor",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "contract IERC20",
          "name": "currency",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "newLowerBound",
          "type": "uint256"
        }
      ],
      "name": "NewBorrowAmountPerOfferLowerBound",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "contract IERC20",
          "name": "currency",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "newMinOfferCost",
          "type": "uint256"
        }
      ],
      "name": "NewMininimumOfferCost",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "Ray",
          "name": "tranche",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "newTrancheId",
          "type": "uint256"
        }
      ],
      "name": "NewTranche",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "loanId",
          "type": "uint256"
        }
      ],
      "name": "Repay",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "log_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "log_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "log_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "name": "log_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "val",
          "type": "address"
        }
      ],
      "name": "log_named_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "val",
          "type": "bytes"
        }
      ],
      "name": "log_named_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "val",
          "type": "bytes32"
        }
      ],
      "name": "log_named_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        }
      ],
      "name": "log_named_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "val",
          "type": "string"
        }
      ],
      "name": "log_named_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "log_named_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "log_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "logs",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "IS_TEST",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "contract IERC721",
                  "name": "implem",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                }
              ],
              "internalType": "struct NFToken",
              "name": "nft",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "bytes",
                  "name": "signature",
                  "type": "bytes"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "components": [
                    {
                      "internalType": "contract IERC20",
                      "name": "assetToLend",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "loanToValue",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "duration",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "expirationDate",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "tranche",
                      "type": "uint256"
                    },
                    {
                      "components": [
                        {
                          "internalType": "contract IERC721",
                          "name": "implem",
                          "type": "address"
                        },
                        {
                          "internalType": "uint256",
                          "name": "id",
                          "type": "uint256"
                        }
                      ],
                      "internalType": "struct NFToken",
                      "name": "collateral",
                      "type": "tuple"
                    }
                  ],
                  "internalType": "struct Offer",
                  "name": "offer",
                  "type": "tuple"
                }
              ],
              "internalType": "struct OfferArg[]",
              "name": "args",
              "type": "tuple[]"
            }
          ],
          "internalType": "struct BorrowArg[]",
          "name": "args",
          "type": "tuple[]"
        }
      ],
      "name": "borrow",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "loanId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            }
          ],
          "internalType": "struct BuyArg[]",
          "name": "args",
          "type": "tuple[]"
        }
      ],
      "name": "buy",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "contract IERC20",
              "name": "assetToLend",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "loanToValue",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "duration",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "expirationDate",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "tranche",
              "type": "uint256"
            },
            {
              "components": [
                {
                  "internalType": "contract IERC721",
                  "name": "implem",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                }
              ],
              "internalType": "struct NFToken",
              "name": "collateral",
              "type": "tuple"
            }
          ],
          "internalType": "struct Offer",
          "name": "offer",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "contract IERC721",
              "name": "implem",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            }
          ],
          "internalType": "struct NFToken",
          "name": "providedNft",
          "type": "tuple"
        }
      ],
      "name": "checkCollateralExternal",
      "outputs": [],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "bytes",
              "name": "signature",
              "type": "bytes"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "components": [
                {
                  "internalType": "contract IERC20",
                  "name": "assetToLend",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "loanToValue",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "duration",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "expirationDate",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "tranche",
                  "type": "uint256"
                },
                {
                  "components": [
                    {
                      "internalType": "contract IERC721",
                      "name": "implem",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "id",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct NFToken",
                  "name": "collateral",
                  "type": "tuple"
                }
              ],
              "internalType": "struct Offer",
              "name": "offer",
              "type": "tuple"
            }
          ],
          "internalType": "struct OfferArg",
          "name": "arg",
          "type": "tuple"
        }
      ],
      "name": "checkOfferArgExternal",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256[]",
          "name": "positionIds",
          "type": "uint256[]"
        }
      ],
      "name": "claim",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "sent",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256[]",
          "name": "loanIds",
          "type": "uint256[]"
        }
      ],
      "name": "claimAsBorrower",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "sent",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "Ray",
          "name": "newTranche",
          "type": "uint256"
        }
      ],
      "name": "createTranche",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "newTrancheId",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeArtifacts",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "excludedArtifacts_",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeContracts",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "excludedContracts_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeSenders",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "excludedSenders_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "failed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "getLoan",
      "outputs": [
        {
          "components": [
            {
              "internalType": "contract IERC20",
              "name": "assetLent",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "lent",
              "type": "uint256"
            },
            {
              "internalType": "Ray",
              "name": "shareLent",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "startDate",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "endDate",
              "type": "uint256"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "duration",
                  "type": "uint256"
                },
                {
                  "internalType": "Ray",
                  "name": "priceFactor",
                  "type": "uint256"
                }
              ],
              "internalType": "struct Auction",
              "name": "auction",
              "type": "tuple"
            },
            {
              "internalType": "Ray",
              "name": "interestPerSecond",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "borrower",
              "type": "address"
            },
            {
              "components": [
                {
                  "internalType": "contract IERC721",
                  "name": "implem",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                }
              ],
              "internalType": "struct NFToken",
              "name": "collateral",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "paid",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "minInterestsToRepay",
                  "type": "uint256"
                },
                {
                  "internalType": "bool",
                  "name": "liquidated",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "borrowerClaimed",
                  "type": "bool"
                }
              ],
              "internalType": "struct Payment",
              "name": "payment",
              "type": "tuple"
            },
            {
              "internalType": "uint256",
              "name": "supplyPositionIndex",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "nbOfPositions",
              "type": "uint256"
            }
          ],
          "internalType": "struct Loan",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "currency",
          "type": "address"
        }
      ],
      "name": "getMinOfferCostAndBorrowableAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "minOfferCost",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "offerBorrowAmountLowerBound",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getParameters",
      "outputs": [
        {
          "internalType": "Ray",
          "name": "auctionPriceFactor",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "auctionDuration",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "nbOfLoans",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "nbOfTranches",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "getRateOfTranche",
      "outputs": [
        {
          "internalType": "Ray",
          "name": "rate",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "contract IERC20",
              "name": "assetToLend",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "loanToValue",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "duration",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "expirationDate",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "tranche",
              "type": "uint256"
            },
            {
              "components": [
                {
                  "internalType": "contract IERC721",
                  "name": "implem",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                }
              ],
              "internalType": "struct NFToken",
              "name": "collateral",
              "type": "tuple"
            }
          ],
          "internalType": "struct Offer",
          "name": "offer",
          "type": "tuple"
        }
      ],
      "name": "offerDigest",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "onERC721Received",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "position",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "Ray",
              "name": "share",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "loanId",
              "type": "uint256"
            }
          ],
          "internalType": "struct Provision",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "loanId",
          "type": "uint256"
        }
      ],
      "name": "price",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256[]",
          "name": "loanIds",
          "type": "uint256[]"
        }
      ],
      "name": "repay",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "contract IERC20",
              "name": "assetLent",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "lent",
              "type": "uint256"
            },
            {
              "internalType": "Ray",
              "name": "shareLent",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "startDate",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "endDate",
              "type": "uint256"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "duration",
                  "type": "uint256"
                },
                {
                  "internalType": "Ray",
                  "name": "priceFactor",
                  "type": "uint256"
                }
              ],
              "internalType": "struct Auction",
              "name": "auction",
              "type": "tuple"
            },
            {
              "internalType": "Ray",
              "name": "interestPerSecond",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "borrower",
              "type": "address"
            },
            {
              "components": [
                {
                  "internalType": "contract IERC721",
                  "name": "implem",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                }
              ],
              "internalType": "struct NFToken",
              "name": "collateral",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "paid",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "minInterestsToRepay",
                  "type": "uint256"
                },
                {
                  "internalType": "bool",
                  "name": "liquidated",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "borrowerClaimed",
                  "type": "bool"
                }
              ],
              "internalType": "struct Payment",
              "name": "payment",
              "type": "tuple"
            },
            {
              "internalType": "uint256",
              "name": "supplyPositionIndex",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "nbOfPositions",
              "type": "uint256"
            }
          ],
          "internalType": "struct Loan",
          "name": "loan",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "Ray",
              "name": "share",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "loanId",
              "type": "uint256"
            }
          ],
          "internalType": "struct Provision",
          "name": "provision",
          "type": "tuple"
        }
      ],
      "name": "sendInterestsExternal",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "contract IERC20",
              "name": "assetLent",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "lent",
              "type": "uint256"
            },
            {
              "internalType": "Ray",
              "name": "shareLent",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "startDate",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "endDate",
              "type": "uint256"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "duration",
                  "type": "uint256"
                },
                {
                  "internalType": "Ray",
                  "name": "priceFactor",
                  "type": "uint256"
                }
              ],
              "internalType": "struct Auction",
              "name": "auction",
              "type": "tuple"
            },
            {
              "internalType": "Ray",
              "name": "interestPerSecond",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "borrower",
              "type": "address"
            },
            {
              "components": [
                {
                  "internalType": "contract IERC721",
                  "name": "implem",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                }
              ],
              "internalType": "struct NFToken",
              "name": "collateral",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "paid",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "minInterestsToRepay",
                  "type": "uint256"
                },
                {
                  "internalType": "bool",
                  "name": "liquidated",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "borrowerClaimed",
                  "type": "bool"
                }
              ],
              "internalType": "struct Payment",
              "name": "payment",
              "type": "tuple"
            },
            {
              "internalType": "uint256",
              "name": "supplyPositionIndex",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "nbOfPositions",
              "type": "uint256"
            }
          ],
          "internalType": "struct Loan",
          "name": "loan",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "Ray",
              "name": "share",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "loanId",
              "type": "uint256"
            }
          ],
          "internalType": "struct Provision",
          "name": "provision",
          "type": "tuple"
        }
      ],
      "name": "sendShareOfSaleAsSupplierExternal",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newAuctionDuration",
          "type": "uint256"
        }
      ],
      "name": "setAuctionDuration",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "Ray",
          "name": "newAuctionPriceFactor",
          "type": "uint256"
        }
      ],
      "name": "setAuctionPriceFactor",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "currency",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "newLowerBound",
          "type": "uint256"
        }
      ],
      "name": "setBorrowAmountPerOfferLowerBound",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "currency",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "newMinOfferCost",
          "type": "uint256"
        }
      ],
      "name": "setMinOfferCost",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetArtifactSelectors",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes4[]",
              "name": "selectors",
              "type": "bytes4[]"
            }
          ],
          "internalType": "struct StdInvariant.FuzzSelector[]",
          "name": "targetedArtifactSelectors_",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetArtifacts",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "targetedArtifacts_",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetContracts",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "targetedContracts_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetSelectors",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes4[]",
              "name": "selectors",
              "type": "bytes4[]"
            }
          ],
          "internalType": "struct StdInvariant.FuzzSelector[]",
          "name": "targetedSelectors_",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetSenders",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "targetedSenders_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testConsistentAssetRequests",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testConsistentOfferTranches",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testMultipleUseCollateral",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testRequestedAmountTooHigh",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testUseCollateralNominal",
      "outputs": [
        {
          "components": [
            {
              "internalType": "contract IERC20",
              "name": "assetLent",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "lent",
              "type": "uint256"
            },
            {
              "internalType": "Ray",
              "name": "shareLent",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "startDate",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "endDate",
              "type": "uint256"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "duration",
                  "type": "uint256"
                },
                {
                  "internalType": "Ray",
                  "name": "priceFactor",
                  "type": "uint256"
                }
              ],
              "internalType": "struct Auction",
              "name": "auction",
              "type": "tuple"
            },
            {
              "internalType": "Ray",
              "name": "interestPerSecond",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "borrower",
              "type": "address"
            },
            {
              "components": [
                {
                  "internalType": "contract IERC721",
                  "name": "implem",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                }
              ],
              "internalType": "struct NFToken",
              "name": "collateral",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "paid",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "minInterestsToRepay",
                  "type": "uint256"
                },
                {
                  "internalType": "bool",
                  "name": "liquidated",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "borrowerClaimed",
                  "type": "bool"
                }
              ],
              "internalType": "struct Payment",
              "name": "payment",
              "type": "tuple"
            },
            {
              "internalType": "uint256",
              "name": "supplyPositionIndex",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "nbOfPositions",
              "type": "uint256"
            }
          ],
          "internalType": "struct Loan",
          "name": "loan",
          "type": "tuple"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testUseCollateralReturn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testUseOfferReturn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "bytes",
              "name": "signature",
              "type": "bytes"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "components": [
                {
                  "internalType": "contract IERC20",
                  "name": "assetToLend",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "loanToValue",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "duration",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "expirationDate",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "tranche",
                  "type": "uint256"
                },
                {
                  "components": [
                    {
                      "internalType": "contract IERC721",
                      "name": "implem",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "id",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct NFToken",
                  "name": "collateral",
                  "type": "tuple"
                }
              ],
              "internalType": "struct Offer",
              "name": "offer",
              "type": "tuple"
            }
          ],
          "internalType": "struct OfferArg[]",
          "name": "args",
          "type": "tuple[]"
        },
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "contract IERC721",
              "name": "implem",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            }
          ],
          "internalType": "struct NFToken",
          "name": "nft",
          "type": "tuple"
        }
      ],
      "name": "useCollateralExternal",
      "outputs": [
        {
          "components": [
            {
              "internalType": "contract IERC20",
              "name": "assetLent",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "lent",
              "type": "uint256"
            },
            {
              "internalType": "Ray",
              "name": "shareLent",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "startDate",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "endDate",
              "type": "uint256"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "duration",
                  "type": "uint256"
                },
                {
                  "internalType": "Ray",
                  "name": "priceFactor",
                  "type": "uint256"
                }
              ],
              "internalType": "struct Auction",
              "name": "auction",
              "type": "tuple"
            },
            {
              "internalType": "Ray",
              "name": "interestPerSecond",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "borrower",
              "type": "address"
            },
            {
              "components": [
                {
                  "internalType": "contract IERC721",
                  "name": "implem",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                }
              ],
              "internalType": "struct NFToken",
              "name": "collateral",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "paid",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "minInterestsToRepay",
                  "type": "uint256"
                },
                {
                  "internalType": "bool",
                  "name": "liquidated",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "borrowerClaimed",
                  "type": "bool"
                }
              ],
              "internalType": "struct Payment",
              "name": "payment",
              "type": "tuple"
            },
            {
              "internalType": "uint256",
              "name": "supplyPositionIndex",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "nbOfPositions",
              "type": "uint256"
            }
          ],
          "internalType": "struct Loan",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "bytes",
              "name": "signature",
              "type": "bytes"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "components": [
                {
                  "internalType": "contract IERC20",
                  "name": "assetToLend",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "loanToValue",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "duration",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "expirationDate",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "tranche",
                  "type": "uint256"
                },
                {
                  "components": [
                    {
                      "internalType": "contract IERC721",
                      "name": "implem",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "id",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct NFToken",
                  "name": "collateral",
                  "type": "tuple"
                }
              ],
              "internalType": "struct Offer",
              "name": "offer",
              "type": "tuple"
            }
          ],
          "internalType": "struct OfferArg",
          "name": "arg",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "Ray",
              "name": "matched",
              "type": "uint256"
            },
            {
              "internalType": "contract IERC20",
              "name": "assetLent",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tranche",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "minOfferDuration",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "minOfferLoanToValue",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxOfferLoanToValue",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "components": [
                {
                  "internalType": "contract IERC721",
                  "name": "implem",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                }
              ],
              "internalType": "struct NFToken",
              "name": "nft",
              "type": "tuple"
            },
            {
              "internalType": "uint256",
              "name": "loanId",
              "type": "uint256"
            }
          ],
          "internalType": "struct CollateralState",
          "name": "collatState",
          "type": "tuple"
        }
      ],
      "name": "useOfferExternal",
      "outputs": [
        {
          "components": [
            {
              "internalType": "Ray",
              "name": "matched",
              "type": "uint256"
            },
            {
              "internalType": "contract IERC20",
              "name": "assetLent",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tranche",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "minOfferDuration",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "minOfferLoanToValue",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxOfferLoanToValue",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "components": [
                {
                  "internalType": "contract IERC721",
                  "name": "implem",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                }
              ],
              "internalType": "struct NFToken",
              "name": "nft",
              "type": "tuple"
            },
            {
              "internalType": "uint256",
              "name": "loanId",
              "type": "uint256"
            }
          ],
          "internalType": "struct CollateralState",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x6101e060405260008054600160ff1991821681179092556004805490911690911790553480156200002f57600080fd5b506040518060400160405280601481526020017f4b6169726f73204c6f616e2070726f746f636f6c00000000000000000000000081525060405180604001604052806003815260200162302e3160e81b815250620000e06301e13380620000cc6004620000b8600a6b033b2e3c9fd0803ce800000062000b6160201b62002d8d1790919060201c565b62000b7860201b62002d991790919060201c565b62000b6160201b62002d8d1790919060201c565b6080526040805160018082528183019092529060208083019080368337505081516200011492601b92506020019062000b86565b506001601b6000815481106200012e576200012e62000bed565b6000918252602090912001556040516001625e79b760e01b03198152620a11ce600482015260008051602062007e008339815191529063ffa1864990602401602060405180830381865afa1580156200018b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620001b1919062000c03565b6001600160a01b031660a0526040516001625e79b760e01b03198152610b0b600482015260008051602062007e008339815191529063ffa1864990602401602060405180830381865afa1580156200020d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000233919062000c03565b6001600160a01b031660c052604080516318caf8e360e31b81527333c40185e5db418a44ff63453d84f629163460c36004820152602481019190915260086044820152673137b93937bbb2b960c11b606482015260008051602062007e008339815191529063c657c71890608401600060405180830381600087803b158015620002bc57600080fd5b505af1158015620002d1573d6000803e3d6000fd5b5050604080516318caf8e360e31b81527302016836a56b71f0d02689e69e326f4f4c1b905760048201526024810191909152600560448201526437bbb732b960d91b606482015260008051602062007e00833981519152925063c657c7189150608401600060405180830381600087803b1580156200034f57600080fd5b505af115801562000364573d6000803e3d6000fd5b505060a051604080516318caf8e360e31b81526001600160a01b0390921660048301526024820152600660448201526539b4b3b732b960d11b606482015260008051602062007e00833981519152925063c657c7189150608401600060405180830381600087803b158015620003d957600080fd5b505af1158015620003ee573d6000803e3d6000fd5b505060c051604080516318caf8e360e31b81526001600160a01b0390921660048301526024820152600760448201526639b4b3b732b91960c91b606482015260008051602062007e00833981519152925063c657c7189150608401600060405180830381600087803b1580156200046457600080fd5b505af115801562000479573d6000803e3d6000fd5b50505050620004a660405180606001604052806029815260200162007e2060299139805160209091012090565b6001600160e01b03191660e0526040805160608101909152602f808252620004dd919062007e496020830139805160209091012090565b6001600160e01b031916610100526301e133804210156200055e576040516372eb5f8160e11b81526301e13380600482015260008051602062007e008339815191529063e5d6bf0290602401600060405180830381600087803b1580156200054457600080fd5b505af115801562000559573d6000803e3d6000fd5b505050505b81516020808401919091208251918301919091206101808290526101a081905246610140527f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f620005f48184846040805160208101859052908101839052606081018290524660808201523060a082015260009060c0016040516020818303038152906040528051906020012090509392505050565b6101205230610160526101c0525050604080518082019091526001808252600160f81b6020808401919091527f84e508d57dadc535817af594804944c3bc341cdb6befa5a0747e20285912a7ec91909155608051600080527f84e508d57dadc535817af594804944c3bc341cdb6befa5a0747e20285912a7ef82527f3688c8c497ad780a463d983223e7feac1b5d43a89bdf2be494802ee6bf0824ad559092507f84e508d57dadc535817af594804944c3bc341cdb6befa5a0747e20285912a7eb9150620006dc906b033b2e3c9fd0803ce80000009060039062000b78811b62002d9917901c565b60038201556203f4806002820155601e80546001600160a01b0319167362c4386b05def01bdda7f75de4204db813fd67da908117909155604051635a6b63c160e11b815260008051602062007e008339815191529163b4d6c78291620007489190869060040162000c35565b600060405180830381600087803b1580156200076357600080fd5b505af115801562000778573d6000803e3d6000fd5b5050601e54604080516318caf8e360e31b81526001600160a01b039092166004830152602482015260056044820152646d6f6e657960d81b606482015260008051602062007e00833981519152925063c657c7189150608401600060405180830381600087803b158015620007ec57600080fd5b505af115801562000801573d6000803e3d6000fd5b5050601f80546001600160a01b03191673f01ddd9e071f32c3c4cb7c0ab117e392793b658e908117909155604051635a6b63c160e11b815260008051602062007e00833981519152935063b4d6c7829250620008639190869060040162000c35565b600060405180830381600087803b1580156200087e57600080fd5b505af115801562000893573d6000803e3d6000fd5b5050601f54604080516318caf8e360e31b81526001600160a01b0390921660048301526024820152600660448201526536b7b732bc9960d11b606482015260008051602062007e00833981519152925063c657c7189150608401600060405180830381600087803b1580156200090857600080fd5b505af11580156200091d573d6000803e3d6000fd5b5050602080546001600160a01b03191673d4012c96ff3e41834211c6855097b1198c4132d0908117909155604051635a6b63c160e11b815260008051602062007e00833981519152935063b4d6c78292506200097f9190869060040162000c35565b600060405180830381600087803b1580156200099a57600080fd5b505af1158015620009af573d6000803e3d6000fd5b5050602054604080516318caf8e360e31b81526001600160a01b039092166004830152602482015260036044820152621b999d60ea1b606482015260008051602062007e00833981519152925063c657c7189150608401600060405180830381600087803b15801562000a2157600080fd5b505af115801562000a36573d6000803e3d6000fd5b5050602180546001600160a01b031916731652741cbfd3d52d1855561158e475c32924d5bc908117909155604051635a6b63c160e11b815260008051602062007e00833981519152935063b4d6c782925062000a989190869060040162000c35565b600060405180830381600087803b15801562000ab357600080fd5b505af115801562000ac8573d6000803e3d6000fd5b5050602154604080516318caf8e360e31b81526001600160a01b03909216600480840191909152602483019190915260448201526337333a1960e11b606482015260008051602062007e00833981519152925063c657c7189150608401600060405180830381600087803b15801562000b4057600080fd5b505af115801562000b55573d6000803e3d6000fd5b50505050505062000cde565b600062000b6f828462000c95565b90505b92915050565b600062000b6f828462000cb8565b82805482825590600052602060002090810192821562000bc4579160200282015b8281111562000bc457825182559160200191906001019062000ba7565b5062000bd292915062000bd6565b5090565b5b8082111562000bd2576000815560010162000bd7565b634e487b7160e01b600052603260045260246000fd5b60006020828403121562000c1657600080fd5b81516001600160a01b038116811462000c2e57600080fd5b9392505050565b60018060a01b038316815260006020604081840152835180604085015260005b8181101562000c735785810183015185820160600152820162000c55565b506000606082860101526060601f19601f830116850101925050509392505050565b60008262000cb357634e487b7160e01b600052601260045260246000fd5b500490565b808202811582820484141762000b7257634e487b7160e01b600052601160045260246000fd5b60805160a05160c05160e05161010051610120516101405161016051610180516101a0516101c05161709262000d6e600039600061437d015260006143cc015260006143a7015260006143000152600061432a01526000614354015260005050600050506000505060008181611d6a015281816122b6015281816127560152612bed0152600050506170926000f3fe608060405234801561001057600080fd5b50600436106103425760003560e01c80637660e109116101b8578063b5508aa911610104578063e7af8fed116100a2578063f7a95a9e1161007c578063f7a95a9e14610706578063fa7626d41461073b578063fc6774fe14610748578063ff9d3a771461075057600080fd5b8063e7af8fed146106d8578063e985e9c5146106eb578063f24c490c146106fe57600080fd5b8063ba414fa6116100de578063ba414fa6146106a0578063bbf1dd1d146106a8578063bfc36be6146106c8578063e20c9f71146106d057600080fd5b8063b5508aa91461067d578063b58907ea14610685578063b88d4fde1461068d57600080fd5b8063980b13c511610171578063a497e6741161014b578063a497e6741461061c578063a5ea11da1461062f578063ac98981914610657578063b1ce7a6a1461066a57600080fd5b8063980b13c5146105ee5780639e10b8db14610601578063a22cb4651461060957600080fd5b80637660e1091461057b57806385226c811461058e5780638d116c7a146105a3578063916a17c6146105cb57806392eab80e146105d357806395d89b41146105e657600080fd5b806323b872dd11610292578063504006ca116102305780636a9740351161020a5780636a9740351461053a5780636ba4c1381461054d57806370a082311461056057806373911a6d1461057357600080fd5b8063504006ca146104f25780636352211e1461051257806366d9a9a01461052557600080fd5b80633d6fd5be1161026c5780633d6fd5be146104bc5780633e5e3c23146104cf5780633f7286f4146104d757806342842e0e146104df57600080fd5b806323b872dd1461048357806326a49e37146104965780632efe69b3146104a957600080fd5b806314aab74f116102ff5780631a34c700116102d95780631a34c700146104355780631ed7831c146104485780631fbc8a741461045d578063209068711461047057600080fd5b806314aab74f146103e0578063150b7a021461040157806318160ddd1461042d57600080fd5b806301ffc9a71461034757806306fdde03146103705780630701df0114610385578063081812fc1461038f578063095ea7b3146103ba5780630c72ad20146103cd575b600080fd5b61035b6103553660046159a5565b50600090565b60405190151581526020015b60405180910390f35b610378610763565b6040516103679190615a12565b61038d610804565b005b6103a261039d366004615a25565b61095a565b6040516001600160a01b039091168152602001610367565b61038d6103c8366004615a5e565b61096b565b61038d6103db366004615ba5565b6109f7565b6103f36103ee366004615a25565b610c05565b604051908152602001610367565b61041461040f366004615c2f565b610c23565b6040516001600160e01b03199091168152602001610367565b6103f3610c70565b61038d610443366004615a5e565b610c83565b610450610d74565b6040516103679190615ccd565b6103f361046b366004615ddf565b610dd6565b6103a261047e366004615ece565b610de9565b61038d610491366004615f02565b610df4565b6103f36104a4366004615a25565b610e26565b6103f36104b7366004616011565b610f03565b6103f36104ca366004616140565b611070565b6104506111fe565b61045061125e565b61038d6104ed366004615f02565b6112be565b610505610500366004615a25565b6112d9565b6040516103679190616181565b6103a2610520366004615a25565b6113f8565b61052d611403565b604051610367919061627c565b6103f3610548366004616011565b6114f2565b6103f361055b366004616140565b611656565b6103f361056e36600461632f565b6117e7565b61038d61183c565b61038d610589366004615a5e565b6118ba565b6105966119ab565b604051610367919061634c565b6105b66105b136600461632f565b611a7b565b60408051928352602083019190915201610367565b61052d611aba565b6103f36105e1366004615a25565b611ba0565b610378611ca3565b61038d6105fc3660046163ae565b611cc0565b61038d611d04565b61038d610617366004616462565b611efe565b61038d61062a366004615a25565b611f09565b610637611fdf565b604080519485526020850193909352918301526060820152608001610367565b61050561066536600461652e565b612010565b61038d610678366004616140565b61202d565b610596612182565b610505612252565b61038d61069b36600461658e565b61244a565b61035b61247d565b6106bb6106b63660046165f9565b6125a8565b604051610367919061674a565b61038d6125ba565b6104506128bc565b61038d6106e6366004615a25565b61291c565b61035b6106f9366004616759565b612a42565b61038d612a4e565b610719610714366004615a25565b612aa3565b6040805182518152602080840151908201529181015190820152606001610367565b60005461035b9060ff1681565b61038d612b32565b61038d61075e366004616787565b612d83565b6060600061076f612da5565b9050806000018054610780906167bd565b80601f01602080910402602001604051908101604052809291908181526020018280546107ac906167bd565b80156107f95780601f106107ce576101008083540402835291602001916107f9565b820191906000526020600020905b8154815290600101906020018083116107dc57829003601f168201915b505050505091505090565b600061080e612dc9565b9050600061081a612e6b565b9050600061082782612ecf565b6798a7d9b8314c00006020808301829052840151604051929350737109709ecfa91a80626ff3989d68f67f5b1dd12d9263f28dceb3926352e84b3360e11b92610874928890602401616850565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b03199485161790525160e084901b90921682526108b991600401615a12565b600060405180830381600087803b1580156108d357600080fd5b505af11580156108e7573d6000803e3d6000fd5b505060405163bbf1dd1d60e01b815230925063bbf1dd1d915061091090849087906004016168a1565b610140604051808303816000875af1158015610930573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610954919061690b565b50505050565b600061096582612f0e565b92915050565b6000610976826113f8565b9050806001600160a01b0316836001600160a01b0316036109aa57604051630591db6d60e01b815260040160405180910390fd5b336001600160a01b038216148015906109ca57506109c88133612a42565b155b156109e85760405163e495e68760e01b815260040160405180910390fd5b6109f28383612f5b565b505050565b6000610a01612f9c565b905060008060008060005b8651811015610bfc57856005016000888381518110610a2d57610a2d61699a565b602002602001015181526020019081526020016000209450600085600b01600001541180610a645750600d850154610100900460ff165b80610a735750600d85015460ff165b15610ab757868181518110610a8a57610a8a61699a565b602002602001015160405163dae2c27360e01b8152600401610aae91815260200190565b60405180910390fd5b84600101549350610af3610ae9610ae2876003015442610ad791906169c6565b600789015490612d99565b8690612fc0565b600c870154612fe2565b9250610aff83856169d9565b600b8601819055600d8601805461ff0019166101001790558554909250610b31906001600160a01b0316333085612ff8565b60098501546008860154600a870154604051632142170760e11b81526001600160a01b03938416936342842e0e93610b7293309392909116916004016169ec565b600060405180830381600087803b158015610b8c57600080fd5b505af1158015610ba0573d6000803e3d6000fd5b50505050868181518110610bb657610bb661699a565b60200260200101517fa6ffc78a660e4971a47a0f916a0abae483804e6f42c9292ed06aa64f8fe4623060405160405180910390a280610bf481616a10565b915050610a0c565b50505050505050565b6000610c0f612f9c565b600092835260040160205250604090205490565b600080610c3283850185616a29565b9050610c5c81886040518060400160405280336001600160a01b03168152602001898152506130a3565b50630a85bd0160e11b979650505050505050565b6000610c7a612da5565b60020154905090565b6000306001600160a01b0316638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610cc3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ce79190616a5d565b9050336001600160a01b03821614610d1d5760405163d4ed9a1760e01b81526001600160a01b0382166004820152602401610aae565b81610d26612f9c565b6001600160a01b038516600081815260069290920160205260408083209390935591518492917f67c648fad0621d49c4ec46cd8bd0f732a5999eb456200b96b1ad475163d8672f91a3505050565b6060600d805480602002602001604051908101604052809291908181526020018280548015610dcc57602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610dae575b5050505050905090565b6000610965610de483613322565b6133ca565b600061096582613418565b610dfe3382613502565b610e1b57604051636eb172ad60e11b815260040160405180910390fd5b6109f2838383613561565b600080610e31612f9c565b600084815260059190910160205260408120600481015490925090610e5682426169c6565b9050610e6185613667565b6005830154600090821015610e9b576005840154610e9690610e849084906136f0565b676765c793fa10079d601b1b90613708565b610e9e565b60005b90506000610ed2610ec78660020154676765c793fa10079d601b1b6136f090919063ffffffff16565b600187015490612fc0565b9050610ef882610ef2876005016001015484612fc090919063ffffffff16565b90612fc0565b979650505050505050565b600080610f0e612f9c565b6000808052600582810160209081526040808420895181546001600160a01b03199081166001600160a01b039283161783558b85015160018401558b84015160028401556060808d0151600385015560808d0151600485015560a08d015180519785019790975595850151600684015560c08c0151600784015560e08c01516008840180548316918416919091179055610100808d0151805160098601805490941694169390931790915590840151600a8301556101208b01518051600b84015593840151600c83015591830151600d82018054949095015161ffff1990941690151561ff0019161792151590910291909117909155610140870151600e820155610160870151600f90910155909150611026612da5565b6000808052600782016020818152604080842089518155828a01516001820155818a0151600282015560058801835293209190529192506110679190613714565b95945050505050565b60008061107b612f9c565b905060008080805b868110156111f35787878281811061109d5761109d61699a565b6020908102929092013560008181526005890190935260409092206008810154909650919350506001600160a01b031633146110ef5760405163c250ea5d60e01b815260048101839052602401610aae565b600d840154610100900460ff161561111d5760405163059803b760e21b815260048101839052602401610aae565b600d84015460ff161561116c57600d8401805461ff00191661010017905560028401546111659061115a90676765c793fa10079d601b1b90613708565b600b86015490612fc0565b9250611188565b6040516311653e5f60e21b815260048101839052602401610aae565b82156111e15783546111a4906001600160a01b031633856137a5565b6111ae83876169d9565b6040519096508290849033907f34fcbac0073d7c3d388e51312faf357774904998eeb8fca628b9e6f65ee1cbf790600090a45b806111eb81616a10565b915050611083565b505050505092915050565b6060600f805480602002602001604051908101604052809291908181526020018280548015610dcc576020028201919060005260206000209081546001600160a01b03168152600190910190602001808311610dae575050505050905090565b6060600e805480602002602001604051908101604052809291908181526020018280548015610dcc576020028201919060005260206000209081546001600160a01b03168152600190910190602001808311610dae575050505050905090565b6109f28383836040518060200160405280600081525061244a565b6112e16157e5565b6112e9612f9c565b60009283526005908101602090815260409384902084516101808101865281546001600160a01b039081168252600183015482850152600283015482880152600383015460608084019190915260048401546080808501919091528851808a018a5296850154875260068501548787015260a0840196909652600784015460c08401526008840154821660e08401528751808901895260098501549092168252600a840154828601526101008084019290925287519586018852600b8401548652600c84015494860194909452600d83015460ff80821615159887019890985204909516151591830191909152610120840191909152600e810154610140840152600f01546101608301525090565b60006109658261384e565b60606012805480602002602001604051908101604052809291908181526020016000905b828210156114e95760008481526020908190206040805180820182526002860290920180546001600160a01b031683526001810180548351818702810187019094528084529394919385830193928301828280156114d157602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b031916815260200190600401906020826003010492830192600103820291508084116114935790505b50505050508152505081526020019060010190611427565b50505050905090565b6000806114fd612f9c565b6000808052600582810160209081526040808420895181546001600160a01b03199081166001600160a01b039283161783558b85015160018401558b84015160028401556060808d0151600385015560808d0151600485015560a08d015180519785019790975595850151600684015560c08c0151600784015560e08c01516008840180548316918416919091179055610100808d0151805160098601805490941694169390931790915590840151600a8301556101208b01518051600b84015593840151600c83015591830151600d82018054949095015161ffff1990941690151561ff0019161792151590910291909117909155610140870151600e820155610160870151600f90910155909150611615612da5565b6000808052600782016020818152604080842089518155828a01516001820155818a0151600282015560058801835293209190529192506110679190613894565b600080611661612f9c565b9050600061166d612da5565b905060008060008060005b888110156117da576116a2338b8b848181106116965761169661699a565b90506020020135613502565b6116bf57604051636eb172ad60e11b815260040160405180910390fd5b6116e08a8a838181106116d4576116d461699a565b905060200201356138c4565b8560070160008b8b848181106116f8576116f861699a565b905060200201358152602001908152602001600020935083600201549250866005016000848152602001908152602001600020945084600b0160020160009054906101000a900460ff1615611758576117518585613894565b915061178d565b600b850154600003611780576040516311653e5f60e21b815260048101849052602401610aae565b61178a8585613714565b91505b6040518390839033907f34fcbac0073d7c3d388e51312faf357774904998eeb8fca628b9e6f65ee1cbf790600090a46117c682896169d9565b9750806117d281616a10565b915050611678565b5050505050505092915050565b6000806117f2612da5565b90506001600160a01b03831661181b57604051630b505c1d60e11b815260040160405180910390fd5b6001600160a01b039092166000908152600490920160205250604090205490565b6000611846612dc9565b90506000611852612e6b565b600160808201529050600061186682612ecf565b90506002611872612f9c565b600190810191909155604051600060248201526044810191909152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063f28dceb390632ff7abc160e11b90606401610874565b6000306001600160a01b0316638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156118fa573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061191e9190616a5d565b9050336001600160a01b038216146119545760405163d4ed9a1760e01b81526001600160a01b0382166004820152602401610aae565b8161195d612f9c565b6001600160a01b038516600081815260079290920160205260408083209390935591518492917f146e1a257ecd0267c391070e1bc23a703eee64ed866c1ceb73cc8b2508f4a37191a3505050565b60606011805480602002602001604051908101604052809291908181526020016000905b828210156114e95783829060005260206000200180546119ee906167bd565b80601f0160208091040260200160405190810160405280929190818152602001828054611a1a906167bd565b8015611a675780601f10611a3c57610100808354040283529160200191611a67565b820191906000526020600020905b815481529060010190602001808311611a4a57829003601f168201915b5050505050815260200190600101906119cf565b6000806000611a88612f9c565b6001600160a01b0390941660009081526006850160209081526040808320546007909701909152902054939492505050565b60606013805480602002602001604051908101604052809291908181526020016000905b828210156114e95760008481526020908190206040805180820182526002860290920180546001600160a01b03168352600181018054835181870281018701909452808452939491938583019392830182828015611b8857602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b03191681526020019060040190602082600301049283019260010382029150808411611b4a5790505b50505050508152505081526020019060010190611ade565b600080306001600160a01b0316638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611be1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c059190616a5d565b9050336001600160a01b03821614611c3b5760405163d4ed9a1760e01b81526001600160a01b0382166004820152602401610aae565b6000611c45612f9c565b6001810180549192506000611c5983616a10565b90915550600081815260048301602052604080822087905551919450849186917f6da37ad08550ba024c1448b799ac757c4f29bc9fb729b3f370a4fa2ab798fbd591a35050919050565b60606000611caf612da5565b9050806001018054610780906167bd565b60005b8151811015611d0057611cee828281518110611ce157611ce161699a565b6020026020010151613940565b80611cf881616a10565b915050611cc3565b5050565b6000611d0e612dc9565b90506000611d1a612e6b565b90506000611d2782612ecf565b601e546020820151604051929350737109709ecfa91a80626ff3989d68f67f5b1dd12d9263b96213e4926001600160a01b0316916323b872dd60e01b91611da9917f0000000000000000000000000000000000000000000000000000000000000000917333c40185e5db418a44ff63453d84f629163460c391906024016169ec565b60408051601f19818403018152918152602080830180516001600160e01b03166001600160e01b031990951694909417909352519091611df29160019101901515815260200190565b6040516020818303038152906040526040518463ffffffff1660e01b8152600401611e1f93929190616a7a565b600060405180830381600087803b158015611e3957600080fd5b505af1158015611e4d573d6000803e3d6000fd5b505060405163bbf1dd1d60e01b81526000925030915063bbf1dd1d90611e7990859088906004016168a1565b610140604051808303816000875af1158015611e99573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ebd919061690b565b90506000611edc846020015184602001516136f090919063ffffffff16565b8551909150611eeb9082613a84565b8552611ef78286613a90565b5050505050565b611d00338383613b50565b6000306001600160a01b0316638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611f49573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f6d9190616a5d565b9050336001600160a01b03821614611fa35760405163d4ed9a1760e01b81526001600160a01b0382166004820152602401610aae565b81611fac612f9c565b6002015560405182907f99c234461abfab1095b48d0d9527ff204caa62038112f57c795cecb99503676290600090a25050565b6000806000806000611fef612f9c565b60038101546002820154825460019093015491989097509195509350915050565b6120186157e5565b6120238484846130a3565b90505b9392505050565b60005b818110156109f25782828281811061204a5761204a61699a565b905060200281019061205c9190616aba565b61206a90602081019061632f565b6001600160a01b03166323b872dd333086868681811061208c5761208c61699a565b905060200281019061209e9190616aba565b6040516001600160e01b031960e086901b1681526120c593929160200135906004016169ec565b600060405180830381600087803b1580156120df57600080fd5b505af11580156120f3573d6000803e3d6000fd5b5050505061216f83838381811061210c5761210c61699a565b905060200281019061211e9190616aba565b61212c906040810190616ada565b61213591616b23565b338585858181106121485761214861699a565b905060200281019061215a9190616aba565b61216a9036819003810190616b30565b6130a3565b508061217a81616a10565b915050612030565b60606010805480602002602001604051908101604052809291908181526020016000905b828210156114e95783829060005260206000200180546121c5906167bd565b80601f01602080910402602001604051908101604052809291908181526020018280546121f1906167bd565b801561223e5780601f106122135761010080835404028352916020019161223e565b820191906000526020600020905b81548152906001019060200180831161222157829003601f168201915b5050505050815260200190600101906121a6565b61225a6157e5565b6000612264612e6b565b9050600061227182613bc6565b9050600061227d613c2b565b601e548351919250737109709ecfa91a80626ff3989d68f67f5b1dd12d9163b96213e4916001600160a01b0316906323b872dd60e01b907f0000000000000000000000000000000000000000000000000000000000000000907333c40185e5db418a44ff63453d84f629163460c39088906000906122fd576122fd61699a565b60200260200101516020015160405160240161231b939291906169ec565b60408051601f19818403018152918152602080830180516001600160e01b03166001600160e01b0319909516949094179093525190916123649160019101901515815260200190565b6040516020818303038152906040526040518463ffffffff1660e01b815260040161239193929190616a7a565b600060405180830381600087803b1580156123ab57600080fd5b505af11580156123bf573d6000803e3d6000fd5b505060405163ac98981960e01b815230925063ac98981991506123fe9085907333c40185e5db418a44ff63453d84f629163460c3908690600401616b4c565b610220604051808303816000875af115801561241e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906124429190616c4d565b935050505090565b6124543383613502565b61247157604051636eb172ad60e11b815260040160405180910390fd5b61095484848484613c5d565b60008054610100900460ff161561249d5750600054610100900460ff1690565b6000737109709ecfa91a80626ff3989d68f67f5b1dd12d3b156125a35760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b8284015282518083038401815260608301909352600092909161252b917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc491608001616d12565b60408051601f198184030181529082905261254591616d43565b6000604051808303816000865af19150503d8060008114612582576040519150601f19603f3d011682016040523d82523d6000602084013e612587565b606091505b509150508080602001905181019061259f9190616d55565b9150505b919050565b6125b06158a2565b6120268383613c90565b60006125c4612dc9565b905060006125d0612e6b565b601f546001600160a01b03168152905060006125eb82612ecf565b601e54601f54604080516001600160a01b0393841660248201529290911660448084019190915281518084039091018152606490920181526020820180516001600160e01b03166346aac2a960e01b1790525163f28dceb360e01b8152919250737109709ecfa91a80626ff3989d68f67f5b1dd12d9163f28dceb39161267391600401615a12565b600060405180830381600087803b15801561268d57600080fd5b505af11580156126a1573d6000803e3d6000fd5b505060405163bbf1dd1d60e01b815230925063bbf1dd1d91506126ca90849087906004016168a1565b610140604051808303816000875af11580156126ea573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061270e919061690b565b50601f546001600160a01b03166020808501829052820151604051737109709ecfa91a80626ff3989d68f67f5b1dd12d9263b96213e49290916323b872dd60e01b91612794917f0000000000000000000000000000000000000000000000000000000000000000917333c40185e5db418a44ff63453d84f629163460c3916024016169ec565b60408051601f19818403018152918152602080830180516001600160e01b03166001600160e01b0319909516949094179093525190916127dd9160019101901515815260200190565b6040516020818303038152906040526040518463ffffffff1660e01b815260040161280a93929190616a7a565b600060405180830381600087803b15801561282457600080fd5b505af1158015612838573d6000803e3d6000fd5b505060405163bbf1dd1d60e01b815230925063bbf1dd1d915061286190849087906004016168a1565b610140604051808303816000875af1158015612881573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906128a5919061690b565b506109f26128b1612da5565b600201546001613ef8565b6060600c805480602002602001604051908101604052809291908181526020018280548015610dcc576020028201919060005260206000209081546001600160a01b03168152600190910190602001808311610dae575050505050905090565b6000306001600160a01b0316638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561295c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906129809190616a5d565b9050336001600160a01b038216146129b65760405163d4ed9a1760e01b81526001600160a01b0382166004820152602401610aae565b6129e06129da60026129d4676765c793fa10079d601b1b6005612d99565b90612d8d565b83101590565b612a065760405162461bcd60e51b81526020600482015260006024820152604401610aae565b81612a0f612f9c565b6003015560405182907f1ce4b7127cce448c8a88c8a281145cece8c80a8e53693505547c31fabc92c44590600090a25050565b6000612026838361401f565b6000612a5861405c565b9050612a70676765c793fa10079d601b1b600a612d8d565b60408201524260608201819052612a8a90621275006169d9565b6080820152612aa0612a9a612252565b82614071565b50565b612ac760405180606001604052806000815260200160008152602001600081525090565b6000612ad1612da5565b90508060020154831115612af85760405163089ba7e160e41b815260040160405180910390fd5b6000928352600701602090815260409283902083516060810185528154815260018201549281019290925260020154928101929092525090565b60408051600a8082526101608201909252600091816020015b612b53615918565b815260200190600190039081612b4b57905050905060005b600a811015612bb457612b84612b7f612e6b565b612ecf565b828281518110612b9657612b9661699a565b60200260200101819052508080612bac90616a10565b915050612b6b565b50601e548151737109709ecfa91a80626ff3989d68f67f5b1dd12d9163b96213e4916001600160a01b03909116906323b872dd60e01b907f0000000000000000000000000000000000000000000000000000000000000000907333c40185e5db418a44ff63453d84f629163460c3908790600090612c3457612c3461699a565b602002602001015160200151604051602401612c52939291906169ec565b60408051601f19818403018152918152602080830180516001600160e01b03166001600160e01b031990951694909417909352519091612c9b9160019101901515815260200190565b6040516020818303038152906040526040518463ffffffff1660e01b8152600401612cc893929190616a7a565b600060405180830381600087803b158015612ce257600080fd5b505af1158015612cf6573d6000803e3d6000fd5b5030925063ac98981991508390507333c40185e5db418a44ff63453d84f629163460c3612d21613c2b565b6040518463ffffffff1660e01b8152600401612d3f93929190616b4c565b610220604051808303816000875af1158015612d5f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d009190616c4d565b611d00828261408b565b60006120268284616d72565b60006120268284616d94565b7f9dcac861a288165fa5a7e007597a30abcd2d73e174280cf7c6967f5a922a443990565b612dd16158a2565b60405180610120016040528060008152602001612dec612e6b565b516001600160a01b0316815260006020820152604001612e0a612e6b565b604001518152602001612e1b612e6b565b602001518152602001612e2c612e6b565b60209081015182527333c40185e5db418a44ff63453d84f629163460c390820152604001612e58612e6b565b60a0015181526020016001815250905090565b612e7361593e565b6040805160c081018252601e546001600160a01b03168152678ac7230489e800006020820152621275009181019190915260608101612eb442611c206169d9565b815260200160008152602001612ec8613c2b565b9052919050565b612ed7615918565b6040518060600160405280612eeb846140bb565b8152602001600a8460200151612f019190616d72565b8152602001929092525090565b6000612f19826140ca565b612f365760405163089ba7e160e41b815260040160405180910390fd5b612f3e612da5565b60009283526005016020525060409020546001600160a01b031690565b6000612f65612da5565b6000838152600582016020526040902080546001600160a01b0319166001600160a01b03861617905590506109f2612aa08361384e565b7f84e508d57dadc535817af594804944c3bc341cdb6befa5a0747e20285912a7eb90565b6000676765c793fa10079d601b1b612fd88385616d94565b6120269190616d72565b6000818311612ff15781612026565b5090919050565b6040516323b872dd60e01b81526001600160a01b038516906323b872dd90613028908690869086906004016169ec565b6020604051808303816000875af1158015613047573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061306b9190616d55565b610954576040516362fe41f360e01b81526001600160a01b038086166004830152808516602483015283166044820152606401610aae565b6130ab6157e5565b60006130d2856000815181106130c3576130c361699a565b602002602001015185856140f5565b905060006130de612da5565b600201546130ed9060016169d9565b86519091506000805b82811015613160576131218982815181106131135761311361699a565b602002602001015186613c90565b94508881815181106131355761313561699a565b6020026020010151602001518261314c91906169d9565b91508061315881616a10565b9150506130f6565b50701d6329f1c35ca4bfabb9f56100000000008111156131965760405163a1b0082360e01b815260048101829052602401610aae565b6131a4848888858588614199565b9450846131af612f9c565b6101008681018051600090815260059384016020908152604091829020865181546001600160a01b03199081166001600160a01b039283161783558884015160018401558885015160028401556060808a0151600385015560808a0151600485015560a08a015180519985019990995597840151600684015560c0890151600784015560e089015160088401805483169184169190911790558887015180516009850180549093169316929092179055820151600a8201556101208701518051600b83015580830151600c83015580840151600d83018054929098015161ffff1990921690151561ff0019161790151590950294909417909455610140850151600e84015561016090940151600f909201919091555191517fdca520d648f7d72e985ce218de7119aeca8bdd20abdb296f69ee74630fe79c7b916132f591899101616181565b60408051601f198184030181529082905261330f91615a12565b60405180910390a2505050509392505050565b60007f2ac049b6467232d12ceb145e80f9890371b3f6a4ccb53cdc241cf1a1c6e9dd978260000151836020015184604001518560600151866080015161336b8860a001516142be565b6040805160208101989098526001600160a01b03909616958701959095526060860193909352608085019190915260a084015260c083015260e0820152610100015b604051602081830303815290604052805190602001209050919050565b60006109656133d76142f3565b8360405161190160f01b6020820152602281018390526042810182905260009060620160405160208183030381529060405280519060200120905092915050565b600080613423612f9c565b905061343c6134358460400151610dd6565b845161441a565b604080850151516001600160a01b03166000908152600784016020908152919020549085015191935090811061349357836040015184602001518260405163889976c760e01b8152600401610aae93929190616dab565b8360400151606001514211156134c7576040808501516060810151915163065a5c3b60e01b8152610aae9290600401616dcc565b8160010154846040015160800151106134fb578160010154604051632fac17ed60e11b8152600401610aae91815260200190565b5050919050565b60008061350e8361384e565b9050806001600160a01b0316846001600160a01b031614806135355750613535818561401f565b806135595750836001600160a01b031661354e84612f0e565b6001600160a01b0316145b949350505050565b600061356b612da5565b9050836001600160a01b03166135808361384e565b6001600160a01b0316146135a75760405163e146af6f60e01b815260040160405180910390fd5b6001600160a01b0383166135ce576040516338f646ff60e21b815260040160405180910390fd5b6135d9600083612f5b565b6001600160a01b038416600090815260048201602052604081208054600192906136049084906169c6565b90915550506001600160a01b038316600090815260048201602052604081208054600192906136349084906169d9565b90915550506000828152600382016020526040902080546001600160a01b0319166001600160a01b038516179055610954565b6000613671612f9c565b6005016000838152602001908152602001600020905080600401544210156136b95760048181015460405163ee9e72dd60e01b81529182015260248101839052604401610aae565b600b8101541515806136cf5750600d81015460ff165b15611d005760405163dae2c27360e01b815260048101839052602401610aae565b600081612fd8676765c793fa10079d601b1b85616d94565b600061202682846169c6565b600080836001015484600b016000015461372e91906169c6565b600c850154909150810361375e57600f84015461374b9082616d72565b835461375791906169d9565b9150613788565b6001840154835461376f9083616d94565b6137799190616d72565b835461378591906169d9565b91505b835461379e906001600160a01b031633846137a5565b5092915050565b60405163a9059cbb60e01b81526001600160a01b0383811660048301526024820183905284169063a9059cbb906044016020604051808303816000875af11580156137f4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906138189190616d55565b6109f2576040516362fe41f360e01b81526001600160a01b03808516600483015230602483015283166044820152606401610aae565b600080613859612da5565b60008481526003820160205260409020549091506001600160a01b0316806120265760405163089ba7e160e41b815260040160405180910390fd5b6001810154600b8301546000916138ab9190612fc0565b8354909150610965906001600160a01b031633836137a5565b60006138ce612da5565b905060006138db8361384e565b90506138e8600084612f5b565b6001600160a01b038116600090815260048301602052604081208054600192906139139084906169c6565b90915550506000838152600383016020526040812080546001600160a01b03191690556109f29082908583565b600061394a612f9c565b8251600090815260059190910160205260409020825190915061396c90613667565b600061397b8360000151610e26565b600d8301805460ff19166001179055600b830181905582549091506139ab906001600160a01b0316333084612ff8565b60098201546020840151600a840154604051632142170760e11b81526001600160a01b03909316926342842e0e926139e79230926004016169ec565b600060405180830381600087803b158015613a0157600080fd5b505af1158015613a15573d6000803e3d6000fd5b505084516040805160208082018490528801516001600160a01b0316818301528151808203830181526060909101918290529193507f56fa56fac71c8ba176bf5af94ddd918100d0d8b56a12bbe5e94bac85eca114da9250613a779190615a12565b60405180910390a2505050565b600061202682846169d9565b80604051602001613aa1919061674a565b6040516020818303038152906040528051906020012082604051602001613ac8919061674a565b6040516020818303038152906040528051906020012014611d0057613b0d8160405180604001604052806008815260200167195e1c1958dd195960c21b81525061443e565b613b378260405180604001604052806008815260200167030b1ba3ab0b610160c51b81525061443e565b60405163abd7cc6f60e01b815260040160405180910390fd5b6000613b5a612da5565b9050826001600160a01b0316846001600160a01b031603613b8e57604051630b7b99b960e21b815260040160405180910390fd5b6001600160a01b0384811660009081526006830160209081526040808320938716835292905220805460ff1916831515179055610954565b60408051600180825281830190925260609160009190816020015b613be9615918565b815260200190600190039081613be1579050509050613c0783612ecf565b81600081518110613c1a57613c1a61699a565b602090810291909101015292915050565b6040805180820182526000808252602091820152815180830190925280546001600160a01b0316825260019082015290565b613c68848484613561565b613c748484848461469b565b61095457604051626b5e2960e61b815260040160405180910390fd5b613c986158a2565b6000613ca384613418565b9050600083602001516001600160a01b03168560400151600001516001600160a01b031614613d035760208401516040868101515190516346aac2a960e01b81526001600160a01b03928316600482015291166024820152604401610aae565b836040015185604001516080015114613d48578360400151856040015160800151604051632ff7abc160e11b8152600401610aae929190918252602082015260400190565b613d5a85604001518560e0015161408b565b613d7985604001516020015186602001516136f090919063ffffffff16565b8451909150613d889082613a84565b808552676765c793fa10079d601b1b1015613de65760208501518451613dc590613db690610e849085613708565b60408801516020015190612fc0565b86604001516040516352e84b3360e11b8152600401610aae93929190616850565b83606001518560400151604001511015613e0857604080860151015160608501525b83608001518560400151602001511015613e2b5760408501516020015160808501525b8360a001518560400151602001511115613e4e5760408501516020015160a08501525b6080840151613e5e906002616d94565b8460a001511115613e9557608084015160a0850151604051633065b5b760e11b815260048101929092526024820152604401610aae565b613ec1828560c00151876020015187602001516001600160a01b0316612ff8909392919063ffffffff16565b613eee8260405180606001604052808860200151815260200184815260200187610100015181525061479c565b5092949350505050565b808214611d00577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f50604051613f699060208082526022908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b75696e604082015261745d60f01b606082015260800190565b60405180910390a160408051818152600a81830152690808080808081319599d60b21b60608201526020810184905290517fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a89181900360800190a160408051818152600a81830152690808080808149a59da1d60b21b60608201526020810183905290517fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a89181900360800190a1611d006147f6565b6000614029612da5565b6001600160a01b039384166000908152600691909101602090815260408083209490951682529290925250205460ff1690565b6140646157e5565b61406c614902565b905090565b611d008282604051806020016040528060008152506149f0565b60a082015161409a9082614ae2565b611d0057818160405163d8ef221b60e01b8152600401610aae929190616de8565b606061096582620a11ce614b0b565b6000806140d5612da5565b6000938452600301602052505060409020546001600160a01b0316151590565b6140fd6158a2565b604051806101200160405280600081526020018560400151600001516001600160a01b031681526020018560400151608001518152602001856040015160400151815260200185604001516020015181526020018560400151602001518152602001846001600160a01b0316815260200183815260200161417c612f9c565b805460009061418a90616a10565b91829055509052949350505050565b6141a16157e5565b60006141ab612f9c565b905060008860600151426141bf91906169d9565b90506141f0604051806080016040528060008152602001600081526020016000151581526020016000151581525090565b6020808b01516001600160a01b0316600090815260068501909152604090205461421a9088616d94565b60208281019190915260408051610180810182528c8301516001600160a01b039081168252818401999099528c51818301524260608201526080810194909452805180820182526002860154815260038601548184015260a08501529a8b0151600090815260049094019052989091205460c08201529590921660e08601526101008501939093525061012083019390935261014082015261016081019190915290565b60007f8ee82799d3068521f828767217e880bf7d6bb6ec7d5dbcc3de1e3e4bbb39c9e9826040516020016133ad929190616e17565b6000306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614801561434c57507f000000000000000000000000000000000000000000000000000000000000000046145b1561437657507f000000000000000000000000000000000000000000000000000000000000000090565b50604080517f00000000000000000000000000000000000000000000000000000000000000006020808301919091527f0000000000000000000000000000000000000000000000000000000000000000828401527f000000000000000000000000000000000000000000000000000000000000000060608301524660808301523060a0808401919091528351808403909101815260c0909201909252805191012090565b60008060006144298585614be2565b9150915061443681614c27565b509392505050565b61449e6040518060400160405280601f81526020017f7e7e7e7e7e7e7e20737461727420436f6c6c61746572616c20537461746520008152508260405180604001604052806008815260200167103f3f3f3f3f3f3f60c11b815250614d71565b6144d860405180604001604052806014815260200173036b0ba31b432b2101010101010101010101010160651b8152508360000151614db8565b61451260405180604001604052806014815260200173036b4b727b33332b9223ab930ba34b7b7101010160651b8152508360600151614db8565b61454c60405180604001604052806014815260200173036b4b727b33332b92637b0b72a37ab30b63ab2960651b8152508360800151614db8565b61458660405180604001604052806014815260200173036b0bc27b33332b92637b0b72a37ab30b63ab2960651b8152508360a00151614db8565b6145c0604051806040016040528060148152602001730333937b6901010101010101010101010101010160651b8152508360c00151614dfd565b6145fe60405180604001604052806014815260200173037333a1734b210101010101010101010101010160651b8152508360e0015160200151614db8565b6146396040518060400160405280601481526020017303637b0b724b210101010101010101010101010160651b815250836101000151614db8565b611d006040518060400160405280601d81526020017f7e7e7e7e7e7e7e20656e6420436f6c6c61746572616c20537461746520000000815250826040518060400160405280600a8152602001691010103f3f3f3f3f3f3f60b11b815250614d71565b60006001600160a01b0384163b1561479157604051630a85bd0160e11b81526001600160a01b0385169063150b7a02906146df903390899088908890600401616e3e565b6020604051808303816000875af192505050801561471a575060408051601f3d908101601f1916820190925261471791810190616e71565b60015b614777573d808015614748576040519150601f19603f3d011682016040523d82523d6000602084013e61474d565b606091505b50805160000361476f57604051626b5e2960e61b815260040160405180910390fd5b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050613559565b506001949350505050565b6000806147a7612da5565b905080600201600081546147ba90616a10565b918290555060008181526007830160209081526040918290208651815590860151600182015590850151600290910155915061379e8483614e42565b737109709ecfa91a80626ff3989d68f67f5b1dd12d3b156148f15760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b9282019290925260016060820152600091907f70ca10bbd0dbfd9020a9f4b13402c16cb120705e0d1c0aeab10fa353ae586fc49060800160408051601f19818403018152908290526148909291602001616d12565b60408051601f19818403018152908290526148aa91616d43565b6000604051808303816000865af19150503d80600081146148e7576040519150601f19603f3d011682016040523d82523d6000602084013e6148ec565b606091505b505050505b6000805461ff001916610100179055565b61490a6157e5565b60408051608081018252600080825260208201819052818301819052606082015281516101808101909252908061493f612e6b565b516001600160a01b03168152670de0b6b3a76400006020820152676765c793fa10079d601b1b604082015260600161497a62127500426169c6565b815260200161498c42621275006169d9565b8152602001614999614e5c565b81526020016149a86000610c05565b81527333c40185e5db418a44ff63453d84f629163460c360208201526040016149cf612e6b565b60a00151815260200182815260200160018152602001600181525091505090565b81604051602001614a019190616181565b6040516020818303038152906040528051906020012083604051602001614a289190616181565b60405160208183030381529060405280519060200120146109f257805115614a7557614a75604051806040016040528060098152602001686572726f723a20257360b81b81525082614e9a565b614a9f8260405180604001604052806008815260200167195e1c1958dd195960c21b815250614edf565b614ac98360405180604001604052806008815260200167030b1ba3ab0b610160c51b815250614edf565b60405163289498f560e01b815260040160405180910390fd5b6000816020015183602001511480156120265750505190516001600160a01b0391821691161490565b60606000614b188461523f565b6040516338d07aa960e21b8152600481018590526024810182905290915060009081908190737109709ecfa91a80626ff3989d68f67f5b1dd12d9063e341eaa490604401606060405180830381865afa158015614b79573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190614b9d9190616e8e565b6040805160208101939093528281019190915260f89290921b6001600160f81b0319166060820152815160418183030181526061909101909152979650505050505050565b6000808251604103614c185760208301516040840151606085015160001a614c0c8782858561524a565b94509450505050614c20565b506000905060025b9250929050565b6000816004811115614c3b57614c3b616ecb565b03614c435750565b6001816004811115614c5757614c57616ecb565b03614ca45760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e617475726500000000000000006044820152606401610aae565b6002816004811115614cb857614cb8616ecb565b03614d055760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152606401610aae565b6003816004811115614d1957614d19616ecb565b03612aa05760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b6064820152608401610aae565b6109f2838383604051602401614d8993929190616ee1565b60408051601f198184030181529190526020810180516001600160e01b0316632ced7cef60e01b17905261530e565b611d008282604051602401614dce929190616f1a565b60408051601f198184030181529190526020810180516001600160e01b03166309710a9d60e41b17905261530e565b611d008282604051602401614e13929190616f3c565b60408051601f198184030181529190526020810180516001600160e01b031663319af33360e01b17905261530e565b611d0082826040518060200160405280600081525061532f565b6040805180820190915260008082526020820152604080518082019091526203f480815260208101612ec8676765c793fa10079d601b1b6003612d99565b611d008282604051602401614eb0929190616f66565b60408051601f198184030181529190526020810180516001600160e01b0316634b5c427760e01b17905261530e565b614f356040518060400160405280601381526020017203f3f3f3f3f3f3f1039ba30b93a103637b0b71606d1b8152508260405180604001604052806008815260200167103f3f3f3f3f3f3f60c11b815250614d71565b614f6f60405180604001604052806014815260200173030b9b9b2ba2632b73a10101010101010101010160651b8152508360000151614dfd565b614fa96040518060400160405280601481526020017303632b73a101010101010101010101010101010160651b8152508360200151614db8565b614fe360405180604001604052806014815260200173039b430b932a632b73a10101010101010101010160651b8152508360400151614db8565b61501d60405180604001604052806014815260200173039ba30b93a2230ba3290101010101010101010160651b8152508360600151614db8565b61505760405180604001604052806014815260200173032b7322230ba32901010101010101010101010160651b8152508360800151614db8565b61506660018360a00151615362565b6150a060405180604001604052806014815260200173034b73a32b932b9ba2832b929b2b1b7b7321010160651b8152508360c00151614db8565b6150da6040518060400160405280601481526020017303137b93937bbb2b91010101010101010101010160651b8152508360e00151614dfd565b61510c6040518060400160405280600b81526020016a31b7b63630ba32b930b61760a91b815250836101000151615440565b61511c60018361012001516154aa565b6151516040518060400160405280601481526020017339bab838363ca837b9b4ba34b7b724b73232bc1d60611b8152506155ca565b6002826101600151106151b9576151b46040518060400160405280600d81526020016c66726f6d20257320746f20257360981b81525083610140015160018561016001518661014001516151a591906169d9565b6151af91906169c6565b61560d565b6151e9565b6151e96040518060400160405280600981526020016803837b9b4ba34b7b7160bd1b815250836101400151614db8565b611d006040518060400160405280601181526020017003f3f3f3f3f3f3f1032b732103637b0b71607d1b815250826040518060400160405280600a8152602001691010103f3f3f3f3f3f3f60b11b815250614d71565b600061096582610dd6565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08311156152815750600090506003615305565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa1580156152d5573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381166152fe57600060019250925050615305565b9150600090505b94509492505050565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b6153398383615654565b615346600084848461469b565b6109f257604051626b5e2960e61b815260040160405180910390fd5b81156153dc576153a260405180604001604052806014815260200173030bab1ba34b7b717323ab930ba34b7b7101010160651b8152508260000151614db8565b611d0060405180604001604052806014815260200173030bab1ba34b7b717383934b1b2a330b1ba37b9160651b8152508260200151614db8565b61540e6040518060400160405280600c81526020016b0323ab930ba34b7b7101010160a51b8152508260000151614db8565b611d006040518060400160405280600c81526020016b0383934b1b2a330b1ba37b9160a51b8152508260200151614db8565b6154756040518060400160405280600e81526020016d2573696d706c656d20202020257360901b815250838360000151615710565b611d006040518060400160405280600e81526020016d257369642020202020202020257360901b815250838360200151615757565b6000826154c657604051806020016040528060008152506154e8565b604051806040016040528060088152602001673830bcb6b2b73a1760c11b8152505b905061552260405180604001604052806011815260200170257370616964202020202020202020257360781b815250828460000151615757565b61555a6040518060400160405280601181526020017025736d696e546f5265706179202020257360781b815250828460200151615757565b6155926040518060400160405280601181526020017025736c697175696461746564202020257360781b81525082846040015161579e565b6109f2604051806040016040528060118152602001702573626f7272436c61696d65642020257360781b81525082846060015161579e565b612aa0816040516024016155de9190615a12565b60408051601f198184030181529190526020810180516001600160e01b031663104c13eb60e21b17905261530e565b6109f283838360405160240161562593929190616f8b565b60408051601f198184030181529190526020810180516001600160e01b031663969cdd0360e01b17905261530e565b600061565e612da5565b90506001600160a01b038316615687576040516325bd6bd360e01b815260040160405180910390fd5b615690826140ca565b156156ae5760405163c5a8d37160e01b815260040160405180910390fd5b6001600160a01b038316600090815260048201602052604081208054600192906156d99084906169d9565b90915550506000828152600382016020526040812080546001600160a01b0319166001600160a01b0386161790556109f290848483565b6109f283838360405160240161572893929190616fb0565b60408051601f198184030181529190526020810180516001600160e01b03166395ed019560e01b17905261530e565b6109f283838360405160240161576f93929190616fee565b60408051601f198184030181529190526020810180516001600160e01b031663f362ca5960e01b17905261530e565b6109f28383836040516024016157b693929190617024565b60408051601f198184030181529190526020810180516001600160e01b031663b0e0f9b560e01b17905261530e565b60405180610180016040528060006001600160a01b031681526020016000815260200160008152602001600081526020016000815260200161583a604051806040016040528060008152602001600081525090565b81526000602082018190526040820152606001615867604080518082019091526000808252602082015290565b815260408051608081018252600080825260208281018290529282018190526060820152910190815260200160008152602001600081525090565b6040518061012001604052806000815260200160006001600160a01b031681526020016000815260200160008152602001600081526020016000815260200160006001600160a01b0316815260200161590b604080518082019091526000808252602082015290565b8152602001600081525090565b6040518060600160405280606081526020016000815260200161593961593e565b905290565b6040518060c0016040528060006001600160a01b0316815260200160008152602001600081526020016000815260200160008152602001615939604080518082019091526000808252602082015290565b6001600160e01b031981168114612aa057600080fd5b6000602082840312156159b757600080fd5b81356120268161598f565b60005b838110156159dd5781810151838201526020016159c5565b50506000910152565b600081518084526159fe8160208601602086016159c2565b601f01601f19169290920160200192915050565b60208152600061202660208301846159e6565b600060208284031215615a3757600080fd5b5035919050565b6001600160a01b0381168114612aa057600080fd5b80356125a381615a3e565b60008060408385031215615a7157600080fd5b8235615a7c81615a3e565b946020939093013593505050565b634e487b7160e01b600052604160045260246000fd5b604080519081016001600160401b0381118282101715615ac257615ac2615a8a565b60405290565b604051606081016001600160401b0381118282101715615ac257615ac2615a8a565b604051608081016001600160401b0381118282101715615ac257615ac2615a8a565b60405161018081016001600160401b0381118282101715615ac257615ac2615a8a565b60405161012081016001600160401b0381118282101715615ac257615ac2615a8a565b604051601f8201601f191681016001600160401b0381118282101715615b7a57615b7a615a8a565b604052919050565b60006001600160401b03821115615b9b57615b9b615a8a565b5060051b60200190565b60006020808385031215615bb857600080fd5b82356001600160401b03811115615bce57600080fd5b8301601f81018513615bdf57600080fd5b8035615bf2615bed82615b82565b615b52565b81815260059190911b82018301908381019087831115615c1157600080fd5b928401925b82841015610ef857833582529284019290840190615c16565b600080600080600060808688031215615c4757600080fd5b8535615c5281615a3e565b94506020860135615c6281615a3e565b93506040860135925060608601356001600160401b0380821115615c8557600080fd5b818801915088601f830112615c9957600080fd5b813581811115615ca857600080fd5b896020828501011115615cba57600080fd5b9699959850939650602001949392505050565b6020808252825182820181905260009190848201906040850190845b81811015615d0e5783516001600160a01b031683529284019291840191600101615ce9565b50909695505050505050565b600060408284031215615d2c57600080fd5b615d34615aa0565b90508135615d4181615a3e565b808252506020820135602082015292915050565b600060e08284031215615d6757600080fd5b60405160c081018181106001600160401b0382111715615d8957615d89615a8a565b6040529050808235615d9a81615a3e565b8082525060208301356020820152604083013560408201526060830135606082015260808301356080820152615dd38460a08501615d1a565b60a08201525092915050565b600060e08284031215615df157600080fd5b6120268383615d55565b600082601f830112615e0c57600080fd5b81356001600160401b03811115615e2557615e25615a8a565b615e38601f8201601f1916602001615b52565b818152846020838601011115615e4d57600080fd5b816020850160208301376000918101602001919091529392505050565b60006101208284031215615e7d57600080fd5b615e85615ac8565b905081356001600160401b03811115615e9d57600080fd5b615ea984828501615dfb565b82525060208201356020820152615ec38360408401615d55565b604082015292915050565b600060208284031215615ee057600080fd5b81356001600160401b03811115615ef657600080fd5b61355984828501615e6a565b600080600060608486031215615f1757600080fd5b8335615f2281615a3e565b92506020840135615f3281615a3e565b929592945050506040919091013590565b600060408284031215615f5557600080fd5b615f5d615aa0565b9050813581526020820135602082015292915050565b8015158114612aa057600080fd5b600060808284031215615f9357600080fd5b615f9b615aea565b905081358152602082013560208201526040820135615fb981615f73565b60408201526060820135615fcc81615f73565b606082015292915050565b600060608284031215615fe957600080fd5b615ff1615ac8565b905081358152602082013560208201526040820135604082015292915050565b60008082840361028081121561602657600080fd5b6102208082121561603657600080fd5b61603e615b0c565b915061604985615a53565b8252602085013560208301526040850135604083015260608501356060830152608085013560808301526160808660a08701615f43565b60a083015260e085013560c083015261010061609d818701615a53565b60e08401526101206160b188828901615d1a565b8285015261016091506160c688838901615f81565b81850152506101e086013561014084015261020086013581840152508193506160f186828701615fd7565b925050509250929050565b60008083601f84011261610e57600080fd5b5081356001600160401b0381111561612557600080fd5b6020830191508360208260051b8501011115614c2057600080fd5b6000806020838503121561615357600080fd5b82356001600160401b0381111561616957600080fd5b616175858286016160fc565b90969095509350505050565b81516001600160a01b0316815261022081016020830151602083015260408301516040830152606083015160608301526080830151608083015260a08301516161d760a084018280518252602090810151910152565b5060c083015160e083015260e08301516101006161fe818501836001600160a01b03169052565b84015190506101206162258482018380516001600160a01b03168252602090810151910152565b840151905061016061625e8482018380518252602081015160208301526040810151151560408301526060810151151560608301525050565b6101408501516101e085015280850151610200850152505092915050565b60006020808301818452808551808352604092508286019150828160051b8701018488016000805b8481101561632057898403603f19018652825180516001600160a01b03168552880151888501889052805188860181905290890190839060608701905b8083101561630b5783516001600160e01b0319168252928b019260019290920191908b01906162e1565b50978a019795505050918701916001016162a4565b50919998505050505050505050565b60006020828403121561634157600080fd5b813561202681615a3e565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b828110156163a157603f1988860301845261638f8583516159e6565b94509285019290850190600101616373565b5092979650505050505050565b600060208083850312156163c157600080fd5b82356001600160401b038111156163d757600080fd5b8301601f810185136163e857600080fd5b80356163f6615bed82615b82565b81815260069190911b8201830190838101908783111561641557600080fd5b928401925b82841015610ef857604084890312156164335760008081fd5b61643b615aa0565b843581528585013561644c81615a3e565b818701528252604093909301929084019061641a565b6000806040838503121561647557600080fd5b823561648081615a3e565b9150602083013561649081615f73565b809150509250929050565b60006164a9615bed84615b82565b8381529050602080820190600585901b8401868111156164c857600080fd5b845b818110156165035780356001600160401b038111156164e95760008081fd5b6164f589828901615e6a565b8552509282019282016164ca565b505050509392505050565b600082601f83011261651f57600080fd5b6120268383356020850161649b565b60008060006080848603121561654357600080fd5b83356001600160401b0381111561655957600080fd5b6165658682870161650e565b935050602084013561657681615a3e565b91506165858560408601615d1a565b90509250925092565b600080600080608085870312156165a457600080fd5b84356165af81615a3e565b935060208501356165bf81615a3e565b92506040850135915060608501356001600160401b038111156165e157600080fd5b6165ed87828801615dfb565b91505092959194509250565b60008082840361016081121561660e57600080fd5b83356001600160401b0381111561662457600080fd5b61663086828701615e6a565b93505061014080601f198301121561664757600080fd5b61664f615b2f565b91506020850135825261666460408601615a53565b6020830152606085013560408301526080850135606083015260a0850135608083015260c085013560a083015261669d60e08601615a53565b60c08301526101006166b187828801615d1a565b60e0840152940135938101939093525092909150565b80518252602081015160018060a01b03808216602085015260408301516040850152606083015160608501526080830151608085015260a083015160a08501528060c08401511660c0850152505060e081015161673a60e084018280516001600160a01b03168252602090810151910152565b5061010001516101209190910152565b610140810161096582846166c7565b6000806040838503121561676c57600080fd5b823561677781615a3e565b9150602083013561649081615a3e565b600080610120838503121561679b57600080fd5b6167a58484615d55565b91506167b48460e08501615d1a565b90509250929050565b600181811c908216806167d157607f821691505b6020821081036167f157634e487b7160e01b600052602260045260246000fd5b50919050565b60018060a01b0381511682526020810151602083015260408101516040830152606081015160608301526080810151608083015260a08101516109f260a084018280516001600160a01b03168252602090810151910152565b83815260208101839052610120810161355960408301846167f7565b60006101208251818552616882828601826159e6565b91505060208301516020850152604083015161443660408601826167f7565b60006101608083526168b58184018661686c565b91505061202660208301846166c7565b80516125a381615a3e565b6000604082840312156168e257600080fd5b6168ea615aa0565b905081516168f781615a3e565b808252506020820151602082015292915050565b6000610140828403121561691e57600080fd5b616926615b2f565b82518152616936602084016168c5565b602082015260408301516040820152606083015160608201526080830151608082015260a083015160a082015261696f60c084016168c5565b60c08201526169818460e085016168d0565b60e0820152610120929092015161010083015250919050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b81810381811115610965576109656169b0565b80820180821115610965576109656169b0565b6001600160a01b039384168152919092166020820152604081019190915260600190565b600060018201616a2257616a226169b0565b5060010190565b600060208284031215616a3b57600080fd5b81356001600160401b03811115616a5157600080fd5b6135598482850161650e565b600060208284031215616a6f57600080fd5b815161202681615a3e565b6001600160a01b0384168152606060208201819052600090616a9e908301856159e6565b8281036040840152616ab081856159e6565b9695505050505050565b60008235605e19833603018112616ad057600080fd5b9190910192915050565b6000808335601e19843603018112616af157600080fd5b8301803591506001600160401b03821115616b0b57600080fd5b6020019150600581901b3603821315614c2057600080fd5b600061202636848461649b565b600060408284031215616b4257600080fd5b6120268383615d1a565b6000608082016080835280865180835260a08501915060a08160051b8601019250602080890160005b83811015616ba357609f19888703018552616b9186835161686c565b95509382019390820190600101616b75565b50506001600160a01b038881169187019190915286511660408601525050602084015160608401529050613559565b600060408284031215616be457600080fd5b616bec615aa0565b9050815181526020820151602082015292915050565b600060808284031215616c1457600080fd5b616c1c615aea565b905081518152602082015160208201526040820151616c3a81615f73565b60408201526060820151615fcc81615f73565b60006102208284031215616c6057600080fd5b616c68615b0c565b616c71836168c5565b815260208301516020820152604083015160408201526060830151606082015260808301516080820152616ca88460a08501616bd2565b60a082015260e083015160c0820152610100616cc58185016168c5565b60e0830152610120616cd9868287016168d0565b828401526101609150616cee86838701616c02565b908301526101e0840151610140830152610200909301519281019290925250919050565b6001600160e01b0319831681528151600090616d358160048501602087016159c2565b919091016004019392505050565b60008251616ad08184602087016159c2565b600060208284031215616d6757600080fd5b815161202681615f73565b600082616d8f57634e487b7160e01b600052601260045260246000fd5b500490565b8082028115828204841417610965576109656169b0565b6101208101616dba82866167f7565b60e08201939093526101000152919050565b6101008101616ddb82856167f7565b8260e08301529392505050565b6101208101616df782856167f7565b82516001600160a01b031660e08301526020830151610100830152612026565b82815260608101612026602083018480516001600160a01b03168252602090810151910152565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090616ab0908301846159e6565b600060208284031215616e8357600080fd5b81516120268161598f565b600080600060608486031215616ea357600080fd5b835160ff81168114616eb457600080fd5b602085015160409095015190969495509392505050565b634e487b7160e01b600052602160045260246000fd5b606081526000616ef460608301866159e6565b8281036020840152616f0681866159e6565b90508281036040840152616ab081856159e6565b604081526000616f2d60408301856159e6565b90508260208301529392505050565b604081526000616f4f60408301856159e6565b905060018060a01b03831660208301529392505050565b604081526000616f7960408301856159e6565b828103602084015261106781856159e6565b606081526000616f9e60608301866159e6565b60208301949094525060400152919050565b606081526000616fc360608301866159e6565b8281036020840152616fd581866159e6565b91505060018060a01b0383166040830152949350505050565b60608152600061700160608301866159e6565b828103602084015261701381866159e6565b915050826040830152949350505050565b60608152600061703760608301866159e6565b828103602084015261704981866159e6565b915050821515604083015294935050505056fea264697066735822122021f62c7086af3eea82a74233f6c2ce155f5957eeedfa40cc3586f83c918a0bd064736f6c634300081200330000000000000000000000007109709ecfa91a80626ff3989d68f67f5b1dd12d736166655472616e7366657246726f6d28616464726573732c616464726573732c75696e7432353629736166655472616e7366657246726f6d28616464726573732c616464726573732c75696e743235362c627974657329",
    "sourceMap": "719:3690:92:-:0;;;1572:26:28;;;1594:4;-1:-1:-1;;1572:26:28;;;;;;;;3288:44:31;;;;;;;;;;;719:3690:92;;;;;;;;;;2464:602:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2464:602:14;;;1665:32:104;1688:8;1665:18;1681:1;1665:11;1673:2;720:4:54;1665:7:104;;;;;;:11;;;;:::i;:::-;:15;;;;;;:18;;;;:::i;:::-;:22;;;;;;:32;;;;:::i;:::-;1650:47;;1720:16;;;1734:1;1720:16;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1707:29:104;;;;:10;;-1:-1:-1;1707:29:104;;;;:::i;:::-;;1762:1;1746:10;1757:1;1746:13;;;;;;;;:::i;:::-;;;;;;;;;;:17;1782:12;;-1:-1:-1;;;;;;1782:12:104;;1105:7;1782:12;;;424:25:112;-1:-1:-1;;;;;;;;;;;1782:7:104;;;397:18:112;;1782:12:104;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1773:21:104;;;1814:13;;-1:-1:-1;;;;;;1814:13:104;;1151:5;1814:13;;;424:25:112;-1:-1:-1;;;;;;;;;;;1814:7:104;;;397:18:112;;1814:13:104;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1804:23:104;;;1837:30;;;-1:-1:-1;;;1837:30:104;;1278:39;1837:30;;;967:51:112;1034:18;;;1027:30;;;;1093:1;1073:18;;;1066:29;-1:-1:-1;;;1111:18:112;;;1104:38;-1:-1:-1;;;;;;;;;;;1837:8:104;;;1159:19:112;;1837:30:104;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1877:24:104;;;-1:-1:-1;;;1877:24:104;;1357:36;1877:24;;;1401:51:112;1468:18;;;1461:30;;;;1527:1;1507:18;;;1500:29;-1:-1:-1;;;1545:18:112;;;1538:35;-1:-1:-1;;;;;;;;;;;1877:8:104;-1:-1:-1;1877:8:104;;-1:-1:-1;1590:19:112;;1877:24:104;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1920:6:104;;1911:26;;;-1:-1:-1;;;1911:26:104;;-1:-1:-1;;;;;1850:32:112;;;1911:26:104;;;1832:51:112;1899:18;;;1892:30;1958:1;1938:18;;;1931:29;-1:-1:-1;;;1976:18:112;;;1969:36;-1:-1:-1;;;;;;;;;;;1911:8:104;-1:-1:-1;1911:8:104;;-1:-1:-1;2022:19:112;;1911:26:104;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1956:7:104;;1947:28;;;-1:-1:-1;;;1947:28:104;;-1:-1:-1;;;;;2282:32:112;;;1947:28:104;;;2264:51:112;2331:18;;;2324:30;2390:1;2370:18;;;2363:29;-1:-1:-1;;;2408:18:112;;;2401:37;-1:-1:-1;;;;;;;;;;;1947:8:104;-1:-1:-1;1947:8:104;;-1:-1:-1;2455:19:112;;1947:28:104;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2018:56;;;;;;;;;;;;;;;;;;5319:23:84;;;;;;;;5235:111;2018:56:104;-1:-1:-1;;;;;;1985:89:104;;;2121:62;;;;;;;;;;;;;;;;;;;;;5319:23:84;;;;;;;;5235:111;2121:62:104;-1:-1:-1;;;;;;2084:99:104;;;2215:8;2197:15;:26;2193:74;;;2239:17;;-1:-1:-1;;;2239:17:104;;2247:8;2239:17;;;424:25:112;-1:-1:-1;;;;;;;;;;;2239:7:104;;;397:18:112;;2239:17:104;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2193:74;2550:22:14;;;;;;;;;;2606:25;;;;;;;;;2787;;;;2822:31;;;;2882:13;2863:32;;2660:117;2932:58;2660:117;2550:22;2606:25;3642:73;;;;;;5803:25:112;;;5844:18;;;5837:34;;;5887:18;;;5880:34;;;3686:13:14;5930:18:112;;;5923:34;3709:4:14;5973:19:112;;;5966:61;3606:7:14;;5775:19:112;;3642:73:14;;;;;;;;;;;;3632:84;;;;;;3625:91;;3466:257;;;;;;2932:58;2905:85;;3023:4;3000:28;;3038:21;;-1:-1:-1;;765:32:101;;;;;;;;;;;;;-1:-1:-1;;;765:32:101;;;;;;;;859:18;:22;;;;910:12;;-1:-1:-1;891:16:101;;:13;:16;;;:31;765:32;;-1:-1:-1;438:41:54;;-1:-1:-1;960:10:101;;720:4:54;;968:1:101;;960:7;;;;;:10;;:::i;:::-;932:25;;;:38;1005:6;932:13;;;980:31;1021:5;:64;;-1:-1:-1;;;;;;1021:64:101;1035:49;1021:64;;;;;;1095:34;;-1:-1:-1;;;1095:34:101;;-1:-1:-1;;;;;;;;;;;1095:7:101;;;:34;;1035:49;1119:9;;1095:34;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1156:5:101;;1139:33;;;-1:-1:-1;;;1139:33:101;;-1:-1:-1;;;;;1156:5:101;;;1139:33;;;3542:51:112;3609:18;;;3602:30;3668:1;3648:18;;;3641:29;-1:-1:-1;;;3686:18:112;;;3679:35;-1:-1:-1;;;;;;;;;;;1139:8:101;-1:-1:-1;1139:8:101;;-1:-1:-1;3731:19:112;;1139:33:101;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1182:6:101;:66;;-1:-1:-1;;;;;;1182:66:101;1197:50;1182:66;;;;;;1258:35;;-1:-1:-1;;;1258:35:101;;-1:-1:-1;;;;;;;;;;;1258:7:101;-1:-1:-1;1258:7:101;;-1:-1:-1;1258:35:101;;1197:50;1283:9;;1258:35;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1320:6:101;;1303:35;;;-1:-1:-1;;;1303:35:101;;-1:-1:-1;;;;;1320:6:101;;;1303:35;;;3973:51:112;4040:18;;;4033:30;4099:1;4079:18;;;4072:29;-1:-1:-1;;;4117:18:112;;;4110:36;-1:-1:-1;;;;;;;;;;;1303:8:101;-1:-1:-1;1303:8:101;;-1:-1:-1;4163:19:112;;1303:35:101;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1348:3:101;:58;;-1:-1:-1;;;;;;1348:58:101;1358:47;1348:58;;;;;;1416:32;;-1:-1:-1;;;1416:32:101;;-1:-1:-1;;;;;;;;;;;1416:7:101;-1:-1:-1;1416:7:101;;-1:-1:-1;1416:32:101;;1358:47;1438:9;;1416:32;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1475:3:101;;1458:29;;;-1:-1:-1;;;1458:29:101;;-1:-1:-1;;;;;1475:3:101;;;1458:29;;;4405:51:112;4472:18;;;4465:30;4531:1;4511:18;;;4504:29;-1:-1:-1;;;4549:18:112;;;4542:33;-1:-1:-1;;;;;;;;;;;1458:8:101;-1:-1:-1;1458:8:101;;-1:-1:-1;4592:19:112;;1458:29:101;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1497:4:101;:60;;-1:-1:-1;;;;;;1497:60:101;1508:48;1497:60;;;;;;1567:33;;-1:-1:-1;;;1567:33:101;;-1:-1:-1;;;;;;;;;;;1567:7:101;-1:-1:-1;1567:7:101;;-1:-1:-1;1567:33:101;;1508:48;1590:9;;1567:33;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1627:4:101;;1610:31;;;-1:-1:-1;;;1610:31:101;;-1:-1:-1;;;;;1627:4:101;;;1610:31;;;;4834:51:112;;;;4901:18;;;4894:30;;;;4940:18;;;4933:29;-1:-1:-1;;;4978:18:112;;;4971:34;-1:-1:-1;;;;;;;;;;;1610:8:101;-1:-1:-1;1610:8:101;;-1:-1:-1;5022:19:112;;1610:31:101;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;755:893;;719:3690:92;;1454:110:86;1508:3;1539:17;1555:1;1550;1539:17;:::i;:::-;1523:34;;1454:110;;;;;:::o;919:::-;973:3;1004:17;1020:1;1015;1004:17;:::i;719:3690:92:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;719:3690:92;;;-1:-1:-1;719:3690:92;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;146:127:112;207:10;202:3;198:20;195:1;188:31;238:4;235:1;228:15;262:4;259:1;252:15;460:290;530:6;583:2;571:9;562:7;558:23;554:32;551:52;;;599:1;596;589:12;551:52;625:16;;-1:-1:-1;;;;;670:31:112;;660:42;;650:70;;716:1;713;706:12;650:70;739:5;460:290;-1:-1:-1;;;460:290:112:o;2682:643::-;2886:1;2882;2877:3;2873:11;2869:19;2861:6;2857:32;2846:9;2839:51;2820:4;2909:2;2947;2942;2931:9;2927:18;2920:30;2979:6;2973:13;3022:6;3017:2;3006:9;3002:18;2995:34;3047:1;3057:140;3071:6;3068:1;3065:13;3057:140;;;3166:14;;;3162:23;;3156:30;3132:17;;;3151:2;3128:26;3121:66;3086:10;;3057:140;;;3061:3;3246:1;3241:2;3232:6;3221:9;3217:22;3213:31;3206:42;3316:2;3309;3305:7;3300:2;3292:6;3288:15;3284:29;3273:9;3269:45;3265:54;3257:62;;;;2682:643;;;;;:::o;5052:217::-;5092:1;5118;5108:132;;5162:10;5157:3;5153:20;5150:1;5143:31;5197:4;5194:1;5187:15;5225:4;5222:1;5215:15;5108:132;-1:-1:-1;5254:9:112;;5052:217::o;5274:265::-;5347:9;;;5378;;5395:15;;;5389:22;;5375:37;5365:168;;5455:10;5450:3;5446:20;5443:1;5436:31;5490:4;5487:1;5480:15;5518:4;5515:1;5508:15;5544:489;719:3690:92;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106103425760003560e01c80637660e109116101b8578063b5508aa911610104578063e7af8fed116100a2578063f7a95a9e1161007c578063f7a95a9e14610706578063fa7626d41461073b578063fc6774fe14610748578063ff9d3a771461075057600080fd5b8063e7af8fed146106d8578063e985e9c5146106eb578063f24c490c146106fe57600080fd5b8063ba414fa6116100de578063ba414fa6146106a0578063bbf1dd1d146106a8578063bfc36be6146106c8578063e20c9f71146106d057600080fd5b8063b5508aa91461067d578063b58907ea14610685578063b88d4fde1461068d57600080fd5b8063980b13c511610171578063a497e6741161014b578063a497e6741461061c578063a5ea11da1461062f578063ac98981914610657578063b1ce7a6a1461066a57600080fd5b8063980b13c5146105ee5780639e10b8db14610601578063a22cb4651461060957600080fd5b80637660e1091461057b57806385226c811461058e5780638d116c7a146105a3578063916a17c6146105cb57806392eab80e146105d357806395d89b41146105e657600080fd5b806323b872dd11610292578063504006ca116102305780636a9740351161020a5780636a9740351461053a5780636ba4c1381461054d57806370a082311461056057806373911a6d1461057357600080fd5b8063504006ca146104f25780636352211e1461051257806366d9a9a01461052557600080fd5b80633d6fd5be1161026c5780633d6fd5be146104bc5780633e5e3c23146104cf5780633f7286f4146104d757806342842e0e146104df57600080fd5b806323b872dd1461048357806326a49e37146104965780632efe69b3146104a957600080fd5b806314aab74f116102ff5780631a34c700116102d95780631a34c700146104355780631ed7831c146104485780631fbc8a741461045d578063209068711461047057600080fd5b806314aab74f146103e0578063150b7a021461040157806318160ddd1461042d57600080fd5b806301ffc9a71461034757806306fdde03146103705780630701df0114610385578063081812fc1461038f578063095ea7b3146103ba5780630c72ad20146103cd575b600080fd5b61035b6103553660046159a5565b50600090565b60405190151581526020015b60405180910390f35b610378610763565b6040516103679190615a12565b61038d610804565b005b6103a261039d366004615a25565b61095a565b6040516001600160a01b039091168152602001610367565b61038d6103c8366004615a5e565b61096b565b61038d6103db366004615ba5565b6109f7565b6103f36103ee366004615a25565b610c05565b604051908152602001610367565b61041461040f366004615c2f565b610c23565b6040516001600160e01b03199091168152602001610367565b6103f3610c70565b61038d610443366004615a5e565b610c83565b610450610d74565b6040516103679190615ccd565b6103f361046b366004615ddf565b610dd6565b6103a261047e366004615ece565b610de9565b61038d610491366004615f02565b610df4565b6103f36104a4366004615a25565b610e26565b6103f36104b7366004616011565b610f03565b6103f36104ca366004616140565b611070565b6104506111fe565b61045061125e565b61038d6104ed366004615f02565b6112be565b610505610500366004615a25565b6112d9565b6040516103679190616181565b6103a2610520366004615a25565b6113f8565b61052d611403565b604051610367919061627c565b6103f3610548366004616011565b6114f2565b6103f361055b366004616140565b611656565b6103f361056e36600461632f565b6117e7565b61038d61183c565b61038d610589366004615a5e565b6118ba565b6105966119ab565b604051610367919061634c565b6105b66105b136600461632f565b611a7b565b60408051928352602083019190915201610367565b61052d611aba565b6103f36105e1366004615a25565b611ba0565b610378611ca3565b61038d6105fc3660046163ae565b611cc0565b61038d611d04565b61038d610617366004616462565b611efe565b61038d61062a366004615a25565b611f09565b610637611fdf565b604080519485526020850193909352918301526060820152608001610367565b61050561066536600461652e565b612010565b61038d610678366004616140565b61202d565b610596612182565b610505612252565b61038d61069b36600461658e565b61244a565b61035b61247d565b6106bb6106b63660046165f9565b6125a8565b604051610367919061674a565b61038d6125ba565b6104506128bc565b61038d6106e6366004615a25565b61291c565b61035b6106f9366004616759565b612a42565b61038d612a4e565b610719610714366004615a25565b612aa3565b6040805182518152602080840151908201529181015190820152606001610367565b60005461035b9060ff1681565b61038d612b32565b61038d61075e366004616787565b612d83565b6060600061076f612da5565b9050806000018054610780906167bd565b80601f01602080910402602001604051908101604052809291908181526020018280546107ac906167bd565b80156107f95780601f106107ce576101008083540402835291602001916107f9565b820191906000526020600020905b8154815290600101906020018083116107dc57829003601f168201915b505050505091505090565b600061080e612dc9565b9050600061081a612e6b565b9050600061082782612ecf565b6798a7d9b8314c00006020808301829052840151604051929350737109709ecfa91a80626ff3989d68f67f5b1dd12d9263f28dceb3926352e84b3360e11b92610874928890602401616850565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b03199485161790525160e084901b90921682526108b991600401615a12565b600060405180830381600087803b1580156108d357600080fd5b505af11580156108e7573d6000803e3d6000fd5b505060405163bbf1dd1d60e01b815230925063bbf1dd1d915061091090849087906004016168a1565b610140604051808303816000875af1158015610930573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610954919061690b565b50505050565b600061096582612f0e565b92915050565b6000610976826113f8565b9050806001600160a01b0316836001600160a01b0316036109aa57604051630591db6d60e01b815260040160405180910390fd5b336001600160a01b038216148015906109ca57506109c88133612a42565b155b156109e85760405163e495e68760e01b815260040160405180910390fd5b6109f28383612f5b565b505050565b6000610a01612f9c565b905060008060008060005b8651811015610bfc57856005016000888381518110610a2d57610a2d61699a565b602002602001015181526020019081526020016000209450600085600b01600001541180610a645750600d850154610100900460ff165b80610a735750600d85015460ff165b15610ab757868181518110610a8a57610a8a61699a565b602002602001015160405163dae2c27360e01b8152600401610aae91815260200190565b60405180910390fd5b84600101549350610af3610ae9610ae2876003015442610ad791906169c6565b600789015490612d99565b8690612fc0565b600c870154612fe2565b9250610aff83856169d9565b600b8601819055600d8601805461ff0019166101001790558554909250610b31906001600160a01b0316333085612ff8565b60098501546008860154600a870154604051632142170760e11b81526001600160a01b03938416936342842e0e93610b7293309392909116916004016169ec565b600060405180830381600087803b158015610b8c57600080fd5b505af1158015610ba0573d6000803e3d6000fd5b50505050868181518110610bb657610bb661699a565b60200260200101517fa6ffc78a660e4971a47a0f916a0abae483804e6f42c9292ed06aa64f8fe4623060405160405180910390a280610bf481616a10565b915050610a0c565b50505050505050565b6000610c0f612f9c565b600092835260040160205250604090205490565b600080610c3283850185616a29565b9050610c5c81886040518060400160405280336001600160a01b03168152602001898152506130a3565b50630a85bd0160e11b979650505050505050565b6000610c7a612da5565b60020154905090565b6000306001600160a01b0316638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610cc3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ce79190616a5d565b9050336001600160a01b03821614610d1d5760405163d4ed9a1760e01b81526001600160a01b0382166004820152602401610aae565b81610d26612f9c565b6001600160a01b038516600081815260069290920160205260408083209390935591518492917f67c648fad0621d49c4ec46cd8bd0f732a5999eb456200b96b1ad475163d8672f91a3505050565b6060600d805480602002602001604051908101604052809291908181526020018280548015610dcc57602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610dae575b5050505050905090565b6000610965610de483613322565b6133ca565b600061096582613418565b610dfe3382613502565b610e1b57604051636eb172ad60e11b815260040160405180910390fd5b6109f2838383613561565b600080610e31612f9c565b600084815260059190910160205260408120600481015490925090610e5682426169c6565b9050610e6185613667565b6005830154600090821015610e9b576005840154610e9690610e849084906136f0565b676765c793fa10079d601b1b90613708565b610e9e565b60005b90506000610ed2610ec78660020154676765c793fa10079d601b1b6136f090919063ffffffff16565b600187015490612fc0565b9050610ef882610ef2876005016001015484612fc090919063ffffffff16565b90612fc0565b979650505050505050565b600080610f0e612f9c565b6000808052600582810160209081526040808420895181546001600160a01b03199081166001600160a01b039283161783558b85015160018401558b84015160028401556060808d0151600385015560808d0151600485015560a08d015180519785019790975595850151600684015560c08c0151600784015560e08c01516008840180548316918416919091179055610100808d0151805160098601805490941694169390931790915590840151600a8301556101208b01518051600b84015593840151600c83015591830151600d82018054949095015161ffff1990941690151561ff0019161792151590910291909117909155610140870151600e820155610160870151600f90910155909150611026612da5565b6000808052600782016020818152604080842089518155828a01516001820155818a0151600282015560058801835293209190529192506110679190613714565b95945050505050565b60008061107b612f9c565b905060008080805b868110156111f35787878281811061109d5761109d61699a565b6020908102929092013560008181526005890190935260409092206008810154909650919350506001600160a01b031633146110ef5760405163c250ea5d60e01b815260048101839052602401610aae565b600d840154610100900460ff161561111d5760405163059803b760e21b815260048101839052602401610aae565b600d84015460ff161561116c57600d8401805461ff00191661010017905560028401546111659061115a90676765c793fa10079d601b1b90613708565b600b86015490612fc0565b9250611188565b6040516311653e5f60e21b815260048101839052602401610aae565b82156111e15783546111a4906001600160a01b031633856137a5565b6111ae83876169d9565b6040519096508290849033907f34fcbac0073d7c3d388e51312faf357774904998eeb8fca628b9e6f65ee1cbf790600090a45b806111eb81616a10565b915050611083565b505050505092915050565b6060600f805480602002602001604051908101604052809291908181526020018280548015610dcc576020028201919060005260206000209081546001600160a01b03168152600190910190602001808311610dae575050505050905090565b6060600e805480602002602001604051908101604052809291908181526020018280548015610dcc576020028201919060005260206000209081546001600160a01b03168152600190910190602001808311610dae575050505050905090565b6109f28383836040518060200160405280600081525061244a565b6112e16157e5565b6112e9612f9c565b60009283526005908101602090815260409384902084516101808101865281546001600160a01b039081168252600183015482850152600283015482880152600383015460608084019190915260048401546080808501919091528851808a018a5296850154875260068501548787015260a0840196909652600784015460c08401526008840154821660e08401528751808901895260098501549092168252600a840154828601526101008084019290925287519586018852600b8401548652600c84015494860194909452600d83015460ff80821615159887019890985204909516151591830191909152610120840191909152600e810154610140840152600f01546101608301525090565b60006109658261384e565b60606012805480602002602001604051908101604052809291908181526020016000905b828210156114e95760008481526020908190206040805180820182526002860290920180546001600160a01b031683526001810180548351818702810187019094528084529394919385830193928301828280156114d157602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b031916815260200190600401906020826003010492830192600103820291508084116114935790505b50505050508152505081526020019060010190611427565b50505050905090565b6000806114fd612f9c565b6000808052600582810160209081526040808420895181546001600160a01b03199081166001600160a01b039283161783558b85015160018401558b84015160028401556060808d0151600385015560808d0151600485015560a08d015180519785019790975595850151600684015560c08c0151600784015560e08c01516008840180548316918416919091179055610100808d0151805160098601805490941694169390931790915590840151600a8301556101208b01518051600b84015593840151600c83015591830151600d82018054949095015161ffff1990941690151561ff0019161792151590910291909117909155610140870151600e820155610160870151600f90910155909150611615612da5565b6000808052600782016020818152604080842089518155828a01516001820155818a0151600282015560058801835293209190529192506110679190613894565b600080611661612f9c565b9050600061166d612da5565b905060008060008060005b888110156117da576116a2338b8b848181106116965761169661699a565b90506020020135613502565b6116bf57604051636eb172ad60e11b815260040160405180910390fd5b6116e08a8a838181106116d4576116d461699a565b905060200201356138c4565b8560070160008b8b848181106116f8576116f861699a565b905060200201358152602001908152602001600020935083600201549250866005016000848152602001908152602001600020945084600b0160020160009054906101000a900460ff1615611758576117518585613894565b915061178d565b600b850154600003611780576040516311653e5f60e21b815260048101849052602401610aae565b61178a8585613714565b91505b6040518390839033907f34fcbac0073d7c3d388e51312faf357774904998eeb8fca628b9e6f65ee1cbf790600090a46117c682896169d9565b9750806117d281616a10565b915050611678565b5050505050505092915050565b6000806117f2612da5565b90506001600160a01b03831661181b57604051630b505c1d60e11b815260040160405180910390fd5b6001600160a01b039092166000908152600490920160205250604090205490565b6000611846612dc9565b90506000611852612e6b565b600160808201529050600061186682612ecf565b90506002611872612f9c565b600190810191909155604051600060248201526044810191909152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063f28dceb390632ff7abc160e11b90606401610874565b6000306001600160a01b0316638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156118fa573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061191e9190616a5d565b9050336001600160a01b038216146119545760405163d4ed9a1760e01b81526001600160a01b0382166004820152602401610aae565b8161195d612f9c565b6001600160a01b038516600081815260079290920160205260408083209390935591518492917f146e1a257ecd0267c391070e1bc23a703eee64ed866c1ceb73cc8b2508f4a37191a3505050565b60606011805480602002602001604051908101604052809291908181526020016000905b828210156114e95783829060005260206000200180546119ee906167bd565b80601f0160208091040260200160405190810160405280929190818152602001828054611a1a906167bd565b8015611a675780601f10611a3c57610100808354040283529160200191611a67565b820191906000526020600020905b815481529060010190602001808311611a4a57829003601f168201915b5050505050815260200190600101906119cf565b6000806000611a88612f9c565b6001600160a01b0390941660009081526006850160209081526040808320546007909701909152902054939492505050565b60606013805480602002602001604051908101604052809291908181526020016000905b828210156114e95760008481526020908190206040805180820182526002860290920180546001600160a01b03168352600181018054835181870281018701909452808452939491938583019392830182828015611b8857602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b03191681526020019060040190602082600301049283019260010382029150808411611b4a5790505b50505050508152505081526020019060010190611ade565b600080306001600160a01b0316638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611be1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c059190616a5d565b9050336001600160a01b03821614611c3b5760405163d4ed9a1760e01b81526001600160a01b0382166004820152602401610aae565b6000611c45612f9c565b6001810180549192506000611c5983616a10565b90915550600081815260048301602052604080822087905551919450849186917f6da37ad08550ba024c1448b799ac757c4f29bc9fb729b3f370a4fa2ab798fbd591a35050919050565b60606000611caf612da5565b9050806001018054610780906167bd565b60005b8151811015611d0057611cee828281518110611ce157611ce161699a565b6020026020010151613940565b80611cf881616a10565b915050611cc3565b5050565b6000611d0e612dc9565b90506000611d1a612e6b565b90506000611d2782612ecf565b601e546020820151604051929350737109709ecfa91a80626ff3989d68f67f5b1dd12d9263b96213e4926001600160a01b0316916323b872dd60e01b91611da9917f0000000000000000000000000000000000000000000000000000000000000000917333c40185e5db418a44ff63453d84f629163460c391906024016169ec565b60408051601f19818403018152918152602080830180516001600160e01b03166001600160e01b031990951694909417909352519091611df29160019101901515815260200190565b6040516020818303038152906040526040518463ffffffff1660e01b8152600401611e1f93929190616a7a565b600060405180830381600087803b158015611e3957600080fd5b505af1158015611e4d573d6000803e3d6000fd5b505060405163bbf1dd1d60e01b81526000925030915063bbf1dd1d90611e7990859088906004016168a1565b610140604051808303816000875af1158015611e99573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ebd919061690b565b90506000611edc846020015184602001516136f090919063ffffffff16565b8551909150611eeb9082613a84565b8552611ef78286613a90565b5050505050565b611d00338383613b50565b6000306001600160a01b0316638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611f49573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f6d9190616a5d565b9050336001600160a01b03821614611fa35760405163d4ed9a1760e01b81526001600160a01b0382166004820152602401610aae565b81611fac612f9c565b6002015560405182907f99c234461abfab1095b48d0d9527ff204caa62038112f57c795cecb99503676290600090a25050565b6000806000806000611fef612f9c565b60038101546002820154825460019093015491989097509195509350915050565b6120186157e5565b6120238484846130a3565b90505b9392505050565b60005b818110156109f25782828281811061204a5761204a61699a565b905060200281019061205c9190616aba565b61206a90602081019061632f565b6001600160a01b03166323b872dd333086868681811061208c5761208c61699a565b905060200281019061209e9190616aba565b6040516001600160e01b031960e086901b1681526120c593929160200135906004016169ec565b600060405180830381600087803b1580156120df57600080fd5b505af11580156120f3573d6000803e3d6000fd5b5050505061216f83838381811061210c5761210c61699a565b905060200281019061211e9190616aba565b61212c906040810190616ada565b61213591616b23565b338585858181106121485761214861699a565b905060200281019061215a9190616aba565b61216a9036819003810190616b30565b6130a3565b508061217a81616a10565b915050612030565b60606010805480602002602001604051908101604052809291908181526020016000905b828210156114e95783829060005260206000200180546121c5906167bd565b80601f01602080910402602001604051908101604052809291908181526020018280546121f1906167bd565b801561223e5780601f106122135761010080835404028352916020019161223e565b820191906000526020600020905b81548152906001019060200180831161222157829003601f168201915b5050505050815260200190600101906121a6565b61225a6157e5565b6000612264612e6b565b9050600061227182613bc6565b9050600061227d613c2b565b601e548351919250737109709ecfa91a80626ff3989d68f67f5b1dd12d9163b96213e4916001600160a01b0316906323b872dd60e01b907f0000000000000000000000000000000000000000000000000000000000000000907333c40185e5db418a44ff63453d84f629163460c39088906000906122fd576122fd61699a565b60200260200101516020015160405160240161231b939291906169ec565b60408051601f19818403018152918152602080830180516001600160e01b03166001600160e01b0319909516949094179093525190916123649160019101901515815260200190565b6040516020818303038152906040526040518463ffffffff1660e01b815260040161239193929190616a7a565b600060405180830381600087803b1580156123ab57600080fd5b505af11580156123bf573d6000803e3d6000fd5b505060405163ac98981960e01b815230925063ac98981991506123fe9085907333c40185e5db418a44ff63453d84f629163460c3908690600401616b4c565b610220604051808303816000875af115801561241e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906124429190616c4d565b935050505090565b6124543383613502565b61247157604051636eb172ad60e11b815260040160405180910390fd5b61095484848484613c5d565b60008054610100900460ff161561249d5750600054610100900460ff1690565b6000737109709ecfa91a80626ff3989d68f67f5b1dd12d3b156125a35760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b8284015282518083038401815260608301909352600092909161252b917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc491608001616d12565b60408051601f198184030181529082905261254591616d43565b6000604051808303816000865af19150503d8060008114612582576040519150601f19603f3d011682016040523d82523d6000602084013e612587565b606091505b509150508080602001905181019061259f9190616d55565b9150505b919050565b6125b06158a2565b6120268383613c90565b60006125c4612dc9565b905060006125d0612e6b565b601f546001600160a01b03168152905060006125eb82612ecf565b601e54601f54604080516001600160a01b0393841660248201529290911660448084019190915281518084039091018152606490920181526020820180516001600160e01b03166346aac2a960e01b1790525163f28dceb360e01b8152919250737109709ecfa91a80626ff3989d68f67f5b1dd12d9163f28dceb39161267391600401615a12565b600060405180830381600087803b15801561268d57600080fd5b505af11580156126a1573d6000803e3d6000fd5b505060405163bbf1dd1d60e01b815230925063bbf1dd1d91506126ca90849087906004016168a1565b610140604051808303816000875af11580156126ea573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061270e919061690b565b50601f546001600160a01b03166020808501829052820151604051737109709ecfa91a80626ff3989d68f67f5b1dd12d9263b96213e49290916323b872dd60e01b91612794917f0000000000000000000000000000000000000000000000000000000000000000917333c40185e5db418a44ff63453d84f629163460c3916024016169ec565b60408051601f19818403018152918152602080830180516001600160e01b03166001600160e01b0319909516949094179093525190916127dd9160019101901515815260200190565b6040516020818303038152906040526040518463ffffffff1660e01b815260040161280a93929190616a7a565b600060405180830381600087803b15801561282457600080fd5b505af1158015612838573d6000803e3d6000fd5b505060405163bbf1dd1d60e01b815230925063bbf1dd1d915061286190849087906004016168a1565b610140604051808303816000875af1158015612881573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906128a5919061690b565b506109f26128b1612da5565b600201546001613ef8565b6060600c805480602002602001604051908101604052809291908181526020018280548015610dcc576020028201919060005260206000209081546001600160a01b03168152600190910190602001808311610dae575050505050905090565b6000306001600160a01b0316638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561295c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906129809190616a5d565b9050336001600160a01b038216146129b65760405163d4ed9a1760e01b81526001600160a01b0382166004820152602401610aae565b6129e06129da60026129d4676765c793fa10079d601b1b6005612d99565b90612d8d565b83101590565b612a065760405162461bcd60e51b81526020600482015260006024820152604401610aae565b81612a0f612f9c565b6003015560405182907f1ce4b7127cce448c8a88c8a281145cece8c80a8e53693505547c31fabc92c44590600090a25050565b6000612026838361401f565b6000612a5861405c565b9050612a70676765c793fa10079d601b1b600a612d8d565b60408201524260608201819052612a8a90621275006169d9565b6080820152612aa0612a9a612252565b82614071565b50565b612ac760405180606001604052806000815260200160008152602001600081525090565b6000612ad1612da5565b90508060020154831115612af85760405163089ba7e160e41b815260040160405180910390fd5b6000928352600701602090815260409283902083516060810185528154815260018201549281019290925260020154928101929092525090565b60408051600a8082526101608201909252600091816020015b612b53615918565b815260200190600190039081612b4b57905050905060005b600a811015612bb457612b84612b7f612e6b565b612ecf565b828281518110612b9657612b9661699a565b60200260200101819052508080612bac90616a10565b915050612b6b565b50601e548151737109709ecfa91a80626ff3989d68f67f5b1dd12d9163b96213e4916001600160a01b03909116906323b872dd60e01b907f0000000000000000000000000000000000000000000000000000000000000000907333c40185e5db418a44ff63453d84f629163460c3908790600090612c3457612c3461699a565b602002602001015160200151604051602401612c52939291906169ec565b60408051601f19818403018152918152602080830180516001600160e01b03166001600160e01b031990951694909417909352519091612c9b9160019101901515815260200190565b6040516020818303038152906040526040518463ffffffff1660e01b8152600401612cc893929190616a7a565b600060405180830381600087803b158015612ce257600080fd5b505af1158015612cf6573d6000803e3d6000fd5b5030925063ac98981991508390507333c40185e5db418a44ff63453d84f629163460c3612d21613c2b565b6040518463ffffffff1660e01b8152600401612d3f93929190616b4c565b610220604051808303816000875af1158015612d5f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d009190616c4d565b611d00828261408b565b60006120268284616d72565b60006120268284616d94565b7f9dcac861a288165fa5a7e007597a30abcd2d73e174280cf7c6967f5a922a443990565b612dd16158a2565b60405180610120016040528060008152602001612dec612e6b565b516001600160a01b0316815260006020820152604001612e0a612e6b565b604001518152602001612e1b612e6b565b602001518152602001612e2c612e6b565b60209081015182527333c40185e5db418a44ff63453d84f629163460c390820152604001612e58612e6b565b60a0015181526020016001815250905090565b612e7361593e565b6040805160c081018252601e546001600160a01b03168152678ac7230489e800006020820152621275009181019190915260608101612eb442611c206169d9565b815260200160008152602001612ec8613c2b565b9052919050565b612ed7615918565b6040518060600160405280612eeb846140bb565b8152602001600a8460200151612f019190616d72565b8152602001929092525090565b6000612f19826140ca565b612f365760405163089ba7e160e41b815260040160405180910390fd5b612f3e612da5565b60009283526005016020525060409020546001600160a01b031690565b6000612f65612da5565b6000838152600582016020526040902080546001600160a01b0319166001600160a01b03861617905590506109f2612aa08361384e565b7f84e508d57dadc535817af594804944c3bc341cdb6befa5a0747e20285912a7eb90565b6000676765c793fa10079d601b1b612fd88385616d94565b6120269190616d72565b6000818311612ff15781612026565b5090919050565b6040516323b872dd60e01b81526001600160a01b038516906323b872dd90613028908690869086906004016169ec565b6020604051808303816000875af1158015613047573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061306b9190616d55565b610954576040516362fe41f360e01b81526001600160a01b038086166004830152808516602483015283166044820152606401610aae565b6130ab6157e5565b60006130d2856000815181106130c3576130c361699a565b602002602001015185856140f5565b905060006130de612da5565b600201546130ed9060016169d9565b86519091506000805b82811015613160576131218982815181106131135761311361699a565b602002602001015186613c90565b94508881815181106131355761313561699a565b6020026020010151602001518261314c91906169d9565b91508061315881616a10565b9150506130f6565b50701d6329f1c35ca4bfabb9f56100000000008111156131965760405163a1b0082360e01b815260048101829052602401610aae565b6131a4848888858588614199565b9450846131af612f9c565b6101008681018051600090815260059384016020908152604091829020865181546001600160a01b03199081166001600160a01b039283161783558884015160018401558885015160028401556060808a0151600385015560808a0151600485015560a08a015180519985019990995597840151600684015560c0890151600784015560e089015160088401805483169184169190911790558887015180516009850180549093169316929092179055820151600a8201556101208701518051600b83015580830151600c83015580840151600d83018054929098015161ffff1990921690151561ff0019161790151590950294909417909455610140850151600e84015561016090940151600f909201919091555191517fdca520d648f7d72e985ce218de7119aeca8bdd20abdb296f69ee74630fe79c7b916132f591899101616181565b60408051601f198184030181529082905261330f91615a12565b60405180910390a2505050509392505050565b60007f2ac049b6467232d12ceb145e80f9890371b3f6a4ccb53cdc241cf1a1c6e9dd978260000151836020015184604001518560600151866080015161336b8860a001516142be565b6040805160208101989098526001600160a01b03909616958701959095526060860193909352608085019190915260a084015260c083015260e0820152610100015b604051602081830303815290604052805190602001209050919050565b60006109656133d76142f3565b8360405161190160f01b6020820152602281018390526042810182905260009060620160405160208183030381529060405280519060200120905092915050565b600080613423612f9c565b905061343c6134358460400151610dd6565b845161441a565b604080850151516001600160a01b03166000908152600784016020908152919020549085015191935090811061349357836040015184602001518260405163889976c760e01b8152600401610aae93929190616dab565b8360400151606001514211156134c7576040808501516060810151915163065a5c3b60e01b8152610aae9290600401616dcc565b8160010154846040015160800151106134fb578160010154604051632fac17ed60e11b8152600401610aae91815260200190565b5050919050565b60008061350e8361384e565b9050806001600160a01b0316846001600160a01b031614806135355750613535818561401f565b806135595750836001600160a01b031661354e84612f0e565b6001600160a01b0316145b949350505050565b600061356b612da5565b9050836001600160a01b03166135808361384e565b6001600160a01b0316146135a75760405163e146af6f60e01b815260040160405180910390fd5b6001600160a01b0383166135ce576040516338f646ff60e21b815260040160405180910390fd5b6135d9600083612f5b565b6001600160a01b038416600090815260048201602052604081208054600192906136049084906169c6565b90915550506001600160a01b038316600090815260048201602052604081208054600192906136349084906169d9565b90915550506000828152600382016020526040902080546001600160a01b0319166001600160a01b038516179055610954565b6000613671612f9c565b6005016000838152602001908152602001600020905080600401544210156136b95760048181015460405163ee9e72dd60e01b81529182015260248101839052604401610aae565b600b8101541515806136cf5750600d81015460ff165b15611d005760405163dae2c27360e01b815260048101839052602401610aae565b600081612fd8676765c793fa10079d601b1b85616d94565b600061202682846169c6565b600080836001015484600b016000015461372e91906169c6565b600c850154909150810361375e57600f84015461374b9082616d72565b835461375791906169d9565b9150613788565b6001840154835461376f9083616d94565b6137799190616d72565b835461378591906169d9565b91505b835461379e906001600160a01b031633846137a5565b5092915050565b60405163a9059cbb60e01b81526001600160a01b0383811660048301526024820183905284169063a9059cbb906044016020604051808303816000875af11580156137f4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906138189190616d55565b6109f2576040516362fe41f360e01b81526001600160a01b03808516600483015230602483015283166044820152606401610aae565b600080613859612da5565b60008481526003820160205260409020549091506001600160a01b0316806120265760405163089ba7e160e41b815260040160405180910390fd5b6001810154600b8301546000916138ab9190612fc0565b8354909150610965906001600160a01b031633836137a5565b60006138ce612da5565b905060006138db8361384e565b90506138e8600084612f5b565b6001600160a01b038116600090815260048301602052604081208054600192906139139084906169c6565b90915550506000838152600383016020526040812080546001600160a01b03191690556109f29082908583565b600061394a612f9c565b8251600090815260059190910160205260409020825190915061396c90613667565b600061397b8360000151610e26565b600d8301805460ff19166001179055600b830181905582549091506139ab906001600160a01b0316333084612ff8565b60098201546020840151600a840154604051632142170760e11b81526001600160a01b03909316926342842e0e926139e79230926004016169ec565b600060405180830381600087803b158015613a0157600080fd5b505af1158015613a15573d6000803e3d6000fd5b505084516040805160208082018490528801516001600160a01b0316818301528151808203830181526060909101918290529193507f56fa56fac71c8ba176bf5af94ddd918100d0d8b56a12bbe5e94bac85eca114da9250613a779190615a12565b60405180910390a2505050565b600061202682846169d9565b80604051602001613aa1919061674a565b6040516020818303038152906040528051906020012082604051602001613ac8919061674a565b6040516020818303038152906040528051906020012014611d0057613b0d8160405180604001604052806008815260200167195e1c1958dd195960c21b81525061443e565b613b378260405180604001604052806008815260200167030b1ba3ab0b610160c51b81525061443e565b60405163abd7cc6f60e01b815260040160405180910390fd5b6000613b5a612da5565b9050826001600160a01b0316846001600160a01b031603613b8e57604051630b7b99b960e21b815260040160405180910390fd5b6001600160a01b0384811660009081526006830160209081526040808320938716835292905220805460ff1916831515179055610954565b60408051600180825281830190925260609160009190816020015b613be9615918565b815260200190600190039081613be1579050509050613c0783612ecf565b81600081518110613c1a57613c1a61699a565b602090810291909101015292915050565b6040805180820182526000808252602091820152815180830190925280546001600160a01b0316825260019082015290565b613c68848484613561565b613c748484848461469b565b61095457604051626b5e2960e61b815260040160405180910390fd5b613c986158a2565b6000613ca384613418565b9050600083602001516001600160a01b03168560400151600001516001600160a01b031614613d035760208401516040868101515190516346aac2a960e01b81526001600160a01b03928316600482015291166024820152604401610aae565b836040015185604001516080015114613d48578360400151856040015160800151604051632ff7abc160e11b8152600401610aae929190918252602082015260400190565b613d5a85604001518560e0015161408b565b613d7985604001516020015186602001516136f090919063ffffffff16565b8451909150613d889082613a84565b808552676765c793fa10079d601b1b1015613de65760208501518451613dc590613db690610e849085613708565b60408801516020015190612fc0565b86604001516040516352e84b3360e11b8152600401610aae93929190616850565b83606001518560400151604001511015613e0857604080860151015160608501525b83608001518560400151602001511015613e2b5760408501516020015160808501525b8360a001518560400151602001511115613e4e5760408501516020015160a08501525b6080840151613e5e906002616d94565b8460a001511115613e9557608084015160a0850151604051633065b5b760e11b815260048101929092526024820152604401610aae565b613ec1828560c00151876020015187602001516001600160a01b0316612ff8909392919063ffffffff16565b613eee8260405180606001604052808860200151815260200184815260200187610100015181525061479c565b5092949350505050565b808214611d00577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f50604051613f699060208082526022908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b75696e604082015261745d60f01b606082015260800190565b60405180910390a160408051818152600a81830152690808080808081319599d60b21b60608201526020810184905290517fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a89181900360800190a160408051818152600a81830152690808080808149a59da1d60b21b60608201526020810183905290517fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a89181900360800190a1611d006147f6565b6000614029612da5565b6001600160a01b039384166000908152600691909101602090815260408083209490951682529290925250205460ff1690565b6140646157e5565b61406c614902565b905090565b611d008282604051806020016040528060008152506149f0565b60a082015161409a9082614ae2565b611d0057818160405163d8ef221b60e01b8152600401610aae929190616de8565b606061096582620a11ce614b0b565b6000806140d5612da5565b6000938452600301602052505060409020546001600160a01b0316151590565b6140fd6158a2565b604051806101200160405280600081526020018560400151600001516001600160a01b031681526020018560400151608001518152602001856040015160400151815260200185604001516020015181526020018560400151602001518152602001846001600160a01b0316815260200183815260200161417c612f9c565b805460009061418a90616a10565b91829055509052949350505050565b6141a16157e5565b60006141ab612f9c565b905060008860600151426141bf91906169d9565b90506141f0604051806080016040528060008152602001600081526020016000151581526020016000151581525090565b6020808b01516001600160a01b0316600090815260068501909152604090205461421a9088616d94565b60208281019190915260408051610180810182528c8301516001600160a01b039081168252818401999099528c51818301524260608201526080810194909452805180820182526002860154815260038601548184015260a08501529a8b0151600090815260049094019052989091205460c08201529590921660e08601526101008501939093525061012083019390935261014082015261016081019190915290565b60007f8ee82799d3068521f828767217e880bf7d6bb6ec7d5dbcc3de1e3e4bbb39c9e9826040516020016133ad929190616e17565b6000306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614801561434c57507f000000000000000000000000000000000000000000000000000000000000000046145b1561437657507f000000000000000000000000000000000000000000000000000000000000000090565b50604080517f00000000000000000000000000000000000000000000000000000000000000006020808301919091527f0000000000000000000000000000000000000000000000000000000000000000828401527f000000000000000000000000000000000000000000000000000000000000000060608301524660808301523060a0808401919091528351808403909101815260c0909201909252805191012090565b60008060006144298585614be2565b9150915061443681614c27565b509392505050565b61449e6040518060400160405280601f81526020017f7e7e7e7e7e7e7e20737461727420436f6c6c61746572616c20537461746520008152508260405180604001604052806008815260200167103f3f3f3f3f3f3f60c11b815250614d71565b6144d860405180604001604052806014815260200173036b0ba31b432b2101010101010101010101010160651b8152508360000151614db8565b61451260405180604001604052806014815260200173036b4b727b33332b9223ab930ba34b7b7101010160651b8152508360600151614db8565b61454c60405180604001604052806014815260200173036b4b727b33332b92637b0b72a37ab30b63ab2960651b8152508360800151614db8565b61458660405180604001604052806014815260200173036b0bc27b33332b92637b0b72a37ab30b63ab2960651b8152508360a00151614db8565b6145c0604051806040016040528060148152602001730333937b6901010101010101010101010101010160651b8152508360c00151614dfd565b6145fe60405180604001604052806014815260200173037333a1734b210101010101010101010101010160651b8152508360e0015160200151614db8565b6146396040518060400160405280601481526020017303637b0b724b210101010101010101010101010160651b815250836101000151614db8565b611d006040518060400160405280601d81526020017f7e7e7e7e7e7e7e20656e6420436f6c6c61746572616c20537461746520000000815250826040518060400160405280600a8152602001691010103f3f3f3f3f3f3f60b11b815250614d71565b60006001600160a01b0384163b1561479157604051630a85bd0160e11b81526001600160a01b0385169063150b7a02906146df903390899088908890600401616e3e565b6020604051808303816000875af192505050801561471a575060408051601f3d908101601f1916820190925261471791810190616e71565b60015b614777573d808015614748576040519150601f19603f3d011682016040523d82523d6000602084013e61474d565b606091505b50805160000361476f57604051626b5e2960e61b815260040160405180910390fd5b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050613559565b506001949350505050565b6000806147a7612da5565b905080600201600081546147ba90616a10565b918290555060008181526007830160209081526040918290208651815590860151600182015590850151600290910155915061379e8483614e42565b737109709ecfa91a80626ff3989d68f67f5b1dd12d3b156148f15760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b9282019290925260016060820152600091907f70ca10bbd0dbfd9020a9f4b13402c16cb120705e0d1c0aeab10fa353ae586fc49060800160408051601f19818403018152908290526148909291602001616d12565b60408051601f19818403018152908290526148aa91616d43565b6000604051808303816000865af19150503d80600081146148e7576040519150601f19603f3d011682016040523d82523d6000602084013e6148ec565b606091505b505050505b6000805461ff001916610100179055565b61490a6157e5565b60408051608081018252600080825260208201819052818301819052606082015281516101808101909252908061493f612e6b565b516001600160a01b03168152670de0b6b3a76400006020820152676765c793fa10079d601b1b604082015260600161497a62127500426169c6565b815260200161498c42621275006169d9565b8152602001614999614e5c565b81526020016149a86000610c05565b81527333c40185e5db418a44ff63453d84f629163460c360208201526040016149cf612e6b565b60a00151815260200182815260200160018152602001600181525091505090565b81604051602001614a019190616181565b6040516020818303038152906040528051906020012083604051602001614a289190616181565b60405160208183030381529060405280519060200120146109f257805115614a7557614a75604051806040016040528060098152602001686572726f723a20257360b81b81525082614e9a565b614a9f8260405180604001604052806008815260200167195e1c1958dd195960c21b815250614edf565b614ac98360405180604001604052806008815260200167030b1ba3ab0b610160c51b815250614edf565b60405163289498f560e01b815260040160405180910390fd5b6000816020015183602001511480156120265750505190516001600160a01b0391821691161490565b60606000614b188461523f565b6040516338d07aa960e21b8152600481018590526024810182905290915060009081908190737109709ecfa91a80626ff3989d68f67f5b1dd12d9063e341eaa490604401606060405180830381865afa158015614b79573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190614b9d9190616e8e565b6040805160208101939093528281019190915260f89290921b6001600160f81b0319166060820152815160418183030181526061909101909152979650505050505050565b6000808251604103614c185760208301516040840151606085015160001a614c0c8782858561524a565b94509450505050614c20565b506000905060025b9250929050565b6000816004811115614c3b57614c3b616ecb565b03614c435750565b6001816004811115614c5757614c57616ecb565b03614ca45760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e617475726500000000000000006044820152606401610aae565b6002816004811115614cb857614cb8616ecb565b03614d055760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152606401610aae565b6003816004811115614d1957614d19616ecb565b03612aa05760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b6064820152608401610aae565b6109f2838383604051602401614d8993929190616ee1565b60408051601f198184030181529190526020810180516001600160e01b0316632ced7cef60e01b17905261530e565b611d008282604051602401614dce929190616f1a565b60408051601f198184030181529190526020810180516001600160e01b03166309710a9d60e41b17905261530e565b611d008282604051602401614e13929190616f3c565b60408051601f198184030181529190526020810180516001600160e01b031663319af33360e01b17905261530e565b611d0082826040518060200160405280600081525061532f565b6040805180820190915260008082526020820152604080518082019091526203f480815260208101612ec8676765c793fa10079d601b1b6003612d99565b611d008282604051602401614eb0929190616f66565b60408051601f198184030181529190526020810180516001600160e01b0316634b5c427760e01b17905261530e565b614f356040518060400160405280601381526020017203f3f3f3f3f3f3f1039ba30b93a103637b0b71606d1b8152508260405180604001604052806008815260200167103f3f3f3f3f3f3f60c11b815250614d71565b614f6f60405180604001604052806014815260200173030b9b9b2ba2632b73a10101010101010101010160651b8152508360000151614dfd565b614fa96040518060400160405280601481526020017303632b73a101010101010101010101010101010160651b8152508360200151614db8565b614fe360405180604001604052806014815260200173039b430b932a632b73a10101010101010101010160651b8152508360400151614db8565b61501d60405180604001604052806014815260200173039ba30b93a2230ba3290101010101010101010160651b8152508360600151614db8565b61505760405180604001604052806014815260200173032b7322230ba32901010101010101010101010160651b8152508360800151614db8565b61506660018360a00151615362565b6150a060405180604001604052806014815260200173034b73a32b932b9ba2832b929b2b1b7b7321010160651b8152508360c00151614db8565b6150da6040518060400160405280601481526020017303137b93937bbb2b91010101010101010101010160651b8152508360e00151614dfd565b61510c6040518060400160405280600b81526020016a31b7b63630ba32b930b61760a91b815250836101000151615440565b61511c60018361012001516154aa565b6151516040518060400160405280601481526020017339bab838363ca837b9b4ba34b7b724b73232bc1d60611b8152506155ca565b6002826101600151106151b9576151b46040518060400160405280600d81526020016c66726f6d20257320746f20257360981b81525083610140015160018561016001518661014001516151a591906169d9565b6151af91906169c6565b61560d565b6151e9565b6151e96040518060400160405280600981526020016803837b9b4ba34b7b7160bd1b815250836101400151614db8565b611d006040518060400160405280601181526020017003f3f3f3f3f3f3f1032b732103637b0b71607d1b815250826040518060400160405280600a8152602001691010103f3f3f3f3f3f3f60b11b815250614d71565b600061096582610dd6565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08311156152815750600090506003615305565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa1580156152d5573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381166152fe57600060019250925050615305565b9150600090505b94509492505050565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b6153398383615654565b615346600084848461469b565b6109f257604051626b5e2960e61b815260040160405180910390fd5b81156153dc576153a260405180604001604052806014815260200173030bab1ba34b7b717323ab930ba34b7b7101010160651b8152508260000151614db8565b611d0060405180604001604052806014815260200173030bab1ba34b7b717383934b1b2a330b1ba37b9160651b8152508260200151614db8565b61540e6040518060400160405280600c81526020016b0323ab930ba34b7b7101010160a51b8152508260000151614db8565b611d006040518060400160405280600c81526020016b0383934b1b2a330b1ba37b9160a51b8152508260200151614db8565b6154756040518060400160405280600e81526020016d2573696d706c656d20202020257360901b815250838360000151615710565b611d006040518060400160405280600e81526020016d257369642020202020202020257360901b815250838360200151615757565b6000826154c657604051806020016040528060008152506154e8565b604051806040016040528060088152602001673830bcb6b2b73a1760c11b8152505b905061552260405180604001604052806011815260200170257370616964202020202020202020257360781b815250828460000151615757565b61555a6040518060400160405280601181526020017025736d696e546f5265706179202020257360781b815250828460200151615757565b6155926040518060400160405280601181526020017025736c697175696461746564202020257360781b81525082846040015161579e565b6109f2604051806040016040528060118152602001702573626f7272436c61696d65642020257360781b81525082846060015161579e565b612aa0816040516024016155de9190615a12565b60408051601f198184030181529190526020810180516001600160e01b031663104c13eb60e21b17905261530e565b6109f283838360405160240161562593929190616f8b565b60408051601f198184030181529190526020810180516001600160e01b031663969cdd0360e01b17905261530e565b600061565e612da5565b90506001600160a01b038316615687576040516325bd6bd360e01b815260040160405180910390fd5b615690826140ca565b156156ae5760405163c5a8d37160e01b815260040160405180910390fd5b6001600160a01b038316600090815260048201602052604081208054600192906156d99084906169d9565b90915550506000828152600382016020526040812080546001600160a01b0319166001600160a01b0386161790556109f290848483565b6109f283838360405160240161572893929190616fb0565b60408051601f198184030181529190526020810180516001600160e01b03166395ed019560e01b17905261530e565b6109f283838360405160240161576f93929190616fee565b60408051601f198184030181529190526020810180516001600160e01b031663f362ca5960e01b17905261530e565b6109f28383836040516024016157b693929190617024565b60408051601f198184030181529190526020810180516001600160e01b031663b0e0f9b560e01b17905261530e565b60405180610180016040528060006001600160a01b031681526020016000815260200160008152602001600081526020016000815260200161583a604051806040016040528060008152602001600081525090565b81526000602082018190526040820152606001615867604080518082019091526000808252602082015290565b815260408051608081018252600080825260208281018290529282018190526060820152910190815260200160008152602001600081525090565b6040518061012001604052806000815260200160006001600160a01b031681526020016000815260200160008152602001600081526020016000815260200160006001600160a01b0316815260200161590b604080518082019091526000808252602082015290565b8152602001600081525090565b6040518060600160405280606081526020016000815260200161593961593e565b905290565b6040518060c0016040528060006001600160a01b0316815260200160008152602001600081526020016000815260200160008152602001615939604080518082019091526000808252602082015290565b6001600160e01b031981168114612aa057600080fd5b6000602082840312156159b757600080fd5b81356120268161598f565b60005b838110156159dd5781810151838201526020016159c5565b50506000910152565b600081518084526159fe8160208601602086016159c2565b601f01601f19169290920160200192915050565b60208152600061202660208301846159e6565b600060208284031215615a3757600080fd5b5035919050565b6001600160a01b0381168114612aa057600080fd5b80356125a381615a3e565b60008060408385031215615a7157600080fd5b8235615a7c81615a3e565b946020939093013593505050565b634e487b7160e01b600052604160045260246000fd5b604080519081016001600160401b0381118282101715615ac257615ac2615a8a565b60405290565b604051606081016001600160401b0381118282101715615ac257615ac2615a8a565b604051608081016001600160401b0381118282101715615ac257615ac2615a8a565b60405161018081016001600160401b0381118282101715615ac257615ac2615a8a565b60405161012081016001600160401b0381118282101715615ac257615ac2615a8a565b604051601f8201601f191681016001600160401b0381118282101715615b7a57615b7a615a8a565b604052919050565b60006001600160401b03821115615b9b57615b9b615a8a565b5060051b60200190565b60006020808385031215615bb857600080fd5b82356001600160401b03811115615bce57600080fd5b8301601f81018513615bdf57600080fd5b8035615bf2615bed82615b82565b615b52565b81815260059190911b82018301908381019087831115615c1157600080fd5b928401925b82841015610ef857833582529284019290840190615c16565b600080600080600060808688031215615c4757600080fd5b8535615c5281615a3e565b94506020860135615c6281615a3e565b93506040860135925060608601356001600160401b0380821115615c8557600080fd5b818801915088601f830112615c9957600080fd5b813581811115615ca857600080fd5b896020828501011115615cba57600080fd5b9699959850939650602001949392505050565b6020808252825182820181905260009190848201906040850190845b81811015615d0e5783516001600160a01b031683529284019291840191600101615ce9565b50909695505050505050565b600060408284031215615d2c57600080fd5b615d34615aa0565b90508135615d4181615a3e565b808252506020820135602082015292915050565b600060e08284031215615d6757600080fd5b60405160c081018181106001600160401b0382111715615d8957615d89615a8a565b6040529050808235615d9a81615a3e565b8082525060208301356020820152604083013560408201526060830135606082015260808301356080820152615dd38460a08501615d1a565b60a08201525092915050565b600060e08284031215615df157600080fd5b6120268383615d55565b600082601f830112615e0c57600080fd5b81356001600160401b03811115615e2557615e25615a8a565b615e38601f8201601f1916602001615b52565b818152846020838601011115615e4d57600080fd5b816020850160208301376000918101602001919091529392505050565b60006101208284031215615e7d57600080fd5b615e85615ac8565b905081356001600160401b03811115615e9d57600080fd5b615ea984828501615dfb565b82525060208201356020820152615ec38360408401615d55565b604082015292915050565b600060208284031215615ee057600080fd5b81356001600160401b03811115615ef657600080fd5b61355984828501615e6a565b600080600060608486031215615f1757600080fd5b8335615f2281615a3e565b92506020840135615f3281615a3e565b929592945050506040919091013590565b600060408284031215615f5557600080fd5b615f5d615aa0565b9050813581526020820135602082015292915050565b8015158114612aa057600080fd5b600060808284031215615f9357600080fd5b615f9b615aea565b905081358152602082013560208201526040820135615fb981615f73565b60408201526060820135615fcc81615f73565b606082015292915050565b600060608284031215615fe957600080fd5b615ff1615ac8565b905081358152602082013560208201526040820135604082015292915050565b60008082840361028081121561602657600080fd5b6102208082121561603657600080fd5b61603e615b0c565b915061604985615a53565b8252602085013560208301526040850135604083015260608501356060830152608085013560808301526160808660a08701615f43565b60a083015260e085013560c083015261010061609d818701615a53565b60e08401526101206160b188828901615d1a565b8285015261016091506160c688838901615f81565b81850152506101e086013561014084015261020086013581840152508193506160f186828701615fd7565b925050509250929050565b60008083601f84011261610e57600080fd5b5081356001600160401b0381111561612557600080fd5b6020830191508360208260051b8501011115614c2057600080fd5b6000806020838503121561615357600080fd5b82356001600160401b0381111561616957600080fd5b616175858286016160fc565b90969095509350505050565b81516001600160a01b0316815261022081016020830151602083015260408301516040830152606083015160608301526080830151608083015260a08301516161d760a084018280518252602090810151910152565b5060c083015160e083015260e08301516101006161fe818501836001600160a01b03169052565b84015190506101206162258482018380516001600160a01b03168252602090810151910152565b840151905061016061625e8482018380518252602081015160208301526040810151151560408301526060810151151560608301525050565b6101408501516101e085015280850151610200850152505092915050565b60006020808301818452808551808352604092508286019150828160051b8701018488016000805b8481101561632057898403603f19018652825180516001600160a01b03168552880151888501889052805188860181905290890190839060608701905b8083101561630b5783516001600160e01b0319168252928b019260019290920191908b01906162e1565b50978a019795505050918701916001016162a4565b50919998505050505050505050565b60006020828403121561634157600080fd5b813561202681615a3e565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b828110156163a157603f1988860301845261638f8583516159e6565b94509285019290850190600101616373565b5092979650505050505050565b600060208083850312156163c157600080fd5b82356001600160401b038111156163d757600080fd5b8301601f810185136163e857600080fd5b80356163f6615bed82615b82565b81815260069190911b8201830190838101908783111561641557600080fd5b928401925b82841015610ef857604084890312156164335760008081fd5b61643b615aa0565b843581528585013561644c81615a3e565b818701528252604093909301929084019061641a565b6000806040838503121561647557600080fd5b823561648081615a3e565b9150602083013561649081615f73565b809150509250929050565b60006164a9615bed84615b82565b8381529050602080820190600585901b8401868111156164c857600080fd5b845b818110156165035780356001600160401b038111156164e95760008081fd5b6164f589828901615e6a565b8552509282019282016164ca565b505050509392505050565b600082601f83011261651f57600080fd5b6120268383356020850161649b565b60008060006080848603121561654357600080fd5b83356001600160401b0381111561655957600080fd5b6165658682870161650e565b935050602084013561657681615a3e565b91506165858560408601615d1a565b90509250925092565b600080600080608085870312156165a457600080fd5b84356165af81615a3e565b935060208501356165bf81615a3e565b92506040850135915060608501356001600160401b038111156165e157600080fd5b6165ed87828801615dfb565b91505092959194509250565b60008082840361016081121561660e57600080fd5b83356001600160401b0381111561662457600080fd5b61663086828701615e6a565b93505061014080601f198301121561664757600080fd5b61664f615b2f565b91506020850135825261666460408601615a53565b6020830152606085013560408301526080850135606083015260a0850135608083015260c085013560a083015261669d60e08601615a53565b60c08301526101006166b187828801615d1a565b60e0840152940135938101939093525092909150565b80518252602081015160018060a01b03808216602085015260408301516040850152606083015160608501526080830151608085015260a083015160a08501528060c08401511660c0850152505060e081015161673a60e084018280516001600160a01b03168252602090810151910152565b5061010001516101209190910152565b610140810161096582846166c7565b6000806040838503121561676c57600080fd5b823561677781615a3e565b9150602083013561649081615a3e565b600080610120838503121561679b57600080fd5b6167a58484615d55565b91506167b48460e08501615d1a565b90509250929050565b600181811c908216806167d157607f821691505b6020821081036167f157634e487b7160e01b600052602260045260246000fd5b50919050565b60018060a01b0381511682526020810151602083015260408101516040830152606081015160608301526080810151608083015260a08101516109f260a084018280516001600160a01b03168252602090810151910152565b83815260208101839052610120810161355960408301846167f7565b60006101208251818552616882828601826159e6565b91505060208301516020850152604083015161443660408601826167f7565b60006101608083526168b58184018661686c565b91505061202660208301846166c7565b80516125a381615a3e565b6000604082840312156168e257600080fd5b6168ea615aa0565b905081516168f781615a3e565b808252506020820151602082015292915050565b6000610140828403121561691e57600080fd5b616926615b2f565b82518152616936602084016168c5565b602082015260408301516040820152606083015160608201526080830151608082015260a083015160a082015261696f60c084016168c5565b60c08201526169818460e085016168d0565b60e0820152610120929092015161010083015250919050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b81810381811115610965576109656169b0565b80820180821115610965576109656169b0565b6001600160a01b039384168152919092166020820152604081019190915260600190565b600060018201616a2257616a226169b0565b5060010190565b600060208284031215616a3b57600080fd5b81356001600160401b03811115616a5157600080fd5b6135598482850161650e565b600060208284031215616a6f57600080fd5b815161202681615a3e565b6001600160a01b0384168152606060208201819052600090616a9e908301856159e6565b8281036040840152616ab081856159e6565b9695505050505050565b60008235605e19833603018112616ad057600080fd5b9190910192915050565b6000808335601e19843603018112616af157600080fd5b8301803591506001600160401b03821115616b0b57600080fd5b6020019150600581901b3603821315614c2057600080fd5b600061202636848461649b565b600060408284031215616b4257600080fd5b6120268383615d1a565b6000608082016080835280865180835260a08501915060a08160051b8601019250602080890160005b83811015616ba357609f19888703018552616b9186835161686c565b95509382019390820190600101616b75565b50506001600160a01b038881169187019190915286511660408601525050602084015160608401529050613559565b600060408284031215616be457600080fd5b616bec615aa0565b9050815181526020820151602082015292915050565b600060808284031215616c1457600080fd5b616c1c615aea565b905081518152602082015160208201526040820151616c3a81615f73565b60408201526060820151615fcc81615f73565b60006102208284031215616c6057600080fd5b616c68615b0c565b616c71836168c5565b815260208301516020820152604083015160408201526060830151606082015260808301516080820152616ca88460a08501616bd2565b60a082015260e083015160c0820152610100616cc58185016168c5565b60e0830152610120616cd9868287016168d0565b828401526101609150616cee86838701616c02565b908301526101e0840151610140830152610200909301519281019290925250919050565b6001600160e01b0319831681528151600090616d358160048501602087016159c2565b919091016004019392505050565b60008251616ad08184602087016159c2565b600060208284031215616d6757600080fd5b815161202681615f73565b600082616d8f57634e487b7160e01b600052601260045260246000fd5b500490565b8082028115828204841417610965576109656169b0565b6101208101616dba82866167f7565b60e08201939093526101000152919050565b6101008101616ddb82856167f7565b8260e08301529392505050565b6101208101616df782856167f7565b82516001600160a01b031660e08301526020830151610100830152612026565b82815260608101612026602083018480516001600160a01b03168252602090810151910152565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090616ab0908301846159e6565b600060208284031215616e8357600080fd5b81516120268161598f565b600080600060608486031215616ea357600080fd5b835160ff81168114616eb457600080fd5b602085015160409095015190969495509392505050565b634e487b7160e01b600052602160045260246000fd5b606081526000616ef460608301866159e6565b8281036020840152616f0681866159e6565b90508281036040840152616ab081856159e6565b604081526000616f2d60408301856159e6565b90508260208301529392505050565b604081526000616f4f60408301856159e6565b905060018060a01b03831660208301529392505050565b604081526000616f7960408301856159e6565b828103602084015261106781856159e6565b606081526000616f9e60608301866159e6565b60208301949094525060400152919050565b606081526000616fc360608301866159e6565b8281036020840152616fd581866159e6565b91505060018060a01b0383166040830152949350505050565b60608152600061700160608301866159e6565b828103602084015261701381866159e6565b915050826040830152949350505050565b60608152600061703760608301866159e6565b828103602084015261704981866159e6565b915050821515604083015294935050505056fea264697066735822122021f62c7086af3eea82a74233f6c2ce155f5957eeedfa40cc3586f83c918a0bd064736f6c63430008120033",
    "sourceMap": "719:3690:92:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1405:76:62;;;;;;:::i;:::-;-1:-1:-1;1473:4:62;;1405:76;;;;565:14:112;;558:22;540:41;;528:2;513:18;1405:76:62;;;;;;;;2365:153;;;:::i;:::-;;;;;;;:::i;1605:450:92:-;;;:::i;:::-;;3070:121:62;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;1806:32:112;;;1788:51;;1776:2;1761:18;3070:121:62;1642:203:112;2687:377:62;;;;;;:::i;:::-;;:::i;948:2304:59:-;;;;;;:::i;:::-;;:::i;759:124:58:-;;;;;;:::i;:::-;;:::i;:::-;;;5410:25:112;;;5398:2;5383:18;759:124:58;5239:202:112;1097:599:47;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;;6549:33:112;;;6531:52;;6519:2;6504:18;1097:599:47;6387:202:112;1123:114:61;;;:::i;3115:224:45:-;;;;;;:::i;:::-;;:::i;2161:134:34:-;;;:::i;:::-;;;;;;;:::i;1151:133:60:-;;;;;;:::i;:::-;;:::i;2876:126:101:-;;;;;;:::i;:::-;;:::i;3503:248:62:-;;;;;;:::i;:::-;;:::i;1444:1217:46:-;;;;;;:::i;:::-;;:::i;2112:353:101:-;;;;;;:::i;:::-;;:::i;2592:1347:50:-;;;;;;:::i;:::-;;:::i;2930:133:34:-;;;:::i;2631:141::-;;;:::i;3757:140:62:-;;;;;;:::i;:::-;;:::i;1964:115:58:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;2246:113:62:-;;;;;;:::i;:::-;;:::i;2447:178:34:-;;;:::i;:::-;;;;;;;:::i;2471:399:101:-;;;;;;:::i;:::-;;:::i;1230:1113:50:-;;;;;;:::i;:::-;;:::i;1964:276:62:-;;;;;;:::i;:::-;;:::i;3989:418:92:-;;;:::i;3567:263:45:-;;;;;;:::i;:::-;;:::i;2301:140:34:-;;;:::i;:::-;;;;;;;:::i;2527:352:58:-;;;;;;:::i;:::-;;:::i;:::-;;;;19680:25:112;;;19736:2;19721:18;;19714:34;;;;19653:18;2527:352:58;19506:248:112;2778:146:34;;;:::i;2084:296:45:-;;;;;;:::i;:::-;;:::i;2524:157:62:-;;;:::i;1137:143:46:-;;;;;;:::i;:::-;;:::i;2542:650:92:-;;;:::i;3197:142:62:-;;;;;;:::i;:::-;;:::i;1180:200:45:-;;;;;;:::i;:::-;;:::i;1435:411:58:-;;;:::i;:::-;;;;21891:25:112;;;21947:2;21932:18;;21925:34;;;;21975:18;;;21968:34;22033:2;22018:18;;22011:34;21878:3;21863:19;1435:411:58;21635:416:112;1902:204:101;;;;;;:::i;:::-;;:::i;1904:275:47:-;;;;;;:::i;:::-;;:::i;1866:141:34:-;;;:::i;2061:475:92:-;;;:::i;3903:280:62:-;;;;;;:::i;:::-;;:::i;1819:584:28:-;;;:::i;1699:197:101:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;852:747:92:-;;;:::i;2013:142:34:-;;;:::i;1581:342:45:-;;;;;;:::i;:::-;;:::i;3345:152:62:-;;;;;;:::i;:::-;;:::i;3714:269:92:-;;;:::i;717:277:61:-;;;;;;:::i;:::-;;:::i;:::-;;;;27722:13:112;;27704:32;;27792:4;27780:17;;;27774:24;27752:20;;;27745:54;27843:17;;;27837:24;27815:20;;;27808:54;27692:2;27677:18;717:277:61;27502:366:112;1572:26:28;;;;;;;;;3231:477:92;;;:::i;3008:147:101:-;;;;;;:::i;:::-;;:::i;2365:153:62:-;2410:13;2435:25;2463:23;:21;:23::i;:::-;2435:51;;2504:2;:7;;2497:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2365:153;:::o;1605:450:92:-;1660:34;1697:20;:18;:20::i;:::-;1660:57;;1727:18;1748:10;:8;:10::i;:::-;1727:31;;1768:23;1794:18;1806:5;1794:11;:18::i;:::-;1840:8;1823:14;;;;:25;;;1960:17;;;1888:97;;1768:44;;-1:-1:-1;1859:15:92;;;;-1:-1:-1;;;1911:31:92;1888:97;;1960:5;;1888:97;;;:::i;:::-;;;;-1:-1:-1;;1888:97:92;;;;;;;;;;;;;;-1:-1:-1;;;;;1888:97:92;-1:-1:-1;;;;;;1888:97:92;;;;;;1859:136;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2005:43:92;;-1:-1:-1;;;2005:43:92;;:4;;-1:-1:-1;2005:21:92;;-1:-1:-1;2005:43:92;;2027:7;;2036:11;;2005:43;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1650:405;;;1605:450::o;3070:121:62:-;3137:7;3163:21;3176:7;3163:12;:21::i;:::-;3156:28;3070:121;-1:-1:-1;;3070:121:62:o;2687:377::-;2758:13;2774:16;2782:7;2774;:16::i;:::-;2758:32;;2810:5;-1:-1:-1;;;;;2804:11:62;:2;-1:-1:-1;;;;;2804:11:62;;2800:79;;2838:30;;-1:-1:-1;;;2838:30:62;;;;;;;;;;;2800:79;2892:10;-1:-1:-1;;;;;2892:19:62;;;;;;:59;;;2916:35;2933:5;2940:10;2916:16;:35::i;:::-;2915:36;2892:59;2888:138;;;2974:41;;-1:-1:-1;;;2974:41:62;;;;;;;;;;;2888:138;3036:21;3045:2;3049:7;3036:8;:21::i;:::-;2748:316;2687:377;;:::o;948:2304:59:-;1008:22;1033:17;:15;:17::i;:::-;1008:42;;1060:17;1087:12;1109:17;1136:15;1167:9;1162:2084;1186:7;:14;1182:1;:18;1162:2084;;;1228:5;:10;;:22;1239:7;1247:1;1239:10;;;;;;;;:::i;:::-;;;;;;;1228:22;;;;;;;;;;;1221:29;;1402:1;1382:4;:12;;:17;;;:21;:53;;;-1:-1:-1;1407:28:59;;;;;;;;;1382:53;:80;;;-1:-1:-1;1439:23:59;;;;;;1382:80;1378:155;;;1507:7;1515:1;1507:10;;;;;;;;:::i;:::-;;;;;;;1489:29;;-1:-1:-1;;;1489:29:59;;;;;;5410:25:112;;5398:2;5383:18;;5239:202;1489:29:59;;;;;;;;1378:155;1553:4;:9;;;1546:16;;1759:1123;2748:70;2757:60;2802:4;:14;;;2784:15;:32;;;;:::i;:::-;2757:22;;;;;:26;:60::i;:::-;2748:4;;:8;:70::i;:::-;2836:32;;;;1759:11;:1123::i;:::-;1747:1135;-1:-1:-1;2906:16:59;1747:1135;2906:4;:16;:::i;:::-;2936:12;;;:27;;;2977:28;;;:35;;-1:-1:-1;;2977:35:59;;;;;3026:14;;2896:26;;-1:-1:-1;3026:70:59;;-1:-1:-1;;;;;3026:14:59;3061:10;3081:4;2896:26;3026:34;:70::i;:::-;3110:15;;;:22;3165:13;;;;3180:18;;;;3110:89;;-1:-1:-1;;;3110:89:59;;-1:-1:-1;;;;;3110:22:59;;;;:39;;:89;;3158:4;;3165:13;;;;;3110:89;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3224:7;3232:1;3224:10;;;;;;;;:::i;:::-;;;;;;;3218:17;;;;;;;;;;1202:3;;;;:::i;:::-;;;;1162:2084;;;;998:2254;;;;;948:2304;:::o;759:124:58:-;820:8;847:17;:15;:17::i;:::-;:29;;;;:25;;:29;;-1:-1:-1;847:29:58;;;;;759:124::o;1097:599:47:-;1252:6;;1295:30;;;;1306:4;1295:30;:::i;:::-;1270:55;;1559:82;1573:4;1579:8;1589:51;;;;;;;;1614:10;-1:-1:-1;;;;;1589:51:47;;;;;1631:7;1589:51;;;1559:13;:82::i;:::-;-1:-1:-1;;;;1659:30:47;1097:599;-1:-1:-1;;;;;;;1097:599:47:o;1123:114:61:-;1169:7;1195:23;:21;:23::i;:::-;:35;;;1188:42;;1123:114;:::o;3115:224:45:-;858:13;898:4;-1:-1:-1;;;;;874:36:45;;:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;858:54;-1:-1:-1;926:10:45;-1:-1:-1;;;;;926:19:45;;;922:80;;968:23;;-1:-1:-1;;;968:23:45;;-1:-1:-1;;;;;1806:32:112;;968:23:45;;;1788:51:112;1761:18;;968:23:45;1642:203:112;922:80:45;3254:15:::1;3211:17;:15;:17::i;:::-;-1:-1:-1::0;;;;;3211:40:45;::::1;;::::0;;;:30:::1;::::0;;;::::1;:40;::::0;;;;;:58;;;;3284:48;;3316:15;;3211:40;3284:48:::1;::::0;::::1;770:249:::0;3115:224;;:::o;2161:134:34:-;2208:33;2272:16;2253:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2253:35:34;;;;;;;;;;;;;;;;;;;;;;;2161:134;:::o;1151:133:60:-;1213:7;1239:38;1256:20;1270:5;1256:13;:20::i;:::-;1239:16;:38::i;2876:126:101:-;2951:7;2977:18;2991:3;2977:13;:18::i;3503:248:62:-;3598:39;3617:10;3629:7;3598:18;:39::i;:::-;3593:113;;3660:35;;-1:-1:-1;;;3660:35:62;;;;;;;;;;;3593:113;3716:28;3726:4;3732:2;3736:7;3716:9;:28::i;1444:1217:46:-;1496:7;1515:17;1535;:15;:17::i;:::-;:30;;;;:22;;;;;:30;;;;;1597:12;;;;1535:30;;-1:-1:-1;1597:12:46;1649:29;1597:12;1649:15;:29;:::i;:::-;1619:59;;1689:23;1705:6;1689:15;:23::i;:::-;1936:12;;;:21;1890:20;;1913:44;;;:133;;2023:12;;;:21;1991:55;;1999:46;;:19;;:23;:46::i;:::-;-1:-1:-1;;;720:4:54;1991:7:46;:55::i;:::-;1913:133;;;789:1:54;1913:133:46;1890:156;;2320:22;2345:38;2359:23;2367:4;:14;;;-1:-1:-1;;;2359:7:46;;:23;;;;:::i;:::-;2345:9;;;;;:13;:38::i;:::-;2320:63;;2588:66;2637:16;2588:44;2607:4;:12;;:24;;;2588:14;:18;;:44;;;;:::i;:::-;:48;;:66::i;:::-;2581:73;1444:1217;-1:-1:-1;;;;;;;1444:1217:46:o;2112:353:101:-;2207:7;2226:22;2251:17;:15;:17::i;:::-;2278:13;;;;:10;;;;:13;;;;;;;;:20;;;;-1:-1:-1;;;;;;2278:20:101;;;-1:-1:-1;;;;;2278:20:101;;;;;;;;;;-1:-1:-1;2278:20:101;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2278:20:101;;;;;;-1:-1:-1;;2278:20:101;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:10;;-1:-1:-1;2336:23:101;:21;:23::i;:::-;2369:15;;;;:12;;;:15;;;;;;;;:27;;;;;;;;;;;;;;;;;;;;2427:10;;;:13;;;;2442:15;;;2308:51;;-1:-1:-1;2413:45:101;;2427:13;2413;:45::i;:::-;2406:52;2112:353;-1:-1:-1;;;;;2112:353:101:o;2592:1347:50:-;2663:12;2687:22;2712:17;:15;:17::i;:::-;2687:42;-1:-1:-1;2739:17:50;;;;2817:1116;2837:18;;;2817:1116;;;2885:7;;2893:1;2885:10;;;;;;;:::i;:::-;;;;;;;;;;2916:18;;;;:10;;;:18;;;;;;;2952:13;;;;2916:18;;-1:-1:-1;2885:10:50;;-1:-1:-1;;;;;;;2952:13:50;2969:10;2952:27;2948:101;;3006:28;;-1:-1:-1;;;3006:28:50;;;;;5410:25:112;;;5383:18;;3006:28:50;5239:202:112;2948:101:50;3066:28;;;;;;;;;3062:104;;;3121:30;;-1:-1:-1;;;3121:30:50;;;;;5410:25:112;;;5383:18;;3121:30:50;5239:202:112;3062:104:50;3183:23;;;;;;3179:346;;;3226:28;;;:35;;-1:-1:-1;;3226:35:50;;;;;:28;3412:14;;;3382:46;;3404:23;;-1:-1:-1;;;720:4:54;3404:7:50;:23::i;:::-;3382:12;;;:17;;:21;:46::i;:::-;3371:57;;3179:346;;;3474:36;;-1:-1:-1;;;3474:36:50;;;;;5410:25:112;;;5383:18;;3474:36:50;5239:202:112;3179:346:50;3542:12;;3538:385;;3764:14;;:52;;-1:-1:-1;;;;;3764:14:50;3795:10;3807:8;3764:30;:52::i;:::-;3834:16;3842:8;3834:16;;:::i;:::-;3873:35;;3834:16;;-1:-1:-1;3901:6:50;;3891:8;;3879:10;;3873:35;;;;;3538:385;2857:3;;;;:::i;:::-;;;;2817:1116;;;;2677:1262;;;;2592:1347;;;;:::o;2930:133:34:-;2976:33;3040:16;3021:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3021:35:34;;;;;;;;;;;;;;;;;;;;;;2930:133;:::o;2631:141::-;2679:35;2747:18;2726:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2726:39:34;;;;;;;;;;;;;;;;;;;;;;2631:141;:::o;3757:140:62:-;3851:39;3868:4;3874:2;3878:7;3851:39;;;;;;;;;;;;:16;:39::i;1964:115:58:-;2016:11;;:::i;:::-;2046:17;:15;:17::i;:::-;:26;;;;:22;;;;:26;;;;;;;;;2039:33;;;;;;;;;-1:-1:-1;;;;;2039:33:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2039:33:58;1964:115::o;2246:113:62:-;2309:7;2335:17;2344:7;2335:8;:17::i;2447:178:34:-;2503:48;2592:26;2563:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2563:55:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2563:55:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2447:178;:::o;2471:399:101:-;2600:7;2619:22;2644:17;:15;:17::i;:::-;2671:13;;;;:10;;;;:13;;;;;;;;:20;;;;-1:-1:-1;;;;;;2671:20:101;;;-1:-1:-1;;;;;2671:20:101;;;;;;;;;;-1:-1:-1;2671:20:101;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2671:20:101;;;;;;-1:-1:-1;;2671:20:101;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:10;;-1:-1:-1;2729:23:101;:21;:23::i;:::-;2762:15;;;;:12;;;:15;;;;;;;;:27;;;;;;;;;;;;;;;;;;;;2832:10;;;:13;;;;2847:15;;;2701:51;;-1:-1:-1;2806:57:101;;2832:13;2806:25;:57::i;1230:1113:50:-;1295:12;1319:22;1344:17;:15;:17::i;:::-;1319:42;;1371:25;1399:23;:21;:23::i;:::-;1371:51;;1432:17;1459:27;1496:14;1520:16;1552:9;1547:790;1567:22;;;1547:790;;;1615:46;1634:10;1646:11;;1658:1;1646:14;;;;;;;:::i;:::-;;;;;;;1615:18;:46::i;:::-;1610:128;;1688:35;;-1:-1:-1;;;1688:35:50;;;;;;;;;;;1610:128;1751:21;1757:11;;1769:1;1757:14;;;;;;;:::i;:::-;;;;;;;1751:5;:21::i;:::-;1798:2;:12;;:28;1811:11;;1823:1;1811:14;;;;;;;:::i;:::-;;;;;;;1798:28;;;;;;;;;;;1786:40;;1849:9;:16;;;1840:25;;1886:5;:10;;:18;1897:6;1886:18;;;;;;;;;;;1879:25;;1923:4;:12;;:23;;;;;;;;;;;;1919:324;;;1977:42;2003:4;2009:9;1977:25;:42::i;:::-;1966:53;;1919:324;;;2062:12;;;:17;;:22;2058:112;;2115:36;;-1:-1:-1;;;2115:36:50;;;;;5410:25:112;;;5383:18;;2115:36:50;5239:202:112;2058:112:50;2198:30;2212:4;2218:9;2198:13;:30::i;:::-;2187:41;;1919:324;2261:35;;2289:6;;2279:8;;2267:10;;2261:35;;;;;2310:16;2318:8;2310:16;;:::i;:::-;;-1:-1:-1;1591:3:50;;;;:::i;:::-;;;;1547:790;;;;1309:1034;;;;;;1230:1113;;;;:::o;1964:276:62:-;2027:7;2046:25;2074:23;:21;:23::i;:::-;2046:51;-1:-1:-1;;;;;;2112:19:62;;2108:92;;2154:35;;-1:-1:-1;;;2154:35:62;;;;;;;;;;;2108:92;-1:-1:-1;;;;;2216:17:62;;;;;;;:10;;;;:17;;-1:-1:-1;2216:17:62;;;;;1964:276::o;3989:418:92:-;4045:34;4082:20;:18;:20::i;:::-;4045:57;;4112:18;4133:10;:8;:10::i;:::-;4169:1;4153:13;;;:17;4112:31;-1:-1:-1;4180:19:92;4202:18;4112:31;4202:11;:18::i;:::-;4180:40;;4264:1;4231:17;:15;:17::i;:::-;:30;;;;:34;;;;4291:59;;309:37:29;4291:59:92;;;33822:36:112;33874:18;;;33867:45;;;;4275:15:92;;;;-1:-1:-1;;;4314:29:92;33795:18:112;;4291:59:92;33636:282:112;3567:263:45;858:13;898:4;-1:-1:-1;;;;;874:36:45;;:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;858:54;-1:-1:-1;926:10:45;-1:-1:-1;;;;;926:19:45;;;922:80;;968:23;;-1:-1:-1;;;968:23:45;;-1:-1:-1;;;;;1806:32:112;;968:23:45;;;1788:51:112;1761:18;;968:23:45;1642:203:112;922:80:45;3737:13:::1;3679:17;:15;:17::i;:::-;-1:-1:-1::0;;;;;3679:55:45;::::1;;::::0;;;:45:::1;::::0;;;::::1;:55;::::0;;;;;:71;;;;3765:58;;3809:13;;3679:55;3765:58:::1;::::0;::::1;770:249:::0;3567:263;;:::o;2301:140:34:-;2349:34;2416:18;2395:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2527:352:58;2625:20;2647:35;2694:22;2719:17;:15;:17::i;:::-;-1:-1:-1;;;;;2761:28:58;;;;;;;:18;;;:28;;;;;;;;;2829:33;;;;:43;;;;;;2761:28;;2527:352;-1:-1:-1;;;2527:352:58:o;2778:146:34:-;2826:40;2899:18;2878:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2878:39:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2878:39:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2084:296:45;2151:20;858:13;898:4;-1:-1:-1;;;;;874:36:45;;:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;858:54;-1:-1:-1;926:10:45;-1:-1:-1;;;;;926:19:45;;;922:80;;968:23;;-1:-1:-1;;;968:23:45;;-1:-1:-1;;;;;1806:32:112;;968:23:45;;;1788:51:112;1761:18;;968:23:45;1642:203:112;922:80:45;2183:22:::1;2208:17;:15;:17::i;:::-;2251:18;::::0;::::1;:20:::0;;2183:42;;-1:-1:-1;2251:18:45::1;:20;::::0;::::1;:::i;:::-;::::0;;;-1:-1:-1;2281:27:45::1;::::0;;;:13:::1;::::0;::::1;:27;::::0;;;;;:40;;;2337:36;2236:35;;-1:-1:-1;2236:35:45;;2311:10;;2337:36:::1;::::0;::::1;2173:207;770:249:::0;2084:296;;;:::o;2524:157:62:-;2571:13;2596:25;2624:23;:21;:23::i;:::-;2596:51;;2665:2;:9;;2658:16;;;;;:::i;1137:143:46:-;1196:9;1191:83;1215:4;:11;1211:1;:15;1191:83;;;1247:16;1255:4;1260:1;1255:7;;;;;;;;:::i;:::-;;;;;;;1247;:16::i;:::-;1228:3;;;;:::i;:::-;;;;1191:83;;;;1137:143;:::o;2542:650:92:-;2589:34;2626:20;:18;:20::i;:::-;2589:57;;2656:18;2677:10;:8;:10::i;:::-;2656:31;;2697:23;2723:18;2735:5;2723:11;:18::i;:::-;2784:5;;2875:14;;;;2804:86;;2697:44;;-1:-1:-1;2751:11:92;;;;-1:-1:-1;;;;;2784:5:92;;-1:-1:-1;;;2827:28:92;2804:86;;2857:6;;1278:39:104;;2875:14:92;2804:86;;;:::i;:::-;;;;-1:-1:-1;;2804:86:92;;;;;;;;;;;;;;;-1:-1:-1;;;;;2804:86:92;-1:-1:-1;;;;;;2804:86:92;;;;;;;;;;2904:16;2804:86;;2904:16;;2915:4;;2904:16;565:14:112;;558:22;540:41;;528:2;513:18;;400:187;2904:16:92;;;;;;;;;;;;;2751:179;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2969:43:92;;-1:-1:-1;;;2969:43:92;;2940:26;;-1:-1:-1;2969:4:92;;-1:-1:-1;2969:21:92;;:43;;2991:7;;3000:11;;2969:43;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2940:72;;3023:16;3042:37;3061:5;:17;;;3042:7;:14;;;:18;;:37;;;;:::i;:::-;3111:19;;3023:56;;-1:-1:-1;3111:37:92;;3023:56;3111:23;:37::i;:::-;3089:59;;3159:26;3168:3;3089:11;3159:8;:26::i;:::-;2579:613;;;;;2542:650::o;3197:142:62:-;3282:50;3301:10;3313:8;3323;3282:18;:50::i;1180:200:45:-;858:13;898:4;-1:-1:-1;;;;;874:36:45;;:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;858:54;-1:-1:-1;926:10:45;-1:-1:-1;;;;;926:19:45;;;922:80;;968:23;;-1:-1:-1;;;968:23:45;;-1:-1:-1;;;;;1806:32:112;;968:23:45;;;1788:51:112;1761:18;;968:23:45;1642:203:112;922:80:45;1302:18:::1;1265:17;:15;:17::i;:::-;:25;;:55:::0;1335:38:::1;::::0;1354:18;;1335:38:::1;::::0;1265:34:::1;::::0;1335:38:::1;770:249:::0;1180:200;:::o;1435:411:58:-;1507:22;1531:23;1556:17;1575:20;1611:22;1636:17;:15;:17::i;:::-;1684:25;;;;:13;;;1737:22;1781:15;;1684:25;1821:18;;;;1684:25;;1737:22;;-1:-1:-1;1781:15:58;;-1:-1:-1;1821:18:58;-1:-1:-1;1435:411:58;-1:-1:-1;;1435:411:58:o;1902:204:101:-;2039:11;;:::i;:::-;2069:30;2083:4;2089;2095:3;2069:13;:30::i;:::-;2062:37;;1902:204;;;;;;:::o;1904:275:47:-;1971:9;1966:207;1986:15;;;1966:207;;;2022:4;;2027:1;2022:7;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;:18;;;;;;;:::i;:::-;-1:-1:-1;;;;;2022:31:47;;2054:10;2074:4;2081;;2086:1;2081:7;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;2022:74;;-1:-1:-1;;;;;;2022:74:47;;;;;;;;;;;2081:14;;;;2022:74;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2110:52;2124:4;;2129:1;2124:7;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;:12;;;;;;;:::i;:::-;2110:52;;;:::i;:::-;2138:10;2150:4;;2155:1;2150:7;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;2110:52;;;;;;;;;;:::i;:::-;:13;:52::i;:::-;-1:-1:-1;2003:3:47;;;;:::i;:::-;;;;1966:207;;1866:141:34;1915:34;1982:18;1961:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2061:475:92;2113:16;;:::i;:::-;2141:18;2162:10;:8;:10::i;:::-;2141:31;;2182:25;2210:19;2223:5;2210:12;:19::i;:::-;2182:47;;2239:18;2260:8;:6;:8::i;:::-;2312:5;;2403:10;;2239:29;;-1:-1:-1;2279:11:92;;;;-1:-1:-1;;;;;2312:5:92;;-1:-1:-1;;;2355:28:92;2385:6;;1278:39:104;;2403:7:92;;309:37:29;;2403:10:92;;;;:::i;:::-;;;;;;;:17;;;2332:89;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;2332:89:92;;;;;;;;;;;;;;;-1:-1:-1;;;;;2332:89:92;-1:-1:-1;;;;;;2332:89:92;;;;;;;;;;2435:16;2332:89;;2435:16;;2446:4;;2435:16;565:14:112;;558:22;540:41;;528:2;513:18;;400:187;2435:16:92;;;;;;;;;;;;;2279:182;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2479:50:92;;-1:-1:-1;;;2479:50:92;;:4;;-1:-1:-1;2479:26:92;;-1:-1:-1;2479:50:92;;2506:7;;1278:39:104;;2525:3:92;;2479:50;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2472:57;;;;;2061:475;:::o;3903:280:62:-;4021:39;4040:10;4052:7;4021:18;:39::i;:::-;4016:113;;4083:35;;-1:-1:-1;;;4083:35:62;;;;;;;;;;;4016:113;4138:38;4152:4;4158:2;4162:7;4171:4;4138:13;:38::i;1819:584:28:-;1853:4;1873:7;;;;;;;1869:528;;;-1:-1:-1;1903:7:28;;;;;;;;1819:584::o;1869:528::-;1941:17;2997:42;2985:55;3066:16;1980:374;;2196:43;;;1671:64;2196:43;;;39403:51:112;;;-1:-1:-1;;;39470:18:112;;;39463:34;2196:43:28;;;;;;;;;39376:18:112;;;2196:43:28;;;-1:-1:-1;;1671:64:28;;2086:175;;2135:34;;2086:175;;;:::i;:::-;;;;-1:-1:-1;;2086:175:28;;;;;;;;;;2047:232;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2020:259;;;2323:7;2312:27;;;;;;;;;;;;:::i;:::-;2297:42;;2002:352;1980:374;2374:12;1819:584;-1:-1:-1;1819:584:28:o;1699:197:101:-;1822:22;;:::i;:::-;1863:26;1872:3;1877:11;1863:8;:26::i;852:747:92:-;908:34;945:20;:18;:20::i;:::-;908:57;;975:18;996:10;:8;:10::i;:::-;1036:6;;-1:-1:-1;;;;;1036:6:92;1016:26;;975:31;-1:-1:-1;1036:6:92;1078:18;975:31;1078:11;:18::i;:::-;1182:5;;1189:6;;1123:73;;;-1:-1:-1;;;;;1182:5:92;;;1123:73;;;40681:34:112;1189:6:92;;;;40731:18:112;;;;40724:43;;;;1123:73:92;;;;;;;;;;40616:18:112;;;;1123:73:92;;;;;;;-1:-1:-1;;;;;1123:73:92;-1:-1:-1;;;1123:73:92;;;1107:90;-1:-1:-1;;;1107:90:92;;1052:44;;-1:-1:-1;1107:15:92;;;;:90;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1207:43:92;;-1:-1:-1;;;1207:43:92;;:4;;-1:-1:-1;1207:21:92;;-1:-1:-1;1207:43:92;;1229:7;;1238:11;;1207:43;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1285:6:92;;-1:-1:-1;;;;;1285:6:92;1261:21;;;;:30;;;1426:14;;;1355:86;;1301:11;;;;1285:6;;-1:-1:-1;;;1378:28:92;1355:86;;1408:6;;1278:39:104;;1355:86:92;;;:::i;:::-;;;;-1:-1:-1;;1355:86:92;;;;;;;;;;;;;;;-1:-1:-1;;;;;1355:86:92;-1:-1:-1;;;;;;1355:86:92;;;;;;;;;;1455:16;1355:86;;1455:16;;1466:4;;1455:16;565:14:112;;558:22;540:41;;528:2;513:18;;400:187;1455:16:92;;;;;;;;;;;;;1301:180;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1491:43:92;;-1:-1:-1;;;1491:43:92;;:4;;-1:-1:-1;1491:21:92;;-1:-1:-1;1491:43:92;;1513:7;;1522:11;;1491:43;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1544:48;1553:23;:21;:23::i;:::-;:35;;;1590:1;1544:8;:48::i;2013:142:34:-;2062:35;2130:18;2109:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2109:39:34;;;;;;;;;;;;;;;;;;;;;;2013:142;:::o;1581:342:45:-;858:13;898:4;-1:-1:-1;;;;;874:36:45;;:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;858:54;-1:-1:-1;926:10:45;-1:-1:-1;;;;;926:19:45;;;922:80;;968:23;;-1:-1:-1;;;968:23:45;;-1:-1:-1;;;;;1806:32:112;;968:23:45;;;1788:51:112;1761:18;;968:23:45;1642:203:112;922:80:45;1737:44:::1;1763:17;1778:1;1763:10;-1:-1:-1::0;;;1771:1:45::1;1763:7;:10::i;:::-;:14:::0;::::1;:17::i;:::-;1737:21:::0;2445:30:86;;;2372:110;1737:44:45::1;1729:57;;;::::0;-1:-1:-1;;;1729:57:45;;40980:2:112;1729:57:45::1;::::0;::::1;40962:21:112::0;-1:-1:-1;40999:18:112;;;40992:29;41038:18;;1729:57:45::1;40778:284:112::0;1729:57:45::1;1836:21;1796:17;:15;:17::i;:::-;:37:::0;;:61;1872:44:::1;::::0;1894:21;;1872:44:::1;::::0;;;::::1;770:249:::0;1581:342;:::o;3345:152:62:-;3433:4;3456:34;3474:5;3481:8;3456:17;:34::i;3714:269:92:-;3766:16;3785:9;:7;:9::i;:::-;3766:28;-1:-1:-1;3821:11:92;-1:-1:-1;;;3829:2:92;3821:7;:11::i;:::-;3804:14;;;:28;3859:15;3842:14;;;:32;;;3899:25;;3917:7;3899:25;:::i;:::-;3884:12;;;:40;3934:42;3943:26;:24;:26::i;:::-;3971:4;3934:8;:42::i;:::-;3756:227;3714:269::o;717:277:61:-;775:16;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;775:16:61;803:25;831:23;:21;:23::i;:::-;803:51;;879:2;:14;;;869:7;:24;865:84;;;916:22;;-1:-1:-1;;;916:22:61;;;;;;;;;;;865:84;966:21;;;;:12;;:21;;;;;;;;;959:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;959:28:61;717:277::o;3231:477:92:-;3315:18;;;3330:2;3315:18;;;;;;;;;3285:27;;3315:18;;;;;;:::i;:::-;;;;;;;;;;;;;;;;3285:48;;3349:9;3344:96;3368:2;3364:1;:6;3344:96;;;3406:23;3418:10;:8;:10::i;:::-;3406:11;:23::i;:::-;3391:9;3401:1;3391:12;;;;;;;;:::i;:::-;;;;;;:38;;;;3372:3;;;;;:::i;:::-;;;;3344:96;;;-1:-1:-1;3483:5:92;;3574:12;;3450:11;;;;-1:-1:-1;;;;;3483:5:92;;;;-1:-1:-1;;;3526:28:92;3556:6;;1278:39:104;;3574:12:92;;309:37:29;;3574:12:92;;;;:::i;:::-;;;;;;;:19;;;3503:91;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;3503:91:92;;;;;;;;;;;;;;;-1:-1:-1;;;;;3503:91:92;-1:-1:-1;;;;;;3503:91:92;;;;;;;;;;3608:16;3503:91;;3608:16;;3619:4;;3608:16;565:14:112;;558:22;540:41;;528:2;513:18;;400:187;3608:16:92;;;;;;;;;;;;;3450:184;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3644:4:92;;-1:-1:-1;3644:26:92;;-1:-1:-1;3671:9:92;;-1:-1:-1;1278:39:104;3692:8:92;:6;:8::i;:::-;3644:57;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;3008:147:101:-;3113:35;3129:5;3136:11;3113:15;:35::i;1454:110:86:-;1508:3;1539:17;1555:1;1550;1539:17;:::i;919:110::-;973:3;1004:17;1020:1;1015;1004:17;:::i;1221:215:54:-;510:48;;1221:215::o;2938:547:104:-;2991:28;;:::i;:::-;3050:428;;;;;;;;3102:1;3050:428;;;;3133:10;:8;:10::i;:::-;:22;-1:-1:-1;;;;;3050:428:104;;;3133:22;3050:428;;;;;;3219:10;:8;:10::i;:::-;:19;;;3050:428;;;;3277:10;:8;:10::i;:::-;:22;;;3050:428;;;;3338:10;:8;:10::i;:::-;:22;;;;;3050:428;;1278:39;3050:428;;;;;;3415:10;:8;:10::i;:::-;:21;;;3050:428;;;;3462:1;3050:428;;;3031:447;;2938:547;:::o;6808:349::-;6851:12;;:::i;:::-;6894:256;;;;;;;;6931:5;;-1:-1:-1;;;;;6931:5:104;6894:256;;6967:8;6894:256;;;;7003:7;6894:256;;;;;;;;;;7044:25;:15;7062:7;7044:25;:::i;:::-;6894:256;;;;7096:1;6894:256;;;;7127:8;:6;:8::i;:::-;6894:256;;6875:275;6808:349;-1:-1:-1;6808:349:104:o;3491:191::-;3550:19;;:::i;:::-;3587:88;;;;;;;;3608:19;3621:5;3608:12;:19::i;:::-;3587:88;;;;3657:2;3637:5;:17;;;:22;;;;:::i;:::-;3587:88;;;;;;;;-1:-1:-1;3581:94:104;3491:191::o;5221:228:63:-;5283:7;5307:16;5315:7;5307;:16::i;:::-;5302:77;;5346:22;;-1:-1:-1;;;5346:22:63;;;;;;;;;;;5302:77;5396:23;:21;:23::i;:::-;:46;;;;:37;;:46;;-1:-1:-1;5396:46:63;;;;-1:-1:-1;;;;;5396:46:63;;5221:228::o;3901:219::-;3967:25;3995:23;:21;:23::i;:::-;4029:25;;;;:16;;;:25;;;;;:30;;-1:-1:-1;;;;;;4029:30:63;-1:-1:-1;;;;;4029:30:63;;;;;:16;-1:-1:-1;4069:44:63;4082:17;4029:25;4082:8;:17::i;1002:217:54:-;438:41;;1002:217::o;1088:112:86:-;1142:7;-1:-1:-1;;;1169:17:86;1184:1;1169;:17;:::i;:::-;1168:25;;;;:::i;2768:104::-;2826:7;2856:1;2852;:5;:13;;2864:1;2852:13;;;-1:-1:-1;2860:1:86;;2768:104;-1:-1:-1;2768:104:86:o;237:230:83:-;349:39;;-1:-1:-1;;;349:39:83;;-1:-1:-1;;;;;349:21:83;;;;;:39;;371:4;;377:2;;381:6;;349:39;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;344:117;;411:39;;-1:-1:-1;;;411:39:83;;-1:-1:-1;;;;;41734:15:112;;;411:39:83;;;41716:34:112;41786:15;;;41766:18;;;41759:43;41838:15;;41818:18;;;41811:43;41651:18;;411:39:83;41462:398:112;5421:1155:49;5550:16;;:::i;:::-;5578:34;5615:46;5642:4;5647:1;5642:7;;;;;;;;:::i;:::-;;;;;;;5651:4;5657:3;5615:26;:46::i;:::-;5578:83;;5769:29;5801:23;:21;:23::i;:::-;:35;;;:39;;5839:1;5801:39;:::i;:::-;5871:11;;5769:71;;-1:-1:-1;5850:18:49;;5963:146;5987:10;5983:1;:14;5963:146;;;6032:30;6041:4;6046:1;6041:7;;;;;;;;:::i;:::-;;;;;;;6050:11;6032:8;:30::i;:::-;6018:44;;6084:4;6089:1;6084:7;;;;;;;;:::i;:::-;;;;;;;:14;;;6076:22;;;;;:::i;:::-;;-1:-1:-1;5999:3:49;;;;:::i;:::-;;;;5963:146;;;;6294:4;6287;:11;6283:71;;;6321:22;;-1:-1:-1;;;6321:22:49;;;;;5410:25:112;;;5383:18;;6321:22:49;5239:202:112;6283:71:49;6370:80;6386:11;6399:4;6405:3;6410:10;6422:4;6428:21;6370:15;:80::i;:::-;6363:87;;6505:4;6460:17;:15;:17::i;:::-;6483:18;;;;;;6460:42;;;;:22;;;;:42;;;;;;;;;:49;;;;-1:-1:-1;;;;;;6460:49:49;;;-1:-1:-1;;;;;6460:49:49;;;;;;;;;;-1:-1:-1;6460:49:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6460:49:49;;;;;;-1:-1:-1;;6460:49:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6532:18;6552:16;;6525:44;;6552:16;;6563:4;;6552:16;;:::i;:::-;;;;-1:-1:-1;;6552:16:49;;;;;;;;;;6525:44;;;:::i;:::-;;;;;;;;5568:1008;;;;5421:1155;;;;;:::o;1703:462:60:-;1769:7;454:220;1902:5;:17;;;1941:5;:17;;;1980:5;:14;;;2016:5;:20;;;2058:5;:13;;;2093:33;2109:5;:16;;;2093:15;:33::i;:::-;1834:310;;;;;;42194:25:112;;;;-1:-1:-1;;;;;42255:32:112;;;42235:18;;;42228:60;;;;42304:18;;;42297:34;;;;42347:18;;;42340:34;;;;42390:19;;;42383:35;42434:19;;;42427:35;42478:19;;;42471:35;42166:19;;1834:310:60;;;;;;;;;;;;;1807:351;;;;;;1788:370;;1703:462;;;:::o;4348:165:14:-;4425:7;4451:55;4473:20;:18;:20::i;:::-;4495:10;8470:57:13;;-1:-1:-1;;;8470:57:13;;;46375:27:112;46418:11;;;46411:27;;;46454:12;;;46447:28;;;8434:7:13;;46491:12:112;;8470:57:13;;;;;;;;;;;;8460:68;;;;;;8453:75;;8341:194;;;;;1077:1776:48;1144:14;1170:22;1195:17;:15;:17::i;:::-;1170:42;;1569:52;1583:22;1595:3;:9;;;1583:11;:22::i;:::-;1607:13;;1569;:52::i;:::-;2144:9;;;;;:21;-1:-1:-1;;;;;2110:56:48;2083:24;2110:56;;;:33;;;:56;;;;;;;;2183:10;;;;1560:61;;-1:-1:-1;2110:56:48;2183:29;-1:-1:-1;2177:140:48;;2266:3;:9;;;2277:3;:10;;;2289:16;2236:70;;-1:-1:-1;;;2236:70:48;;;;;;;;;;:::i;2177:140::-;2481:3;:9;;;:24;;;2463:15;:42;2459:132;;;2544:9;;;;;2555:24;;;;2528:52;;-1:-1:-1;;;2528:52:48;;;;2555:24;2528:52;;;:::i;2459:132::-;2761:5;:18;;;2740:3;:9;;;:17;;;:39;2736:111;;2817:5;:18;;;2802:34;;-1:-1:-1;;;2802:34:48;;;;;;5410:25:112;;5398:2;5383:18;;5239:202;2736:111:48;1160:1693;;1077:1776;;;:::o;4966:249:63:-;5051:4;5067:13;5083:17;5092:7;5083:8;:17::i;:::-;5067:33;;5129:5;-1:-1:-1;;;;;5118:16:63;:7;-1:-1:-1;;;;;5118:16:63;;:53;;;;5138:33;5156:5;5163:7;5138:17;:33::i;:::-;5118:89;;;;5200:7;-1:-1:-1;;;;;5175:32:63;:21;5188:7;5175:12;:21::i;:::-;-1:-1:-1;;;;;5175:32:63;;5118:89;5110:98;4966:249;-1:-1:-1;;;;4966:249:63:o;3328:567::-;3409:25;3437:23;:21;:23::i;:::-;3409:51;;3496:4;-1:-1:-1;;;;;3475:25:63;:17;3484:7;3475:8;:17::i;:::-;-1:-1:-1;;;;;3475:25:63;;3471:97;;3523:34;;-1:-1:-1;;;3523:34:63;;;;;;;;;;;3471:97;-1:-1:-1;;;;;3581:16:63;;3577:86;;3620:32;;-1:-1:-1;;;3620:32:63;;;;;;;;;;;3577:86;3724:29;3741:1;3745:7;3724:8;:29::i;:::-;-1:-1:-1;;;;;3764:16:63;;;;;;:10;;;:16;;;;;:21;;3784:1;;3764:16;:21;;3784:1;;3764:21;:::i;:::-;;;;-1:-1:-1;;;;;;;3795:14:63;;;;;;:10;;;:14;;;;;:19;;3813:1;;3795:14;:19;;3813:1;;3795:19;:::i;:::-;;;;-1:-1:-1;;3824:17:63;;;;:8;;;:17;;;;;:22;;-1:-1:-1;;;;;;3824:22:63;-1:-1:-1;;;;;3824:22:63;;;;;3857:31;2687:377:62;3506:371:46;3571:17;3591;:15;:17::i;:::-;:22;;:30;3614:6;3591:30;;;;;;;;;;;3571:50;;3654:4;:12;;;3636:15;:30;3632:118;;;3718:12;;;;;3689:50;;-1:-1:-1;;;3689:50:46;;;;;19680:25:112;19721:18;;;19714:34;;;19653:18;;3689:50:46;19506:248:112;3632:118:46;3763:12;;;:17;:22;;;:49;;-1:-1:-1;3789:23:46;;;;;;3763:49;3759:112;;;3835:25;;-1:-1:-1;;;3835:25:46;;;;;5410::112;;;5383:18;;3835:25:46;5239:202:112;1804:110:86;1862:3;1905:1;1894:7;-1:-1:-1;;;1894:1:86;:7;:::i;557:118::-;607:3;638:29;665:1;649;638:29;:::i;4159:815:50:-;4248:12;4272:17;4312:4;:9;;;4292:4;:12;;:17;;;:29;;;;:::i;:::-;4348:32;;;;4272:49;;-1:-1:-1;4335:45:50;;4331:579;;4604:18;;;;4592:30;;:9;:30;:::i;:::-;4572:16;;:51;;;;:::i;:::-;4565:58;;4331:579;;;4890:9;;;;4869:16;;4856:30;;:9;:30;:::i;:::-;4855:44;;;;:::i;:::-;4836:16;;:63;;;;:::i;:::-;4829:70;;4331:579;4919:14;;:48;;-1:-1:-1;;;;;4919:14:50;4950:10;4962:4;4919:30;:48::i;:::-;4262:712;4159:815;;;;:::o;473:211:83:-;567:29;;-1:-1:-1;;;567:29:83;;-1:-1:-1;;;;;39421:32:112;;;567:29:83;;;39403:51:112;39470:18;;;39463:34;;;567:17:83;;;;;39376:18:112;;567:29:83;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;562:116;;619:48;;-1:-1:-1;;;619:48:83;;-1:-1:-1;;;;;41734:15:112;;;619:48:83;;;41716:34:112;657:4:83;41766:18:112;;;41759:43;41838:15;;41818:18;;;41811:43;41651:18;;619:48:83;41462:398:112;4671:289:63;4729:7;4748:25;4776:23;:21;:23::i;:::-;4810:13;4826:17;;;:8;;;:17;;;;;;4748:51;;-1:-1:-1;;;;;;4826:17:63;;4853:79;;4899:22;;-1:-1:-1;;;4899:22:63;;;;;;;;;;;5227:373:50;5519:15;;;;5497:12;;;:17;5350:12;;5497:38;;:17;:21;:38::i;:::-;5545:14;;5490:45;;-1:-1:-1;5545:48:50;;-1:-1:-1;;;;;5545:14:50;5576:10;5490:45;5545:30;:48::i;2984:338:63:-;3035:25;3063:23;:21;:23::i;:::-;3035:51;;3097:13;3113:17;3122:7;3113:8;:17::i;:::-;3097:33;;3168:29;3185:1;3189:7;3168:8;:29::i;:::-;-1:-1:-1;;;;;3208:17:63;;;;;;:10;;;:17;;;;;:22;;3229:1;;3208:17;:22;;3229:1;;3208:22;:::i;:::-;;;;-1:-1:-1;;3247:17:63;;;;:8;;;:17;;;;;3240:24;;-1:-1:-1;;;;;;3240:24:63;;;3275:40;;3288:5;;3256:7;3275:40;:::i;2758:635:46:-;2813:17;2833;:15;:17::i;:::-;2856:10;;2833:34;;;;:22;;;;;:34;;;;;2894:10;;2833:34;;-1:-1:-1;2878:27:46;;:15;:27::i;:::-;2915:13;2931:17;2937:3;:10;;;2931:5;:17::i;:::-;3103:23;;;:30;;-1:-1:-1;;3103:30:46;3129:4;3103:30;;;:12;;;3143:25;;;3178:14;;2915:33;;-1:-1:-1;3178:68:46;;-1:-1:-1;;;;;3178:14:46;3213:10;3233:4;2915:33;3178:34;:68::i;:::-;3256:15;;;:22;3311:6;;;;3319:18;;;;3256:82;;-1:-1:-1;;;3256:82:46;;-1:-1:-1;;;;;3256:22:46;;;;:39;;:82;;3304:4;;3256:82;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3358:10:46;;3370:15;;;;;;;43704:32:112;;;43784:17;;43778:24;-1:-1:-1;;;;;43774:50:112;43752:20;;;43745:80;3370:15:46;;;;;;;;;43677:18:112;;;;3370:15:46;;;;3358:10;;-1:-1:-1;3354:32:46;;-1:-1:-1;3354:32:46;;3370:15;3354:32;:::i;:::-;;;;;;;;2803:590;;2758:635;:::o;380:118:86:-;430:3;461:29;488:1;472;461:29;:::i;6445:357:104:-;6609:8;6598:20;;;;;;;;:::i;:::-;;;;;;;;;;;;;6588:31;;;;;;6576:6;6565:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;6555:29;;;;;;:64;6551:245;;6635:40;6654:8;6635:40;;;;;;;;;;;;;-1:-1:-1;;;6635:40:104;;;:18;:40::i;:::-;6689:38;6708:6;6689:38;;;;;;;;;;;;;-1:-1:-1;;;6689:38:104;;;:18;:38::i;:::-;6748:37;;-1:-1:-1;;;6748:37:104;;;;;;;;;;;4126:353:63;4221:25;4249:23;:21;:23::i;:::-;4221:51;;4296:8;-1:-1:-1;;;;;4287:17:63;:5;-1:-1:-1;;;;;4287:17:63;;4283:78;;4327:23;;-1:-1:-1;;;4327:23:63;;;;;;;;;;;4283:78;-1:-1:-1;;;;;4370:26:63;;;;;;;:19;;;:26;;;;;;;;:36;;;;;;;;;:47;;-1:-1:-1;;4370:47:63;;;;;;;4427:45;2687:377:62;3914:194:104;4027:17;;;4042:1;4027:17;;;;;;;;;3974;;4003:21;;4027:17;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;4003:41;;4063:18;4075:5;4063:11;:18::i;:::-;4054:3;4058:1;4054:6;;;;;;;;:::i;:::-;;;;;;;;;;:27;4098:3;3914:194;-1:-1:-1;;3914:194:104:o;4691:113::-;-1:-1:-1;;;;;;;;;;;;;;;;;4768:29:104;;;;;;;;4785:3;;-1:-1:-1;;;;;4785:3:104;4768:29;;4785:3;4768:29;;;;;4691:113::o;1910:280:63:-;2014:28;2024:4;2030:2;2034:7;2014:9;:28::i;:::-;2057:47;2080:4;2086:2;2090:7;2099:4;2057:22;:47::i;:::-;2052:132;;2127:46;;-1:-1:-1;;;2127:46:63;;;;;;;;;;;1424:3701:49;1539:22;;:::i;:::-;1573:14;1590:18;1604:3;1590:13;:18::i;:::-;1573:35;;1618:16;1674:11;:21;;;-1:-1:-1;;;;;1649:46:49;:3;:9;;;:21;;;-1:-1:-1;;;;;1649:46:49;;1645:232;;1821:21;;;;1844:9;;;;;:21;1795:71;;-1:-1:-1;;;1795:71:49;;-1:-1:-1;;;;;40699:15:112;;;1795:71:49;;;40681:34:112;40751:15;;40731:18;;;40724:43;40616:18;;1795:71:49;40439:334:112;1645:232:49;1911:11;:19;;;1890:3;:9;;;:17;;;:40;1886:231;;2067:11;:19;;;2088:3;:9;;;:17;;;2046:60;;-1:-1:-1;;;2046:60:49;;;;;;;;19680:25:112;;;19736:2;19721:18;;19714:34;19668:2;19653:18;;19506:248;1886:231:49;2127:43;2143:3;:9;;;2154:11;:15;;;2127;:43::i;:::-;2314:37;2329:3;:9;;;:21;;;2314:3;:10;;;:14;;:37;;;;:::i;:::-;2383:19;;2299:52;;-1:-1:-1;2383:37:49;;2299:52;2383:23;:37::i;:::-;2361:59;;;-1:-1:-1;;;;2660:247:49;;;2754:10;;;;2816:19;;2782:73;;2808:46;;2816:37;;2840:12;2816:23;:37::i;2808:46::-;2782:9;;;;:21;;;;:25;:73::i;:::-;2873:3;:9;;;2714:182;;-1:-1:-1;;;2714:182:49;;;;;;;;;;:::i;2660:247::-;3050:11;:28;;;3029:3;:9;;;:18;;;:49;3025:129;;;3125:9;;;;;:18;;3094:28;;;:49;3025:129;3191:11;:31;;;3167:3;:9;;;:21;;;:55;3163:141;;;3272:9;;;;:21;;;3238:31;;;:55;3163:141;3341:11;:31;;;3317:3;:9;;;:21;;;:55;3313:141;;;3422:9;;;;:21;;;3388:31;;;:55;3313:141;4522:31;;;;:35;;4556:1;4522:35;:::i;:::-;4488:11;:31;;;:69;4484:245;;;4624:31;;;;4673;;;;4580:138;;-1:-1:-1;;;4580:138:49;;;;;19680:25:112;;;;19721:18;;;19714:34;19653:18;;4580:138:49;19506:248:112;4484:245:49;4814:79;4856:6;4864:11;:16;;;4882:3;:10;;;4814:11;:21;;;-1:-1:-1;;;;;4814:41:49;;;:79;;;;;;:::i;:::-;4990:98;4999:6;5007:80;;;;;;;;5026:3;:10;;;5007:80;;;;5045:12;5007:80;;;;5067:11;:18;;;5007:80;;;4990:8;:98::i;:::-;-1:-1:-1;5106:11:49;;1424:3701;-1:-1:-1;;;;1424:3701:49:o;5209:262:28:-;5271:1;5266;:6;5262:203;;5293:41;;;;;44375:2:112;44357:21;;;44414:2;44394:18;;;44387:30;44453:34;44448:2;44433:18;;44426:62;-1:-1:-1;;;44519:2:112;44504:18;;44497:32;44561:3;44546:19;;44173:398;5293:41:28;;;;;;;;5353:31;;;44788:21:112;;;44845:2;44825:18;;;44818:30;-1:-1:-1;;;44879:2:112;44864:18;;44857:40;44964:4;44949:20;;44942:36;;;5353:31:28;;;;;;;44929:3:112;5353:31:28;;;5403;;;45201:21:112;;;45258:2;45238:18;;;45231:30;-1:-1:-1;;;45292:2:112;45277:18;;45270:40;45377:4;45362:20;;45355:36;;;5403:31:28;;;;;;;45342:3:112;5403:31:28;;;5448:6;:4;:6::i;5455:170:63:-;5538:4;5561:23;:21;:23::i;:::-;-1:-1:-1;;;;;5561:47:63;;;;;;;:40;;;;;:47;;;;;;;;:57;;;;;;;;;;-1:-1:-1;5561:57:63;;;;;5455:170::o;5770:97:104:-;5820:11;;:::i;:::-;5850:10;:8;:10::i;:::-;5843:17;;5770:97;:::o;6318:121::-;6402:30;6411:6;6419:8;6402:30;;;;;;;;;;;;:8;:30::i;3076:301:48:-;3272:16;;;;:32;;3292:11;3272:19;:32::i;:::-;3267:104;;3341:5;3348:11;3327:33;;-1:-1:-1;;;3327:33:48;;;;;;;;;:::i;2646:139:104:-;2706:22;2747:31;2767:5;1105:7;2747:19;:31::i;4485:180:63:-;4542:4;4558:25;4586:23;:21;:23::i;:::-;4656:1;4627:17;;;:8;;:17;;-1:-1:-1;;4627:17:63;;;;-1:-1:-1;;;;;4627:17:63;:31;;;4485:180::o;7022:763:49:-;7171:22;;:::i;:::-;7224:554;;;;;;;;7276:1;7224:554;;;;7307:13;:19;;;:31;;;-1:-1:-1;;;;;7224:554:49;;;;;7365:13;:19;;;:27;;;7224:554;;;;7428:13;:19;;;:28;;;7224:554;;;;7495:13;:19;;;:31;;;7224:554;;;;7565:13;:19;;;:31;;;7224:554;;;;7620:4;-1:-1:-1;;;;;7224:554:49;;;;;7647:3;7224:554;;;;7678:17;:15;:17::i;:::-;7676:29;;7678:27;;7676:29;;;:::i;:::-;;;;;-1:-1:-1;7224:554:49;;7205:573;7022:763;-1:-1:-1;;;;7022:763:49:o;8319:2665::-;8556:11;;:::i;:::-;8579:22;8604:17;:15;:17::i;:::-;8579:42;;8769:15;8805:11;:28;;;8787:15;:46;;;;:::i;:::-;8769:64;;8843:22;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8843:22:49;9589:21;;;;;-1:-1:-1;;;;;9570:41:49;;;;;:18;;;:41;;;;;;;9557:54;;:10;:54;:::i;:::-;9527:27;;;;:84;;;;9641:1336;;;;;;;;9675:21;;;;-1:-1:-1;;;;;9641:1336:49;;;;;;;;;;;;9753:19;;9641:1336;;;;9801:15;9641:1336;;;;;;;;;;;10195:83;;;;;;;10214:13;;;:22;10195:83;;10251:25;;;;10195:83;;;;9641:1336;;;;10524:19;;;;-1:-1:-1;10510:34:49;;;:13;;;;:34;;;;;;;9641:1336;;;;;;;;;;;;;;;;;;;-1:-1:-1;9641:1336:49;;;;;;;;;;;;;;;;;;;8319:2665::o;1421:145:60:-;1489:7;762:47;1554:3;1525:33;;;;;;;;;:::i;3152:308:14:-;3205:7;3236:4;-1:-1:-1;;;;;3245:12:14;3228:29;;:66;;;;;3278:16;3261:13;:33;3228:66;3224:230;;;-1:-1:-1;3317:24:14;;3152:308::o;3224:230::-;-1:-1:-1;3642:73:14;;;3401:10;3642:73;;;;48859:25:112;;;;3413:12:14;48900:18:112;;;48893:34;3427:15:14;48943:18:112;;;48936:34;3686:13:14;48986:18:112;;;48979:34;3709:4:14;49029:19:112;;;;49022:61;;;;3642:73:14;;;;;;;;;;48831:19:112;;;;3642:73:14;;;3632:84;;;;;;5770:97:104:o;3661:227:13:-;3739:7;3759:17;3778:18;3800:27;3811:4;3817:9;3800:10;:27::i;:::-;3758:69;;;;3837:18;3849:5;3837:11;:18::i;:::-;-1:-1:-1;3872:9:13;3661:227;-1:-1:-1;;;3661:227:13:o;2580:715:102:-;2683:64;;;;;;;;;;;;;;;;;;2730:4;2683:64;;;;;;;;;;;;;-1:-1:-1;;;2683:64:102;;;:11;:64::i;:::-;2757:63;;;;;;;;;;;;;;-1:-1:-1;;;2757:63:102;;;2804:6;:14;;;2757:11;:63::i;:::-;2830:60;;;;;;;;;;;;;;-1:-1:-1;;;2830:60:102;;;2866:6;:23;;;2830:11;:60::i;:::-;2900:63;;;;;;;;;;;;;;-1:-1:-1;;;2900:63:102;;;2936:6;:26;;;2900:11;:63::i;:::-;2973;;;;;;;;;;;;;;-1:-1:-1;;;2973:63:102;;;3009:6;:26;;;2973:11;:63::i;:::-;3046:48;;;;;;;;;;;;;;-1:-1:-1;;;3046:48:102;;;3082:6;:11;;;3046;:48::i;:::-;3104:50;;;;;;;;;;;;;;-1:-1:-1;;;3104:50:102;;;3140:6;:10;;;:13;;;3104:11;:50::i;:::-;3164;;;;;;;;;;;;;;-1:-1:-1;;;3164:50:102;;;3200:6;:13;;;3164:11;:50::i;:::-;3224:64;;;;;;;;;;;;;;;;;;3269:4;3224:64;;;;;;;;;;;;;-1:-1:-1;;;3224:64:102;;;:11;:64::i;1035:869:63:-;1185:4;-1:-1:-1;;;;;1205:13:63;;1465:19:10;:23;1201:697:63;;1240:69;;-1:-1:-1;;;1240:69:63;;-1:-1:-1;;;;;1240:36:63;;;;;:69;;1277:10;;1289:4;;1295:7;;1304:4;;1240:69;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1240:69:63;;;;;;;;-1:-1:-1;;1240:69:63;;;;;;;;;;;;:::i;:::-;;;1236:610;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1506:6;:13;1523:1;1506:18;1502:330;;1555:46;;-1:-1:-1;;;1555:46:63;;;;;;;;;;;1502:330;1784:6;1778:13;1769:6;1765:2;1761:15;1754:38;1236:610;-1:-1:-1;;;;;;1389:51:63;-1:-1:-1;;;1389:51:63;;-1:-1:-1;1382:58:63;;1201:697;-1:-1:-1;1883:4:63;1035:869;;;;;;:::o;678:273:64:-;754:15;781:25;809:23;:21;:23::i;:::-;781:51;;855:2;:14;;;853:16;;;;;:::i;:::-;;;;;-1:-1:-1;879:21:64;;;;:12;;;:21;;;;;;;;;:33;;;;;;;;;;;;;;;;;;;;;853:16;-1:-1:-1;922:22:64;932:2;853:16;922:9;:22::i;2409:432:28:-;2997:42;2985:55;3066:16;2452:359;;2652:67;;;1671:64;2652:67;;;47464:51:112;;;-1:-1:-1;;;47531:18:112;;;47524:34;;;;2712:4:28;47574:18:112;;;47567:34;2489:11:28;;1671:64;2586:43;;47437:18:112;;2652:67:28;;;-1:-1:-1;;2652:67:28;;;;;;;;;;2541:196;;;2652:67;2541:196;;:::i;:::-;;;;-1:-1:-1;;2541:196:28;;;;;;;;;;2506:245;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;2452:359:28;2820:7;:14;;-1:-1:-1;;2820:14:28;;;;;2409:432::o;5116:648:104:-;5159:11;;:::i;:::-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;5233:524:104;;;;;;;;-1:-1:-1;5233:524:104;5267:10;:8;:10::i;:::-;:22;-1:-1:-1;;;;;5233:524:104;;;5313:7;5233:524;;;;-1:-1:-1;;;5233:524:104;;;;;;5381:25;5399:7;5381:15;:25;:::i;:::-;5233:524;;;;5433:25;:15;5451:7;5433:25;:::i;:::-;5233:524;;;;5485:12;:10;:12::i;:::-;5233:524;;;;5534:13;5545:1;5534:10;:13::i;:::-;5233:524;;1278:39;5233:524;;;;;;5613:10;:8;:10::i;:::-;:21;;;5233:524;;;;5701:7;5233:524;;;;5673:1;5233:524;;;;5741:1;5233:524;;;5214:543;;;5116:648;:::o;5873:439::-;6038:8;6027:20;;;;;;;;:::i;:::-;;;;;;;;;;;;;6017:31;;;;;;6005:6;5994:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;5984:29;;;;;;:64;5980:326;;6068:21;;:25;6064:97;;6113:33;;;;;;;;;;;;;;-1:-1:-1;;;6113:33:104;;;6138:7;6113:11;:33::i;:::-;6174:29;6182:8;6174:29;;;;;;;;;;;;;-1:-1:-1;;;6174:29:104;;;:7;:29::i;:::-;6217:27;6225:6;6217:27;;;;;;;;;;;;;-1:-1:-1;;;6217:27:104;;;:7;:27::i;:::-;6265:30;;-1:-1:-1;;;6265:30:104;;;;;;;;;;;245:139:85;316:4;348:1;:4;;;340:1;:4;;;:12;:36;;;;-1:-1:-1;;368:8:85;356;;-1:-1:-1;;;;;356:20:85;;;;;;;245:139::o;2364:276:104:-;2445:22;2479:14;2496:21;2511:5;2496:14;:21::i;:::-;2561;;-1:-1:-1;;;2561:21:104;;;;;19680:25:112;;;19721:18;;;19714:34;;;2479:38:104;;-1:-1:-1;2528:7:104;;;;;;2561;;;;19653:18:112;;2561:21:104;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2604:29;;;;;;48448:19:112;;;;48483:12;;;48476:28;;;;2623:9:104;;;;;-1:-1:-1;;;;;;48534:26:112;48520:12;;;48513:48;2604:29:104;;;;;;;;;48577:12:112;;;;2604:29:104;;;;2364:276;-1:-1:-1;;;;;;;2364:276:104:o;2145:730:13:-;2226:7;2235:12;2263:9;:16;2283:2;2263:22;2259:610;;2599:4;2584:20;;2578:27;2648:4;2633:20;;2627:27;2705:4;2690:20;;2684:27;2301:9;2676:36;2746:25;2757:4;2676:36;2578:27;2627;2746:10;:25::i;:::-;2739:32;;;;;;;;;2259:610;-1:-1:-1;2818:1:13;;-1:-1:-1;2822:35:13;2259:610;2145:730;;;;;:::o;570:511::-;647:20;638:5;:29;;;;;;;;:::i;:::-;;634:441;;570:511;:::o;634:441::-;743:29;734:5;:38;;;;;;;;:::i;:::-;;730:345;;788:34;;-1:-1:-1;;;788:34:13;;49428:2:112;788:34:13;;;49410:21:112;49467:2;49447:18;;;49440:30;49506:26;49486:18;;;49479:54;49550:18;;788:34:13;49226:348:112;730:345:13;852:35;843:5;:44;;;;;;;;:::i;:::-;;839:236;;903:41;;-1:-1:-1;;;903:41:13;;49781:2:112;903:41:13;;;49763:21:112;49820:2;49800:18;;;49793:30;49859:33;49839:18;;;49832:61;49910:18;;903:41:13;49579:355:112;839:236:13;974:30;965:5;:39;;;;;;;;:::i;:::-;;961:114;;1020:44;;-1:-1:-1;;;1020:44:13;;50141:2:112;1020:44:13;;;50123:21:112;50180:2;50160:18;;;50153:30;50219:34;50199:18;;;50192:62;-1:-1:-1;;;50270:18:112;;;50263:32;50312:19;;1020:44:13;49939:398:112;11686:179:42;11777:81;11846:2;11850;11854;11793:64;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;11793:64:42;;;;;;;;;;;;;;-1:-1:-1;;;;;11793:64:42;-1:-1:-1;;;11793:64:42;;;11777:15;:81::i;6548:139::-;6612:68;6672:2;6676;6628:51;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;6628:51:42;;;;;;;;;;;;;;-1:-1:-1;;;;;6628:51:42;-1:-1:-1;;;6628:51:42;;;6612:15;:68::i;6994:145::-;7061:71;7124:2;7128;7077:54;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;7077:54:42;;;;;;;;;;;;;;-1:-1:-1;;;;;7077:54:42;-1:-1:-1;;;7077:54:42;;;7061:15;:71::i;2196:100:63:-;2263:26;2273:2;2277:7;2263:26;;;;;;;;;;;;:9;:26::i;4896:137:104:-;-1:-1:-1;;;;;;;;;;;;;;;;;4974:52:104;;;;;;;;;4993:6;4974:52;;;;;5014:10;-1:-1:-1;;;5022:1:104;5014:7;:10::i;6693:150:42:-;6766:70;6828:2;6832;6782:53;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;6782:53:42;;;;;;;;;;;;;;-1:-1:-1;;;;;6782:53:42;-1:-1:-1;;;6782:53:42;;;6766:15;:70::i;392:1144:102:-;471:52;;;;;;;;;;;;;;-1:-1:-1;;;471:52:102;;;506:4;471:52;;;;;;;;;;;;;-1:-1:-1;;;471:52:102;;;:11;:52::i;:::-;533:60;;;;;;;;;;;;;;-1:-1:-1;;;533:60:102;;;577:4;:14;;;533:11;:60::i;:::-;603:46;;;;;;;;;;;;;;-1:-1:-1;;;603:46:102;;;639:4;:9;;;603:11;:46::i;:::-;659:63;;;;;;;;;;;;;;-1:-1:-1;;;659:63:102;;;706:4;:14;;;659:11;:63::i;:::-;732:51;;;;;;;;;;;;;;-1:-1:-1;;;732:51:102;;;768:4;:14;;;732:11;:51::i;:::-;793:49;;;;;;;;;;;;;;-1:-1:-1;;;793:49:102;;;829:4;:12;;;793:11;:49::i;:::-;852:30;863:4;869;:12;;;852:10;:30::i;:::-;892:71;;;;;;;;;;;;;;-1:-1:-1;;;892:71:102;;;939:4;:22;;;892:11;:71::i;:::-;973:50;;;;;;;;;;;;;;-1:-1:-1;;;973:50:102;;;1009:4;:13;;;973:11;:50::i;:::-;1033:38;;;;;;;;;;;;;;-1:-1:-1;;;1033:38:102;;;1055:4;:15;;;1033:6;:38::i;:::-;1081:30;1092:4;1098;:12;;;1081:10;:30::i;:::-;1121:35;;;;;;;;;;;;;;-1:-1:-1;;;1121:35:102;;;:11;:35::i;:::-;1192:1;1170:4;:18;;;:23;1166:302;;1209:167;;;;;;;;;;;;;;-1:-1:-1;;;1209:167:102;;;1271:4;:24;;;1361:1;1340:4;:18;;;1313:4;:24;;;:45;;;;:::i;:::-;:49;;;;:::i;:::-;1209:11;:167::i;:::-;1166:302;;;1407:50;;;;;;;;;;;;;;-1:-1:-1;;;1407:50:102;;;1432:4;:24;;;1407:11;:50::i;:::-;1477:52;;;;;;;;;;;;;;-1:-1:-1;;;1477:52:102;;;1510:4;1477:52;;;;;;;;;;;;;-1:-1:-1;;;1477:52:102;;;:11;:52::i;3198:127:101:-;3274:7;3300:18;3312:5;3300:11;:18::i;5069:1494:13:-;5195:7;;6119:66;6106:79;;6102:161;;;-1:-1:-1;6217:1:13;;-1:-1:-1;6221:30:13;6201:51;;6102:161;6374:24;;;6357:14;6374:24;;;;;;;;;52126:25:112;;;52199:4;52187:17;;52167:18;;;52160:45;;;;52221:18;;;52214:34;;;52264:18;;;52257:34;;;6374:24:13;;52098:19:112;;6374:24:13;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6374:24:13;;-1:-1:-1;;6374:24:13;;;-1:-1:-1;;;;;;;6412:20:13;;6408:101;;6464:1;6468:29;6448:50;;;;;;;6408:101;6527:6;-1:-1:-1;6535:20:13;;-1:-1:-1;5069:1494:13;;;;;;;;:::o;181:376:42:-;275:14;;131:42;448:2;435:16;;251:21;;275:14;435:16;131:42;484:5;473:68;464:77;;401:150;;181:376;:::o;2302:258:63:-;2388:18;2394:2;2398:7;2388:5;:18::i;:::-;2421:53;2452:1;2456:2;2460:7;2469:4;2421:22;:53::i;:::-;2416:138;;2497:46;;-1:-1:-1;;;2497:46:63;;;;;;;;;;;4686:413:102;4773:8;4769:324;;;4797:53;;;;;;;;;;;;;;-1:-1:-1;;;4797:53:102;;;4833:7;:16;;;4797:11;:53::i;:::-;4864:68;;;;;;;;;;;;;;-1:-1:-1;;;4864:68:102;;;4911:7;:19;;;4864:11;:68::i;4769:324::-;4963:45;;;;;;;;;;;;;;-1:-1:-1;;;4963:45:102;;;4991:7;:16;;;4963:11;:45::i;:::-;5022:60;;;;;;;;;;;;;;-1:-1:-1;;;5022:60:102;;;5061:7;:19;;;5022:11;:60::i;3531:202::-;3613:58;;;;;;;;;;;;;;-1:-1:-1;;;3613:58:102;;;3643:6;3659:3;:10;;;3613:11;:58::i;:::-;3681:45;;;;;;;;;;;;;;-1:-1:-1;;;3681:45:102;;;3711:6;3719:3;:6;;;3681:11;:45::i;3996:427::-;4079:20;4102:8;:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;4102:26:102;;;;4079:49;;4138:54;;;;;;;;;;;;;;-1:-1:-1;;;4138:54:102;;;4171:6;4179:7;:12;;;4138:11;:54::i;:::-;4202:69;;;;;;;;;;;;;;-1:-1:-1;;;4202:69:102;;;4235:6;4243:7;:27;;;4202:11;:69::i;:::-;4281:60;;;;;;;;;;;;;;-1:-1:-1;;;4281:60:102;;;4314:6;4322:7;:18;;;4281:11;:60::i;:::-;4351:65;;;;;;;;;;;;;;-1:-1:-1;;;4351:65:102;;;4384:6;4392:7;:23;;;4351:11;:65::i;5630:121:42:-;5685:59;5740:2;5701:42;;;;;;;;:::i;:::-;;;;-1:-1:-1;;5701:42:42;;;;;;;;;;;;;;-1:-1:-1;;;;;5701:42:42;-1:-1:-1;;;5701:42:42;;;5685:15;:59::i;10843:157::-;10916:77;10981:2;10985;10989;10932:60;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;10932:60:42;;;;;;;;;;;;;;-1:-1:-1;;;;;10932:60:42;-1:-1:-1;;;10932:60:42;;;10916:15;:77::i;2566:412:63:-;2629:25;2657:23;:21;:23::i;:::-;2629:51;-1:-1:-1;;;;;;2695:16:63;;2691:82;;2734:28;;-1:-1:-1;;;2734:28:63;;;;;;;;;;;2691:82;2786:16;2794:7;2786;:16::i;:::-;2782:80;;;2825:26;;-1:-1:-1;;;2825:26:63;;;;;;;;;;;2782:80;-1:-1:-1;;;;;2872:14:63;;;;;;:10;;;:14;;;;;:19;;2890:1;;2872:14;:19;;2890:1;;2872:19;:::i;:::-;;;;-1:-1:-1;;2901:17:63;;;;:8;;;:17;;;;;:22;;-1:-1:-1;;;;;;2901:22:63;-1:-1:-1;;;;;2901:22:63;;;;;2934:37;;2901:22;:17;2934:37;:::i;12045:174:42:-;12130:82;12200:2;12204;12208;12146:65;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;12146:65:42;;;;;;;;;;;;;;-1:-1:-1;;;;;12146:65:42;-1:-1:-1;;;12146:65:42;;;12130:15;:82::i;11512:168::-;11594:79;11661:2;11665;11669;11610:62;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;11610:62:42;;;;;;;;;;;;;;-1:-1:-1;;;;;11610:62:42;-1:-1:-1;;;11610:62:42;;;11594:15;:79::i;11871:168::-;11953:79;12020:2;12024;12028;11969:62;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;11969:62:42;;;;;;;;;;;;;;-1:-1:-1;;;;;11969:62:42;-1:-1:-1;;;11969:62:42;;;11953:15;:79::i;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14:131:112;-1:-1:-1;;;;;;88:32:112;;78:43;;68:71;;135:1;132;125:12;150:245;208:6;261:2;249:9;240:7;236:23;232:32;229:52;;;277:1;274;267:12;229:52;316:9;303:23;335:30;359:5;335:30;:::i;592:250::-;677:1;687:113;701:6;698:1;695:13;687:113;;;777:11;;;771:18;758:11;;;751:39;723:2;716:10;687:113;;;-1:-1:-1;;834:1:112;816:16;;809:27;592:250::o;847:271::-;889:3;927:5;921:12;954:6;949:3;942:19;970:76;1039:6;1032:4;1027:3;1023:14;1016:4;1009:5;1005:16;970:76;:::i;:::-;1100:2;1079:15;-1:-1:-1;;1075:29:112;1066:39;;;;1107:4;1062:50;;847:271;-1:-1:-1;;847:271:112:o;1123:220::-;1272:2;1261:9;1254:21;1235:4;1292:45;1333:2;1322:9;1318:18;1310:6;1292:45;:::i;1348:180::-;1407:6;1460:2;1448:9;1439:7;1435:23;1431:32;1428:52;;;1476:1;1473;1466:12;1428:52;-1:-1:-1;1499:23:112;;1348:180;-1:-1:-1;1348:180:112:o;1850:131::-;-1:-1:-1;;;;;1925:31:112;;1915:42;;1905:70;;1971:1;1968;1961:12;1986:134;2054:20;;2083:31;2054:20;2083:31;:::i;2125:315::-;2193:6;2201;2254:2;2242:9;2233:7;2229:23;2225:32;2222:52;;;2270:1;2267;2260:12;2222:52;2309:9;2296:23;2328:31;2353:5;2328:31;:::i;:::-;2378:5;2430:2;2415:18;;;;2402:32;;-1:-1:-1;;;2125:315:112:o;2445:127::-;2506:10;2501:3;2497:20;2494:1;2487:31;2537:4;2534:1;2527:15;2561:4;2558:1;2551:15;2577:257;2649:4;2643:11;;;2681:17;;-1:-1:-1;;;;;2713:34:112;;2749:22;;;2710:62;2707:88;;;2775:18;;:::i;:::-;2811:4;2804:24;2577:257;:::o;2839:253::-;2911:2;2905:9;2953:4;2941:17;;-1:-1:-1;;;;;2973:34:112;;3009:22;;;2970:62;2967:88;;;3035:18;;:::i;3097:253::-;3169:2;3163:9;3211:4;3199:17;;-1:-1:-1;;;;;3231:34:112;;3267:22;;;3228:62;3225:88;;;3293:18;;:::i;3355:255::-;3427:2;3421:9;3469:6;3457:19;;-1:-1:-1;;;;;3491:34:112;;3527:22;;;3488:62;3485:88;;;3553:18;;:::i;3615:255::-;3687:2;3681:9;3729:6;3717:19;;-1:-1:-1;;;;;3751:34:112;;3787:22;;;3748:62;3745:88;;;3813:18;;:::i;3875:275::-;3946:2;3940:9;4011:2;3992:13;;-1:-1:-1;;3988:27:112;3976:40;;-1:-1:-1;;;;;4031:34:112;;4067:22;;;4028:62;4025:88;;;4093:18;;:::i;:::-;4129:2;4122:22;3875:275;;-1:-1:-1;3875:275:112:o;4155:183::-;4215:4;-1:-1:-1;;;;;4240:6:112;4237:30;4234:56;;;4270:18;;:::i;:::-;-1:-1:-1;4315:1:112;4311:14;4327:4;4307:25;;4155:183::o;4343:891::-;4427:6;4458:2;4501;4489:9;4480:7;4476:23;4472:32;4469:52;;;4517:1;4514;4507:12;4469:52;4557:9;4544:23;-1:-1:-1;;;;;4582:6:112;4579:30;4576:50;;;4622:1;4619;4612:12;4576:50;4645:22;;4698:4;4690:13;;4686:27;-1:-1:-1;4676:55:112;;4727:1;4724;4717:12;4676:55;4763:2;4750:16;4786:60;4802:43;4842:2;4802:43;:::i;:::-;4786:60;:::i;:::-;4880:15;;;4962:1;4958:10;;;;4950:19;;4946:28;;;4911:12;;;;4986:19;;;4983:39;;;5018:1;5015;5008:12;4983:39;5042:11;;;;5062:142;5078:6;5073:3;5070:15;5062:142;;;5144:17;;5132:30;;5095:12;;;;5182;;;;5062:142;;5446:936;5543:6;5551;5559;5567;5575;5628:3;5616:9;5607:7;5603:23;5599:33;5596:53;;;5645:1;5642;5635:12;5596:53;5684:9;5671:23;5703:31;5728:5;5703:31;:::i;:::-;5753:5;-1:-1:-1;5810:2:112;5795:18;;5782:32;5823:33;5782:32;5823:33;:::i;:::-;5875:7;-1:-1:-1;5929:2:112;5914:18;;5901:32;;-1:-1:-1;5984:2:112;5969:18;;5956:32;-1:-1:-1;;;;;6037:14:112;;;6034:34;;;6064:1;6061;6054:12;6034:34;6102:6;6091:9;6087:22;6077:32;;6147:7;6140:4;6136:2;6132:13;6128:27;6118:55;;6169:1;6166;6159:12;6118:55;6209:2;6196:16;6235:2;6227:6;6224:14;6221:34;;;6251:1;6248;6241:12;6221:34;6296:7;6291:2;6282:6;6278:2;6274:15;6270:24;6267:37;6264:57;;;6317:1;6314;6307:12;6264:57;5446:936;;;;-1:-1:-1;5446:936:112;;-1:-1:-1;6348:2:112;6340:11;;6370:6;5446:936;-1:-1:-1;;;5446:936:112:o;7110:658::-;7281:2;7333:21;;;7403:13;;7306:18;;;7425:22;;;7252:4;;7281:2;7504:15;;;;7478:2;7463:18;;;7252:4;7547:195;7561:6;7558:1;7555:13;7547:195;;;7626:13;;-1:-1:-1;;;;;7622:39:112;7610:52;;7717:15;;;;7682:12;;;;7658:1;7576:9;7547:195;;;-1:-1:-1;7759:3:112;;7110:658;-1:-1:-1;;;;;;7110:658:112:o;7773:355::-;7827:5;7875:4;7863:9;7858:3;7854:19;7850:30;7847:50;;;7893:1;7890;7883:12;7847:50;7915:22;;:::i;:::-;7906:31;;7974:9;7961:23;7993:33;8018:7;7993:33;:::i;:::-;8049:7;8042:5;8035:22;;8117:2;8106:9;8102:18;8089:32;8084:2;8077:5;8073:14;8066:56;7773:355;;;;:::o;8133:829::-;8185:5;8233:4;8221:9;8216:3;8212:19;8208:30;8205:50;;;8251:1;8248;8241:12;8205:50;8284:2;8278:9;8326:4;8318:6;8314:17;8397:6;8385:10;8382:22;-1:-1:-1;;;;;8349:10:112;8346:34;8343:62;8340:88;;;8408:18;;:::i;:::-;8444:2;8437:22;8477:6;-1:-1:-1;8477:6:112;8507:23;;8539:33;8507:23;8539:33;:::i;:::-;8596:7;8588:6;8581:23;;8665:2;8654:9;8650:18;8637:32;8632:2;8624:6;8620:15;8613:57;8731:2;8720:9;8716:18;8703:32;8698:2;8690:6;8686:15;8679:57;8797:2;8786:9;8782:18;8769:32;8764:2;8756:6;8752:15;8745:57;8864:3;8853:9;8849:19;8836:33;8830:3;8822:6;8818:16;8811:59;8904:51;8951:3;8945;8934:9;8930:19;8904:51;:::i;:::-;8898:3;8890:6;8886:16;8879:77;;8133:829;;;;:::o;8967:225::-;9050:6;9103:3;9091:9;9082:7;9078:23;9074:33;9071:53;;;9120:1;9117;9110:12;9071:53;9143:43;9178:7;9167:9;9143:43;:::i;9379:530::-;9421:5;9474:3;9467:4;9459:6;9455:17;9451:27;9441:55;;9492:1;9489;9482:12;9441:55;9528:6;9515:20;-1:-1:-1;;;;;9550:2:112;9547:26;9544:52;;;9576:18;;:::i;:::-;9620:55;9663:2;9644:13;;-1:-1:-1;;9640:27:112;9669:4;9636:38;9620:55;:::i;:::-;9700:2;9691:7;9684:19;9746:3;9739:4;9734:2;9726:6;9722:15;9718:26;9715:35;9712:55;;;9763:1;9760;9753:12;9712:55;9828:2;9821:4;9813:6;9809:17;9802:4;9793:7;9789:18;9776:55;9876:1;9851:16;;;9869:4;9847:27;9840:38;;;;9855:7;9379:530;-1:-1:-1;;;9379:530:112:o;9914:493::-;9969:5;10017:6;10005:9;10000:3;9996:19;9992:32;9989:52;;;10037:1;10034;10027:12;9989:52;10059:22;;:::i;:::-;10050:31;;10117:9;10104:23;-1:-1:-1;;;;;10142:6:112;10139:30;10136:50;;;10182:1;10179;10172:12;10136:50;10209:45;10250:3;10241:6;10230:9;10226:22;10209:45;:::i;:::-;10202:5;10195:60;;10315:2;10304:9;10300:18;10287:32;10282:2;10275:5;10271:14;10264:56;10352:48;10396:3;10391:2;10380:9;10376:18;10352:48;:::i;:::-;10347:2;10340:5;10336:14;10329:72;9914:493;;;;:::o;10412:348::-;10498:6;10551:2;10539:9;10530:7;10526:23;10522:32;10519:52;;;10567:1;10564;10557:12;10519:52;10607:9;10594:23;-1:-1:-1;;;;;10632:6:112;10629:30;10626:50;;;10672:1;10669;10662:12;10626:50;10695:59;10746:7;10737:6;10726:9;10722:22;10695:59;:::i;10765:456::-;10842:6;10850;10858;10911:2;10899:9;10890:7;10886:23;10882:32;10879:52;;;10927:1;10924;10917:12;10879:52;10966:9;10953:23;10985:31;11010:5;10985:31;:::i;:::-;11035:5;-1:-1:-1;11092:2:112;11077:18;;11064:32;11105:33;11064:32;11105:33;:::i;:::-;10765:456;;11157:7;;-1:-1:-1;;;11211:2:112;11196:18;;;;11183:32;;10765:456::o;11226:282::-;11280:5;11328:4;11316:9;11311:3;11307:19;11303:30;11300:50;;;11346:1;11343;11336:12;11300:50;11368:22;;:::i;:::-;11359:31;;11426:9;11413:23;11406:5;11399:38;11497:2;11486:9;11482:18;11469:32;11464:2;11457:5;11453:14;11446:56;11226:282;;;;:::o;11513:118::-;11599:5;11592:13;11585:21;11578:5;11575:32;11565:60;;11621:1;11618;11611:12;11636:552;11690:5;11738:4;11726:9;11721:3;11717:19;11713:30;11710:50;;;11756:1;11753;11746:12;11710:50;11778:22;;:::i;:::-;11769:31;;11836:9;11823:23;11816:5;11809:38;11907:2;11896:9;11892:18;11879:32;11874:2;11867:5;11863:14;11856:56;11964:2;11953:9;11949:18;11936:32;11977:30;11999:7;11977:30;:::i;:::-;12034:2;12023:14;;12016:31;12099:2;12084:18;;12071:32;12112:30;12071:32;12112:30;:::i;:::-;12169:2;12158:14;;12151:31;12162:5;11636:552;-1:-1:-1;;11636:552:112:o;12193:349::-;12249:5;12297:4;12285:9;12280:3;12276:19;12272:30;12269:50;;;12315:1;12312;12305:12;12269:50;12337:22;;:::i;:::-;12328:31;;12395:9;12382:23;12375:5;12368:38;12466:2;12455:9;12451:18;12438:32;12433:2;12426:5;12422:14;12415:56;12531:2;12520:9;12516:18;12503:32;12498:2;12491:5;12487:14;12480:56;12193:349;;;;:::o;12547:1356::-;12666:6;12674;12718:9;12709:7;12705:23;12748:3;12744:2;12740:12;12737:32;;;12765:1;12762;12755:12;12737:32;12788:6;12814:2;12810;12806:11;12803:31;;;12830:1;12827;12820:12;12803:31;12856:22;;:::i;:::-;12843:35;;12901:29;12920:9;12901:29;:::i;:::-;12894:5;12887:44;12991:2;12980:9;12976:18;12963:32;12958:2;12951:5;12947:14;12940:56;13056:2;13045:9;13041:18;13028:32;13023:2;13016:5;13012:14;13005:56;13121:2;13110:9;13106:18;13093:32;13088:2;13081:5;13077:14;13070:56;13187:3;13176:9;13172:19;13159:33;13153:3;13146:5;13142:15;13135:58;13226:55;13273:7;13267:3;13256:9;13252:19;13226:55;:::i;:::-;13220:3;13213:5;13209:15;13202:80;13344:3;13333:9;13329:19;13316:33;13309:4;13302:5;13298:16;13291:59;13369:3;13405:38;13439:2;13428:9;13424:18;13405:38;:::i;:::-;13399:3;13392:5;13388:15;13381:63;13463:3;13498:54;13544:7;13539:2;13528:9;13524:18;13498:54;:::i;:::-;13493:2;13486:5;13482:14;13475:78;13572:3;13562:13;;13607:54;13653:7;13648:2;13637:9;13633:18;13607:54;:::i;:::-;13602:2;13595:5;13591:14;13584:78;;13726:3;13715:9;13711:19;13698:33;13689:6;13682:5;13678:18;13671:61;13792:3;13781:9;13777:19;13764:33;13759:2;13752:5;13748:14;13741:57;;13817:5;13807:15;;13841:56;13889:7;13884:2;13873:9;13869:18;13841:56;:::i;:::-;13831:66;;;;12547:1356;;;;;:::o;13908:367::-;13971:8;13981:6;14035:3;14028:4;14020:6;14016:17;14012:27;14002:55;;14053:1;14050;14043:12;14002:55;-1:-1:-1;14076:20:112;;-1:-1:-1;;;;;14108:30:112;;14105:50;;;14151:1;14148;14141:12;14105:50;14188:4;14180:6;14176:17;14164:29;;14248:3;14241:4;14231:6;14228:1;14224:14;14216:6;14212:27;14208:38;14205:47;14202:67;;;14265:1;14262;14255:12;14280:437;14366:6;14374;14427:2;14415:9;14406:7;14402:23;14398:32;14395:52;;;14443:1;14440;14433:12;14395:52;14483:9;14470:23;-1:-1:-1;;;;;14508:6:112;14505:30;14502:50;;;14548:1;14545;14538:12;14502:50;14587:70;14649:7;14640:6;14629:9;14625:22;14587:70;:::i;:::-;14676:8;;14561:96;;-1:-1:-1;14280:437:112;-1:-1:-1;;;;14280:437:112:o;15351:1250::-;15563:13;;-1:-1:-1;;;;;1599:31:112;1587:44;;15531:3;15516:19;;15644:4;15636:6;15632:17;15626:24;15619:4;15608:9;15604:20;15597:54;15707:4;15699:6;15695:17;15689:24;15682:4;15671:9;15667:20;15660:54;15770:4;15762:6;15758:17;15752:24;15745:4;15734:9;15730:20;15723:54;15833:4;15825:6;15821:17;15815:24;15808:4;15797:9;15793:20;15786:54;15887:4;15879:6;15875:17;15869:24;15902:61;15957:4;15946:9;15942:20;15928:12;14795;;14783:25;;14857:4;14846:16;;;14840:23;14824:14;;14817:47;14722:148;15902:61;;16019:4;16011:6;16007:17;16001:24;15994:4;15983:9;15979:20;15972:54;16075:4;16067:6;16063:17;16057:24;16100:6;16115:54;16165:2;16154:9;16150:18;16134:14;-1:-1:-1;;;;;1599:31:112;1587:44;;1533:104;16115:54;16206:15;;16200:22;;-1:-1:-1;16241:6:112;16256:61;16298:18;;;16200:22;14952:12;;-1:-1:-1;;;;;14948:38:112;14936:51;;15036:4;15025:16;;;15019:23;15003:14;;14996:47;14875:174;16256:61;16354:15;;16348:22;;-1:-1:-1;16389:6:112;16404:61;16446:18;;;16348:22;15133:5;15127:12;15122:3;15115:25;15189:4;15182:5;15178:16;15172:23;15165:4;15160:3;15156:14;15149:47;15259:4;15252:5;15248:16;15242:23;15235:31;15228:39;15221:4;15216:3;15212:14;15205:63;15331:4;15324:5;15320:16;15314:23;15307:31;15300:39;15293:4;15288:3;15284:14;15277:63;;;15054:292;16404:61;16523:6;16515;16511:19;16505:26;16496:6;16485:9;16481:22;16474:58;16590:2;16582:6;16578:15;16572:22;16563:6;16552:9;16548:22;16541:54;;;15351:1250;;;;:::o;16606:1569::-;16810:4;16839:2;16879;16868:9;16864:18;16909:2;16898:9;16891:21;16932:6;16967;16961:13;16998:6;16990;16983:22;17024:2;17014:12;;17057:2;17046:9;17042:18;17035:25;;17119:2;17109:6;17106:1;17102:14;17091:9;17087:30;17083:39;17157:2;17149:6;17145:15;17178:1;17199;17209:937;17225:6;17220:3;17217:15;17209:937;;;17294:22;;;-1:-1:-1;;17290:36:112;17278:49;;17350:13;;17437:9;;-1:-1:-1;;;;;17433:35:112;17418:51;;17508:11;;17502:18;17540:15;;;17533:27;;;17621:19;;17390:15;;;17653:24;;;17743:21;;;;17788:1;;17711:2;17699:15;;;17802:236;17818:8;17813:3;17810:17;17802:236;;;17899:15;;-1:-1:-1;;;;;;17895:42:112;17881:57;;18007:17;;;;17846:1;17837:11;;;;;17964:14;;;;17802:236;;;-1:-1:-1;18124:12:112;;;;18061:5;-1:-1:-1;;;18089:15:112;;;;17251:1;17242:11;17209:937;;;-1:-1:-1;18163:6:112;;16606:1569;-1:-1:-1;;;;;;;;;16606:1569:112:o;18180:247::-;18239:6;18292:2;18280:9;18271:7;18267:23;18263:32;18260:52;;;18308:1;18305;18298:12;18260:52;18347:9;18334:23;18366:31;18391:5;18366:31;:::i;18432:803::-;18594:4;18623:2;18663;18652:9;18648:18;18693:2;18682:9;18675:21;18716:6;18751;18745:13;18782:6;18774;18767:22;18820:2;18809:9;18805:18;18798:25;;18882:2;18872:6;18869:1;18865:14;18854:9;18850:30;18846:39;18832:53;;18920:2;18912:6;18908:15;18941:1;18951:255;18965:6;18962:1;18959:13;18951:255;;;19058:2;19054:7;19042:9;19034:6;19030:22;19026:36;19021:3;19014:49;19086:40;19119:6;19110;19104:13;19086:40;:::i;:::-;19076:50;-1:-1:-1;19184:12:112;;;;19149:15;;;;18987:1;18980:9;18951:255;;;-1:-1:-1;19223:6:112;;18432:803;-1:-1:-1;;;;;;;18432:803:112:o;19969:1274::-;20078:6;20109:2;20152;20140:9;20131:7;20127:23;20123:32;20120:52;;;20168:1;20165;20158:12;20120:52;20208:9;20195:23;-1:-1:-1;;;;;20233:6:112;20230:30;20227:50;;;20273:1;20270;20263:12;20227:50;20296:22;;20349:4;20341:13;;20337:27;-1:-1:-1;20327:55:112;;20378:1;20375;20368:12;20327:55;20414:2;20401:16;20437:60;20453:43;20493:2;20453:43;:::i;20437:60::-;20531:15;;;20613:1;20609:10;;;;20601:19;;20597:28;;;20562:12;;;;20637:19;;;20634:39;;;20669:1;20666;20659:12;20634:39;20693:11;;;;20713:500;20729:6;20724:3;20721:15;20713:500;;;20811:4;20805:3;20796:7;20792:17;20788:28;20785:118;;;20857:1;20886:2;20882;20875:14;20785:118;20929:22;;:::i;:::-;20991:3;20978:17;20971:5;20964:32;21046:2;21041:3;21037:12;21024:26;21063:33;21088:7;21063:33;:::i;:::-;21116:14;;;21109:31;21153:18;;20755:4;20746:14;;;;;21191:12;;;;20713:500;;21248:382;21313:6;21321;21374:2;21362:9;21353:7;21349:23;21345:32;21342:52;;;21390:1;21387;21380:12;21342:52;21429:9;21416:23;21448:31;21473:5;21448:31;:::i;:::-;21498:5;-1:-1:-1;21555:2:112;21540:18;;21527:32;21568:30;21527:32;21568:30;:::i;:::-;21617:7;21607:17;;;21248:382;;;;;:::o;22056:792::-;22143:5;22172:64;22188:47;22228:6;22188:47;:::i;22172:64::-;22270:21;;;22163:73;-1:-1:-1;22310:4:112;22330:14;;;;22383:1;22379:14;;;22367:27;;22406:15;;;22403:35;;;22434:1;22431;22424:12;22403:35;22458:6;22473:369;22489:6;22484:3;22481:15;22473:369;;;22575:3;22562:17;-1:-1:-1;;;;;22598:11:112;22595:35;22592:125;;;22671:1;22700:2;22696;22689:14;22592:125;22742:57;22795:3;22781:11;22773:6;22769:24;22742:57;:::i;:::-;22730:70;;-1:-1:-1;22820:12:112;;;;22506;;22473:369;;;22477:3;;;;22056:792;;;;;:::o;22853:260::-;22915:5;22968:3;22961:4;22953:6;22949:17;22945:27;22935:55;;22986:1;22983;22976:12;22935:55;23008:99;23103:3;23094:6;23081:20;23074:4;23066:6;23062:17;23008:99;:::i;23118:635::-;23273:6;23281;23289;23342:3;23330:9;23321:7;23317:23;23313:33;23310:53;;;23359:1;23356;23349:12;23310:53;23399:9;23386:23;-1:-1:-1;;;;;23424:6:112;23421:30;23418:50;;;23464:1;23461;23454:12;23418:50;23487:69;23548:7;23539:6;23528:9;23524:22;23487:69;:::i;:::-;23477:79;;;23606:2;23595:9;23591:18;23578:32;23619:31;23644:5;23619:31;:::i;:::-;23669:5;-1:-1:-1;23693:54:112;23739:7;23734:2;23719:18;;23693:54;:::i;:::-;23683:64;;23118:635;;;;;:::o;24230:665::-;24325:6;24333;24341;24349;24402:3;24390:9;24381:7;24377:23;24373:33;24370:53;;;24419:1;24416;24409:12;24370:53;24458:9;24445:23;24477:31;24502:5;24477:31;:::i;:::-;24527:5;-1:-1:-1;24584:2:112;24569:18;;24556:32;24597:33;24556:32;24597:33;:::i;:::-;24649:7;-1:-1:-1;24703:2:112;24688:18;;24675:32;;-1:-1:-1;24758:2:112;24743:18;;24730:32;-1:-1:-1;;;;;24774:30:112;;24771:50;;;24817:1;24814;24807:12;24771:50;24840:49;24881:7;24872:6;24861:9;24857:22;24840:49;:::i;:::-;24830:59;;;24230:665;;;;;;;:::o;24900:1208::-;25029:6;25037;25081:9;25072:7;25068:23;25111:3;25107:2;25103:12;25100:32;;;25128:1;25125;25118:12;25100:32;25168:9;25155:23;-1:-1:-1;;;;;25193:6:112;25190:30;25187:50;;;25233:1;25230;25223:12;25187:50;25256:59;25307:7;25298:6;25287:9;25283:22;25256:59;:::i;:::-;25246:69;;;25334:6;25374:2;25368;25364:7;25360:2;25356:16;25352:25;25349:45;;;25390:1;25387;25380:12;25349:45;25416:22;;:::i;:::-;25403:35;;25489:2;25478:9;25474:18;25461:32;25454:5;25447:47;25526:38;25560:2;25549:9;25545:18;25526:38;:::i;:::-;25521:2;25514:5;25510:14;25503:62;25625:2;25614:9;25610:18;25597:32;25592:2;25585:5;25581:14;25574:56;25690:3;25679:9;25675:19;25662:33;25657:2;25650:5;25646:14;25639:57;25757:3;25746:9;25742:19;25729:33;25723:3;25716:5;25712:15;25705:58;25824:3;25813:9;25809:19;25796:33;25790:3;25783:5;25779:15;25772:58;25863:39;25897:3;25886:9;25882:19;25863:39;:::i;:::-;25857:3;25850:5;25846:15;25839:64;25922:3;25958:54;26004:7;25999:2;25988:9;25984:18;25958:54;:::i;:::-;25952:3;25941:15;;25934:79;26058:18;;26045:32;26029:14;;;26022:56;;;;-1:-1:-1;24900:1208:112;25945:5;;-1:-1:-1;24900:1208:112:o;26113:713::-;26200:5;26194:12;26189:3;26182:25;26253:4;26246:5;26242:16;26236:23;26295:1;26291;26286:3;26282:11;26278:19;26347:2;26333:12;26329:21;26322:4;26317:3;26313:14;26306:45;26400:4;26393:5;26389:16;26383:23;26376:4;26371:3;26367:14;26360:47;26456:4;26449:5;26445:16;26439:23;26432:4;26427:3;26423:14;26416:47;26512:4;26505:5;26501:16;26495:23;26488:4;26483:3;26479:14;26472:47;26568:4;26561:5;26557:16;26551:23;26544:4;26539:3;26535:14;26528:47;26636:2;26628:4;26621:5;26617:16;26611:23;26607:32;26600:4;26595:3;26591:14;26584:56;;;26688:4;26681:5;26677:16;26671:23;26703:57;26754:4;26749:3;26745:14;26729;14952:12;;-1:-1:-1;;;;;14948:38:112;14936:51;;15036:4;15025:16;;;15019:23;15003:14;;14996:47;14875:174;26703:57;-1:-1:-1;26811:6:112;26800:18;26794:25;26785:6;26776:16;;;;26769:51;26113:713::o;26831:273::-;27033:3;27018:19;;27046:52;27022:9;27080:6;27046:52;:::i;27109:388::-;27177:6;27185;27238:2;27226:9;27217:7;27213:23;27209:32;27206:52;;;27254:1;27251;27244:12;27206:52;27293:9;27280:23;27312:31;27337:5;27312:31;:::i;:::-;27362:5;-1:-1:-1;27419:2:112;27404:18;;27391:32;27432:33;27391:32;27432:33;:::i;27873:342::-;27991:6;27999;28052:3;28040:9;28031:7;28027:23;28023:33;28020:53;;;28069:1;28066;28059:12;28020:53;28092:43;28127:7;28116:9;28092:43;:::i;:::-;28082:53;;28154:55;28201:7;28195:3;28184:9;28180:19;28154:55;:::i;:::-;28144:65;;27873:342;;;;;:::o;28220:380::-;28299:1;28295:12;;;;28342;;;28363:61;;28417:4;28409:6;28405:17;28395:27;;28363:61;28470:2;28462:6;28459:14;28439:18;28436:38;28433:161;;28516:10;28511:3;28507:20;28504:1;28497:31;28551:4;28548:1;28541:15;28579:4;28576:1;28569:15;28433:161;;28220:380;;;:::o;28605:456::-;28711:1;28707;28702:3;28698:11;28694:19;28686:5;28680:12;28676:38;28671:3;28664:51;28764:4;28757:5;28753:16;28747:23;28740:4;28735:3;28731:14;28724:47;28820:4;28813:5;28809:16;28803:23;28796:4;28791:3;28787:14;28780:47;28876:4;28869:5;28865:16;28859:23;28852:4;28847:3;28843:14;28836:47;28932:4;28925:5;28921:16;28915:23;28908:4;28903:3;28899:14;28892:47;28985:4;28978:5;28974:16;28968:23;29000:55;29049:4;29044:3;29040:14;29026:12;14952;;-1:-1:-1;;;;;14948:38:112;14936:51;;15036:4;15025:16;;;15019:23;15003:14;;14996:47;14875:174;29066:385;29317:25;;;29373:2;29358:18;;29351:34;;;29304:3;29289:19;;29394:51;29441:2;29426:18;;29418:6;29394:51;:::i;29679:416::-;29730:3;29758:6;29799:5;29793:12;29826:2;29821:3;29814:15;29850:45;29891:2;29886:3;29882:12;29868;29850:45;:::i;:::-;29838:57;;;29944:4;29937:5;29933:16;29927:23;29920:4;29915:3;29911:14;29904:47;29999:4;29992:5;29988:16;29982:23;30014:55;30063:4;30058:3;30054:14;30038;30014:55;:::i;30100:451::-;30342:4;30371:3;30401:2;30390:9;30383:21;30421:54;30471:2;30460:9;30456:18;30448:6;30421:54;:::i;:::-;30413:62;;;30484:61;30541:2;30530:9;30526:18;30518:6;30484:61;:::i;30556:146::-;30643:13;;30665:31;30643:13;30665:31;:::i;30707:352::-;30772:5;30820:4;30808:9;30803:3;30799:19;30795:30;30792:50;;;30838:1;30835;30828:12;30792:50;30860:22;;:::i;:::-;30851:31;;30912:9;30906:16;30931:33;30956:7;30931:33;:::i;:::-;30987:7;30980:5;30973:22;;31048:2;31037:9;31033:18;31027:25;31022:2;31015:5;31011:14;31004:49;30707:352;;;;:::o;31064:876::-;31168:6;31221:3;31209:9;31200:7;31196:23;31192:33;31189:53;;;31238:1;31235;31228:12;31189:53;31264:22;;:::i;:::-;31315:9;31309:16;31302:5;31295:31;31358:57;31411:2;31400:9;31396:18;31358:57;:::i;:::-;31353:2;31346:5;31342:14;31335:81;31469:2;31458:9;31454:18;31448:25;31443:2;31436:5;31432:14;31425:49;31527:2;31516:9;31512:18;31506:25;31501:2;31494:5;31490:14;31483:49;31586:3;31575:9;31571:19;31565:26;31559:3;31552:5;31548:15;31541:51;31646:3;31635:9;31631:19;31625:26;31619:3;31612:5;31608:15;31601:51;31685:58;31738:3;31727:9;31723:19;31685:58;:::i;:::-;31679:3;31672:5;31668:15;31661:83;31777:66;31835:7;31829:3;31818:9;31814:19;31777:66;:::i;:::-;31771:3;31760:15;;31753:91;31901:6;31886:22;;;;31880:29;31871:6;31860:18;;31853:57;-1:-1:-1;31764:5:112;31064:876;-1:-1:-1;31064:876:112:o;31945:127::-;32006:10;32001:3;31997:20;31994:1;31987:31;32037:4;32034:1;32027:15;32061:4;32058:1;32051:15;32077:127;32138:10;32133:3;32129:20;32126:1;32119:31;32169:4;32166:1;32159:15;32193:4;32190:1;32183:15;32209:128;32276:9;;;32297:11;;;32294:37;;;32311:18;;:::i;32342:125::-;32407:9;;;32428:10;;;32425:36;;;32441:18;;:::i;32472:375::-;-1:-1:-1;;;;;32730:15:112;;;32712:34;;32782:15;;;;32777:2;32762:18;;32755:43;32829:2;32814:18;;32807:34;;;;32662:2;32647:18;;32472:375::o;32852:135::-;32891:3;32912:17;;;32909:43;;32932:18;;:::i;:::-;-1:-1:-1;32979:1:112;32968:13;;32852:135::o;32992:383::-;33103:6;33156:2;33144:9;33135:7;33131:23;33127:32;33124:52;;;33172:1;33169;33162:12;33124:52;33212:9;33199:23;-1:-1:-1;;;;;33237:6:112;33234:30;33231:50;;;33277:1;33274;33267:12;33231:50;33300:69;33361:7;33352:6;33341:9;33337:22;33300:69;:::i;33380:251::-;33450:6;33503:2;33491:9;33482:7;33478:23;33474:32;33471:52;;;33519:1;33516;33509:12;33471:52;33551:9;33545:16;33570:31;33595:5;33570:31;:::i;33923:476::-;-1:-1:-1;;;;;34144:32:112;;34126:51;;34213:2;34208;34193:18;;34186:30;;;-1:-1:-1;;34239:45:112;;34265:18;;34257:6;34239:45;:::i;:::-;34332:9;34324:6;34320:22;34315:2;34304:9;34300:18;34293:50;34360:33;34386:6;34378;34360:33;:::i;:::-;34352:41;33923:476;-1:-1:-1;;;;;;33923:476:112:o;34404:327::-;34500:4;34558:11;34545:25;34652:2;34648:7;34637:8;34621:14;34617:29;34613:43;34593:18;34589:68;34579:96;;34671:1;34668;34661:12;34579:96;34692:33;;;;;34404:327;-1:-1:-1;;34404:327:112:o;35004:574::-;35126:4;35132:6;35192:11;35179:25;35286:2;35282:7;35271:8;35255:14;35251:29;35247:43;35227:18;35223:68;35213:96;;35305:1;35302;35295:12;35213:96;35332:33;;35384:20;;;-1:-1:-1;;;;;;35416:30:112;;35413:50;;;35459:1;35456;35449:12;35413:50;35492:4;35480:17;;-1:-1:-1;35543:1:112;35539:14;;;35523;35519:35;35509:46;;35506:66;;;35568:1;35565;35558:12;35583:299;35755:9;35792:84;35861:14;35853:6;35846:5;35792:84;:::i;35887:228::-;35972:6;36025:2;36013:9;36004:7;36000:23;35996:32;35993:52;;;36041:1;36038;36031:12;35993:52;36064:45;36101:7;36090:9;36064:45;:::i;36120:1092::-;36424:4;36472:3;36461:9;36457:19;36503:3;36492:9;36485:22;36527:6;36562;36556:13;36593:6;36585;36578:22;36631:3;36620:9;36616:19;36609:26;;36694:3;36684:6;36681:1;36677:14;36666:9;36662:30;36658:40;36644:54;;36717:4;36756:2;36748:6;36744:15;36777:1;36787:265;36801:6;36798:1;36795:13;36787:265;;;36894:3;36890:8;36878:9;36870:6;36866:22;36862:37;36857:3;36850:50;36923:49;36965:6;36956;36950:13;36923:49;:::i;:::-;36913:59;-1:-1:-1;37030:12:112;;;;36995:15;;;;36823:1;36816:9;36787:265;;;-1:-1:-1;;;;;;;37111:32:112;;;37091:18;;;37084:60;;;;14952:12;;14948:38;37202:2;37187:18;;14936:51;-1:-1:-1;;15036:4:112;15025:16;;15019:23;15003:14;;;14996:47;37069:6;-1:-1:-1;37153:53:112;14875:174;37217:279;37282:5;37330:4;37318:9;37313:3;37309:19;37305:30;37302:50;;;37348:1;37345;37338:12;37302:50;37370:22;;:::i;:::-;37361:31;;37421:9;37415:16;37408:5;37401:31;37485:2;37474:9;37470:18;37464:25;37459:2;37452:5;37448:14;37441:49;37217:279;;;;:::o;37501:535::-;37566:5;37614:4;37602:9;37597:3;37593:19;37589:30;37586:50;;;37632:1;37629;37622:12;37586:50;37654:22;;:::i;:::-;37645:31;;37705:9;37699:16;37692:5;37685:31;37769:2;37758:9;37754:18;37748:25;37743:2;37736:5;37732:14;37725:49;37819:2;37808:9;37804:18;37798:25;37832:30;37854:7;37832:30;:::i;:::-;37889:2;37878:14;;37871:31;37947:2;37932:18;;37926:25;37960:30;37926:25;37960:30;:::i;38041:1183::-;38134:6;38187:3;38175:9;38166:7;38162:23;38158:33;38155:53;;;38204:1;38201;38194:12;38155:53;38230:22;;:::i;:::-;38275:48;38313:9;38275:48;:::i;:::-;38268:5;38261:63;38377:2;38366:9;38362:18;38356:25;38351:2;38344:5;38340:14;38333:49;38435:2;38424:9;38420:18;38414:25;38409:2;38402:5;38398:14;38391:49;38493:2;38482:9;38478:18;38472:25;38467:2;38460:5;38456:14;38449:49;38552:3;38541:9;38537:19;38531:26;38525:3;38518:5;38514:15;38507:51;38591:66;38649:7;38643:3;38632:9;38628:19;38591:66;:::i;:::-;38585:3;38578:5;38574:15;38567:91;38713:3;38702:9;38698:19;38692:26;38685:4;38678:5;38674:16;38667:52;38738:3;38774:57;38827:2;38816:9;38812:18;38774:57;:::i;:::-;38768:3;38761:5;38757:15;38750:82;38851:3;38886:65;38943:7;38938:2;38927:9;38923:18;38886:65;:::i;:::-;38881:2;38874:5;38870:14;38863:89;38971:3;38961:13;;39006:65;39063:7;39058:2;39047:9;39043:18;39006:65;:::i;:::-;38990:14;;;38983:89;39129:3;39114:19;;39108:26;39099:6;39088:18;;39081:54;39188:3;39173:19;;;39167:26;39151:14;;;39144:50;;;;-1:-1:-1;38994:5:112;38041:1183;-1:-1:-1;38041:1183:112:o;39508:384::-;-1:-1:-1;;;;;;39693:33:112;;39681:46;;39750:13;;39663:3;;39772:74;39750:13;39835:1;39826:11;;39819:4;39807:17;;39772:74;:::i;:::-;39866:16;;;;39884:1;39862:24;;39508:384;-1:-1:-1;;;39508:384:112:o;39897:287::-;40026:3;40064:6;40058:13;40080:66;40139:6;40134:3;40127:4;40119:6;40115:17;40080:66;:::i;40189:245::-;40256:6;40309:2;40297:9;40288:7;40284:23;40280:32;40277:52;;;40325:1;40322;40315:12;40277:52;40357:9;40351:16;40376:28;40398:5;40376:28;:::i;41067:217::-;41107:1;41133;41123:132;;41177:10;41172:3;41168:20;41165:1;41158:31;41212:4;41209:1;41202:15;41240:4;41237:1;41230:15;41123:132;-1:-1:-1;41269:9:112;;41067:217::o;41289:168::-;41362:9;;;41393;;41410:15;;;41404:22;;41390:37;41380:71;;41431:18;;:::i;42517:387::-;42755:3;42740:19;;42768:42;42744:9;42792:6;42768:42;:::i;:::-;42841:3;42826:19;;42819:35;;;;42885:3;42870:19;42863:35;42517:387;;-1:-1:-1;42517:387:112:o;42909:315::-;43119:3;43104:19;;43132:42;43108:9;43156:6;43132:42;:::i;:::-;43211:6;43205:3;43194:9;43190:19;43183:35;42909:315;;;;;:::o;45402:386::-;45664:3;45649:19;;45677:42;45653:9;45701:6;45677:42;:::i;:::-;14952:12;;-1:-1:-1;;;;;14948:38:112;45777:3;45762:19;;14936:51;15036:4;15025:16;;15019:23;15003:14;;;14996:47;45728:54;14875:174;45793:319;46019:25;;;46007:2;45992:18;;46053:53;46102:2;46087:18;;46079:6;14952:12;;-1:-1:-1;;;;;14948:38:112;14936:51;;15036:4;15025:16;;;15019:23;15003:14;;14996:47;14875:174;46514:489;-1:-1:-1;;;;;46783:15:112;;;46765:34;;46835:15;;46830:2;46815:18;;46808:43;46882:2;46867:18;;46860:34;;;46930:3;46925:2;46910:18;;46903:31;;;46708:4;;46951:46;;46977:19;;46969:6;46951:46;:::i;47008:249::-;47077:6;47130:2;47118:9;47109:7;47105:23;47101:32;47098:52;;;47146:1;47143;47136:12;47098:52;47178:9;47172:16;47197:30;47221:5;47197:30;:::i;47865:395::-;47951:6;47959;47967;48020:2;48008:9;47999:7;47995:23;47991:32;47988:52;;;48036:1;48033;48026:12;47988:52;48068:9;48062:16;48118:4;48111:5;48107:16;48100:5;48097:27;48087:55;;48138:1;48135;48128:12;48087:55;48206:2;48191:18;;48185:25;48250:2;48235:18;;;48229:25;48161:5;;48185:25;;-1:-1:-1;48229:25:112;47865:395;-1:-1:-1;;;47865:395:112:o;49094:127::-;49155:10;49150:3;49146:20;49143:1;49136:31;49186:4;49183:1;49176:15;49210:4;49207:1;49200:15;50342:546;50587:2;50576:9;50569:21;50550:4;50613:45;50654:2;50643:9;50639:18;50631:6;50613:45;:::i;:::-;50706:9;50698:6;50694:22;50689:2;50678:9;50674:18;50667:50;50740:33;50766:6;50758;50740:33;:::i;:::-;50726:47;;50821:9;50813:6;50809:22;50804:2;50793:9;50789:18;50782:50;50849:33;50875:6;50867;50849:33;:::i;50893:291::-;51070:2;51059:9;51052:21;51033:4;51090:45;51131:2;51120:9;51116:18;51108:6;51090:45;:::i;:::-;51082:53;;51171:6;51166:2;51155:9;51151:18;51144:34;50893:291;;;;;:::o;51189:317::-;51366:2;51355:9;51348:21;51329:4;51386:45;51427:2;51416:9;51412:18;51404:6;51386:45;:::i;:::-;51378:53;;51496:1;51492;51487:3;51483:11;51479:19;51471:6;51467:32;51462:2;51451:9;51447:18;51440:60;51189:317;;;;;:::o;51511:383::-;51708:2;51697:9;51690:21;51671:4;51734:45;51775:2;51764:9;51760:18;51752:6;51734:45;:::i;:::-;51827:9;51819:6;51815:22;51810:2;51799:9;51795:18;51788:50;51855:33;51881:6;51873;51855:33;:::i;52302:362::-;52507:2;52496:9;52489:21;52470:4;52527:45;52568:2;52557:9;52553:18;52545:6;52527:45;:::i;:::-;52603:2;52588:18;;52581:34;;;;-1:-1:-1;52646:2:112;52631:18;52624:34;52519:53;52302:362;-1:-1:-1;52302:362:112:o;52669:480::-;52894:2;52883:9;52876:21;52857:4;52920:45;52961:2;52950:9;52946:18;52938:6;52920:45;:::i;:::-;53013:9;53005:6;53001:22;52996:2;52985:9;52981:18;52974:50;53041:33;53067:6;53059;53041:33;:::i;:::-;53033:41;;;53139:1;53135;53130:3;53126:11;53122:19;53114:6;53110:32;53105:2;53094:9;53090:18;53083:60;52669:480;;;;;;:::o;53154:454::-;53379:2;53368:9;53361:21;53342:4;53405:45;53446:2;53435:9;53431:18;53423:6;53405:45;:::i;:::-;53498:9;53490:6;53486:22;53481:2;53470:9;53466:18;53459:50;53526:33;53552:6;53544;53526:33;:::i;:::-;53518:41;;;53595:6;53590:2;53579:9;53575:18;53568:34;53154:454;;;;;;:::o;53613:464::-;53832:2;53821:9;53814:21;53795:4;53858:45;53899:2;53888:9;53884:18;53876:6;53858:45;:::i;:::-;53951:9;53943:6;53939:22;53934:2;53923:9;53919:18;53912:50;53979:33;54005:6;53997;53979:33;:::i;:::-;53971:41;;;54062:6;54055:14;54048:22;54043:2;54032:9;54028:18;54021:50;53613:464;;;;;;:::o",
    "linkReferences": {},
    "immutableReferences": {
      "3083": [
        {
          "start": 17236,
          "length": 32
        }
      ],
      "3085": [
        {
          "start": 17194,
          "length": 32
        }
      ],
      "3087": [
        {
          "start": 17152,
          "length": 32
        }
      ],
      "3089": [
        {
          "start": 17319,
          "length": 32
        }
      ],
      "3091": [
        {
          "start": 17356,
          "length": 32
        }
      ],
      "3093": [
        {
          "start": 17277,
          "length": 32
        }
      ],
      "46009": [
        {
          "start": 7530,
          "length": 32
        },
        {
          "start": 8886,
          "length": 32
        },
        {
          "start": 10070,
          "length": 32
        },
        {
          "start": 11245,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "IS_TEST()": "fa7626d4",
    "approve(address,uint256)": "095ea7b3",
    "balanceOf(address)": "70a08231",
    "borrow(((address,uint256),(bytes,uint256,(address,uint256,uint256,uint256,uint256,(address,uint256)))[])[])": "b1ce7a6a",
    "buy((uint256,address)[])": "980b13c5",
    "checkCollateralExternal((address,uint256,uint256,uint256,uint256,(address,uint256)),(address,uint256))": "ff9d3a77",
    "checkOfferArgExternal((bytes,uint256,(address,uint256,uint256,uint256,uint256,(address,uint256))))": "20906871",
    "claim(uint256[])": "6ba4c138",
    "claimAsBorrower(uint256[])": "3d6fd5be",
    "createTranche(uint256)": "92eab80e",
    "excludeArtifacts()": "b5508aa9",
    "excludeContracts()": "e20c9f71",
    "excludeSenders()": "1ed7831c",
    "failed()": "ba414fa6",
    "getApproved(uint256)": "081812fc",
    "getLoan(uint256)": "504006ca",
    "getMinOfferCostAndBorrowableAmount(address)": "8d116c7a",
    "getParameters()": "a5ea11da",
    "getRateOfTranche(uint256)": "14aab74f",
    "isApprovedForAll(address,address)": "e985e9c5",
    "name()": "06fdde03",
    "offerDigest((address,uint256,uint256,uint256,uint256,(address,uint256)))": "1fbc8a74",
    "onERC721Received(address,address,uint256,bytes)": "150b7a02",
    "ownerOf(uint256)": "6352211e",
    "position(uint256)": "f7a95a9e",
    "price(uint256)": "26a49e37",
    "repay(uint256[])": "0c72ad20",
    "safeTransferFrom(address,address,uint256)": "42842e0e",
    "safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
    "sendInterestsExternal((address,uint256,uint256,uint256,uint256,(uint256,uint256),uint256,address,(address,uint256),(uint256,uint256,bool,bool),uint256,uint256),(uint256,uint256,uint256))": "2efe69b3",
    "sendShareOfSaleAsSupplierExternal((address,uint256,uint256,uint256,uint256,(uint256,uint256),uint256,address,(address,uint256),(uint256,uint256,bool,bool),uint256,uint256),(uint256,uint256,uint256))": "6a974035",
    "setApprovalForAll(address,bool)": "a22cb465",
    "setAuctionDuration(uint256)": "a497e674",
    "setAuctionPriceFactor(uint256)": "e7af8fed",
    "setBorrowAmountPerOfferLowerBound(address,uint256)": "7660e109",
    "setMinOfferCost(address,uint256)": "1a34c700",
    "supportsInterface(bytes4)": "01ffc9a7",
    "symbol()": "95d89b41",
    "targetArtifactSelectors()": "66d9a9a0",
    "targetArtifacts()": "85226c81",
    "targetContracts()": "3f7286f4",
    "targetSelectors()": "916a17c6",
    "targetSenders()": "3e5e3c23",
    "testConsistentAssetRequests()": "bfc36be6",
    "testConsistentOfferTranches()": "73911a6d",
    "testMultipleUseCollateral()": "fc6774fe",
    "testRequestedAmountTooHigh()": "0701df01",
    "testUseCollateralNominal()": "b58907ea",
    "testUseCollateralReturn()": "f24c490c",
    "testUseOfferReturn()": "9e10b8db",
    "totalSupply()": "18160ddd",
    "transferFrom(address,address,uint256)": "23b872dd",
    "useCollateralExternal((bytes,uint256,(address,uint256,uint256,uint256,uint256,(address,uint256)))[],address,(address,uint256))": "ac989819",
    "useOfferExternal((bytes,uint256,(address,uint256,uint256,uint256,uint256,(address,uint256))),(uint256,address,uint256,uint256,uint256,uint256,address,(address,uint256),uint256))": "bbf1dd1d"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AssertionFailedCollatStateDontMatch\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"AssertionFailedLoanDontMatch\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"Ray\",\"name\":\"expected\",\"type\":\"uint256\"},{\"internalType\":\"Ray\",\"name\":\"actual\",\"type\":\"uint256\"}],\"name\":\"AssertionFailedRayDontMatch\",\"type\":\"error\"},{\"inputs\":[{\"components\":[{\"internalType\":\"contract IERC20\",\"name\":\"assetToLend\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"loanToValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expirationDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tranche\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"contract IERC721\",\"name\":\"implem\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"internalType\":\"struct NFToken\",\"name\":\"collateral\",\"type\":\"tuple\"}],\"internalType\":\"struct Offer\",\"name\":\"offer\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"contract IERC721\",\"name\":\"implem\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"internalType\":\"struct NFToken\",\"name\":\"providedNft\",\"type\":\"tuple\"}],\"name\":\"BadCollateral\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"loanId\",\"type\":\"uint256\"}],\"name\":\"BorrowerAlreadyClaimed\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"CallerIsNotOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"endDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"loanId\",\"type\":\"uint256\"}],\"name\":\"CollateralIsNotLiquidableYet\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"ERC20TransferFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC721AddressZeroIsNotAValidOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC721ApprovalToCurrentOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC721ApproveToCaller\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC721CallerIsNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC721CallerIsNotOwnerNorApprovedForAll\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC721InvalidTokenId\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC721MintToTheZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC721TokenAlreadyMinted\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC721TransferFromIncorrectOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC721TransferToNonERC721ReceiverImplementer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC721TransferToTheZeroAddress\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"firstRequested\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"requested\",\"type\":\"address\"}],\"name\":\"InconsistentAssetRequests\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"firstTrancheIdUsed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"trancheIdFound\",\"type\":\"uint256\"}],\"name\":\"InconsistentTranches\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"nbOfTranches\",\"type\":\"uint256\"}],\"name\":\"InvalidTranche\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"loanId\",\"type\":\"uint256\"}],\"name\":\"LoanAlreadyRepaid\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"loanId\",\"type\":\"uint256\"}],\"name\":\"LoanNotRepaidOrLiquidatedYet\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"loanId\",\"type\":\"uint256\"}],\"name\":\"NotBorrowerOfTheLoan\",\"type\":\"error\"},{\"inputs\":[{\"components\":[{\"internalType\":\"contract IERC20\",\"name\":\"assetToLend\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"loanToValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expirationDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tranche\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"contract IERC721\",\"name\":\"implem\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"internalType\":\"struct NFToken\",\"name\":\"collateral\",\"type\":\"tuple\"}],\"internalType\":\"struct Offer\",\"name\":\"offer\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"expirationDate\",\"type\":\"uint256\"}],\"name\":\"OfferHasExpired\",\"type\":\"error\"},{\"inputs\":[{\"components\":[{\"internalType\":\"contract IERC20\",\"name\":\"assetToLend\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"loanToValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expirationDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tranche\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"contract IERC721\",\"name\":\"implem\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"internalType\":\"struct NFToken\",\"name\":\"collateral\",\"type\":\"tuple\"}],\"internalType\":\"struct Offer\",\"name\":\"offer\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"requested\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lowerBound\",\"type\":\"uint256\"}],\"name\":\"RequestedAmountIsUnderMinimum\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"requested\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"offered\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"contract IERC20\",\"name\":\"assetToLend\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"loanToValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expirationDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tranche\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"contract IERC721\",\"name\":\"implem\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"internalType\":\"struct NFToken\",\"name\":\"collateral\",\"type\":\"tuple\"}],\"internalType\":\"struct Offer\",\"name\":\"offer\",\"type\":\"tuple\"}],\"name\":\"RequestedAmountTooHigh\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Unauthorized\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"lent\",\"type\":\"uint256\"}],\"name\":\"UnsafeAmountLent\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"minLoanToValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxLoanToValue\",\"type\":\"uint256\"}],\"name\":\"UnsafeOfferLoanToValuesGap\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"loanId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"loan\",\"type\":\"bytes\"}],\"name\":\"Borrow\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"loanId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"args\",\"type\":\"bytes\"}],\"name\":\"Buy\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"claimant\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"claimed\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"loanId\",\"type\":\"uint256\"}],\"name\":\"Claim\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"newAuctionDuration\",\"type\":\"uint256\"}],\"name\":\"NewAuctionDuration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"Ray\",\"name\":\"newAuctionPriceFactor\",\"type\":\"uint256\"}],\"name\":\"NewAuctionPriceFactor\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IERC20\",\"name\":\"currency\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"newLowerBound\",\"type\":\"uint256\"}],\"name\":\"NewBorrowAmountPerOfferLowerBound\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IERC20\",\"name\":\"currency\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"newMinOfferCost\",\"type\":\"uint256\"}],\"name\":\"NewMininimumOfferCost\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"Ray\",\"name\":\"tranche\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"newTrancheId\",\"type\":\"uint256\"}],\"name\":\"NewTranche\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"loanId\",\"type\":\"uint256\"}],\"name\":\"Repay\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"log_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"log_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"log_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"name\":\"log_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"val\",\"type\":\"address\"}],\"name\":\"log_named_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"val\",\"type\":\"bytes\"}],\"name\":\"log_named_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"val\",\"type\":\"bytes32\"}],\"name\":\"log_named_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"}],\"name\":\"log_named_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"val\",\"type\":\"string\"}],\"name\":\"log_named_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"log_named_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"log_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"logs\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"IS_TEST\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"contract IERC721\",\"name\":\"implem\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"internalType\":\"struct NFToken\",\"name\":\"nft\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"contract IERC20\",\"name\":\"assetToLend\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"loanToValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expirationDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tranche\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"contract IERC721\",\"name\":\"implem\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"internalType\":\"struct NFToken\",\"name\":\"collateral\",\"type\":\"tuple\"}],\"internalType\":\"struct Offer\",\"name\":\"offer\",\"type\":\"tuple\"}],\"internalType\":\"struct OfferArg[]\",\"name\":\"args\",\"type\":\"tuple[]\"}],\"internalType\":\"struct BorrowArg[]\",\"name\":\"args\",\"type\":\"tuple[]\"}],\"name\":\"borrow\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"loanId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"internalType\":\"struct BuyArg[]\",\"name\":\"args\",\"type\":\"tuple[]\"}],\"name\":\"buy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"contract IERC20\",\"name\":\"assetToLend\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"loanToValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expirationDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tranche\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"contract IERC721\",\"name\":\"implem\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"internalType\":\"struct NFToken\",\"name\":\"collateral\",\"type\":\"tuple\"}],\"internalType\":\"struct Offer\",\"name\":\"offer\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"contract IERC721\",\"name\":\"implem\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"internalType\":\"struct NFToken\",\"name\":\"providedNft\",\"type\":\"tuple\"}],\"name\":\"checkCollateralExternal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"contract IERC20\",\"name\":\"assetToLend\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"loanToValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expirationDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tranche\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"contract IERC721\",\"name\":\"implem\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"internalType\":\"struct NFToken\",\"name\":\"collateral\",\"type\":\"tuple\"}],\"internalType\":\"struct Offer\",\"name\":\"offer\",\"type\":\"tuple\"}],\"internalType\":\"struct OfferArg\",\"name\":\"arg\",\"type\":\"tuple\"}],\"name\":\"checkOfferArgExternal\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"positionIds\",\"type\":\"uint256[]\"}],\"name\":\"claim\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"sent\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"loanIds\",\"type\":\"uint256[]\"}],\"name\":\"claimAsBorrower\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"sent\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"Ray\",\"name\":\"newTranche\",\"type\":\"uint256\"}],\"name\":\"createTranche\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"newTrancheId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeArtifacts\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"excludedArtifacts_\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"excludedContracts_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeSenders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"excludedSenders_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"failed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"getLoan\",\"outputs\":[{\"components\":[{\"internalType\":\"contract IERC20\",\"name\":\"assetLent\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"lent\",\"type\":\"uint256\"},{\"internalType\":\"Ray\",\"name\":\"shareLent\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endDate\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"internalType\":\"Ray\",\"name\":\"priceFactor\",\"type\":\"uint256\"}],\"internalType\":\"struct Auction\",\"name\":\"auction\",\"type\":\"tuple\"},{\"internalType\":\"Ray\",\"name\":\"interestPerSecond\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"contract IERC721\",\"name\":\"implem\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"internalType\":\"struct NFToken\",\"name\":\"collateral\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"paid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minInterestsToRepay\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"liquidated\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"borrowerClaimed\",\"type\":\"bool\"}],\"internalType\":\"struct Payment\",\"name\":\"payment\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"supplyPositionIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nbOfPositions\",\"type\":\"uint256\"}],\"internalType\":\"struct Loan\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"currency\",\"type\":\"address\"}],\"name\":\"getMinOfferCostAndBorrowableAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"minOfferCost\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"offerBorrowAmountLowerBound\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getParameters\",\"outputs\":[{\"internalType\":\"Ray\",\"name\":\"auctionPriceFactor\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"auctionDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nbOfLoans\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nbOfTranches\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"getRateOfTranche\",\"outputs\":[{\"internalType\":\"Ray\",\"name\":\"rate\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"contract IERC20\",\"name\":\"assetToLend\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"loanToValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expirationDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tranche\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"contract IERC721\",\"name\":\"implem\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"internalType\":\"struct NFToken\",\"name\":\"collateral\",\"type\":\"tuple\"}],\"internalType\":\"struct Offer\",\"name\":\"offer\",\"type\":\"tuple\"}],\"name\":\"offerDigest\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"position\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"Ray\",\"name\":\"share\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"loanId\",\"type\":\"uint256\"}],\"internalType\":\"struct Provision\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"loanId\",\"type\":\"uint256\"}],\"name\":\"price\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"loanIds\",\"type\":\"uint256[]\"}],\"name\":\"repay\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"contract IERC20\",\"name\":\"assetLent\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"lent\",\"type\":\"uint256\"},{\"internalType\":\"Ray\",\"name\":\"shareLent\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endDate\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"internalType\":\"Ray\",\"name\":\"priceFactor\",\"type\":\"uint256\"}],\"internalType\":\"struct Auction\",\"name\":\"auction\",\"type\":\"tuple\"},{\"internalType\":\"Ray\",\"name\":\"interestPerSecond\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"contract IERC721\",\"name\":\"implem\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"internalType\":\"struct NFToken\",\"name\":\"collateral\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"paid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minInterestsToRepay\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"liquidated\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"borrowerClaimed\",\"type\":\"bool\"}],\"internalType\":\"struct Payment\",\"name\":\"payment\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"supplyPositionIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nbOfPositions\",\"type\":\"uint256\"}],\"internalType\":\"struct Loan\",\"name\":\"loan\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"Ray\",\"name\":\"share\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"loanId\",\"type\":\"uint256\"}],\"internalType\":\"struct Provision\",\"name\":\"provision\",\"type\":\"tuple\"}],\"name\":\"sendInterestsExternal\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"contract IERC20\",\"name\":\"assetLent\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"lent\",\"type\":\"uint256\"},{\"internalType\":\"Ray\",\"name\":\"shareLent\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endDate\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"internalType\":\"Ray\",\"name\":\"priceFactor\",\"type\":\"uint256\"}],\"internalType\":\"struct Auction\",\"name\":\"auction\",\"type\":\"tuple\"},{\"internalType\":\"Ray\",\"name\":\"interestPerSecond\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"contract IERC721\",\"name\":\"implem\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"internalType\":\"struct NFToken\",\"name\":\"collateral\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"paid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minInterestsToRepay\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"liquidated\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"borrowerClaimed\",\"type\":\"bool\"}],\"internalType\":\"struct Payment\",\"name\":\"payment\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"supplyPositionIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nbOfPositions\",\"type\":\"uint256\"}],\"internalType\":\"struct Loan\",\"name\":\"loan\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"Ray\",\"name\":\"share\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"loanId\",\"type\":\"uint256\"}],\"internalType\":\"struct Provision\",\"name\":\"provision\",\"type\":\"tuple\"}],\"name\":\"sendShareOfSaleAsSupplierExternal\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newAuctionDuration\",\"type\":\"uint256\"}],\"name\":\"setAuctionDuration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"Ray\",\"name\":\"newAuctionPriceFactor\",\"type\":\"uint256\"}],\"name\":\"setAuctionPriceFactor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"newLowerBound\",\"type\":\"uint256\"}],\"name\":\"setBorrowAmountPerOfferLowerBound\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"newMinOfferCost\",\"type\":\"uint256\"}],\"name\":\"setMinOfferCost\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetArtifactSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzSelector[]\",\"name\":\"targetedArtifactSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetArtifacts\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"targetedArtifacts_\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targetedContracts_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzSelector[]\",\"name\":\"targetedSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetSenders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targetedSenders_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testConsistentAssetRequests\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testConsistentOfferTranches\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testMultipleUseCollateral\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testRequestedAmountTooHigh\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testUseCollateralNominal\",\"outputs\":[{\"components\":[{\"internalType\":\"contract IERC20\",\"name\":\"assetLent\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"lent\",\"type\":\"uint256\"},{\"internalType\":\"Ray\",\"name\":\"shareLent\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endDate\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"internalType\":\"Ray\",\"name\":\"priceFactor\",\"type\":\"uint256\"}],\"internalType\":\"struct Auction\",\"name\":\"auction\",\"type\":\"tuple\"},{\"internalType\":\"Ray\",\"name\":\"interestPerSecond\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"contract IERC721\",\"name\":\"implem\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"internalType\":\"struct NFToken\",\"name\":\"collateral\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"paid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minInterestsToRepay\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"liquidated\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"borrowerClaimed\",\"type\":\"bool\"}],\"internalType\":\"struct Payment\",\"name\":\"payment\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"supplyPositionIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nbOfPositions\",\"type\":\"uint256\"}],\"internalType\":\"struct Loan\",\"name\":\"loan\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testUseCollateralReturn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testUseOfferReturn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"contract IERC20\",\"name\":\"assetToLend\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"loanToValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expirationDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tranche\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"contract IERC721\",\"name\":\"implem\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"internalType\":\"struct NFToken\",\"name\":\"collateral\",\"type\":\"tuple\"}],\"internalType\":\"struct Offer\",\"name\":\"offer\",\"type\":\"tuple\"}],\"internalType\":\"struct OfferArg[]\",\"name\":\"args\",\"type\":\"tuple[]\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"contract IERC721\",\"name\":\"implem\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"internalType\":\"struct NFToken\",\"name\":\"nft\",\"type\":\"tuple\"}],\"name\":\"useCollateralExternal\",\"outputs\":[{\"components\":[{\"internalType\":\"contract IERC20\",\"name\":\"assetLent\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"lent\",\"type\":\"uint256\"},{\"internalType\":\"Ray\",\"name\":\"shareLent\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endDate\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"internalType\":\"Ray\",\"name\":\"priceFactor\",\"type\":\"uint256\"}],\"internalType\":\"struct Auction\",\"name\":\"auction\",\"type\":\"tuple\"},{\"internalType\":\"Ray\",\"name\":\"interestPerSecond\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"contract IERC721\",\"name\":\"implem\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"internalType\":\"struct NFToken\",\"name\":\"collateral\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"paid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minInterestsToRepay\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"liquidated\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"borrowerClaimed\",\"type\":\"bool\"}],\"internalType\":\"struct Payment\",\"name\":\"payment\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"supplyPositionIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nbOfPositions\",\"type\":\"uint256\"}],\"internalType\":\"struct Loan\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"contract IERC20\",\"name\":\"assetToLend\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"loanToValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expirationDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tranche\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"contract IERC721\",\"name\":\"implem\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"internalType\":\"struct NFToken\",\"name\":\"collateral\",\"type\":\"tuple\"}],\"internalType\":\"struct Offer\",\"name\":\"offer\",\"type\":\"tuple\"}],\"internalType\":\"struct OfferArg\",\"name\":\"arg\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"Ray\",\"name\":\"matched\",\"type\":\"uint256\"},{\"internalType\":\"contract IERC20\",\"name\":\"assetLent\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tranche\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minOfferDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minOfferLoanToValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxOfferLoanToValue\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"contract IERC721\",\"name\":\"implem\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"internalType\":\"struct NFToken\",\"name\":\"nft\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"loanId\",\"type\":\"uint256\"}],\"internalType\":\"struct CollateralState\",\"name\":\"collatState\",\"type\":\"tuple\"}],\"name\":\"useOfferExternal\",\"outputs\":[{\"components\":[{\"internalType\":\"Ray\",\"name\":\"matched\",\"type\":\"uint256\"},{\"internalType\":\"contract IERC20\",\"name\":\"assetLent\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tranche\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minOfferDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minOfferLoanToValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxOfferLoanToValue\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"contract IERC721\",\"name\":\"implem\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"internalType\":\"struct NFToken\",\"name\":\"nft\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"loanId\",\"type\":\"uint256\"}],\"internalType\":\"struct CollateralState\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Borrow(uint256,bytes)\":{\"params\":{\"loan\":\"the loan created\",\"loanId\":\"id of the loan\"}},\"Buy(uint256,bytes)\":{\"params\":{\"args\":\"arguments NFT sold\",\"loanId\":\"identifier of the loan previously backed by the sold collateral\"}},\"Claim(address,uint256,uint256)\":{\"params\":{\"claimant\":\"who received the liquidity\",\"claimed\":\"amount sent\",\"loanId\":\"loan identifier where the claim rights come from\"}},\"NewAuctionDuration(uint256)\":{\"params\":{\"newAuctionDuration\":\"duration of liquidation for new loans\"}},\"NewAuctionPriceFactor(uint256)\":{\"params\":{\"newAuctionPriceFactor\":\"factor of loan to value setting initial price of auctions\"}},\"NewBorrowAmountPerOfferLowerBound(address,uint256)\":{\"params\":{\"currency\":\"the erc20 on which a new borrow amount lower bound is taking effect\",\"newLowerBound\":\"the new lower bound\"}},\"NewMininimumOfferCost(address,uint256)\":{\"params\":{\"currency\":\"the erc20 on which a new minimum borrow cost is taking effect\",\"newMinOfferCost\":\"the new minimum amount that will need to be repaid per loan offer used\"}},\"NewTranche(uint256,uint256)\":{\"params\":{\"newTrancheId\":\"identifier of the new tranche\",\"tranche\":\"the interest rate of the new tranche, in multiplier per second\"}},\"Repay(uint256)\":{\"params\":{\"loanId\":\"loan identifier\"}},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"borrow(((address,uint256),(bytes,uint256,(address,uint256,uint256,uint256,uint256,(address,uint256)))[])[])\":{\"params\":{\"args\":\"list of arguments specifying at which terms each collateral should be used\"}},\"buy((uint256,address)[])\":{\"params\":{\"args\":\"arguments on what and how to buy\"}},\"claim(uint256[])\":{\"params\":{\"positionIds\":\"identifiers of one or multiple supply position to burn\"},\"returns\":{\"sent\":\"amount sent\"}},\"claimAsBorrower(uint256[])\":{\"params\":{\"loanIds\":\"loan identifiers of one or multiple loans where the borrower wants to claim liquidation share\"},\"returns\":{\"sent\":\"amount sent\"}},\"createTranche(uint256)\":{\"params\":{\"newTranche\":\"the interest rate of the new tranche\"}},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"getLoan(uint256)\":{\"params\":{\"id\":\"loan identifier\"},\"returns\":{\"_0\":\"loan the corresponding loan\"}},\"getMinOfferCostAndBorrowableAmount(address)\":{\"params\":{\"currency\":\"the erc20 asset lent on which the parameters apply\"},\"returns\":{\"minOfferCost\":\"the minimal amount to repay per offer used in loan\",\"offerBorrowAmountLowerBound\":\" minimum amount to borrow per offer used in loan\"}},\"getParameters()\":{\"returns\":{\"auctionDuration\":\"number of seconds after the auction start when the price hits 0\",\"auctionPriceFactor\":\"factor multiplied with the loan to value of a loan to get initial price         of a collateral on sale\",\"nbOfLoans\":\"total number of loans ever issued (active and ended)\",\"nbOfTranches\":\"total number of interest rates tranches ever created (active and inactive)\"}},\"getRateOfTranche(uint256)\":{\"params\":{\"id\":\"rate identifier\"},\"returns\":{\"rate\":\"the rate of the tranche, as a Ray, multiplier per second of the amount to repay (non compounding)         I.e lent * time since loan start * tranche = interests to repay\"}},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"offerDigest((address,uint256,uint256,uint256,uint256,(address,uint256)))\":{\"params\":{\"offer\":\"the loan offer signed/to sign by a supplier\"},\"returns\":{\"_0\":\"digest the digest, ecdsa sign as is to produce a valid loan offer signature\"}},\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"param data must be of format OfferArg[]\",\"params\":{\"data\":\"abi encoded arguments for the loan\",\"operator\":\"account that initialized the transfer action according to the NFT implementation contract\",\"tokenId\":\"token identifier of the NFT sent according to the NFT implementation contract\"},\"returns\":{\"_0\":\"selector `this.onERC721Received.selector` ERC721-compliant response, signaling compatibility\"}},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"position(uint256)\":{\"params\":{\"tokenId\":\"token identifier of the supply position\"},\"returns\":{\"_0\":\"provision metadata\"}},\"price(uint256)\":{\"params\":{\"loanId\":\"identifier of the loan\"},\"returns\":{\"_0\":\"price computed price\"}},\"repay(uint256[])\":{\"details\":\"repay on behalf is activated, the collateral goes to the original borrower\",\"params\":{\"loanIds\":\"identifiers of loans to repay\"}},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setAuctionDuration(uint256)\":{\"params\":{\"newAuctionDuration\":\"number of seconds of the duration\"}},\"setAuctionPriceFactor(uint256)\":{\"params\":{\"newAuctionPriceFactor\":\"the new factor multiplied to the loan to value\"}},\"setBorrowAmountPerOfferLowerBound(address,uint256)\":{\"params\":{\"currency\":\"the erc20 on which a new borrow amount lower bound is taking effect\",\"newLowerBound\":\"the new lower bound\"}},\"setMinOfferCost(address,uint256)\":{\"params\":{\"currency\":\"the erc20 on which a new minimum borrow cost will take effect\",\"newMinOfferCost\":\"the new minimum amount that will need to be repaid per loan offer used\"}},\"supportsInterface(bytes4)\":{\"details\":\"don't use this method for inclusion in the facet function selectors     prefer the LibDiamond implementation for this method     it is included here for IERC721-compliance\"},\"totalSupply()\":{\"returns\":{\"_0\":\"totalSupply the number\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"events\":{\"Borrow(uint256,bytes)\":{\"notice\":\"one loan has been initiated\"},\"Buy(uint256,bytes)\":{\"notice\":\"a NFT collateral has been sold as part of a liquidation\"},\"Claim(address,uint256,uint256)\":{\"notice\":\"some liquidity has been claimed as principal plus interests or share of liquidation\"},\"NewAuctionDuration(uint256)\":{\"notice\":\"duration of future auctions has been updated\"},\"NewAuctionPriceFactor(uint256)\":{\"notice\":\"initial price factor of future auctions has been updated\"},\"NewBorrowAmountPerOfferLowerBound(address,uint256)\":{\"notice\":\"the borrow amount lower bound per offer has been updated\"},\"NewMininimumOfferCost(address,uint256)\":{\"notice\":\"the minimum cost to repay per used loan offer     when borrowing a certain currency has been updated\"},\"NewTranche(uint256,uint256)\":{\"notice\":\"a new interest rate tranche has been created\"},\"Repay(uint256)\":{\"notice\":\"a loan has been repaid with interests by its borrower\"}},\"kind\":\"user\",\"methods\":{\"borrow(((address,uint256),(bytes,uint256,(address,uint256,uint256,uint256,uint256,(address,uint256)))[])[])\":{\"notice\":\"take loans, take ownership of NFTs specified as collateral, sends borrowed money to caller\"},\"buy((uint256,address)[])\":{\"notice\":\"buy one or multiple NFTs in liquidation\"},\"claim(uint256[])\":{\"notice\":\"claims principal plus interests or liquidation share due as a supplier\"},\"claimAsBorrower(uint256[])\":{\"notice\":\"claims share of liquidation due to a borrower who's collateral has been sold\"},\"createTranche(uint256)\":{\"notice\":\"creates a new tranche at a new identifier for lenders to provide offers for\"},\"getLoan(uint256)\":{\"notice\":\"get loan metadata\"},\"getMinOfferCostAndBorrowableAmount(address)\":{\"notice\":\"get the minimal amount to repay per offer used in loan and minimum amount to borrow per offer.     Gives currently active settings, may not concern loans already issued.\"},\"getParameters()\":{\"notice\":\"gets current values of parameters impacting loans behavior and total number of loans (active and ended)\"},\"getRateOfTranche(uint256)\":{\"notice\":\"gets the rate of tranche `id`\"},\"offerDigest((address,uint256,uint256,uint256,uint256,(address,uint256)))\":{\"notice\":\"computes EIP-712 compliant digest of a loan offer\"},\"onERC721Received(address,address,uint256,bytes)\":{\"notice\":\"borrow using sent NFT as collateral without needing approval through transfer callback\"},\"position(uint256)\":{\"notice\":\"get metadata on provision linked to the supply position\"},\"price(uint256)\":{\"notice\":\"gets the price to buy the underlying collateral of the loan\"},\"repay(uint256[])\":{\"notice\":\"repay one or multiple loans, gives collaterals back\"},\"setAuctionDuration(uint256)\":{\"notice\":\"sets the time it takes to auction prices to fall to 0 for future loans\"},\"setAuctionPriceFactor(uint256)\":{\"notice\":\"sets the factor applied to the loan to value setting initial price of auction for future loans\"},\"setBorrowAmountPerOfferLowerBound(address,uint256)\":{\"notice\":\"updates the borrow amount lower bound per offer for one currency\"},\"setMinOfferCost(address,uint256)\":{\"notice\":\"updates the minimum amount to repay per used loan offer when borrowing a certain currency\"},\"testConsistentAssetRequests()\":{\"notice\":\"useOffer tests ///\"},\"testMultipleUseCollateral()\":{\"notice\":\"useCollateral tests ///\"},\"totalSupply()\":{\"notice\":\"total number of supply positions ever minted (counting burned ones)\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"test/Borrow/BorrowHandlers.t.sol\":\"TestBorrowHandlers\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/=node_modules/@openzeppelin/\",\":diamond/=node_modules/diamond/\",\":ds-test/=node_modules/ds-test/src/\",\":forge-std/=node_modules/forge-std/src/\",\":solmate/=node_modules/solmate/\"]},\"sources\":{\"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x4ffc0547c02ad22925310c585c0f166f8759e2648a09e9b489100c42f15dd98d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15f52f51413a9de1ff191e2f6367c62178e1df7806d7880fe857a98b0b66253d\",\"dweb:/ipfs/QmaQG1fwfgUt5E9nu2cccFiV47B2V78MM1tCy1qB7n4MsH\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x1e854874c68bec05be100dc0092cb5fbbc71253d370ae98ddef248bbfc3fe118\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef0fb6e809779426dc2ac201149bbad4aecdc5810874f2843b050e8b5fef8d30\",\"dweb:/ipfs/QmPDRjaNxmcyxLUKvv8Fxk5eWcf7xvC5S9JpbtqvE7Cadu\"]},\"node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xab28a56179c1db258c9bf5235b382698cb650debecb51b23d12be9e241374b68\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://daae589a9d6fa7e55f99f86c0a16796ca490f243fb3693632c3711c0646c1d56\",\"dweb:/ipfs/QmR3zpd7wNw3rcUdekwiv6FYHJqksuTCXLVioTxu6Fbxk3\"]},\"node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"node_modules/@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":{\"keccak256\":\"0xa8796bd16014cefb8c26449413981a49c510f92a98d6828494f5fd046223ced3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://63a5e0bb5a7d182e0d0eef87033f78115eab791de3626a929bc98c157087880a\",\"dweb:/ipfs/QmetkXAu2CJKS4qrZtEQPU8okAPwUwa6HL4XYwk8vrYMk8\"]},\"node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol\":{\"keccak256\":\"0xd1556954440b31c97a142c6ba07d5cade45f96fafd52091d33a14ebe365aecbf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://26fef835622b46a5ba08b3ef6b46a22e94b5f285d0f0fb66b703bd30217d2c34\",\"dweb:/ipfs/QmZ548qdwfL1qF7aXz3xh1GCdTiST81kGGuKRqVUfYmPZR\"]},\"node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"node_modules/@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269\",\"dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj\"]},\"node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"node_modules/@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c969013129ba9e651a20735ef659fef6d8a1139ea3607bd4b26ddea2d645634\",\"dweb:/ipfs/QmVhVa6LGuzAcB8qgDtVHRkucn4ihj5UZr8xBLcJkP6ucb\"]},\"node_modules/@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xda898fa084aa1ddfdb346e6a40459e00a59d87071cce7c315a46d648dd71d0ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ce501a941f4aa1555c04dabb5e07992503bb6a9b32ff8f7cdcefdb4a742210cb\",\"dweb:/ipfs/QmeScPrUpdrGYs9BytV3Z5ZWJcBXtuAgCW4BLHua4xFUxx\"]},\"node_modules/@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x948d8b2d18f38141ec78c5229d770d950ebc781ed3f44cc9e3ccbb9fded5846a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7311ac950ed2d81f3ccf1784a926efbfc82a86dcb5c98d41eb3792c0cac63a2f\",\"dweb:/ipfs/QmRRwCUHewkPmehx8QRYENFoWyLNx8UEZGULxWYUeSZdTS\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"node_modules/@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b\",\"dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz\"]},\"node_modules/diamond/contracts/facets/OwnershipFacet.sol\":{\"keccak256\":\"0x6502a171801d68e68de6c5a2b879d5e12a3a1539cdc568c2bfcc268fbdf6c5a9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e8094a53d216df365a5cbdaa0e4292c6faae493e88c62e7a616ccb4b5440c097\",\"dweb:/ipfs/QmNXspNxT83mcL1mynUiUrfj94aVe8rz2UyZUJJn7gfWWe\"]},\"node_modules/diamond/contracts/interfaces/IDiamond.sol\":{\"keccak256\":\"0x37be579b243559c0c16a8de037d2c428e8fafdfdd9cde69fa165a07f5adfda2c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0f16b9edb01e35edf96566f6460c4986fcc3fb9bff6291fab5be17d256cd0fd2\",\"dweb:/ipfs/Qmdq869cYabBjfnYZgcF5BSHsFQXT1EZNg2umHMAxZqWEH\"]},\"node_modules/diamond/contracts/interfaces/IDiamondCut.sol\":{\"keccak256\":\"0x9ecd4a637b7cb44c26a4ab7760766defce42a6dc36a355b92dfeef9ce4391fee\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cd0e7ad69374bc41bc62c90428f9795c8a06360599c4c6b06e76bd8a1b91e28f\",\"dweb:/ipfs/QmfZk5ZiKQQaudjYf3qEumVsW87gELxcYMNRu3AHSLuk4n\"]},\"node_modules/diamond/contracts/interfaces/IDiamondLoupe.sol\":{\"keccak256\":\"0x10884024af2c0f7deca0fac4ddf84e76da5dba35b6e02fabeac8ea54c1a5c6f7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df3404a4aed3bbda2f5e441d7035b354237d8c9d7c27b149ccf66d13a1d81d45\",\"dweb:/ipfs/QmZvHWgRCge8tLJ3x3Lf3JQkbNTgAN6LzwCGBabbgk8tew\"]},\"node_modules/diamond/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x7541f7408d0f74162bc4664d5e012427f2ceaab2abadca0353269ef15ee03d8b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a8e7a34b3ea39f4c0dfa6f5ace5d9415e4d0c90cb3f4264e6946b808f2d4011c\",\"dweb:/ipfs/QmWdcRF4krMMb1ua3hmV8avdHKYa4XXt1iw7sxx1ntsEJa\"]},\"node_modules/diamond/contracts/interfaces/IERC173.sol\":{\"keccak256\":\"0x001e07b0fbc894300b939d496ffb005abe398b5bc609802d319b8cdeafe5d36b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e59f66879ef993892410cbe834b1d2dd34891f47066b7be601ff825b0748361\",\"dweb:/ipfs/QmZedQ668we8ohPPZF5tPP5gKpJ5n22h3FDFkoFT5VXpEu\"]},\"node_modules/diamond/contracts/libraries/LibDiamond.sol\":{\"keccak256\":\"0x4090c1e2191d081ff33e1631eabbebfb69e29ac1bf67516d7f4430bb2e0b2983\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3c66e113d032be747262abe642abcec8c132400fe156414721590412d9af6485\",\"dweb:/ipfs/QmfLg3p9wZ748cSDrfh4TmxCuMU8oVZU9BzAGhJSFQysWM\"]},\"node_modules/ds-test/src/test.sol\":{\"keccak256\":\"0x8758531bbac3972efcf1fa46383dbe1d276406fe527bc7abb2f236486278e83b\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://1f64264d61506847acf8761e84aff690cebe830958eac00bac7924d8be569240\",\"dweb:/ipfs/QmSekDJvJ82MZAmr63n7YvfLzQ7gS4NLSHPmHL3GN3rw8k\"]},\"node_modules/forge-std/src/Base.sol\":{\"keccak256\":\"0x609e3a00319169988cc8272e837f350a9ba77cf8f8f62e4897a8e4a8a5f0fb27\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b24435e35ba5b080ebd6e8976c23fb735c7212d042be8462ffd2ea50c5250363\",\"dweb:/ipfs/QmPeVvN7FS4oMmCuYAeRdZihTfrG4tA7Vvunuvv59a6wre\"]},\"node_modules/forge-std/src/StdAssertions.sol\":{\"keccak256\":\"0xdb05fd11858f232b8b5c6c9175229bdd061c277c34f13b0bdc64d333bcbd2617\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08ae865564d9c1fa1012b61db77a2da2844ac1ae0a216b16c9fe9ab65ddf80af\",\"dweb:/ipfs/QmfFfmkjb2Qfc5dPJvwQgjTMbeQ12dTPFeAQ8Gb944U44g\"]},\"node_modules/forge-std/src/StdChains.sol\":{\"keccak256\":\"0x097b75f7171af89f433407e040d11b22fc26e2fe03793c2cfe18cad390d7af8b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://19d1dca7b398e517499ffa65ad44df69cdd016f37dc57e2d07d50279d3ddee17\",\"dweb:/ipfs/QmfMFR25367GB5PoBi1KZxWs1hZcJtC3eANiioG3dKj8ah\"]},\"node_modules/forge-std/src/StdCheats.sol\":{\"keccak256\":\"0x3c536209b4d4e1879adc4d91b12e237985f0f8f91e71828dacd8fca3bdf2fa99\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://65adfc61088d242dbab8faa738d104005531e3a52ed993329b54fa7ee45e53ab\",\"dweb:/ipfs/QmP1d4thtELTT2vup4XmrCSKXZ91Eq756pgKq1z5hq2NGP\"]},\"node_modules/forge-std/src/StdError.sol\":{\"keccak256\":\"0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6\",\"dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj\"]},\"node_modules/forge-std/src/StdInvariant.sol\":{\"keccak256\":\"0xd855e1fea6247f1bef118e2bee9f0039832988b7173fd17766bba4014ae26a3c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c58c0f0b66852dfd3c76fb7958d8b023489d7a874c7cb1ad4f2021f9ec8ab477\",\"dweb:/ipfs/Qmd3MX9HAkNUhPddL29ekwhqgRnjAobZ35UzchaJZNACCN\"]},\"node_modules/forge-std/src/StdJson.sol\":{\"keccak256\":\"0x9e2a7521190c462a0667706385f1c52a816220a9813ca8ac520fba7ba45d660b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d23017fe6570b28130a731b86179352b93a5fb5af32f11559837afc1186293c\",\"dweb:/ipfs/QmR3p6zG5Kmcr8gKocFCSopLHfXv1AziPJbH17nKyMxwxV\"]},\"node_modules/forge-std/src/StdMath.sol\":{\"keccak256\":\"0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92\",\"dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC\"]},\"node_modules/forge-std/src/StdStorage.sol\":{\"keccak256\":\"0xd1517df281f973dba8b7ba52c02d3df552b60d91b8f47e4669049da648778673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://52e43264f58a5dcfd985f3c99aa81064805aa8f1c2b4c6521fd63d45cdbba8d5\",\"dweb:/ipfs/QmUMTF6cRjt5tCQrrgQDXVRmHQLjevNsTvLFdaA1m9TBj9\"]},\"node_modules/forge-std/src/StdStyle.sol\":{\"keccak256\":\"0x2882555b0f58e48144e46e9aa5118a506b31ad7485327d54e8f681e8b414c337\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2850bcb1322de9d9dd87ded42debbe0e8fc4048173788d4c00c98b50e5f76985\",\"dweb:/ipfs/QmUiPKnj7GZLLQbJGY7bVDu79Q9jGEYNjR5ZBgwFy8mH97\"]},\"node_modules/forge-std/src/StdUtils.sol\":{\"keccak256\":\"0x6584855fecbe5b6a9f8ebdb26b37c58532c5bc5cc6e1737dfa7c8a045087be55\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40a35a4d292b4fed02e11d5f25fb474f10a7c4eb99f75b5383dc23fcb6e55d3c\",\"dweb:/ipfs/QmYZ2nz1EmNh4xLWf4YybZoa1Da1z3Wq3w4pneMhkouMi4\"]},\"node_modules/forge-std/src/Test.sol\":{\"keccak256\":\"0xddf16afce2bb7bbb69ed868d4c7ee8b4ea4ffbf8929427fe799682f107534945\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://52f6ebde2a4cb9d08aea5fb3d62b2f15961bb9a29d6d9e30dd0859d0d631cabf\",\"dweb:/ipfs/QmeJ9Dp1GYUggzjGiwTZkxCfB15NfyfgcyrNZL5tyWZbVZ\"]},\"node_modules/forge-std/src/Vm.sol\":{\"keccak256\":\"0xdd9f518aade851117d3ca3122cae6ed413a8b8355d43d69db336e94da3214a96\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://939ede17edec5c78176379839f4c68851b1316e8f5789efb2f01cbdae09b88ef\",\"dweb:/ipfs/QmYiBBb7Nyuse7HoEFkCeauUwcpef9S33ozZYDqXCEXEtH\"]},\"node_modules/forge-std/src/console.sol\":{\"keccak256\":\"0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70\",\"dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec\"]},\"node_modules/forge-std/src/console2.sol\":{\"keccak256\":\"0xcd5706f5a7025825d9fd389c89b49bf571f9abaea8a062dc4048320b5b43bf46\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c066485a7d4bd18d44efb4c89274b0959e8066b9a480383a2ce07d7f31555f88\",\"dweb:/ipfs/QmckeYfA5FtAjcxaytq69Dpj6uY57tbQ61kNPPxXi9kgbW\"]},\"node_modules/forge-std/src/interfaces/IMulticall3.sol\":{\"keccak256\":\"0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0\",\"dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2\"]},\"src/AdminFacet.sol\":{\"keccak256\":\"0x1a2d8498fd8fd33bdda336678927e9f541b02b454d82994cd4a650f1f3a2942a\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://53f331f3125c77de8a8efa62288c88b9e72f93763cf7b255ee039a661198e936\",\"dweb:/ipfs/QmPvkNQKNyRf3BVyjet6YmWmzhBKC5tFq3BZTx66U167u2\"]},\"src/AuctionFacet.sol\":{\"keccak256\":\"0x41a60f4e0ea36dd4a1acb8845d07f8eee2e788aa0acc7eeea3c3443448231f22\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://049a623687b02d8ceb7f933cdad6b6de5f28d826cb7eb828c1b2ecfba1b02b48\",\"dweb:/ipfs/QmRSjXjDZqys1KWaK2YbWhuMju5A45KLETF9KtjzHVFGbM\"]},\"src/BorrowFacet.sol\":{\"keccak256\":\"0x960ac7f5ddc23fd9c9b87481451b47022b85ce53eefc1c46fe9cdbd34481e2fc\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://3c17390c85d849708b4489909ab63f11ceb8652d2c2f465e2c0b42b7a71fed94\",\"dweb:/ipfs/QmZNQ9RdZhk9QAxQkws1Fsv5UMwfJpra77HokJCxM8wERH\"]},\"src/BorrowLogic/BorrowCheckers.sol\":{\"keccak256\":\"0x023dce239e7e6d534db05e6364715ebb3399c3c9dccf894e9076712ab779745d\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://cfabb6dbacbb9d09ee26887d755e88d9761d266a3daa68a54c070ff967bf2aa8\",\"dweb:/ipfs/QmbdtPZcZ5QSB8LKQMEy6wU5jDZSSkMJvtGVDpEDuN3bz4\"]},\"src/BorrowLogic/BorrowHandlers.sol\":{\"keccak256\":\"0x41dbb5b648ea50541ab227e77e8850607731ad7ebd8171f5d0d96eb829246301\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://780b77c00afd5fa5d97ba16f3d3a7e83bb909608fb54f5f38f19120a16d5bb18\",\"dweb:/ipfs/QmTPZ47VbeFxbWdou6hFMkk86PStsLuh2uNZfhJVoGjyBX\"]},\"src/ClaimFacet.sol\":{\"keccak256\":\"0x06a664d0d467d20ffc78de21c78670a08f134752f4872db55d5dc587e76ecec2\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://e1312cb1cff9ba34218db3219647e9d63685e32a88ed5007858d8af76b440653\",\"dweb:/ipfs/QmbazoYdTrS6FaMjbXM5eWWaz41JGV9QzazuxXAVdDsk1K\"]},\"src/DataStructure/ERC721Errors.sol\":{\"keccak256\":\"0x0ee13f898a2d61d6662ef236db05001d14086ff4431bef2ae89c1979819d38d0\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://2e1878fe70994d02159dbf4a5a9c79b3665feaae0d08ff420b3f00cb8ed6355a\",\"dweb:/ipfs/QmNYJDoien8bUQFYuc75GyVGVTYuiUagF4RRUSGTTmZNH7\"]},\"src/DataStructure/Errors.sol\":{\"keccak256\":\"0x6c4db7ebc787971449c92a004a1742a0ebed90b3073de98ac677a7471696f8c5\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://b650ca8195bbdf7e6010ec51248ea3beb4a255730fb8e6404196b1680d5f1433\",\"dweb:/ipfs/QmbU8dkitPbxtTkUWgqL4Rgx3KdDzDgkYESY48muSmcTop\"]},\"src/DataStructure/Global.sol\":{\"keccak256\":\"0x9596c1bdf1271dd447db6a8f26ca493253674e252c9f63a7bc13c8689a7b6e49\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://3ff822127c6c674400e9730466eb6832d19a72eaf991f3bbf62d251a6e2b49d5\",\"dweb:/ipfs/QmZPGbWwS7rTPF3NiyjivxDseeBW64GhfkGvVNuaCbnzDv\"]},\"src/DataStructure/Objects.sol\":{\"keccak256\":\"0x251dd6c3f36c5a2c8a6a867aa29c9ba8b4bb7f2ec1a7321d630fea19f6bbd83a\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://a7f620222a6b6d909e8aa2d7191200b312345b6c704eecdf40729982e238f44e\",\"dweb:/ipfs/QmTikrgA5SKJrsJanid1atHw1M7opEvwuGKNRQTbjeM4sq\"]},\"src/DataStructure/Storage.sol\":{\"keccak256\":\"0x8f99f5f94641c826d0b4bd2dadb065745ff877b195fb1eb7392362a026d01380\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://f2c2362ee8472e6076f7f18a51264c96e63a346e61da6a7234abe5e3c034de38\",\"dweb:/ipfs/QmW59HJM49LDieB2svjKnYzo7hdYKG24rLKgb7AfiXht4z\"]},\"src/ProtocolFacet.sol\":{\"keccak256\":\"0x9c1c8deb2d61a8e39028c31154e51f6f4acccd71d4995cd82442e5addd9a5916\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://9e1d0cfcefa35601756a9f9aec29fcd1a072dc3e5e37d78def17d72ace29909d\",\"dweb:/ipfs/QmeCgh2tqzoz5Nf8X6UGY7ZeKTiyrvgoxZdzU3P9ua4JKX\"]},\"src/RepayFacet.sol\":{\"keccak256\":\"0x5b5c777a189495808271068b7757f73542bbc27b6141599752eaf4bef63c8e89\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://d6b289c89769655e173cecb2c20d8147d48ada74c5c6596060b70df7eed4b609\",\"dweb:/ipfs/Qmas7puaEDtvyLhMPUZGouNnVvky3gRKZCLemCxdLWALsF\"]},\"src/Signature.sol\":{\"keccak256\":\"0x37073550ae20735f42ae719377540c0bedd633aad9ce97d40e0facb965e4d137\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://d57bda44ce2f1e48f227c8b97cb23cd166d3b92421a3436835c81c1bc42a60ca\",\"dweb:/ipfs/QmU5yS6t3d6nhfUeGmwZnFsbo8LZe7MHED738pZBaUkPna\"]},\"src/SupplyPositionFacet.sol\":{\"keccak256\":\"0xd96da66c04a30bc8d665bdbec2eebbf23998aff501e00f64fc26d7ed0c4df780\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://bc62b16dbddf140812eb18fc39e7af0618c0b38c2b83ba9ee3efb67974963ad5\",\"dweb:/ipfs/QmYV7aBahd6EqmcjFK1Lncp27XeG2AKnLtQRFRnGsGu9Mz\"]},\"src/SupplyPositionLogic/DiamondERC721.sol\":{\"keccak256\":\"0xdb5734014944ffbfc70b937c0cb2ab310d15c7ceb93e852bf5c6aef64c24584b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://51bc9d846048e67e83c9e708aedd5f68ce240bd87c1c4a68526ee224553c0279\",\"dweb:/ipfs/QmUWcdYokYYxTNpJtSwM22Q4WBKxJEjfhtyAU97NFh1VdZ\"]},\"src/SupplyPositionLogic/NFTUtils.sol\":{\"keccak256\":\"0xc1fdc762292d11504da9d1b999d6364d8c76b721c8f6f7369e0030c9dae9af13\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dc9d2a3636065c11ad95bc669381dae82218909711ed54e31ee3085671ade192\",\"dweb:/ipfs/QmfX1zJes16PDd9NUGcSNYBMRvaykMhyaEMEQsmMugVtP4\"]},\"src/SupplyPositionLogic/SafeMint.sol\":{\"keccak256\":\"0xfe55649875c4f7c6fa65c01b8abf9e0f6564cab19ec24fb895bdce6dde90764d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5b0e86c734cce67187b23816bbba38c9eaab5e2154606de75866637f4774fd99\",\"dweb:/ipfs/QmPuJk6rhpUNjhftEAzbm26DA5tZw8sHybzYZ6G4PuWG8G\"]},\"src/interface/IAdminFacet.sol\":{\"keccak256\":\"0xfc9606029a4ef8d26d8c86c377d77c3caf1e26335f3e155f279581e487bcc640\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://5a04932fe22d016e66e172bff16c0611abcb8804e1039f99678a5d22e130daee\",\"dweb:/ipfs/QmUKzRKB5CPD3tE81Pbn8HHesuY1j64L5Xfbi4E8xsja8h\"]},\"src/interface/IAuctionFacet.sol\":{\"keccak256\":\"0x142cf5565d929cf20c8b042f791360b7b76289620efcd42c90a37f2d8179e49f\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://3aa1107c4c11a419c7340aff9624e3f539196759ffbe4eed5fde26cbbf1b4567\",\"dweb:/ipfs/QmfS88KKuQskg2RQP6GoVEbk9uUhbmVYH6Fps7yNUpfMCc\"]},\"src/interface/IBorrowCheckers.sol\":{\"keccak256\":\"0x581d912358ce65c74e7e3f089486d5c2cc7f45be7cb02ef5ee26a293c9ba1f18\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://18d4d2dee4cf9ccbeb8a33b037dc0021b1315fd3fca864a2127834f36cb6aaba\",\"dweb:/ipfs/QmUWvZMWUqv2DJpooXCHmQuBcr4kTzBhwApQniouAKdEJn\"]},\"src/interface/IBorrowFacet.sol\":{\"keccak256\":\"0xc2351fa73840199deb8c9ecd663294517ce6e457e198d699d53d651b72f1fe43\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://2094053b1d81f799877ee2ccd44a38601d80b97f93d54a14e0dfbc8ba8f3aba7\",\"dweb:/ipfs/QmZwEsKquQgH1H5tnKCQuBEeU9mRcnNBPC2bXZGt8XVuHF\"]},\"src/interface/IBorrowHandlers.sol\":{\"keccak256\":\"0x420bed3254df51bff3c728e252b74a9603fa3f834330c1edf0f0d257444f03ce\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://200955bcca9610fd1a0e3230f761ade89a12285bf60c91a758ef4045f5b55f54\",\"dweb:/ipfs/QmV9vYWeLVvo5ykdi8x6scgK4QDwYuPkhd4KETKWPA5tMv\"]},\"src/interface/IClaimFacet.sol\":{\"keccak256\":\"0xa797f893096a5828eb1614b941df05b54afcf72ff1fde42a106976bf70d5e71c\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://19be4abca0237cf076fb66e9d4fa9119c7bd9004a9e34a39c162cc3a1bb8e0cc\",\"dweb:/ipfs/QmaLkzLvZLwbcWn8CXmL9JYwVYPHeNWsMKD9JPMRozDBSQ\"]},\"src/interface/IOwnershipFacet.sol\":{\"keccak256\":\"0x505b2f2d275a0aa2861d08564f6d03e44e8d10cd8a1c6fbdea1105383e0e9a4d\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://4ca7e3a48787d056da5f3569965f9c2015e65d8ceb124e9346cf73d55e55c8b2\",\"dweb:/ipfs/QmWJmUsegbVtaJ71yCJZiEpedEvhSuw73NyjBfRFCkxt2z\"]},\"src/interface/IProtocolFacet.sol\":{\"keccak256\":\"0x41ef10bad154ed0a98a1fa46046869d6d6ab744953186caa287ced95b80ddc4a\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://8a45399f560a088b94d3d5e14a104a3cbc02cec1083cf1eec5a8b135341c7d53\",\"dweb:/ipfs/QmcCDJmFCkRZoeHojqmvaMsavwZXcBeZV54i5eAfxmjcH5\"]},\"src/interface/IRepayFacet.sol\":{\"keccak256\":\"0x932b0a489b740c46361e4cd5f5103c765b954cedfd41a823dd0549f435f0b7d4\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://fddbb0a0401cd79a17b794c9caaa6f3c2e9381a1a3fd6ea04c43e2148786c572\",\"dweb:/ipfs/QmUKSTezv4twtFPVCXRSQZBfKNW5Zkd22w4HWFfJrV7VyQ\"]},\"src/interface/ISignature.sol\":{\"keccak256\":\"0x6dadc10c64bc681b36624c2937fd3e108e87ca0056d311510e53a25cd009d065\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://a813951b3d9f26315a9363a779c745c58ad261ee9fa8a997727ea7ddc6c90da1\",\"dweb:/ipfs/QmR8G8XQDm7xjKzPH29PmYw2LnHakapvkdavJXZCT3vKFT\"]},\"src/mock/Money.sol\":{\"keccak256\":\"0x5e3ad642d66b67ba5606b3e566bd6d61aaf1fb041f65b147c8f73abdf502d8d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ae809b748f38d9d9e4a4bd8d211e7b30c8d56b5e632204cc27654daf995e5c3\",\"dweb:/ipfs/QmUKMtSDrZG3QHFWRUAh5FPAxGXpSGZsafStRhoESxxL52\"]},\"src/mock/NFT.sol\":{\"keccak256\":\"0xc9930007614632c7dc1393745990ec87c310b4178f387f1cbe52b50f4016fb64\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://b1bd12749aec08d1d0f5d2d4d8d32259c9c23ab243f1aa16b0106d89955f4e50\",\"dweb:/ipfs/QmRohEtgT3y7kTbeSbzQkxBTJemznmkxJey2vTKmZCBvFT\"]},\"src/mock/TestCurrency.sol\":{\"keccak256\":\"0xea5129d4a21ac381a780017790fc8f0c888aa8354314bd97d396056f4bdd20f0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://98c46c988468539ee172a1bad7e9e666707bec019b62c90207c552679a644960\",\"dweb:/ipfs/QmexsmkJdB934t2Tc6x9oPE64NbdYNjLMz8r3CituThgnB\"]},\"src/utils/Erc20CheckedTransfer.sol\":{\"keccak256\":\"0x03a0041ce856ecca1d5d2b67443dca5f2acab9fe38cd592b2d3e897eaa3955d0\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://10515dcb2700e1b01b00f50c704ffc7daba221080221e056d498da890c586c82\",\"dweb:/ipfs/QmRW2ycAG7nsk2YXnp6nk8s56RqTV1EVCuPkLgQsUHyGeW\"]},\"src/utils/FuncSelectors.h.sol\":{\"keccak256\":\"0xa79f6e8531c9a91f3e26e48ef5d7b0c8327e17b5352400668880cc1a98f36ddc\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://518f86fef198ec19ccba9d2438c8f490581f326cb2bdba8d3e6634c4797cebc0\",\"dweb:/ipfs/Qmb1NGp72szB8owp5MjaFWF7zngPtQ6EHUUMy38tn3BCqi\"]},\"src/utils/NFTokenUtils.sol\":{\"keccak256\":\"0x886dbd7a03bf3a8fd4739b86bc4eba01014e7683029dd485993369ad0a0473c5\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://02591fc4c94a10c37a9132dfbd9f1222f62c919ef5ba7b76a1ca1c1e2dc1d105\",\"dweb:/ipfs/QmVkSSvA12C2gu8gEv8CxBHpKY242THHAy7eNfzHpXdhtT\"]},\"src/utils/RayMath.sol\":{\"keccak256\":\"0x234068d17599aefc86ca6f5febb25be32bb71c0b45326c24936b23dd9cc876ac\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://421375b2a164c6ffa1e018c533e2a231395fc4f582acc3a43672a24e51fbe328\",\"dweb:/ipfs/QmUFEZi7BjELW2fDZuUpeDCTrNw1YhMmeqJvoMk2MfuxDU\"]},\"test/Borrow/BorrowHandlers.t.sol\":{\"keccak256\":\"0xbcdb4e4e9eccc6dc4a3ec37a0429853fec5d0944bbcb6f48c0246adc2fb4bf0f\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://c40c6b6e323d6895ef7c6f46cb6d0ff697a957537f586d8993aa8f26a5fc300a\",\"dweb:/ipfs/Qmdg6GjCBDhLsrjHMprcRBD4MEcb5rSiRpeA83TBd8KHL3\"]},\"test/Commons/BigKairos.sol\":{\"keccak256\":\"0xe5e4959e7dca0aa52e2d35459a1f71b91a2af9a70fbb1465c31a98b53823eddc\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://25e44dd8b518574592079f2137651440fd7ce1360cfe5ad35d8c6993e8c4622a\",\"dweb:/ipfs/QmcqGbDvgGu2oHqD17PURL2matovxNPyuGgYajw57Q6SCj\"]},\"test/Commons/Internal.sol\":{\"keccak256\":\"0x12507426f01169802f333a2fb704fd70c35659ff2854c66d928a901673fca132\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://7ee48041714fd79f61fd382d6d9427732be1af960af57aff862432129ecac4e6\",\"dweb:/ipfs/QmT9p8LiAYfH2622zT7FD9UmcvTmywmG6N7CKyuPJjL3nj\"]},\"test/Commons/Loggers.sol\":{\"keccak256\":\"0x5ad09ea0e54173023d712d84e06faa58267cadc7b34404adabc1c11c28c0f238\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://dfd5aafd6dca411217e0928b82f211b16a9b8e937389838cadd307db638b83eb\",\"dweb:/ipfs/QmbB4vPdgPrrVhb4W9z9UeLQPBzU7xXQ1dkk2zzQNkwX85\"]},\"test/Commons/TestCommons.sol\":{\"keccak256\":\"0x661e48bcca61c615c6b5f082c744281af6a886b3d4de4d0607fce24a1be2d565\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://95556855c33b1be5e827c505e6ab6fa54534c0bc4e8610986cd0361e59c5a1bf\",\"dweb:/ipfs/QmY4VKfqcLa8hAN9C3L1N4hTyAfc74nPkUxCAUZm9nw2N1\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.18+commit.87f61d96"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "type": "error",
          "name": "AssertionFailedCollatStateDontMatch"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "AssertionFailedLoanDontMatch"
        },
        {
          "inputs": [
            {
              "internalType": "Ray",
              "name": "expected",
              "type": "uint256"
            },
            {
              "internalType": "Ray",
              "name": "actual",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "AssertionFailedRayDontMatch"
        },
        {
          "inputs": [
            {
              "internalType": "struct Offer",
              "name": "offer",
              "type": "tuple",
              "components": [
                {
                  "internalType": "contract IERC20",
                  "name": "assetToLend",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "loanToValue",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "duration",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "expirationDate",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "tranche",
                  "type": "uint256"
                },
                {
                  "internalType": "struct NFToken",
                  "name": "collateral",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "contract IERC721",
                      "name": "implem",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "id",
                      "type": "uint256"
                    }
                  ]
                }
              ]
            },
            {
              "internalType": "struct NFToken",
              "name": "providedNft",
              "type": "tuple",
              "components": [
                {
                  "internalType": "contract IERC721",
                  "name": "implem",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                }
              ]
            }
          ],
          "type": "error",
          "name": "BadCollateral"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "loanId",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "BorrowerAlreadyClaimed"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "admin",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "CallerIsNotOwner"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "endDate",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "loanId",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "CollateralIsNotLiquidableYet"
        },
        {
          "inputs": [
            {
              "internalType": "contract IERC20",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "ERC20TransferFailed"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ERC721AddressZeroIsNotAValidOwner"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ERC721ApprovalToCurrentOwner"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ERC721ApproveToCaller"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ERC721CallerIsNotOwnerNorApproved"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ERC721CallerIsNotOwnerNorApprovedForAll"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ERC721InvalidTokenId"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ERC721MintToTheZeroAddress"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ERC721TokenAlreadyMinted"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ERC721TransferFromIncorrectOwner"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ERC721TransferToNonERC721ReceiverImplementer"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ERC721TransferToTheZeroAddress"
        },
        {
          "inputs": [
            {
              "internalType": "contract IERC20",
              "name": "firstRequested",
              "type": "address"
            },
            {
              "internalType": "contract IERC20",
              "name": "requested",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "InconsistentAssetRequests"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "firstTrancheIdUsed",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "trancheIdFound",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "InconsistentTranches"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "nbOfTranches",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "InvalidTranche"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "loanId",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "LoanAlreadyRepaid"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "loanId",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "LoanNotRepaidOrLiquidatedYet"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "loanId",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "NotBorrowerOfTheLoan"
        },
        {
          "inputs": [
            {
              "internalType": "struct Offer",
              "name": "offer",
              "type": "tuple",
              "components": [
                {
                  "internalType": "contract IERC20",
                  "name": "assetToLend",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "loanToValue",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "duration",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "expirationDate",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "tranche",
                  "type": "uint256"
                },
                {
                  "internalType": "struct NFToken",
                  "name": "collateral",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "contract IERC721",
                      "name": "implem",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "id",
                      "type": "uint256"
                    }
                  ]
                }
              ]
            },
            {
              "internalType": "uint256",
              "name": "expirationDate",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "OfferHasExpired"
        },
        {
          "inputs": [
            {
              "internalType": "struct Offer",
              "name": "offer",
              "type": "tuple",
              "components": [
                {
                  "internalType": "contract IERC20",
                  "name": "assetToLend",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "loanToValue",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "duration",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "expirationDate",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "tranche",
                  "type": "uint256"
                },
                {
                  "internalType": "struct NFToken",
                  "name": "collateral",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "contract IERC721",
                      "name": "implem",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "id",
                      "type": "uint256"
                    }
                  ]
                }
              ]
            },
            {
              "internalType": "uint256",
              "name": "requested",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "lowerBound",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "RequestedAmountIsUnderMinimum"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "requested",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "offered",
              "type": "uint256"
            },
            {
              "internalType": "struct Offer",
              "name": "offer",
              "type": "tuple",
              "components": [
                {
                  "internalType": "contract IERC20",
                  "name": "assetToLend",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "loanToValue",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "duration",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "expirationDate",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "tranche",
                  "type": "uint256"
                },
                {
                  "internalType": "struct NFToken",
                  "name": "collateral",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "contract IERC721",
                      "name": "implem",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "id",
                      "type": "uint256"
                    }
                  ]
                }
              ]
            }
          ],
          "type": "error",
          "name": "RequestedAmountTooHigh"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Unauthorized"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "lent",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "UnsafeAmountLent"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "minLoanToValue",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxLoanToValue",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "UnsafeOfferLoanToValuesGap"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "approved",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Approval",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bool",
              "name": "approved",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ApprovalForAll",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "loanId",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "bytes",
              "name": "loan",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Borrow",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "loanId",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "bytes",
              "name": "args",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Buy",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "claimant",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "claimed",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "loanId",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Claim",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "newAuctionDuration",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "NewAuctionDuration",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "Ray",
              "name": "newAuctionPriceFactor",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "NewAuctionPriceFactor",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "contract IERC20",
              "name": "currency",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "newLowerBound",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "NewBorrowAmountPerOfferLowerBound",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "contract IERC20",
              "name": "currency",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "newMinOfferCost",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "NewMininimumOfferCost",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "Ray",
              "name": "tranche",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "newTrancheId",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "NewTranche",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "loanId",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Repay",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Transfer",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256",
              "name": "",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "val",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "val",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "val",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "val",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "logs",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "IS_TEST",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "approve"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct BorrowArg[]",
              "name": "args",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "struct NFToken",
                  "name": "nft",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "contract IERC721",
                      "name": "implem",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "id",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "struct OfferArg[]",
                  "name": "args",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "bytes",
                      "name": "signature",
                      "type": "bytes"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "struct Offer",
                      "name": "offer",
                      "type": "tuple",
                      "components": [
                        {
                          "internalType": "contract IERC20",
                          "name": "assetToLend",
                          "type": "address"
                        },
                        {
                          "internalType": "uint256",
                          "name": "loanToValue",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "duration",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "expirationDate",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "tranche",
                          "type": "uint256"
                        },
                        {
                          "internalType": "struct NFToken",
                          "name": "collateral",
                          "type": "tuple",
                          "components": [
                            {
                              "internalType": "contract IERC721",
                              "name": "implem",
                              "type": "address"
                            },
                            {
                              "internalType": "uint256",
                              "name": "id",
                              "type": "uint256"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "borrow"
        },
        {
          "inputs": [
            {
              "internalType": "struct BuyArg[]",
              "name": "args",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "loanId",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "buy"
        },
        {
          "inputs": [
            {
              "internalType": "struct Offer",
              "name": "offer",
              "type": "tuple",
              "components": [
                {
                  "internalType": "contract IERC20",
                  "name": "assetToLend",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "loanToValue",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "duration",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "expirationDate",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "tranche",
                  "type": "uint256"
                },
                {
                  "internalType": "struct NFToken",
                  "name": "collateral",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "contract IERC721",
                      "name": "implem",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "id",
                      "type": "uint256"
                    }
                  ]
                }
              ]
            },
            {
              "internalType": "struct NFToken",
              "name": "providedNft",
              "type": "tuple",
              "components": [
                {
                  "internalType": "contract IERC721",
                  "name": "implem",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                }
              ]
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "checkCollateralExternal"
        },
        {
          "inputs": [
            {
              "internalType": "struct OfferArg",
              "name": "arg",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes",
                  "name": "signature",
                  "type": "bytes"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "struct Offer",
                  "name": "offer",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "contract IERC20",
                      "name": "assetToLend",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "loanToValue",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "duration",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "expirationDate",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "tranche",
                      "type": "uint256"
                    },
                    {
                      "internalType": "struct NFToken",
                      "name": "collateral",
                      "type": "tuple",
                      "components": [
                        {
                          "internalType": "contract IERC721",
                          "name": "implem",
                          "type": "address"
                        },
                        {
                          "internalType": "uint256",
                          "name": "id",
                          "type": "uint256"
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "checkOfferArgExternal",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "positionIds",
              "type": "uint256[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "claim",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "sent",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "loanIds",
              "type": "uint256[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "claimAsBorrower",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "sent",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "Ray",
              "name": "newTranche",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "createTranche",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "newTrancheId",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeArtifacts",
          "outputs": [
            {
              "internalType": "string[]",
              "name": "excludedArtifacts_",
              "type": "string[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeContracts",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "excludedContracts_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeSenders",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "excludedSenders_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "failed",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getApproved",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getLoan",
          "outputs": [
            {
              "internalType": "struct Loan",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "contract IERC20",
                  "name": "assetLent",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "lent",
                  "type": "uint256"
                },
                {
                  "internalType": "Ray",
                  "name": "shareLent",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "startDate",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "endDate",
                  "type": "uint256"
                },
                {
                  "internalType": "struct Auction",
                  "name": "auction",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "duration",
                      "type": "uint256"
                    },
                    {
                      "internalType": "Ray",
                      "name": "priceFactor",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "Ray",
                  "name": "interestPerSecond",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "borrower",
                  "type": "address"
                },
                {
                  "internalType": "struct NFToken",
                  "name": "collateral",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "contract IERC721",
                      "name": "implem",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "id",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "struct Payment",
                  "name": "payment",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "paid",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "minInterestsToRepay",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bool",
                      "name": "liquidated",
                      "type": "bool"
                    },
                    {
                      "internalType": "bool",
                      "name": "borrowerClaimed",
                      "type": "bool"
                    }
                  ]
                },
                {
                  "internalType": "uint256",
                  "name": "supplyPositionIndex",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "nbOfPositions",
                  "type": "uint256"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract IERC20",
              "name": "currency",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getMinOfferCostAndBorrowableAmount",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "minOfferCost",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "offerBorrowAmountLowerBound",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getParameters",
          "outputs": [
            {
              "internalType": "Ray",
              "name": "auctionPriceFactor",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "auctionDuration",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "nbOfLoans",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "nbOfTranches",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRateOfTranche",
          "outputs": [
            {
              "internalType": "Ray",
              "name": "rate",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isApprovedForAll",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct Offer",
              "name": "offer",
              "type": "tuple",
              "components": [
                {
                  "internalType": "contract IERC20",
                  "name": "assetToLend",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "loanToValue",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "duration",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "expirationDate",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "tranche",
                  "type": "uint256"
                },
                {
                  "internalType": "struct NFToken",
                  "name": "collateral",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "contract IERC721",
                      "name": "implem",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "id",
                      "type": "uint256"
                    }
                  ]
                }
              ]
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "offerDigest",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "onERC721Received",
          "outputs": [
            {
              "internalType": "bytes4",
              "name": "",
              "type": "bytes4"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "ownerOf",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "position",
          "outputs": [
            {
              "internalType": "struct Provision",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "Ray",
                  "name": "share",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "loanId",
                  "type": "uint256"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "loanId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "price",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "loanIds",
              "type": "uint256[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "repay"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "safeTransferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "safeTransferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "struct Loan",
              "name": "loan",
              "type": "tuple",
              "components": [
                {
                  "internalType": "contract IERC20",
                  "name": "assetLent",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "lent",
                  "type": "uint256"
                },
                {
                  "internalType": "Ray",
                  "name": "shareLent",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "startDate",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "endDate",
                  "type": "uint256"
                },
                {
                  "internalType": "struct Auction",
                  "name": "auction",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "duration",
                      "type": "uint256"
                    },
                    {
                      "internalType": "Ray",
                      "name": "priceFactor",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "Ray",
                  "name": "interestPerSecond",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "borrower",
                  "type": "address"
                },
                {
                  "internalType": "struct NFToken",
                  "name": "collateral",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "contract IERC721",
                      "name": "implem",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "id",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "struct Payment",
                  "name": "payment",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "paid",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "minInterestsToRepay",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bool",
                      "name": "liquidated",
                      "type": "bool"
                    },
                    {
                      "internalType": "bool",
                      "name": "borrowerClaimed",
                      "type": "bool"
                    }
                  ]
                },
                {
                  "internalType": "uint256",
                  "name": "supplyPositionIndex",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "nbOfPositions",
                  "type": "uint256"
                }
              ]
            },
            {
              "internalType": "struct Provision",
              "name": "provision",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "Ray",
                  "name": "share",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "loanId",
                  "type": "uint256"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "sendInterestsExternal",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct Loan",
              "name": "loan",
              "type": "tuple",
              "components": [
                {
                  "internalType": "contract IERC20",
                  "name": "assetLent",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "lent",
                  "type": "uint256"
                },
                {
                  "internalType": "Ray",
                  "name": "shareLent",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "startDate",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "endDate",
                  "type": "uint256"
                },
                {
                  "internalType": "struct Auction",
                  "name": "auction",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "duration",
                      "type": "uint256"
                    },
                    {
                      "internalType": "Ray",
                      "name": "priceFactor",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "Ray",
                  "name": "interestPerSecond",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "borrower",
                  "type": "address"
                },
                {
                  "internalType": "struct NFToken",
                  "name": "collateral",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "contract IERC721",
                      "name": "implem",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "id",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "struct Payment",
                  "name": "payment",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "paid",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "minInterestsToRepay",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bool",
                      "name": "liquidated",
                      "type": "bool"
                    },
                    {
                      "internalType": "bool",
                      "name": "borrowerClaimed",
                      "type": "bool"
                    }
                  ]
                },
                {
                  "internalType": "uint256",
                  "name": "supplyPositionIndex",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "nbOfPositions",
                  "type": "uint256"
                }
              ]
            },
            {
              "internalType": "struct Provision",
              "name": "provision",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "Ray",
                  "name": "share",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "loanId",
                  "type": "uint256"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "sendShareOfSaleAsSupplierExternal",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "approved",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setApprovalForAll"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "newAuctionDuration",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setAuctionDuration"
        },
        {
          "inputs": [
            {
              "internalType": "Ray",
              "name": "newAuctionPriceFactor",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setAuctionPriceFactor"
        },
        {
          "inputs": [
            {
              "internalType": "contract IERC20",
              "name": "currency",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "newLowerBound",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setBorrowAmountPerOfferLowerBound"
        },
        {
          "inputs": [
            {
              "internalType": "contract IERC20",
              "name": "currency",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "newMinOfferCost",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setMinOfferCost"
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetArtifactSelectors",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzSelector[]",
              "name": "targetedArtifactSelectors_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes4[]",
                  "name": "selectors",
                  "type": "bytes4[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetArtifacts",
          "outputs": [
            {
              "internalType": "string[]",
              "name": "targetedArtifacts_",
              "type": "string[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetContracts",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "targetedContracts_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetSelectors",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzSelector[]",
              "name": "targetedSelectors_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes4[]",
                  "name": "selectors",
                  "type": "bytes4[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetSenders",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "targetedSenders_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testConsistentAssetRequests"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testConsistentOfferTranches"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testMultipleUseCollateral"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testRequestedAmountTooHigh"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testUseCollateralNominal",
          "outputs": [
            {
              "internalType": "struct Loan",
              "name": "loan",
              "type": "tuple",
              "components": [
                {
                  "internalType": "contract IERC20",
                  "name": "assetLent",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "lent",
                  "type": "uint256"
                },
                {
                  "internalType": "Ray",
                  "name": "shareLent",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "startDate",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "endDate",
                  "type": "uint256"
                },
                {
                  "internalType": "struct Auction",
                  "name": "auction",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "duration",
                      "type": "uint256"
                    },
                    {
                      "internalType": "Ray",
                      "name": "priceFactor",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "Ray",
                  "name": "interestPerSecond",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "borrower",
                  "type": "address"
                },
                {
                  "internalType": "struct NFToken",
                  "name": "collateral",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "contract IERC721",
                      "name": "implem",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "id",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "struct Payment",
                  "name": "payment",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "paid",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "minInterestsToRepay",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bool",
                      "name": "liquidated",
                      "type": "bool"
                    },
                    {
                      "internalType": "bool",
                      "name": "borrowerClaimed",
                      "type": "bool"
                    }
                  ]
                },
                {
                  "internalType": "uint256",
                  "name": "supplyPositionIndex",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "nbOfPositions",
                  "type": "uint256"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testUseCollateralReturn"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testUseOfferReturn"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "struct OfferArg[]",
              "name": "args",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "bytes",
                  "name": "signature",
                  "type": "bytes"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "struct Offer",
                  "name": "offer",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "contract IERC20",
                      "name": "assetToLend",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "loanToValue",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "duration",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "expirationDate",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "tranche",
                      "type": "uint256"
                    },
                    {
                      "internalType": "struct NFToken",
                      "name": "collateral",
                      "type": "tuple",
                      "components": [
                        {
                          "internalType": "contract IERC721",
                          "name": "implem",
                          "type": "address"
                        },
                        {
                          "internalType": "uint256",
                          "name": "id",
                          "type": "uint256"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "struct NFToken",
              "name": "nft",
              "type": "tuple",
              "components": [
                {
                  "internalType": "contract IERC721",
                  "name": "implem",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "useCollateralExternal",
          "outputs": [
            {
              "internalType": "struct Loan",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "contract IERC20",
                  "name": "assetLent",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "lent",
                  "type": "uint256"
                },
                {
                  "internalType": "Ray",
                  "name": "shareLent",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "startDate",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "endDate",
                  "type": "uint256"
                },
                {
                  "internalType": "struct Auction",
                  "name": "auction",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "duration",
                      "type": "uint256"
                    },
                    {
                      "internalType": "Ray",
                      "name": "priceFactor",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "Ray",
                  "name": "interestPerSecond",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "borrower",
                  "type": "address"
                },
                {
                  "internalType": "struct NFToken",
                  "name": "collateral",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "contract IERC721",
                      "name": "implem",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "id",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "struct Payment",
                  "name": "payment",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "paid",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "minInterestsToRepay",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bool",
                      "name": "liquidated",
                      "type": "bool"
                    },
                    {
                      "internalType": "bool",
                      "name": "borrowerClaimed",
                      "type": "bool"
                    }
                  ]
                },
                {
                  "internalType": "uint256",
                  "name": "supplyPositionIndex",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "nbOfPositions",
                  "type": "uint256"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct OfferArg",
              "name": "arg",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes",
                  "name": "signature",
                  "type": "bytes"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "struct Offer",
                  "name": "offer",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "contract IERC20",
                      "name": "assetToLend",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "loanToValue",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "duration",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "expirationDate",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "tranche",
                      "type": "uint256"
                    },
                    {
                      "internalType": "struct NFToken",
                      "name": "collateral",
                      "type": "tuple",
                      "components": [
                        {
                          "internalType": "contract IERC721",
                          "name": "implem",
                          "type": "address"
                        },
                        {
                          "internalType": "uint256",
                          "name": "id",
                          "type": "uint256"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "internalType": "struct CollateralState",
              "name": "collatState",
              "type": "tuple",
              "components": [
                {
                  "internalType": "Ray",
                  "name": "matched",
                  "type": "uint256"
                },
                {
                  "internalType": "contract IERC20",
                  "name": "assetLent",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tranche",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "minOfferDuration",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "minOfferLoanToValue",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxOfferLoanToValue",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "struct NFToken",
                  "name": "nft",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "contract IERC721",
                      "name": "implem",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "id",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "uint256",
                  "name": "loanId",
                  "type": "uint256"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "useOfferExternal",
          "outputs": [
            {
              "internalType": "struct CollateralState",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "Ray",
                  "name": "matched",
                  "type": "uint256"
                },
                {
                  "internalType": "contract IERC20",
                  "name": "assetLent",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tranche",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "minOfferDuration",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "minOfferLoanToValue",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxOfferLoanToValue",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "struct NFToken",
                  "name": "nft",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "contract IERC721",
                      "name": "implem",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "id",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "uint256",
                  "name": "loanId",
                  "type": "uint256"
                }
              ]
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "approve(address,uint256)": {
            "details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
          },
          "balanceOf(address)": {
            "details": "Returns the number of tokens in ``owner``'s account."
          },
          "borrow(((address,uint256),(bytes,uint256,(address,uint256,uint256,uint256,uint256,(address,uint256)))[])[])": {
            "params": {
              "args": "list of arguments specifying at which terms each collateral should be used"
            }
          },
          "buy((uint256,address)[])": {
            "params": {
              "args": "arguments on what and how to buy"
            }
          },
          "claim(uint256[])": {
            "params": {
              "positionIds": "identifiers of one or multiple supply position to burn"
            },
            "returns": {
              "sent": "amount sent"
            }
          },
          "claimAsBorrower(uint256[])": {
            "params": {
              "loanIds": "loan identifiers of one or multiple loans where the borrower wants to claim liquidation share"
            },
            "returns": {
              "sent": "amount sent"
            }
          },
          "createTranche(uint256)": {
            "params": {
              "newTranche": "the interest rate of the new tranche"
            }
          },
          "getApproved(uint256)": {
            "details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
          },
          "getLoan(uint256)": {
            "params": {
              "id": "loan identifier"
            },
            "returns": {
              "_0": "loan the corresponding loan"
            }
          },
          "getMinOfferCostAndBorrowableAmount(address)": {
            "params": {
              "currency": "the erc20 asset lent on which the parameters apply"
            },
            "returns": {
              "minOfferCost": "the minimal amount to repay per offer used in loan",
              "offerBorrowAmountLowerBound": " minimum amount to borrow per offer used in loan"
            }
          },
          "getParameters()": {
            "returns": {
              "auctionDuration": "number of seconds after the auction start when the price hits 0",
              "auctionPriceFactor": "factor multiplied with the loan to value of a loan to get initial price         of a collateral on sale",
              "nbOfLoans": "total number of loans ever issued (active and ended)",
              "nbOfTranches": "total number of interest rates tranches ever created (active and inactive)"
            }
          },
          "getRateOfTranche(uint256)": {
            "params": {
              "id": "rate identifier"
            },
            "returns": {
              "rate": "the rate of the tranche, as a Ray, multiplier per second of the amount to repay (non compounding)         I.e lent * time since loan start * tranche = interests to repay"
            }
          },
          "isApprovedForAll(address,address)": {
            "details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
          },
          "offerDigest((address,uint256,uint256,uint256,uint256,(address,uint256)))": {
            "params": {
              "offer": "the loan offer signed/to sign by a supplier"
            },
            "returns": {
              "_0": "digest the digest, ecdsa sign as is to produce a valid loan offer signature"
            }
          },
          "onERC721Received(address,address,uint256,bytes)": {
            "details": "param data must be of format OfferArg[]",
            "params": {
              "data": "abi encoded arguments for the loan",
              "operator": "account that initialized the transfer action according to the NFT implementation contract",
              "tokenId": "token identifier of the NFT sent according to the NFT implementation contract"
            },
            "returns": {
              "_0": "selector `this.onERC721Received.selector` ERC721-compliant response, signaling compatibility"
            }
          },
          "ownerOf(uint256)": {
            "details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
          },
          "position(uint256)": {
            "params": {
              "tokenId": "token identifier of the supply position"
            },
            "returns": {
              "_0": "provision metadata"
            }
          },
          "price(uint256)": {
            "params": {
              "loanId": "identifier of the loan"
            },
            "returns": {
              "_0": "price computed price"
            }
          },
          "repay(uint256[])": {
            "details": "repay on behalf is activated, the collateral goes to the original borrower",
            "params": {
              "loanIds": "identifiers of loans to repay"
            }
          },
          "safeTransferFrom(address,address,uint256)": {
            "details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
          },
          "safeTransferFrom(address,address,uint256,bytes)": {
            "details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
          },
          "setAuctionDuration(uint256)": {
            "params": {
              "newAuctionDuration": "number of seconds of the duration"
            }
          },
          "setAuctionPriceFactor(uint256)": {
            "params": {
              "newAuctionPriceFactor": "the new factor multiplied to the loan to value"
            }
          },
          "setBorrowAmountPerOfferLowerBound(address,uint256)": {
            "params": {
              "currency": "the erc20 on which a new borrow amount lower bound is taking effect",
              "newLowerBound": "the new lower bound"
            }
          },
          "setMinOfferCost(address,uint256)": {
            "params": {
              "currency": "the erc20 on which a new minimum borrow cost will take effect",
              "newMinOfferCost": "the new minimum amount that will need to be repaid per loan offer used"
            }
          },
          "supportsInterface(bytes4)": {
            "details": "don't use this method for inclusion in the facet function selectors     prefer the LibDiamond implementation for this method     it is included here for IERC721-compliance"
          },
          "totalSupply()": {
            "returns": {
              "_0": "totalSupply the number"
            }
          },
          "transferFrom(address,address,uint256)": {
            "details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "borrow(((address,uint256),(bytes,uint256,(address,uint256,uint256,uint256,uint256,(address,uint256)))[])[])": {
            "notice": "take loans, take ownership of NFTs specified as collateral, sends borrowed money to caller"
          },
          "buy((uint256,address)[])": {
            "notice": "buy one or multiple NFTs in liquidation"
          },
          "claim(uint256[])": {
            "notice": "claims principal plus interests or liquidation share due as a supplier"
          },
          "claimAsBorrower(uint256[])": {
            "notice": "claims share of liquidation due to a borrower who's collateral has been sold"
          },
          "createTranche(uint256)": {
            "notice": "creates a new tranche at a new identifier for lenders to provide offers for"
          },
          "getLoan(uint256)": {
            "notice": "get loan metadata"
          },
          "getMinOfferCostAndBorrowableAmount(address)": {
            "notice": "get the minimal amount to repay per offer used in loan and minimum amount to borrow per offer.     Gives currently active settings, may not concern loans already issued."
          },
          "getParameters()": {
            "notice": "gets current values of parameters impacting loans behavior and total number of loans (active and ended)"
          },
          "getRateOfTranche(uint256)": {
            "notice": "gets the rate of tranche `id`"
          },
          "offerDigest((address,uint256,uint256,uint256,uint256,(address,uint256)))": {
            "notice": "computes EIP-712 compliant digest of a loan offer"
          },
          "onERC721Received(address,address,uint256,bytes)": {
            "notice": "borrow using sent NFT as collateral without needing approval through transfer callback"
          },
          "position(uint256)": {
            "notice": "get metadata on provision linked to the supply position"
          },
          "price(uint256)": {
            "notice": "gets the price to buy the underlying collateral of the loan"
          },
          "repay(uint256[])": {
            "notice": "repay one or multiple loans, gives collaterals back"
          },
          "setAuctionDuration(uint256)": {
            "notice": "sets the time it takes to auction prices to fall to 0 for future loans"
          },
          "setAuctionPriceFactor(uint256)": {
            "notice": "sets the factor applied to the loan to value setting initial price of auction for future loans"
          },
          "setBorrowAmountPerOfferLowerBound(address,uint256)": {
            "notice": "updates the borrow amount lower bound per offer for one currency"
          },
          "setMinOfferCost(address,uint256)": {
            "notice": "updates the minimum amount to repay per used loan offer when borrowing a certain currency"
          },
          "testConsistentAssetRequests()": {
            "notice": "useOffer tests ///"
          },
          "testMultipleUseCollateral()": {
            "notice": "useCollateral tests ///"
          },
          "totalSupply()": {
            "notice": "total number of supply positions ever minted (counting burned ones)"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin/=node_modules/@openzeppelin/",
        ":diamond/=node_modules/diamond/",
        ":ds-test/=node_modules/ds-test/src/",
        ":forge-std/=node_modules/forge-std/src/",
        ":solmate/=node_modules/solmate/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "test/Borrow/BorrowHandlers.t.sol": "TestBorrowHandlers"
      },
      "libraries": {}
    },
    "sources": {
      "node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol": {
        "keccak256": "0x4ffc0547c02ad22925310c585c0f166f8759e2648a09e9b489100c42f15dd98d",
        "urls": [
          "bzz-raw://15f52f51413a9de1ff191e2f6367c62178e1df7806d7880fe857a98b0b66253d",
          "dweb:/ipfs/QmaQG1fwfgUt5E9nu2cccFiV47B2V78MM1tCy1qB7n4MsH"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b",
        "urls": [
          "bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34",
          "dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "keccak256": "0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca",
        "urls": [
          "bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd",
          "dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol": {
        "keccak256": "0x1e854874c68bec05be100dc0092cb5fbbc71253d370ae98ddef248bbfc3fe118",
        "urls": [
          "bzz-raw://ef0fb6e809779426dc2ac201149bbad4aecdc5810874f2843b050e8b5fef8d30",
          "dweb:/ipfs/QmPDRjaNxmcyxLUKvv8Fxk5eWcf7xvC5S9JpbtqvE7Cadu"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol": {
        "keccak256": "0xab28a56179c1db258c9bf5235b382698cb650debecb51b23d12be9e241374b68",
        "urls": [
          "bzz-raw://daae589a9d6fa7e55f99f86c0a16796ca490f243fb3693632c3711c0646c1d56",
          "dweb:/ipfs/QmR3zpd7wNw3rcUdekwiv6FYHJqksuTCXLVioTxu6Fbxk3"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
        "keccak256": "0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da",
        "urls": [
          "bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708",
          "dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol": {
        "keccak256": "0xa8796bd16014cefb8c26449413981a49c510f92a98d6828494f5fd046223ced3",
        "urls": [
          "bzz-raw://63a5e0bb5a7d182e0d0eef87033f78115eab791de3626a929bc98c157087880a",
          "dweb:/ipfs/QmetkXAu2CJKS4qrZtEQPU8okAPwUwa6HL4XYwk8vrYMk8"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol": {
        "keccak256": "0xd1556954440b31c97a142c6ba07d5cade45f96fafd52091d33a14ebe365aecbf",
        "urls": [
          "bzz-raw://26fef835622b46a5ba08b3ef6b46a22e94b5f285d0f0fb66b703bd30217d2c34",
          "dweb:/ipfs/QmZ548qdwfL1qF7aXz3xh1GCdTiST81kGGuKRqVUfYmPZR"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
        "keccak256": "0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9",
        "urls": [
          "bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146",
          "dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Address.sol": {
        "keccak256": "0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1",
        "urls": [
          "bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269",
          "dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Strings.sol": {
        "keccak256": "0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a",
        "urls": [
          "bzz-raw://8c969013129ba9e651a20735ef659fef6d8a1139ea3607bd4b26ddea2d645634",
          "dweb:/ipfs/QmVhVa6LGuzAcB8qgDtVHRkucn4ihj5UZr8xBLcJkP6ucb"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/cryptography/ECDSA.sol": {
        "keccak256": "0xda898fa084aa1ddfdb346e6a40459e00a59d87071cce7c315a46d648dd71d0ba",
        "urls": [
          "bzz-raw://ce501a941f4aa1555c04dabb5e07992503bb6a9b32ff8f7cdcefdb4a742210cb",
          "dweb:/ipfs/QmeScPrUpdrGYs9BytV3Z5ZWJcBXtuAgCW4BLHua4xFUxx"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/cryptography/EIP712.sol": {
        "keccak256": "0x948d8b2d18f38141ec78c5229d770d950ebc781ed3f44cc9e3ccbb9fded5846a",
        "urls": [
          "bzz-raw://7311ac950ed2d81f3ccf1784a926efbfc82a86dcb5c98d41eb3792c0cac63a2f",
          "dweb:/ipfs/QmRRwCUHewkPmehx8QRYENFoWyLNx8UEZGULxWYUeSZdTS"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol": {
        "keccak256": "0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b",
        "urls": [
          "bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d",
          "dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1",
        "urls": [
          "bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f",
          "dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/math/Math.sol": {
        "keccak256": "0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6",
        "urls": [
          "bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b",
          "dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz"
        ],
        "license": "MIT"
      },
      "node_modules/diamond/contracts/facets/OwnershipFacet.sol": {
        "keccak256": "0x6502a171801d68e68de6c5a2b879d5e12a3a1539cdc568c2bfcc268fbdf6c5a9",
        "urls": [
          "bzz-raw://e8094a53d216df365a5cbdaa0e4292c6faae493e88c62e7a616ccb4b5440c097",
          "dweb:/ipfs/QmNXspNxT83mcL1mynUiUrfj94aVe8rz2UyZUJJn7gfWWe"
        ],
        "license": "MIT"
      },
      "node_modules/diamond/contracts/interfaces/IDiamond.sol": {
        "keccak256": "0x37be579b243559c0c16a8de037d2c428e8fafdfdd9cde69fa165a07f5adfda2c",
        "urls": [
          "bzz-raw://0f16b9edb01e35edf96566f6460c4986fcc3fb9bff6291fab5be17d256cd0fd2",
          "dweb:/ipfs/Qmdq869cYabBjfnYZgcF5BSHsFQXT1EZNg2umHMAxZqWEH"
        ],
        "license": "MIT"
      },
      "node_modules/diamond/contracts/interfaces/IDiamondCut.sol": {
        "keccak256": "0x9ecd4a637b7cb44c26a4ab7760766defce42a6dc36a355b92dfeef9ce4391fee",
        "urls": [
          "bzz-raw://cd0e7ad69374bc41bc62c90428f9795c8a06360599c4c6b06e76bd8a1b91e28f",
          "dweb:/ipfs/QmfZk5ZiKQQaudjYf3qEumVsW87gELxcYMNRu3AHSLuk4n"
        ],
        "license": "MIT"
      },
      "node_modules/diamond/contracts/interfaces/IDiamondLoupe.sol": {
        "keccak256": "0x10884024af2c0f7deca0fac4ddf84e76da5dba35b6e02fabeac8ea54c1a5c6f7",
        "urls": [
          "bzz-raw://df3404a4aed3bbda2f5e441d7035b354237d8c9d7c27b149ccf66d13a1d81d45",
          "dweb:/ipfs/QmZvHWgRCge8tLJ3x3Lf3JQkbNTgAN6LzwCGBabbgk8tew"
        ],
        "license": "MIT"
      },
      "node_modules/diamond/contracts/interfaces/IERC165.sol": {
        "keccak256": "0x7541f7408d0f74162bc4664d5e012427f2ceaab2abadca0353269ef15ee03d8b",
        "urls": [
          "bzz-raw://a8e7a34b3ea39f4c0dfa6f5ace5d9415e4d0c90cb3f4264e6946b808f2d4011c",
          "dweb:/ipfs/QmWdcRF4krMMb1ua3hmV8avdHKYa4XXt1iw7sxx1ntsEJa"
        ],
        "license": "MIT"
      },
      "node_modules/diamond/contracts/interfaces/IERC173.sol": {
        "keccak256": "0x001e07b0fbc894300b939d496ffb005abe398b5bc609802d319b8cdeafe5d36b",
        "urls": [
          "bzz-raw://8e59f66879ef993892410cbe834b1d2dd34891f47066b7be601ff825b0748361",
          "dweb:/ipfs/QmZedQ668we8ohPPZF5tPP5gKpJ5n22h3FDFkoFT5VXpEu"
        ],
        "license": "MIT"
      },
      "node_modules/diamond/contracts/libraries/LibDiamond.sol": {
        "keccak256": "0x4090c1e2191d081ff33e1631eabbebfb69e29ac1bf67516d7f4430bb2e0b2983",
        "urls": [
          "bzz-raw://3c66e113d032be747262abe642abcec8c132400fe156414721590412d9af6485",
          "dweb:/ipfs/QmfLg3p9wZ748cSDrfh4TmxCuMU8oVZU9BzAGhJSFQysWM"
        ],
        "license": "MIT"
      },
      "node_modules/ds-test/src/test.sol": {
        "keccak256": "0x8758531bbac3972efcf1fa46383dbe1d276406fe527bc7abb2f236486278e83b",
        "urls": [
          "bzz-raw://1f64264d61506847acf8761e84aff690cebe830958eac00bac7924d8be569240",
          "dweb:/ipfs/QmSekDJvJ82MZAmr63n7YvfLzQ7gS4NLSHPmHL3GN3rw8k"
        ],
        "license": "GPL-3.0-or-later"
      },
      "node_modules/forge-std/src/Base.sol": {
        "keccak256": "0x609e3a00319169988cc8272e837f350a9ba77cf8f8f62e4897a8e4a8a5f0fb27",
        "urls": [
          "bzz-raw://b24435e35ba5b080ebd6e8976c23fb735c7212d042be8462ffd2ea50c5250363",
          "dweb:/ipfs/QmPeVvN7FS4oMmCuYAeRdZihTfrG4tA7Vvunuvv59a6wre"
        ],
        "license": "MIT"
      },
      "node_modules/forge-std/src/StdAssertions.sol": {
        "keccak256": "0xdb05fd11858f232b8b5c6c9175229bdd061c277c34f13b0bdc64d333bcbd2617",
        "urls": [
          "bzz-raw://08ae865564d9c1fa1012b61db77a2da2844ac1ae0a216b16c9fe9ab65ddf80af",
          "dweb:/ipfs/QmfFfmkjb2Qfc5dPJvwQgjTMbeQ12dTPFeAQ8Gb944U44g"
        ],
        "license": "MIT"
      },
      "node_modules/forge-std/src/StdChains.sol": {
        "keccak256": "0x097b75f7171af89f433407e040d11b22fc26e2fe03793c2cfe18cad390d7af8b",
        "urls": [
          "bzz-raw://19d1dca7b398e517499ffa65ad44df69cdd016f37dc57e2d07d50279d3ddee17",
          "dweb:/ipfs/QmfMFR25367GB5PoBi1KZxWs1hZcJtC3eANiioG3dKj8ah"
        ],
        "license": "MIT"
      },
      "node_modules/forge-std/src/StdCheats.sol": {
        "keccak256": "0x3c536209b4d4e1879adc4d91b12e237985f0f8f91e71828dacd8fca3bdf2fa99",
        "urls": [
          "bzz-raw://65adfc61088d242dbab8faa738d104005531e3a52ed993329b54fa7ee45e53ab",
          "dweb:/ipfs/QmP1d4thtELTT2vup4XmrCSKXZ91Eq756pgKq1z5hq2NGP"
        ],
        "license": "MIT"
      },
      "node_modules/forge-std/src/StdError.sol": {
        "keccak256": "0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77",
        "urls": [
          "bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6",
          "dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj"
        ],
        "license": "MIT"
      },
      "node_modules/forge-std/src/StdInvariant.sol": {
        "keccak256": "0xd855e1fea6247f1bef118e2bee9f0039832988b7173fd17766bba4014ae26a3c",
        "urls": [
          "bzz-raw://c58c0f0b66852dfd3c76fb7958d8b023489d7a874c7cb1ad4f2021f9ec8ab477",
          "dweb:/ipfs/Qmd3MX9HAkNUhPddL29ekwhqgRnjAobZ35UzchaJZNACCN"
        ],
        "license": "MIT"
      },
      "node_modules/forge-std/src/StdJson.sol": {
        "keccak256": "0x9e2a7521190c462a0667706385f1c52a816220a9813ca8ac520fba7ba45d660b",
        "urls": [
          "bzz-raw://7d23017fe6570b28130a731b86179352b93a5fb5af32f11559837afc1186293c",
          "dweb:/ipfs/QmR3p6zG5Kmcr8gKocFCSopLHfXv1AziPJbH17nKyMxwxV"
        ],
        "license": "MIT"
      },
      "node_modules/forge-std/src/StdMath.sol": {
        "keccak256": "0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2",
        "urls": [
          "bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92",
          "dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC"
        ],
        "license": "MIT"
      },
      "node_modules/forge-std/src/StdStorage.sol": {
        "keccak256": "0xd1517df281f973dba8b7ba52c02d3df552b60d91b8f47e4669049da648778673",
        "urls": [
          "bzz-raw://52e43264f58a5dcfd985f3c99aa81064805aa8f1c2b4c6521fd63d45cdbba8d5",
          "dweb:/ipfs/QmUMTF6cRjt5tCQrrgQDXVRmHQLjevNsTvLFdaA1m9TBj9"
        ],
        "license": "MIT"
      },
      "node_modules/forge-std/src/StdStyle.sol": {
        "keccak256": "0x2882555b0f58e48144e46e9aa5118a506b31ad7485327d54e8f681e8b414c337",
        "urls": [
          "bzz-raw://2850bcb1322de9d9dd87ded42debbe0e8fc4048173788d4c00c98b50e5f76985",
          "dweb:/ipfs/QmUiPKnj7GZLLQbJGY7bVDu79Q9jGEYNjR5ZBgwFy8mH97"
        ],
        "license": "MIT"
      },
      "node_modules/forge-std/src/StdUtils.sol": {
        "keccak256": "0x6584855fecbe5b6a9f8ebdb26b37c58532c5bc5cc6e1737dfa7c8a045087be55",
        "urls": [
          "bzz-raw://40a35a4d292b4fed02e11d5f25fb474f10a7c4eb99f75b5383dc23fcb6e55d3c",
          "dweb:/ipfs/QmYZ2nz1EmNh4xLWf4YybZoa1Da1z3Wq3w4pneMhkouMi4"
        ],
        "license": "MIT"
      },
      "node_modules/forge-std/src/Test.sol": {
        "keccak256": "0xddf16afce2bb7bbb69ed868d4c7ee8b4ea4ffbf8929427fe799682f107534945",
        "urls": [
          "bzz-raw://52f6ebde2a4cb9d08aea5fb3d62b2f15961bb9a29d6d9e30dd0859d0d631cabf",
          "dweb:/ipfs/QmeJ9Dp1GYUggzjGiwTZkxCfB15NfyfgcyrNZL5tyWZbVZ"
        ],
        "license": "MIT"
      },
      "node_modules/forge-std/src/Vm.sol": {
        "keccak256": "0xdd9f518aade851117d3ca3122cae6ed413a8b8355d43d69db336e94da3214a96",
        "urls": [
          "bzz-raw://939ede17edec5c78176379839f4c68851b1316e8f5789efb2f01cbdae09b88ef",
          "dweb:/ipfs/QmYiBBb7Nyuse7HoEFkCeauUwcpef9S33ozZYDqXCEXEtH"
        ],
        "license": "MIT"
      },
      "node_modules/forge-std/src/console.sol": {
        "keccak256": "0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba",
        "urls": [
          "bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70",
          "dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec"
        ],
        "license": "MIT"
      },
      "node_modules/forge-std/src/console2.sol": {
        "keccak256": "0xcd5706f5a7025825d9fd389c89b49bf571f9abaea8a062dc4048320b5b43bf46",
        "urls": [
          "bzz-raw://c066485a7d4bd18d44efb4c89274b0959e8066b9a480383a2ce07d7f31555f88",
          "dweb:/ipfs/QmckeYfA5FtAjcxaytq69Dpj6uY57tbQ61kNPPxXi9kgbW"
        ],
        "license": "MIT"
      },
      "node_modules/forge-std/src/interfaces/IMulticall3.sol": {
        "keccak256": "0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a",
        "urls": [
          "bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0",
          "dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2"
        ],
        "license": "MIT"
      },
      "src/AdminFacet.sol": {
        "keccak256": "0x1a2d8498fd8fd33bdda336678927e9f541b02b454d82994cd4a650f1f3a2942a",
        "urls": [
          "bzz-raw://53f331f3125c77de8a8efa62288c88b9e72f93763cf7b255ee039a661198e936",
          "dweb:/ipfs/QmPvkNQKNyRf3BVyjet6YmWmzhBKC5tFq3BZTx66U167u2"
        ],
        "license": "UNLICENSED"
      },
      "src/AuctionFacet.sol": {
        "keccak256": "0x41a60f4e0ea36dd4a1acb8845d07f8eee2e788aa0acc7eeea3c3443448231f22",
        "urls": [
          "bzz-raw://049a623687b02d8ceb7f933cdad6b6de5f28d826cb7eb828c1b2ecfba1b02b48",
          "dweb:/ipfs/QmRSjXjDZqys1KWaK2YbWhuMju5A45KLETF9KtjzHVFGbM"
        ],
        "license": "UNLICENSED"
      },
      "src/BorrowFacet.sol": {
        "keccak256": "0x960ac7f5ddc23fd9c9b87481451b47022b85ce53eefc1c46fe9cdbd34481e2fc",
        "urls": [
          "bzz-raw://3c17390c85d849708b4489909ab63f11ceb8652d2c2f465e2c0b42b7a71fed94",
          "dweb:/ipfs/QmZNQ9RdZhk9QAxQkws1Fsv5UMwfJpra77HokJCxM8wERH"
        ],
        "license": "UNLICENSED"
      },
      "src/BorrowLogic/BorrowCheckers.sol": {
        "keccak256": "0x023dce239e7e6d534db05e6364715ebb3399c3c9dccf894e9076712ab779745d",
        "urls": [
          "bzz-raw://cfabb6dbacbb9d09ee26887d755e88d9761d266a3daa68a54c070ff967bf2aa8",
          "dweb:/ipfs/QmbdtPZcZ5QSB8LKQMEy6wU5jDZSSkMJvtGVDpEDuN3bz4"
        ],
        "license": "UNLICENSED"
      },
      "src/BorrowLogic/BorrowHandlers.sol": {
        "keccak256": "0x41dbb5b648ea50541ab227e77e8850607731ad7ebd8171f5d0d96eb829246301",
        "urls": [
          "bzz-raw://780b77c00afd5fa5d97ba16f3d3a7e83bb909608fb54f5f38f19120a16d5bb18",
          "dweb:/ipfs/QmTPZ47VbeFxbWdou6hFMkk86PStsLuh2uNZfhJVoGjyBX"
        ],
        "license": "UNLICENSED"
      },
      "src/ClaimFacet.sol": {
        "keccak256": "0x06a664d0d467d20ffc78de21c78670a08f134752f4872db55d5dc587e76ecec2",
        "urls": [
          "bzz-raw://e1312cb1cff9ba34218db3219647e9d63685e32a88ed5007858d8af76b440653",
          "dweb:/ipfs/QmbazoYdTrS6FaMjbXM5eWWaz41JGV9QzazuxXAVdDsk1K"
        ],
        "license": "UNLICENSED"
      },
      "src/DataStructure/ERC721Errors.sol": {
        "keccak256": "0x0ee13f898a2d61d6662ef236db05001d14086ff4431bef2ae89c1979819d38d0",
        "urls": [
          "bzz-raw://2e1878fe70994d02159dbf4a5a9c79b3665feaae0d08ff420b3f00cb8ed6355a",
          "dweb:/ipfs/QmNYJDoien8bUQFYuc75GyVGVTYuiUagF4RRUSGTTmZNH7"
        ],
        "license": "UNLICENSED"
      },
      "src/DataStructure/Errors.sol": {
        "keccak256": "0x6c4db7ebc787971449c92a004a1742a0ebed90b3073de98ac677a7471696f8c5",
        "urls": [
          "bzz-raw://b650ca8195bbdf7e6010ec51248ea3beb4a255730fb8e6404196b1680d5f1433",
          "dweb:/ipfs/QmbU8dkitPbxtTkUWgqL4Rgx3KdDzDgkYESY48muSmcTop"
        ],
        "license": "UNLICENSED"
      },
      "src/DataStructure/Global.sol": {
        "keccak256": "0x9596c1bdf1271dd447db6a8f26ca493253674e252c9f63a7bc13c8689a7b6e49",
        "urls": [
          "bzz-raw://3ff822127c6c674400e9730466eb6832d19a72eaf991f3bbf62d251a6e2b49d5",
          "dweb:/ipfs/QmZPGbWwS7rTPF3NiyjivxDseeBW64GhfkGvVNuaCbnzDv"
        ],
        "license": "UNLICENSED"
      },
      "src/DataStructure/Objects.sol": {
        "keccak256": "0x251dd6c3f36c5a2c8a6a867aa29c9ba8b4bb7f2ec1a7321d630fea19f6bbd83a",
        "urls": [
          "bzz-raw://a7f620222a6b6d909e8aa2d7191200b312345b6c704eecdf40729982e238f44e",
          "dweb:/ipfs/QmTikrgA5SKJrsJanid1atHw1M7opEvwuGKNRQTbjeM4sq"
        ],
        "license": "UNLICENSED"
      },
      "src/DataStructure/Storage.sol": {
        "keccak256": "0x8f99f5f94641c826d0b4bd2dadb065745ff877b195fb1eb7392362a026d01380",
        "urls": [
          "bzz-raw://f2c2362ee8472e6076f7f18a51264c96e63a346e61da6a7234abe5e3c034de38",
          "dweb:/ipfs/QmW59HJM49LDieB2svjKnYzo7hdYKG24rLKgb7AfiXht4z"
        ],
        "license": "UNLICENSED"
      },
      "src/ProtocolFacet.sol": {
        "keccak256": "0x9c1c8deb2d61a8e39028c31154e51f6f4acccd71d4995cd82442e5addd9a5916",
        "urls": [
          "bzz-raw://9e1d0cfcefa35601756a9f9aec29fcd1a072dc3e5e37d78def17d72ace29909d",
          "dweb:/ipfs/QmeCgh2tqzoz5Nf8X6UGY7ZeKTiyrvgoxZdzU3P9ua4JKX"
        ],
        "license": "UNLICENSED"
      },
      "src/RepayFacet.sol": {
        "keccak256": "0x5b5c777a189495808271068b7757f73542bbc27b6141599752eaf4bef63c8e89",
        "urls": [
          "bzz-raw://d6b289c89769655e173cecb2c20d8147d48ada74c5c6596060b70df7eed4b609",
          "dweb:/ipfs/Qmas7puaEDtvyLhMPUZGouNnVvky3gRKZCLemCxdLWALsF"
        ],
        "license": "UNLICENSED"
      },
      "src/Signature.sol": {
        "keccak256": "0x37073550ae20735f42ae719377540c0bedd633aad9ce97d40e0facb965e4d137",
        "urls": [
          "bzz-raw://d57bda44ce2f1e48f227c8b97cb23cd166d3b92421a3436835c81c1bc42a60ca",
          "dweb:/ipfs/QmU5yS6t3d6nhfUeGmwZnFsbo8LZe7MHED738pZBaUkPna"
        ],
        "license": "UNLICENSED"
      },
      "src/SupplyPositionFacet.sol": {
        "keccak256": "0xd96da66c04a30bc8d665bdbec2eebbf23998aff501e00f64fc26d7ed0c4df780",
        "urls": [
          "bzz-raw://bc62b16dbddf140812eb18fc39e7af0618c0b38c2b83ba9ee3efb67974963ad5",
          "dweb:/ipfs/QmYV7aBahd6EqmcjFK1Lncp27XeG2AKnLtQRFRnGsGu9Mz"
        ],
        "license": "UNLICENSED"
      },
      "src/SupplyPositionLogic/DiamondERC721.sol": {
        "keccak256": "0xdb5734014944ffbfc70b937c0cb2ab310d15c7ceb93e852bf5c6aef64c24584b",
        "urls": [
          "bzz-raw://51bc9d846048e67e83c9e708aedd5f68ce240bd87c1c4a68526ee224553c0279",
          "dweb:/ipfs/QmUWcdYokYYxTNpJtSwM22Q4WBKxJEjfhtyAU97NFh1VdZ"
        ],
        "license": "MIT"
      },
      "src/SupplyPositionLogic/NFTUtils.sol": {
        "keccak256": "0xc1fdc762292d11504da9d1b999d6364d8c76b721c8f6f7369e0030c9dae9af13",
        "urls": [
          "bzz-raw://dc9d2a3636065c11ad95bc669381dae82218909711ed54e31ee3085671ade192",
          "dweb:/ipfs/QmfX1zJes16PDd9NUGcSNYBMRvaykMhyaEMEQsmMugVtP4"
        ],
        "license": "MIT"
      },
      "src/SupplyPositionLogic/SafeMint.sol": {
        "keccak256": "0xfe55649875c4f7c6fa65c01b8abf9e0f6564cab19ec24fb895bdce6dde90764d",
        "urls": [
          "bzz-raw://5b0e86c734cce67187b23816bbba38c9eaab5e2154606de75866637f4774fd99",
          "dweb:/ipfs/QmPuJk6rhpUNjhftEAzbm26DA5tZw8sHybzYZ6G4PuWG8G"
        ],
        "license": "MIT"
      },
      "src/interface/IAdminFacet.sol": {
        "keccak256": "0xfc9606029a4ef8d26d8c86c377d77c3caf1e26335f3e155f279581e487bcc640",
        "urls": [
          "bzz-raw://5a04932fe22d016e66e172bff16c0611abcb8804e1039f99678a5d22e130daee",
          "dweb:/ipfs/QmUKzRKB5CPD3tE81Pbn8HHesuY1j64L5Xfbi4E8xsja8h"
        ],
        "license": "UNLICENSED"
      },
      "src/interface/IAuctionFacet.sol": {
        "keccak256": "0x142cf5565d929cf20c8b042f791360b7b76289620efcd42c90a37f2d8179e49f",
        "urls": [
          "bzz-raw://3aa1107c4c11a419c7340aff9624e3f539196759ffbe4eed5fde26cbbf1b4567",
          "dweb:/ipfs/QmfS88KKuQskg2RQP6GoVEbk9uUhbmVYH6Fps7yNUpfMCc"
        ],
        "license": "UNLICENSED"
      },
      "src/interface/IBorrowCheckers.sol": {
        "keccak256": "0x581d912358ce65c74e7e3f089486d5c2cc7f45be7cb02ef5ee26a293c9ba1f18",
        "urls": [
          "bzz-raw://18d4d2dee4cf9ccbeb8a33b037dc0021b1315fd3fca864a2127834f36cb6aaba",
          "dweb:/ipfs/QmUWvZMWUqv2DJpooXCHmQuBcr4kTzBhwApQniouAKdEJn"
        ],
        "license": "UNLICENSED"
      },
      "src/interface/IBorrowFacet.sol": {
        "keccak256": "0xc2351fa73840199deb8c9ecd663294517ce6e457e198d699d53d651b72f1fe43",
        "urls": [
          "bzz-raw://2094053b1d81f799877ee2ccd44a38601d80b97f93d54a14e0dfbc8ba8f3aba7",
          "dweb:/ipfs/QmZwEsKquQgH1H5tnKCQuBEeU9mRcnNBPC2bXZGt8XVuHF"
        ],
        "license": "UNLICENSED"
      },
      "src/interface/IBorrowHandlers.sol": {
        "keccak256": "0x420bed3254df51bff3c728e252b74a9603fa3f834330c1edf0f0d257444f03ce",
        "urls": [
          "bzz-raw://200955bcca9610fd1a0e3230f761ade89a12285bf60c91a758ef4045f5b55f54",
          "dweb:/ipfs/QmV9vYWeLVvo5ykdi8x6scgK4QDwYuPkhd4KETKWPA5tMv"
        ],
        "license": "UNLICENSED"
      },
      "src/interface/IClaimFacet.sol": {
        "keccak256": "0xa797f893096a5828eb1614b941df05b54afcf72ff1fde42a106976bf70d5e71c",
        "urls": [
          "bzz-raw://19be4abca0237cf076fb66e9d4fa9119c7bd9004a9e34a39c162cc3a1bb8e0cc",
          "dweb:/ipfs/QmaLkzLvZLwbcWn8CXmL9JYwVYPHeNWsMKD9JPMRozDBSQ"
        ],
        "license": "UNLICENSED"
      },
      "src/interface/IOwnershipFacet.sol": {
        "keccak256": "0x505b2f2d275a0aa2861d08564f6d03e44e8d10cd8a1c6fbdea1105383e0e9a4d",
        "urls": [
          "bzz-raw://4ca7e3a48787d056da5f3569965f9c2015e65d8ceb124e9346cf73d55e55c8b2",
          "dweb:/ipfs/QmWJmUsegbVtaJ71yCJZiEpedEvhSuw73NyjBfRFCkxt2z"
        ],
        "license": "UNLICENSED"
      },
      "src/interface/IProtocolFacet.sol": {
        "keccak256": "0x41ef10bad154ed0a98a1fa46046869d6d6ab744953186caa287ced95b80ddc4a",
        "urls": [
          "bzz-raw://8a45399f560a088b94d3d5e14a104a3cbc02cec1083cf1eec5a8b135341c7d53",
          "dweb:/ipfs/QmcCDJmFCkRZoeHojqmvaMsavwZXcBeZV54i5eAfxmjcH5"
        ],
        "license": "UNLICENSED"
      },
      "src/interface/IRepayFacet.sol": {
        "keccak256": "0x932b0a489b740c46361e4cd5f5103c765b954cedfd41a823dd0549f435f0b7d4",
        "urls": [
          "bzz-raw://fddbb0a0401cd79a17b794c9caaa6f3c2e9381a1a3fd6ea04c43e2148786c572",
          "dweb:/ipfs/QmUKSTezv4twtFPVCXRSQZBfKNW5Zkd22w4HWFfJrV7VyQ"
        ],
        "license": "UNLICENSED"
      },
      "src/interface/ISignature.sol": {
        "keccak256": "0x6dadc10c64bc681b36624c2937fd3e108e87ca0056d311510e53a25cd009d065",
        "urls": [
          "bzz-raw://a813951b3d9f26315a9363a779c745c58ad261ee9fa8a997727ea7ddc6c90da1",
          "dweb:/ipfs/QmR8G8XQDm7xjKzPH29PmYw2LnHakapvkdavJXZCT3vKFT"
        ],
        "license": "UNLICENSED"
      },
      "src/mock/Money.sol": {
        "keccak256": "0x5e3ad642d66b67ba5606b3e566bd6d61aaf1fb041f65b147c8f73abdf502d8d6",
        "urls": [
          "bzz-raw://4ae809b748f38d9d9e4a4bd8d211e7b30c8d56b5e632204cc27654daf995e5c3",
          "dweb:/ipfs/QmUKMtSDrZG3QHFWRUAh5FPAxGXpSGZsafStRhoESxxL52"
        ],
        "license": "MIT"
      },
      "src/mock/NFT.sol": {
        "keccak256": "0xc9930007614632c7dc1393745990ec87c310b4178f387f1cbe52b50f4016fb64",
        "urls": [
          "bzz-raw://b1bd12749aec08d1d0f5d2d4d8d32259c9c23ab243f1aa16b0106d89955f4e50",
          "dweb:/ipfs/QmRohEtgT3y7kTbeSbzQkxBTJemznmkxJey2vTKmZCBvFT"
        ],
        "license": "UNLICENSED"
      },
      "src/mock/TestCurrency.sol": {
        "keccak256": "0xea5129d4a21ac381a780017790fc8f0c888aa8354314bd97d396056f4bdd20f0",
        "urls": [
          "bzz-raw://98c46c988468539ee172a1bad7e9e666707bec019b62c90207c552679a644960",
          "dweb:/ipfs/QmexsmkJdB934t2Tc6x9oPE64NbdYNjLMz8r3CituThgnB"
        ],
        "license": "MIT"
      },
      "src/utils/Erc20CheckedTransfer.sol": {
        "keccak256": "0x03a0041ce856ecca1d5d2b67443dca5f2acab9fe38cd592b2d3e897eaa3955d0",
        "urls": [
          "bzz-raw://10515dcb2700e1b01b00f50c704ffc7daba221080221e056d498da890c586c82",
          "dweb:/ipfs/QmRW2ycAG7nsk2YXnp6nk8s56RqTV1EVCuPkLgQsUHyGeW"
        ],
        "license": "UNLICENSED"
      },
      "src/utils/FuncSelectors.h.sol": {
        "keccak256": "0xa79f6e8531c9a91f3e26e48ef5d7b0c8327e17b5352400668880cc1a98f36ddc",
        "urls": [
          "bzz-raw://518f86fef198ec19ccba9d2438c8f490581f326cb2bdba8d3e6634c4797cebc0",
          "dweb:/ipfs/Qmb1NGp72szB8owp5MjaFWF7zngPtQ6EHUUMy38tn3BCqi"
        ],
        "license": "UNLICENSED"
      },
      "src/utils/NFTokenUtils.sol": {
        "keccak256": "0x886dbd7a03bf3a8fd4739b86bc4eba01014e7683029dd485993369ad0a0473c5",
        "urls": [
          "bzz-raw://02591fc4c94a10c37a9132dfbd9f1222f62c919ef5ba7b76a1ca1c1e2dc1d105",
          "dweb:/ipfs/QmVkSSvA12C2gu8gEv8CxBHpKY242THHAy7eNfzHpXdhtT"
        ],
        "license": "UNLICENSED"
      },
      "src/utils/RayMath.sol": {
        "keccak256": "0x234068d17599aefc86ca6f5febb25be32bb71c0b45326c24936b23dd9cc876ac",
        "urls": [
          "bzz-raw://421375b2a164c6ffa1e018c533e2a231395fc4f582acc3a43672a24e51fbe328",
          "dweb:/ipfs/QmUFEZi7BjELW2fDZuUpeDCTrNw1YhMmeqJvoMk2MfuxDU"
        ],
        "license": "UNLICENSED"
      },
      "test/Borrow/BorrowHandlers.t.sol": {
        "keccak256": "0xbcdb4e4e9eccc6dc4a3ec37a0429853fec5d0944bbcb6f48c0246adc2fb4bf0f",
        "urls": [
          "bzz-raw://c40c6b6e323d6895ef7c6f46cb6d0ff697a957537f586d8993aa8f26a5fc300a",
          "dweb:/ipfs/Qmdg6GjCBDhLsrjHMprcRBD4MEcb5rSiRpeA83TBd8KHL3"
        ],
        "license": "UNLICENSED"
      },
      "test/Commons/BigKairos.sol": {
        "keccak256": "0xe5e4959e7dca0aa52e2d35459a1f71b91a2af9a70fbb1465c31a98b53823eddc",
        "urls": [
          "bzz-raw://25e44dd8b518574592079f2137651440fd7ce1360cfe5ad35d8c6993e8c4622a",
          "dweb:/ipfs/QmcqGbDvgGu2oHqD17PURL2matovxNPyuGgYajw57Q6SCj"
        ],
        "license": "UNLICENSED"
      },
      "test/Commons/Internal.sol": {
        "keccak256": "0x12507426f01169802f333a2fb704fd70c35659ff2854c66d928a901673fca132",
        "urls": [
          "bzz-raw://7ee48041714fd79f61fd382d6d9427732be1af960af57aff862432129ecac4e6",
          "dweb:/ipfs/QmT9p8LiAYfH2622zT7FD9UmcvTmywmG6N7CKyuPJjL3nj"
        ],
        "license": "UNLICENSED"
      },
      "test/Commons/Loggers.sol": {
        "keccak256": "0x5ad09ea0e54173023d712d84e06faa58267cadc7b34404adabc1c11c28c0f238",
        "urls": [
          "bzz-raw://dfd5aafd6dca411217e0928b82f211b16a9b8e937389838cadd307db638b83eb",
          "dweb:/ipfs/QmbB4vPdgPrrVhb4W9z9UeLQPBzU7xXQ1dkk2zzQNkwX85"
        ],
        "license": "UNLICENSED"
      },
      "test/Commons/TestCommons.sol": {
        "keccak256": "0x661e48bcca61c615c6b5f082c744281af6a886b3d4de4d0607fce24a1be2d565",
        "urls": [
          "bzz-raw://95556855c33b1be5e827c505e6ab6fa54534c0bc4e8610986cd0361e59c5a1bf",
          "dweb:/ipfs/QmY4VKfqcLa8hAN9C3L1N4hTyAfc74nPkUxCAUZm9nw2N1"
        ],
        "license": "UNLICENSED"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "test/Borrow/BorrowHandlers.t.sol",
    "id": 42238,
    "exportedSymbols": {
      "CollateralState": [
        36687
      ],
      "IERC20": [
        664
      ],
      "InconsistentAssetRequests": [
        36531
      ],
      "InconsistentTranches": [
        36537
      ],
      "Internal": [
        45036
      ],
      "Loan": [
        36780
      ],
      "NFToken": [
        36708
      ],
      "ONE": [
        36604
      ],
      "Offer": [
        36702
      ],
      "OfferArg": [
        36665
      ],
      "Ray": [
        36644
      ],
      "RayMath": [
        39997
      ],
      "RequestedAmountTooHigh": [
        36523
      ],
      "TestBorrowHandlers": [
        42237
      ],
      "TestCommons": [
        46681
      ],
      "protocolStorage": [
        36624
      ],
      "supplyPositionStorage": [
        36636
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:4371:92",
    "nodes": [
      {
        "id": 41753,
        "nodeType": "PragmaDirective",
        "src": "39:23:92",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".18"
        ]
      },
      {
        "id": 41755,
        "nodeType": "ImportDirective",
        "src": "64:70:92",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 42238,
        "sourceUnit": 665,
        "symbolAliases": [
          {
            "foreign": {
              "id": 41754,
              "name": "IERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 664,
              "src": "72:6:92",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 41761,
        "nodeType": "ImportDirective",
        "src": "136:99:92",
        "nodes": [],
        "absolutePath": "src/DataStructure/Objects.sol",
        "file": "../../src/DataStructure/Objects.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 42238,
        "sourceUnit": 36709,
        "symbolAliases": [
          {
            "foreign": {
              "id": 41756,
              "name": "CollateralState",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 36687,
              "src": "144:15:92",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 41757,
              "name": "NFToken",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 36708,
              "src": "161:7:92",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 41758,
              "name": "Offer",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 36702,
              "src": "170:5:92",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 41759,
              "name": "OfferArg",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 36665,
              "src": "177:8:92",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 41760,
              "name": "Ray",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 36644,
              "src": "187:3:92",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 41763,
        "nodeType": "ImportDirective",
        "src": "236:49:92",
        "nodes": [],
        "absolutePath": "test/Commons/Internal.sol",
        "file": "../Commons/Internal.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 42238,
        "sourceUnit": 45037,
        "symbolAliases": [
          {
            "foreign": {
              "id": 41762,
              "name": "Internal",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 45036,
              "src": "244:8:92",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 41765,
        "nodeType": "ImportDirective",
        "src": "286:57:92",
        "nodes": [],
        "absolutePath": "src/DataStructure/Storage.sol",
        "file": "../../src/DataStructure/Storage.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 42238,
        "sourceUnit": 36828,
        "symbolAliases": [
          {
            "foreign": {
              "id": 41764,
              "name": "Loan",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 36780,
              "src": "294:4:92",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 41767,
        "nodeType": "ImportDirective",
        "src": "344:52:92",
        "nodes": [],
        "absolutePath": "src/utils/RayMath.sol",
        "file": "../../src/utils/RayMath.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 42238,
        "sourceUnit": 39998,
        "symbolAliases": [
          {
            "foreign": {
              "id": 41766,
              "name": "RayMath",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 39997,
              "src": "352:7:92",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 41771,
        "nodeType": "ImportDirective",
        "src": "442:123:92",
        "nodes": [],
        "absolutePath": "src/DataStructure/Errors.sol",
        "file": "../../src/DataStructure/Errors.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 42238,
        "sourceUnit": 36578,
        "symbolAliases": [
          {
            "foreign": {
              "id": 41768,
              "name": "RequestedAmountTooHigh",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 36523,
              "src": "450:22:92",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 41769,
              "name": "InconsistentAssetRequests",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 36531,
              "src": "474:25:92",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 41770,
              "name": "InconsistentTranches",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 36537,
              "src": "501:20:92",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 41775,
        "nodeType": "ImportDirective",
        "src": "566:95:92",
        "nodes": [],
        "absolutePath": "src/DataStructure/Global.sol",
        "file": "../../src/DataStructure/Global.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 42238,
        "sourceUnit": 36637,
        "symbolAliases": [
          {
            "foreign": {
              "id": 41772,
              "name": "ONE",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 36604,
              "src": "574:3:92",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 41773,
              "name": "supplyPositionStorage",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 36636,
              "src": "579:21:92",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 41774,
              "name": "protocolStorage",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 36624,
              "src": "602:15:92",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 41777,
        "nodeType": "ImportDirective",
        "src": "662:55:92",
        "nodes": [],
        "absolutePath": "test/Commons/TestCommons.sol",
        "file": "../Commons/TestCommons.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 42238,
        "sourceUnit": 46682,
        "symbolAliases": [
          {
            "foreign": {
              "id": 41776,
              "name": "TestCommons",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 46681,
              "src": "670:11:92",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 42237,
        "nodeType": "ContractDefinition",
        "src": "719:3690:92",
        "nodes": [
          {
            "id": 41782,
            "nodeType": "UsingForDirective",
            "src": "765:26:92",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 41780,
              "name": "RayMath",
              "nameLocations": [
                "771:7:92"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 39997,
              "src": "771:7:92"
            },
            "typeName": {
              "id": 41781,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "783:7:92",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 41786,
            "nodeType": "UsingForDirective",
            "src": "796:22:92",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 41783,
              "name": "RayMath",
              "nameLocations": [
                "802:7:92"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 39997,
              "src": "802:7:92"
            },
            "typeName": {
              "id": 41785,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 41784,
                "name": "Ray",
                "nameLocations": [
                  "814:3:92"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 36644,
                "src": "814:3:92"
              },
              "referencedDeclaration": 36644,
              "src": "814:3:92",
              "typeDescriptions": {
                "typeIdentifier": "t_userDefinedValueType$_Ray_$36644",
                "typeString": "Ray"
              }
            }
          },
          {
            "id": 41878,
            "nodeType": "FunctionDefinition",
            "src": "852:747:92",
            "nodes": [],
            "body": {
              "id": 41877,
              "nodeType": "Block",
              "src": "898:701:92",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    41792
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 41792,
                      "mutability": "mutable",
                      "name": "collatState",
                      "nameLocation": "931:11:92",
                      "nodeType": "VariableDeclaration",
                      "scope": 41877,
                      "src": "908:34:92",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_CollateralState_$36687_memory_ptr",
                        "typeString": "struct CollateralState"
                      },
                      "typeName": {
                        "id": 41791,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 41790,
                          "name": "CollateralState",
                          "nameLocations": [
                            "908:15:92"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 36687,
                          "src": "908:15:92"
                        },
                        "referencedDeclaration": 36687,
                        "src": "908:15:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_CollateralState_$36687_storage_ptr",
                          "typeString": "struct CollateralState"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 41795,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 41793,
                      "name": "getCollateralState",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46256,
                      "src": "945:18:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_struct$_CollateralState_$36687_memory_ptr_$",
                        "typeString": "function () view returns (struct CollateralState memory)"
                      }
                    },
                    "id": 41794,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "945:20:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_CollateralState_$36687_memory_ptr",
                      "typeString": "struct CollateralState memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "908:57:92"
                },
                {
                  "assignments": [
                    41798
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 41798,
                      "mutability": "mutable",
                      "name": "offer",
                      "nameLocation": "988:5:92",
                      "nodeType": "VariableDeclaration",
                      "scope": 41877,
                      "src": "975:18:92",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Offer_$36702_memory_ptr",
                        "typeString": "struct Offer"
                      },
                      "typeName": {
                        "id": 41797,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 41796,
                          "name": "Offer",
                          "nameLocations": [
                            "975:5:92"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 36702,
                          "src": "975:5:92"
                        },
                        "referencedDeclaration": 36702,
                        "src": "975:5:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Offer_$36702_storage_ptr",
                          "typeString": "struct Offer"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 41801,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 41799,
                      "name": "getOffer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46621,
                      "src": "996:8:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_struct$_Offer_$36702_memory_ptr_$",
                        "typeString": "function () view returns (struct Offer memory)"
                      }
                    },
                    "id": 41800,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "996:10:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Offer_$36702_memory_ptr",
                      "typeString": "struct Offer memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "975:31:92"
                },
                {
                  "expression": {
                    "id": 41806,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 41802,
                        "name": "offer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41798,
                        "src": "1016:5:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Offer_$36702_memory_ptr",
                          "typeString": "struct Offer memory"
                        }
                      },
                      "id": 41804,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "1022:11:92",
                      "memberName": "assetToLend",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 36690,
                      "src": "1016:17:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$664",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 41805,
                      "name": "money2",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46043,
                      "src": "1036:6:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Money_$38786",
                        "typeString": "contract Money"
                      }
                    },
                    "src": "1016:26:92",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$664",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 41807,
                  "nodeType": "ExpressionStatement",
                  "src": "1016:26:92"
                },
                {
                  "assignments": [
                    41810
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 41810,
                      "mutability": "mutable",
                      "name": "offArgs",
                      "nameLocation": "1068:7:92",
                      "nodeType": "VariableDeclaration",
                      "scope": 41877,
                      "src": "1052:23:92",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_OfferArg_$36665_memory_ptr",
                        "typeString": "struct OfferArg"
                      },
                      "typeName": {
                        "id": 41809,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 41808,
                          "name": "OfferArg",
                          "nameLocations": [
                            "1052:8:92"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 36665,
                          "src": "1052:8:92"
                        },
                        "referencedDeclaration": 36665,
                        "src": "1052:8:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_OfferArg_$36665_storage_ptr",
                          "typeString": "struct OfferArg"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 41814,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 41812,
                        "name": "offer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41798,
                        "src": "1090:5:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Offer_$36702_memory_ptr",
                          "typeString": "struct Offer memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Offer_$36702_memory_ptr",
                          "typeString": "struct Offer memory"
                        }
                      ],
                      "id": 41811,
                      "name": "getOfferArg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        46279,
                        46291
                      ],
                      "referencedDeclaration": 46279,
                      "src": "1078:11:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Offer_$36702_memory_ptr_$returns$_t_struct$_OfferArg_$36665_memory_ptr_$",
                        "typeString": "function (struct Offer memory) returns (struct OfferArg memory)"
                      }
                    },
                    "id": 41813,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1078:18:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_OfferArg_$36665_memory_ptr",
                      "typeString": "struct OfferArg memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1052:44:92"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 41820,
                              "name": "InconsistentAssetRequests",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 36531,
                              "src": "1146:25:92",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$_t_contract$_IERC20_$664_$_t_contract$_IERC20_$664_$returns$__$",
                                "typeString": "function (contract IERC20,contract IERC20) pure"
                              }
                            },
                            "id": 41821,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1172:8:92",
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "src": "1146:34:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          {
                            "id": 41822,
                            "name": "money",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 46040,
                            "src": "1182:5:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Money_$38786",
                              "typeString": "contract Money"
                            }
                          },
                          {
                            "id": 41823,
                            "name": "money2",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 46043,
                            "src": "1189:6:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Money_$38786",
                              "typeString": "contract Money"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            },
                            {
                              "typeIdentifier": "t_contract$_Money_$38786",
                              "typeString": "contract Money"
                            },
                            {
                              "typeIdentifier": "t_contract$_Money_$38786",
                              "typeString": "contract Money"
                            }
                          ],
                          "expression": {
                            "id": 41818,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "1123:3:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 41819,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "1127:18:92",
                          "memberName": "encodeWithSelector",
                          "nodeType": "MemberAccess",
                          "src": "1123:22:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes4) pure returns (bytes memory)"
                          }
                        },
                        "id": 41824,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1123:73:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 41815,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7912,
                        "src": "1107:2:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$18138",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 41817,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1110:12:92",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17872,
                      "src": "1107:15:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 41825,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1107:90:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 41826,
                  "nodeType": "ExpressionStatement",
                  "src": "1107:90:92"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 41830,
                        "name": "offArgs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41810,
                        "src": "1229:7:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_OfferArg_$36665_memory_ptr",
                          "typeString": "struct OfferArg memory"
                        }
                      },
                      {
                        "id": 41831,
                        "name": "collatState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41792,
                        "src": "1238:11:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_CollateralState_$36687_memory_ptr",
                          "typeString": "struct CollateralState memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_OfferArg_$36665_memory_ptr",
                          "typeString": "struct OfferArg memory"
                        },
                        {
                          "typeIdentifier": "t_struct$_CollateralState_$36687_memory_ptr",
                          "typeString": "struct CollateralState memory"
                        }
                      ],
                      "expression": {
                        "id": 41827,
                        "name": "this",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -28,
                        "src": "1207:4:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestBorrowHandlers_$42237",
                          "typeString": "contract TestBorrowHandlers"
                        }
                      },
                      "id": 41829,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1212:16:92",
                      "memberName": "useOfferExternal",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 44851,
                      "src": "1207:21:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_struct$_OfferArg_$36665_memory_ptr_$_t_struct$_CollateralState_$36687_memory_ptr_$returns$_t_struct$_CollateralState_$36687_memory_ptr_$",
                        "typeString": "function (struct OfferArg memory,struct CollateralState memory) external returns (struct CollateralState memory)"
                      }
                    },
                    "id": 41832,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1207:43:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_CollateralState_$36687_memory_ptr",
                      "typeString": "struct CollateralState memory"
                    }
                  },
                  "id": 41833,
                  "nodeType": "ExpressionStatement",
                  "src": "1207:43:92"
                },
                {
                  "expression": {
                    "id": 41838,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 41834,
                        "name": "collatState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41792,
                        "src": "1261:11:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_CollateralState_$36687_memory_ptr",
                          "typeString": "struct CollateralState memory"
                        }
                      },
                      "id": 41836,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "1273:9:92",
                      "memberName": "assetLent",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 36671,
                      "src": "1261:21:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$664",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 41837,
                      "name": "money2",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46043,
                      "src": "1285:6:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Money_$38786",
                        "typeString": "contract Money"
                      }
                    },
                    "src": "1261:30:92",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$664",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 41839,
                  "nodeType": "ExpressionStatement",
                  "src": "1261:30:92"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 41845,
                            "name": "money2",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 46043,
                            "src": "1334:6:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Money_$38786",
                              "typeString": "contract Money"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Money_$38786",
                              "typeString": "contract Money"
                            }
                          ],
                          "id": 41844,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1326:7:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 41843,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1326:7:92",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 41846,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1326:15:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "expression": {
                              "expression": {
                                "id": 41849,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 664,
                                "src": "1378:6:92",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$664_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 41850,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "1385:12:92",
                              "memberName": "transferFrom",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 663,
                              "src": "1378:19:92",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                                "typeString": "function IERC20.transferFrom(address,address,uint256) returns (bool)"
                              }
                            },
                            "id": 41851,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "1398:8:92",
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "src": "1378:28:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          {
                            "id": 41852,
                            "name": "signer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 46009,
                            "src": "1408:6:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 41853,
                            "name": "BORROWER",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 46022,
                            "src": "1416:8:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "expression": {
                              "id": 41854,
                              "name": "offArgs",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 41810,
                              "src": "1426:7:92",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_OfferArg_$36665_memory_ptr",
                                "typeString": "struct OfferArg memory"
                              }
                            },
                            "id": 41855,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1434:6:92",
                            "memberName": "amount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 36661,
                            "src": "1426:14:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 41847,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "1355:3:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 41848,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "1359:18:92",
                          "memberName": "encodeWithSelector",
                          "nodeType": "MemberAccess",
                          "src": "1355:22:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes4) pure returns (bytes memory)"
                          }
                        },
                        "id": 41856,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1355:86:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "74727565",
                            "id": 41859,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1466:4:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          ],
                          "expression": {
                            "id": 41857,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "1455:3:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 41858,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "1459:6:92",
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "1455:10:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 41860,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1455:16:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 41840,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7912,
                        "src": "1301:2:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$18138",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 41842,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1304:8:92",
                      "memberName": "mockCall",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17921,
                      "src": "1301:11:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,bytes memory,bytes memory) external"
                      }
                    },
                    "id": 41861,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1301:180:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 41862,
                  "nodeType": "ExpressionStatement",
                  "src": "1301:180:92"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 41866,
                        "name": "offArgs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41810,
                        "src": "1513:7:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_OfferArg_$36665_memory_ptr",
                          "typeString": "struct OfferArg memory"
                        }
                      },
                      {
                        "id": 41867,
                        "name": "collatState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41792,
                        "src": "1522:11:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_CollateralState_$36687_memory_ptr",
                          "typeString": "struct CollateralState memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_OfferArg_$36665_memory_ptr",
                          "typeString": "struct OfferArg memory"
                        },
                        {
                          "typeIdentifier": "t_struct$_CollateralState_$36687_memory_ptr",
                          "typeString": "struct CollateralState memory"
                        }
                      ],
                      "expression": {
                        "id": 41863,
                        "name": "this",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -28,
                        "src": "1491:4:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestBorrowHandlers_$42237",
                          "typeString": "contract TestBorrowHandlers"
                        }
                      },
                      "id": 41865,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1496:16:92",
                      "memberName": "useOfferExternal",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 44851,
                      "src": "1491:21:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_struct$_OfferArg_$36665_memory_ptr_$_t_struct$_CollateralState_$36687_memory_ptr_$returns$_t_struct$_CollateralState_$36687_memory_ptr_$",
                        "typeString": "function (struct OfferArg memory,struct CollateralState memory) external returns (struct CollateralState memory)"
                      }
                    },
                    "id": 41868,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1491:43:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_CollateralState_$36687_memory_ptr",
                      "typeString": "struct CollateralState memory"
                    }
                  },
                  "id": 41869,
                  "nodeType": "ExpressionStatement",
                  "src": "1491:43:92"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 41871,
                            "name": "supplyPositionStorage",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 36636,
                            "src": "1553:21:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_SupplyPosition_$36819_storage_ptr_$",
                              "typeString": "function () pure returns (struct SupplyPosition storage pointer)"
                            }
                          },
                          "id": 41872,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1553:23:92",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_SupplyPosition_$36819_storage_ptr",
                            "typeString": "struct SupplyPosition storage pointer"
                          }
                        },
                        "id": 41873,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1577:11:92",
                        "memberName": "totalSupply",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 36795,
                        "src": "1553:35:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 41874,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1590:1:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 41870,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        46547,
                        46563,
                        46601,
                        46667,
                        8050,
                        8075,
                        8088,
                        8104,
                        8146,
                        8188,
                        8230,
                        8267,
                        8304,
                        8341,
                        5888,
                        5913,
                        5943,
                        5968,
                        6027,
                        6052,
                        6082,
                        6107,
                        7580,
                        7615
                      ],
                      "referencedDeclaration": 6082,
                      "src": "1544:8:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 41875,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1544:48:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 41876,
                  "nodeType": "ExpressionStatement",
                  "src": "1544:48:92"
                }
              ]
            },
            "documentation": {
              "id": 41787,
              "nodeType": "StructuredDocumentation",
              "src": "824:23:92",
              "text": "useOffer tests ///"
            },
            "functionSelector": "bfc36be6",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testConsistentAssetRequests",
            "nameLocation": "861:27:92",
            "parameters": {
              "id": 41788,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "888:2:92"
            },
            "returnParameters": {
              "id": 41789,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "898:0:92"
            },
            "scope": 42237,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 41929,
            "nodeType": "FunctionDefinition",
            "src": "1605:450:92",
            "nodes": [],
            "body": {
              "id": 41928,
              "nodeType": "Block",
              "src": "1650:405:92",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    41883
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 41883,
                      "mutability": "mutable",
                      "name": "collatState",
                      "nameLocation": "1683:11:92",
                      "nodeType": "VariableDeclaration",
                      "scope": 41928,
                      "src": "1660:34:92",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_CollateralState_$36687_memory_ptr",
                        "typeString": "struct CollateralState"
                      },
                      "typeName": {
                        "id": 41882,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 41881,
                          "name": "CollateralState",
                          "nameLocations": [
                            "1660:15:92"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 36687,
                          "src": "1660:15:92"
                        },
                        "referencedDeclaration": 36687,
                        "src": "1660:15:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_CollateralState_$36687_storage_ptr",
                          "typeString": "struct CollateralState"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 41886,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 41884,
                      "name": "getCollateralState",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46256,
                      "src": "1697:18:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_struct$_CollateralState_$36687_memory_ptr_$",
                        "typeString": "function () view returns (struct CollateralState memory)"
                      }
                    },
                    "id": 41885,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1697:20:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_CollateralState_$36687_memory_ptr",
                      "typeString": "struct CollateralState memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1660:57:92"
                },
                {
                  "assignments": [
                    41889
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 41889,
                      "mutability": "mutable",
                      "name": "offer",
                      "nameLocation": "1740:5:92",
                      "nodeType": "VariableDeclaration",
                      "scope": 41928,
                      "src": "1727:18:92",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Offer_$36702_memory_ptr",
                        "typeString": "struct Offer"
                      },
                      "typeName": {
                        "id": 41888,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 41887,
                          "name": "Offer",
                          "nameLocations": [
                            "1727:5:92"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 36702,
                          "src": "1727:5:92"
                        },
                        "referencedDeclaration": 36702,
                        "src": "1727:5:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Offer_$36702_storage_ptr",
                          "typeString": "struct Offer"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 41892,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 41890,
                      "name": "getOffer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46621,
                      "src": "1748:8:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_struct$_Offer_$36702_memory_ptr_$",
                        "typeString": "function () view returns (struct Offer memory)"
                      }
                    },
                    "id": 41891,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1748:10:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Offer_$36702_memory_ptr",
                      "typeString": "struct Offer memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1727:31:92"
                },
                {
                  "assignments": [
                    41895
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 41895,
                      "mutability": "mutable",
                      "name": "offArgs",
                      "nameLocation": "1784:7:92",
                      "nodeType": "VariableDeclaration",
                      "scope": 41928,
                      "src": "1768:23:92",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_OfferArg_$36665_memory_ptr",
                        "typeString": "struct OfferArg"
                      },
                      "typeName": {
                        "id": 41894,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 41893,
                          "name": "OfferArg",
                          "nameLocations": [
                            "1768:8:92"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 36665,
                          "src": "1768:8:92"
                        },
                        "referencedDeclaration": 36665,
                        "src": "1768:8:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_OfferArg_$36665_storage_ptr",
                          "typeString": "struct OfferArg"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 41899,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 41897,
                        "name": "offer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41889,
                        "src": "1806:5:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Offer_$36702_memory_ptr",
                          "typeString": "struct Offer memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Offer_$36702_memory_ptr",
                          "typeString": "struct Offer memory"
                        }
                      ],
                      "id": 41896,
                      "name": "getOfferArg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        46279,
                        46291
                      ],
                      "referencedDeclaration": 46279,
                      "src": "1794:11:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Offer_$36702_memory_ptr_$returns$_t_struct$_OfferArg_$36665_memory_ptr_$",
                        "typeString": "function (struct Offer memory) returns (struct OfferArg memory)"
                      }
                    },
                    "id": 41898,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1794:18:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_OfferArg_$36665_memory_ptr",
                      "typeString": "struct OfferArg memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1768:44:92"
                },
                {
                  "expression": {
                    "id": 41904,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 41900,
                        "name": "offArgs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41895,
                        "src": "1823:7:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_OfferArg_$36665_memory_ptr",
                          "typeString": "struct OfferArg memory"
                        }
                      },
                      "id": 41902,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "1831:6:92",
                      "memberName": "amount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 36661,
                      "src": "1823:14:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "3131",
                      "id": 41903,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1840:8:92",
                      "subdenomination": "ether",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_11000000000000000000_by_1",
                        "typeString": "int_const 11000000000000000000"
                      },
                      "value": "11"
                    },
                    "src": "1823:25:92",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 41905,
                  "nodeType": "ExpressionStatement",
                  "src": "1823:25:92"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 41911,
                              "name": "RequestedAmountTooHigh",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 36523,
                              "src": "1911:22:92",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$_t_struct$_Offer_$36702_memory_ptr_$returns$__$",
                                "typeString": "function (uint256,uint256,struct Offer memory) pure"
                              }
                            },
                            "id": 41912,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1934:8:92",
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "src": "1911:31:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          {
                            "expression": {
                              "id": 41913,
                              "name": "offArgs",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 41895,
                              "src": "1944:7:92",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_OfferArg_$36665_memory_ptr",
                                "typeString": "struct OfferArg memory"
                              }
                            },
                            "id": 41914,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1952:6:92",
                            "memberName": "amount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 36661,
                            "src": "1944:14:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "expression": {
                              "id": 41915,
                              "name": "offer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 41889,
                              "src": "1960:5:92",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Offer_$36702_memory_ptr",
                                "typeString": "struct Offer memory"
                              }
                            },
                            "id": 41916,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1966:11:92",
                            "memberName": "loanToValue",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 36692,
                            "src": "1960:17:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 41917,
                            "name": "offer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 41889,
                            "src": "1979:5:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Offer_$36702_memory_ptr",
                              "typeString": "struct Offer memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_struct$_Offer_$36702_memory_ptr",
                              "typeString": "struct Offer memory"
                            }
                          ],
                          "expression": {
                            "id": 41909,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "1888:3:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 41910,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "1892:18:92",
                          "memberName": "encodeWithSelector",
                          "nodeType": "MemberAccess",
                          "src": "1888:22:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes4) pure returns (bytes memory)"
                          }
                        },
                        "id": 41918,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1888:97:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 41906,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7912,
                        "src": "1859:2:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$18138",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 41908,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1862:12:92",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17872,
                      "src": "1859:15:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 41919,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1859:136:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 41920,
                  "nodeType": "ExpressionStatement",
                  "src": "1859:136:92"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 41924,
                        "name": "offArgs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41895,
                        "src": "2027:7:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_OfferArg_$36665_memory_ptr",
                          "typeString": "struct OfferArg memory"
                        }
                      },
                      {
                        "id": 41925,
                        "name": "collatState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41883,
                        "src": "2036:11:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_CollateralState_$36687_memory_ptr",
                          "typeString": "struct CollateralState memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_OfferArg_$36665_memory_ptr",
                          "typeString": "struct OfferArg memory"
                        },
                        {
                          "typeIdentifier": "t_struct$_CollateralState_$36687_memory_ptr",
                          "typeString": "struct CollateralState memory"
                        }
                      ],
                      "expression": {
                        "id": 41921,
                        "name": "this",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -28,
                        "src": "2005:4:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestBorrowHandlers_$42237",
                          "typeString": "contract TestBorrowHandlers"
                        }
                      },
                      "id": 41923,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2010:16:92",
                      "memberName": "useOfferExternal",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 44851,
                      "src": "2005:21:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_struct$_OfferArg_$36665_memory_ptr_$_t_struct$_CollateralState_$36687_memory_ptr_$returns$_t_struct$_CollateralState_$36687_memory_ptr_$",
                        "typeString": "function (struct OfferArg memory,struct CollateralState memory) external returns (struct CollateralState memory)"
                      }
                    },
                    "id": 41926,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2005:43:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_CollateralState_$36687_memory_ptr",
                      "typeString": "struct CollateralState memory"
                    }
                  },
                  "id": 41927,
                  "nodeType": "ExpressionStatement",
                  "src": "2005:43:92"
                }
              ]
            },
            "functionSelector": "0701df01",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testRequestedAmountTooHigh",
            "nameLocation": "1614:26:92",
            "parameters": {
              "id": 41879,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1640:2:92"
            },
            "returnParameters": {
              "id": 41880,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1650:0:92"
            },
            "scope": 42237,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 41989,
            "nodeType": "FunctionDefinition",
            "src": "2061:475:92",
            "nodes": [],
            "body": {
              "id": 41988,
              "nodeType": "Block",
              "src": "2131:405:92",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    41937
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 41937,
                      "mutability": "mutable",
                      "name": "offer",
                      "nameLocation": "2154:5:92",
                      "nodeType": "VariableDeclaration",
                      "scope": 41988,
                      "src": "2141:18:92",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Offer_$36702_memory_ptr",
                        "typeString": "struct Offer"
                      },
                      "typeName": {
                        "id": 41936,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 41935,
                          "name": "Offer",
                          "nameLocations": [
                            "2141:5:92"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 36702,
                          "src": "2141:5:92"
                        },
                        "referencedDeclaration": 36702,
                        "src": "2141:5:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Offer_$36702_storage_ptr",
                          "typeString": "struct Offer"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 41940,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 41938,
                      "name": "getOffer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46621,
                      "src": "2162:8:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_struct$_Offer_$36702_memory_ptr_$",
                        "typeString": "function () view returns (struct Offer memory)"
                      }
                    },
                    "id": 41939,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2162:10:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Offer_$36702_memory_ptr",
                      "typeString": "struct Offer memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2141:31:92"
                },
                {
                  "assignments": [
                    41945
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 41945,
                      "mutability": "mutable",
                      "name": "offArgs",
                      "nameLocation": "2200:7:92",
                      "nodeType": "VariableDeclaration",
                      "scope": 41988,
                      "src": "2182:25:92",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_OfferArg_$36665_memory_ptr_$dyn_memory_ptr",
                        "typeString": "struct OfferArg[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 41943,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 41942,
                            "name": "OfferArg",
                            "nameLocations": [
                              "2182:8:92"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 36665,
                            "src": "2182:8:92"
                          },
                          "referencedDeclaration": 36665,
                          "src": "2182:8:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_OfferArg_$36665_storage_ptr",
                            "typeString": "struct OfferArg"
                          }
                        },
                        "id": 41944,
                        "nodeType": "ArrayTypeName",
                        "src": "2182:10:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_OfferArg_$36665_storage_$dyn_storage_ptr",
                          "typeString": "struct OfferArg[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 41949,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 41947,
                        "name": "offer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41937,
                        "src": "2223:5:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Offer_$36702_memory_ptr",
                          "typeString": "struct Offer memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Offer_$36702_memory_ptr",
                          "typeString": "struct Offer memory"
                        }
                      ],
                      "id": 41946,
                      "name": "getOfferArgs",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        46304,
                        46337
                      ],
                      "referencedDeclaration": 46337,
                      "src": "2210:12:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Offer_$36702_memory_ptr_$returns$_t_array$_t_struct$_OfferArg_$36665_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "function (struct Offer memory) returns (struct OfferArg memory[] memory)"
                      }
                    },
                    "id": 41948,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2210:19:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_OfferArg_$36665_memory_ptr_$dyn_memory_ptr",
                      "typeString": "struct OfferArg memory[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2182:47:92"
                },
                {
                  "assignments": [
                    41952
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 41952,
                      "mutability": "mutable",
                      "name": "nft",
                      "nameLocation": "2254:3:92",
                      "nodeType": "VariableDeclaration",
                      "scope": 41988,
                      "src": "2239:18:92",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_NFToken_$36708_memory_ptr",
                        "typeString": "struct NFToken"
                      },
                      "typeName": {
                        "id": 41951,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 41950,
                          "name": "NFToken",
                          "nameLocations": [
                            "2239:7:92"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 36708,
                          "src": "2239:7:92"
                        },
                        "referencedDeclaration": 36708,
                        "src": "2239:7:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_NFToken_$36708_storage_ptr",
                          "typeString": "struct NFToken"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 41955,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 41953,
                      "name": "getNft",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46418,
                      "src": "2260:6:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_struct$_NFToken_$36708_memory_ptr_$",
                        "typeString": "function () view returns (struct NFToken memory)"
                      }
                    },
                    "id": 41954,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2260:8:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_NFToken_$36708_memory_ptr",
                      "typeString": "struct NFToken memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2239:29:92"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 41961,
                            "name": "money",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 46040,
                            "src": "2312:5:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Money_$38786",
                              "typeString": "contract Money"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Money_$38786",
                              "typeString": "contract Money"
                            }
                          ],
                          "id": 41960,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2304:7:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 41959,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2304:7:92",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 41962,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2304:14:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "expression": {
                              "expression": {
                                "id": 41965,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 664,
                                "src": "2355:6:92",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$664_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 41966,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "2362:12:92",
                              "memberName": "transferFrom",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 663,
                              "src": "2355:19:92",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                                "typeString": "function IERC20.transferFrom(address,address,uint256) returns (bool)"
                              }
                            },
                            "id": 41967,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "2375:8:92",
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "src": "2355:28:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          {
                            "id": 41968,
                            "name": "signer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 46009,
                            "src": "2385:6:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 41969,
                            "name": "BORROWER",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 46022,
                            "src": "2393:8:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "expression": {
                              "baseExpression": {
                                "id": 41970,
                                "name": "offArgs",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 41945,
                                "src": "2403:7:92",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_OfferArg_$36665_memory_ptr_$dyn_memory_ptr",
                                  "typeString": "struct OfferArg memory[] memory"
                                }
                              },
                              "id": 41972,
                              "indexExpression": {
                                "hexValue": "30",
                                "id": 41971,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2411:1:92",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2403:10:92",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_OfferArg_$36665_memory_ptr",
                                "typeString": "struct OfferArg memory"
                              }
                            },
                            "id": 41973,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2414:6:92",
                            "memberName": "amount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 36661,
                            "src": "2403:17:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 41963,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "2332:3:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 41964,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "2336:18:92",
                          "memberName": "encodeWithSelector",
                          "nodeType": "MemberAccess",
                          "src": "2332:22:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes4) pure returns (bytes memory)"
                          }
                        },
                        "id": 41974,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2332:89:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "74727565",
                            "id": 41977,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2446:4:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          ],
                          "expression": {
                            "id": 41975,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "2435:3:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 41976,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "2439:6:92",
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "2435:10:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 41978,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2435:16:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 41956,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7912,
                        "src": "2279:2:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$18138",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 41958,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2282:8:92",
                      "memberName": "mockCall",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17921,
                      "src": "2279:11:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,bytes memory,bytes memory) external"
                      }
                    },
                    "id": 41979,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2279:182:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 41980,
                  "nodeType": "ExpressionStatement",
                  "src": "2279:182:92"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 41983,
                        "name": "offArgs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41945,
                        "src": "2506:7:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_OfferArg_$36665_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct OfferArg memory[] memory"
                        }
                      },
                      {
                        "id": 41984,
                        "name": "BORROWER",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46022,
                        "src": "2515:8:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 41985,
                        "name": "nft",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41952,
                        "src": "2525:3:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_NFToken_$36708_memory_ptr",
                          "typeString": "struct NFToken memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_struct$_OfferArg_$36665_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct OfferArg memory[] memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_struct$_NFToken_$36708_memory_ptr",
                          "typeString": "struct NFToken memory"
                        }
                      ],
                      "expression": {
                        "id": 41981,
                        "name": "this",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -28,
                        "src": "2479:4:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestBorrowHandlers_$42237",
                          "typeString": "contract TestBorrowHandlers"
                        }
                      },
                      "id": 41982,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2484:21:92",
                      "memberName": "useCollateralExternal",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 44873,
                      "src": "2479:26:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_array$_t_struct$_OfferArg_$36665_memory_ptr_$dyn_memory_ptr_$_t_address_$_t_struct$_NFToken_$36708_memory_ptr_$returns$_t_struct$_Loan_$36780_memory_ptr_$",
                        "typeString": "function (struct OfferArg memory[] memory,address,struct NFToken memory) external returns (struct Loan memory)"
                      }
                    },
                    "id": 41986,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2479:50:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Loan_$36780_memory_ptr",
                      "typeString": "struct Loan memory"
                    }
                  },
                  "functionReturnParameters": 41934,
                  "id": 41987,
                  "nodeType": "Return",
                  "src": "2472:57:92"
                }
              ]
            },
            "functionSelector": "b58907ea",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testUseCollateralNominal",
            "nameLocation": "2070:24:92",
            "parameters": {
              "id": 41930,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2094:2:92"
            },
            "returnParameters": {
              "id": 41934,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 41933,
                  "mutability": "mutable",
                  "name": "loan",
                  "nameLocation": "2125:4:92",
                  "nodeType": "VariableDeclaration",
                  "scope": 41989,
                  "src": "2113:16:92",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Loan_$36780_memory_ptr",
                    "typeString": "struct Loan"
                  },
                  "typeName": {
                    "id": 41932,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 41931,
                      "name": "Loan",
                      "nameLocations": [
                        "2113:4:92"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 36780,
                      "src": "2113:4:92"
                    },
                    "referencedDeclaration": 36780,
                    "src": "2113:4:92",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Loan_$36780_storage_ptr",
                      "typeString": "struct Loan"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2112:18:92"
            },
            "scope": 42237,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 42069,
            "nodeType": "FunctionDefinition",
            "src": "2542:650:92",
            "nodes": [],
            "body": {
              "id": 42068,
              "nodeType": "Block",
              "src": "2579:613:92",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    41994
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 41994,
                      "mutability": "mutable",
                      "name": "collatState",
                      "nameLocation": "2612:11:92",
                      "nodeType": "VariableDeclaration",
                      "scope": 42068,
                      "src": "2589:34:92",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_CollateralState_$36687_memory_ptr",
                        "typeString": "struct CollateralState"
                      },
                      "typeName": {
                        "id": 41993,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 41992,
                          "name": "CollateralState",
                          "nameLocations": [
                            "2589:15:92"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 36687,
                          "src": "2589:15:92"
                        },
                        "referencedDeclaration": 36687,
                        "src": "2589:15:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_CollateralState_$36687_storage_ptr",
                          "typeString": "struct CollateralState"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 41997,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 41995,
                      "name": "getCollateralState",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46256,
                      "src": "2626:18:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_struct$_CollateralState_$36687_memory_ptr_$",
                        "typeString": "function () view returns (struct CollateralState memory)"
                      }
                    },
                    "id": 41996,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2626:20:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_CollateralState_$36687_memory_ptr",
                      "typeString": "struct CollateralState memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2589:57:92"
                },
                {
                  "assignments": [
                    42000
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 42000,
                      "mutability": "mutable",
                      "name": "offer",
                      "nameLocation": "2669:5:92",
                      "nodeType": "VariableDeclaration",
                      "scope": 42068,
                      "src": "2656:18:92",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Offer_$36702_memory_ptr",
                        "typeString": "struct Offer"
                      },
                      "typeName": {
                        "id": 41999,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 41998,
                          "name": "Offer",
                          "nameLocations": [
                            "2656:5:92"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 36702,
                          "src": "2656:5:92"
                        },
                        "referencedDeclaration": 36702,
                        "src": "2656:5:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Offer_$36702_storage_ptr",
                          "typeString": "struct Offer"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 42003,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 42001,
                      "name": "getOffer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46621,
                      "src": "2677:8:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_struct$_Offer_$36702_memory_ptr_$",
                        "typeString": "function () view returns (struct Offer memory)"
                      }
                    },
                    "id": 42002,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2677:10:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Offer_$36702_memory_ptr",
                      "typeString": "struct Offer memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2656:31:92"
                },
                {
                  "assignments": [
                    42006
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 42006,
                      "mutability": "mutable",
                      "name": "offArgs",
                      "nameLocation": "2713:7:92",
                      "nodeType": "VariableDeclaration",
                      "scope": 42068,
                      "src": "2697:23:92",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_OfferArg_$36665_memory_ptr",
                        "typeString": "struct OfferArg"
                      },
                      "typeName": {
                        "id": 42005,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 42004,
                          "name": "OfferArg",
                          "nameLocations": [
                            "2697:8:92"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 36665,
                          "src": "2697:8:92"
                        },
                        "referencedDeclaration": 36665,
                        "src": "2697:8:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_OfferArg_$36665_storage_ptr",
                          "typeString": "struct OfferArg"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 42010,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 42008,
                        "name": "offer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42000,
                        "src": "2735:5:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Offer_$36702_memory_ptr",
                          "typeString": "struct Offer memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Offer_$36702_memory_ptr",
                          "typeString": "struct Offer memory"
                        }
                      ],
                      "id": 42007,
                      "name": "getOfferArg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        46279,
                        46291
                      ],
                      "referencedDeclaration": 46279,
                      "src": "2723:11:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Offer_$36702_memory_ptr_$returns$_t_struct$_OfferArg_$36665_memory_ptr_$",
                        "typeString": "function (struct Offer memory) returns (struct OfferArg memory)"
                      }
                    },
                    "id": 42009,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2723:18:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_OfferArg_$36665_memory_ptr",
                      "typeString": "struct OfferArg memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2697:44:92"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 42016,
                            "name": "money",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 46040,
                            "src": "2784:5:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Money_$38786",
                              "typeString": "contract Money"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Money_$38786",
                              "typeString": "contract Money"
                            }
                          ],
                          "id": 42015,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2776:7:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 42014,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2776:7:92",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 42017,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2776:14:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "expression": {
                              "expression": {
                                "id": 42020,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 664,
                                "src": "2827:6:92",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$664_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 42021,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "2834:12:92",
                              "memberName": "transferFrom",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 663,
                              "src": "2827:19:92",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                                "typeString": "function IERC20.transferFrom(address,address,uint256) returns (bool)"
                              }
                            },
                            "id": 42022,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "2847:8:92",
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "src": "2827:28:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          {
                            "id": 42023,
                            "name": "signer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 46009,
                            "src": "2857:6:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 42024,
                            "name": "BORROWER",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 46022,
                            "src": "2865:8:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "expression": {
                              "id": 42025,
                              "name": "offArgs",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 42006,
                              "src": "2875:7:92",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_OfferArg_$36665_memory_ptr",
                                "typeString": "struct OfferArg memory"
                              }
                            },
                            "id": 42026,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2883:6:92",
                            "memberName": "amount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 36661,
                            "src": "2875:14:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 42018,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "2804:3:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 42019,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "2808:18:92",
                          "memberName": "encodeWithSelector",
                          "nodeType": "MemberAccess",
                          "src": "2804:22:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes4) pure returns (bytes memory)"
                          }
                        },
                        "id": 42027,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2804:86:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "74727565",
                            "id": 42030,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2915:4:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          ],
                          "expression": {
                            "id": 42028,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "2904:3:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 42029,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "2908:6:92",
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "2904:10:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 42031,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2904:16:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 42011,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7912,
                        "src": "2751:2:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$18138",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 42013,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2754:8:92",
                      "memberName": "mockCall",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17921,
                      "src": "2751:11:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,bytes memory,bytes memory) external"
                      }
                    },
                    "id": 42032,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2751:179:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 42033,
                  "nodeType": "ExpressionStatement",
                  "src": "2751:179:92"
                },
                {
                  "assignments": [
                    42036
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 42036,
                      "mutability": "mutable",
                      "name": "res",
                      "nameLocation": "2963:3:92",
                      "nodeType": "VariableDeclaration",
                      "scope": 42068,
                      "src": "2940:26:92",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_CollateralState_$36687_memory_ptr",
                        "typeString": "struct CollateralState"
                      },
                      "typeName": {
                        "id": 42035,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 42034,
                          "name": "CollateralState",
                          "nameLocations": [
                            "2940:15:92"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 36687,
                          "src": "2940:15:92"
                        },
                        "referencedDeclaration": 36687,
                        "src": "2940:15:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_CollateralState_$36687_storage_ptr",
                          "typeString": "struct CollateralState"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 42042,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 42039,
                        "name": "offArgs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42006,
                        "src": "2991:7:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_OfferArg_$36665_memory_ptr",
                          "typeString": "struct OfferArg memory"
                        }
                      },
                      {
                        "id": 42040,
                        "name": "collatState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41994,
                        "src": "3000:11:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_CollateralState_$36687_memory_ptr",
                          "typeString": "struct CollateralState memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_OfferArg_$36665_memory_ptr",
                          "typeString": "struct OfferArg memory"
                        },
                        {
                          "typeIdentifier": "t_struct$_CollateralState_$36687_memory_ptr",
                          "typeString": "struct CollateralState memory"
                        }
                      ],
                      "expression": {
                        "id": 42037,
                        "name": "this",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -28,
                        "src": "2969:4:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestBorrowHandlers_$42237",
                          "typeString": "contract TestBorrowHandlers"
                        }
                      },
                      "id": 42038,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2974:16:92",
                      "memberName": "useOfferExternal",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 44851,
                      "src": "2969:21:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_struct$_OfferArg_$36665_memory_ptr_$_t_struct$_CollateralState_$36687_memory_ptr_$returns$_t_struct$_CollateralState_$36687_memory_ptr_$",
                        "typeString": "function (struct OfferArg memory,struct CollateralState memory) external returns (struct CollateralState memory)"
                      }
                    },
                    "id": 42041,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2969:43:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_CollateralState_$36687_memory_ptr",
                      "typeString": "struct CollateralState memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2940:72:92"
                },
                {
                  "assignments": [
                    42045
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 42045,
                      "mutability": "mutable",
                      "name": "shareMatched",
                      "nameLocation": "3027:12:92",
                      "nodeType": "VariableDeclaration",
                      "scope": 42068,
                      "src": "3023:16:92",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_userDefinedValueType$_Ray_$36644",
                        "typeString": "Ray"
                      },
                      "typeName": {
                        "id": 42044,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 42043,
                          "name": "Ray",
                          "nameLocations": [
                            "3023:3:92"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 36644,
                          "src": "3023:3:92"
                        },
                        "referencedDeclaration": 36644,
                        "src": "3023:3:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_userDefinedValueType$_Ray_$36644",
                          "typeString": "Ray"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 42052,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 42049,
                          "name": "offer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 42000,
                          "src": "3061:5:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Offer_$36702_memory_ptr",
                            "typeString": "struct Offer memory"
                          }
                        },
                        "id": 42050,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3067:11:92",
                        "memberName": "loanToValue",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 36692,
                        "src": "3061:17:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "id": 42046,
                          "name": "offArgs",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 42006,
                          "src": "3042:7:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_OfferArg_$36665_memory_ptr",
                            "typeString": "struct OfferArg memory"
                          }
                        },
                        "id": 42047,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3050:6:92",
                        "memberName": "amount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 36661,
                        "src": "3042:14:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 42048,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3057:3:92",
                      "memberName": "div",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 39886,
                      "src": "3042:18:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_userDefinedValueType$_Ray_$36644_$attached_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (Ray)"
                      }
                    },
                    "id": 42051,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3042:37:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_userDefinedValueType$_Ray_$36644",
                      "typeString": "Ray"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3023:56:92"
                },
                {
                  "expression": {
                    "id": 42061,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 42053,
                        "name": "collatState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41994,
                        "src": "3089:11:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_CollateralState_$36687_memory_ptr",
                          "typeString": "struct CollateralState memory"
                        }
                      },
                      "id": 42055,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "3101:7:92",
                      "memberName": "matched",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 36668,
                      "src": "3089:19:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_userDefinedValueType$_Ray_$36644",
                        "typeString": "Ray"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 42059,
                          "name": "shareMatched",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 42045,
                          "src": "3135:12:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_userDefinedValueType$_Ray_$36644",
                            "typeString": "Ray"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_userDefinedValueType$_Ray_$36644",
                            "typeString": "Ray"
                          }
                        ],
                        "expression": {
                          "expression": {
                            "id": 42056,
                            "name": "collatState",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 41994,
                            "src": "3111:11:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_CollateralState_$36687_memory_ptr",
                              "typeString": "struct CollateralState memory"
                            }
                          },
                          "id": 42057,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3123:7:92",
                          "memberName": "matched",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 36668,
                          "src": "3111:19:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_userDefinedValueType$_Ray_$36644",
                            "typeString": "Ray"
                          }
                        },
                        "id": 42058,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3131:3:92",
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 39687,
                        "src": "3111:23:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_userDefinedValueType$_Ray_$36644_$_t_userDefinedValueType$_Ray_$36644_$returns$_t_userDefinedValueType$_Ray_$36644_$attached_to$_t_userDefinedValueType$_Ray_$36644_$",
                          "typeString": "function (Ray,Ray) pure returns (Ray)"
                        }
                      },
                      "id": 42060,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3111:37:92",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_userDefinedValueType$_Ray_$36644",
                        "typeString": "Ray"
                      }
                    },
                    "src": "3089:59:92",
                    "typeDescriptions": {
                      "typeIdentifier": "t_userDefinedValueType$_Ray_$36644",
                      "typeString": "Ray"
                    }
                  },
                  "id": 42062,
                  "nodeType": "ExpressionStatement",
                  "src": "3089:59:92"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 42064,
                        "name": "res",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42036,
                        "src": "3168:3:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_CollateralState_$36687_memory_ptr",
                          "typeString": "struct CollateralState memory"
                        }
                      },
                      {
                        "id": 42065,
                        "name": "collatState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41994,
                        "src": "3173:11:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_CollateralState_$36687_memory_ptr",
                          "typeString": "struct CollateralState memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_CollateralState_$36687_memory_ptr",
                          "typeString": "struct CollateralState memory"
                        },
                        {
                          "typeIdentifier": "t_struct$_CollateralState_$36687_memory_ptr",
                          "typeString": "struct CollateralState memory"
                        }
                      ],
                      "id": 42063,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        46547,
                        46563,
                        46601,
                        46667,
                        8050,
                        8075,
                        8088,
                        8104,
                        8146,
                        8188,
                        8230,
                        8267,
                        8304,
                        8341,
                        5888,
                        5913,
                        5943,
                        5968,
                        6027,
                        6052,
                        6082,
                        6107,
                        7580,
                        7615
                      ],
                      "referencedDeclaration": 46601,
                      "src": "3159:8:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_CollateralState_$36687_memory_ptr_$_t_struct$_CollateralState_$36687_memory_ptr_$returns$__$",
                        "typeString": "function (struct CollateralState memory,struct CollateralState memory) view"
                      }
                    },
                    "id": 42066,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3159:26:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 42067,
                  "nodeType": "ExpressionStatement",
                  "src": "3159:26:92"
                }
              ]
            },
            "functionSelector": "9e10b8db",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testUseOfferReturn",
            "nameLocation": "2551:18:92",
            "parameters": {
              "id": 41990,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2569:2:92"
            },
            "returnParameters": {
              "id": 41991,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2579:0:92"
            },
            "scope": 42237,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 42141,
            "nodeType": "FunctionDefinition",
            "src": "3231:477:92",
            "nodes": [],
            "body": {
              "id": 42140,
              "nodeType": "Block",
              "src": "3275:433:92",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    42077
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 42077,
                      "mutability": "mutable",
                      "name": "offerArgs",
                      "nameLocation": "3303:9:92",
                      "nodeType": "VariableDeclaration",
                      "scope": 42140,
                      "src": "3285:27:92",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_OfferArg_$36665_memory_ptr_$dyn_memory_ptr",
                        "typeString": "struct OfferArg[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 42075,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 42074,
                            "name": "OfferArg",
                            "nameLocations": [
                              "3285:8:92"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 36665,
                            "src": "3285:8:92"
                          },
                          "referencedDeclaration": 36665,
                          "src": "3285:8:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_OfferArg_$36665_storage_ptr",
                            "typeString": "struct OfferArg"
                          }
                        },
                        "id": 42076,
                        "nodeType": "ArrayTypeName",
                        "src": "3285:10:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_OfferArg_$36665_storage_$dyn_storage_ptr",
                          "typeString": "struct OfferArg[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 42084,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "3130",
                        "id": 42082,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3330:2:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        }
                      ],
                      "id": 42081,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "3315:14:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_OfferArg_$36665_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (struct OfferArg memory[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 42079,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 42078,
                            "name": "OfferArg",
                            "nameLocations": [
                              "3319:8:92"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 36665,
                            "src": "3319:8:92"
                          },
                          "referencedDeclaration": 36665,
                          "src": "3319:8:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_OfferArg_$36665_storage_ptr",
                            "typeString": "struct OfferArg"
                          }
                        },
                        "id": 42080,
                        "nodeType": "ArrayTypeName",
                        "src": "3319:10:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_OfferArg_$36665_storage_$dyn_storage_ptr",
                          "typeString": "struct OfferArg[]"
                        }
                      }
                    },
                    "id": 42083,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3315:18:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_OfferArg_$36665_memory_ptr_$dyn_memory_ptr",
                      "typeString": "struct OfferArg memory[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3285:48:92"
                },
                {
                  "body": {
                    "id": 42104,
                    "nodeType": "Block",
                    "src": "3377:63:92",
                    "statements": [
                      {
                        "expression": {
                          "id": 42102,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 42095,
                              "name": "offerArgs",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 42077,
                              "src": "3391:9:92",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_OfferArg_$36665_memory_ptr_$dyn_memory_ptr",
                                "typeString": "struct OfferArg memory[] memory"
                              }
                            },
                            "id": 42097,
                            "indexExpression": {
                              "id": 42096,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 42086,
                              "src": "3401:1:92",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "3391:12:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_OfferArg_$36665_memory_ptr",
                              "typeString": "struct OfferArg memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 42099,
                                  "name": "getOffer",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 46621,
                                  "src": "3418:8:92",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$__$returns$_t_struct$_Offer_$36702_memory_ptr_$",
                                    "typeString": "function () view returns (struct Offer memory)"
                                  }
                                },
                                "id": 42100,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3418:10:92",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Offer_$36702_memory_ptr",
                                  "typeString": "struct Offer memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_struct$_Offer_$36702_memory_ptr",
                                  "typeString": "struct Offer memory"
                                }
                              ],
                              "id": 42098,
                              "name": "getOfferArg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                46279,
                                46291
                              ],
                              "referencedDeclaration": 46279,
                              "src": "3406:11:92",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Offer_$36702_memory_ptr_$returns$_t_struct$_OfferArg_$36665_memory_ptr_$",
                                "typeString": "function (struct Offer memory) returns (struct OfferArg memory)"
                              }
                            },
                            "id": 42101,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3406:23:92",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_OfferArg_$36665_memory_ptr",
                              "typeString": "struct OfferArg memory"
                            }
                          },
                          "src": "3391:38:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_OfferArg_$36665_memory_ptr",
                            "typeString": "struct OfferArg memory"
                          }
                        },
                        "id": 42103,
                        "nodeType": "ExpressionStatement",
                        "src": "3391:38:92"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 42091,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 42089,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 42086,
                      "src": "3364:1:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "hexValue": "3130",
                      "id": 42090,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3368:2:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_10_by_1",
                        "typeString": "int_const 10"
                      },
                      "value": "10"
                    },
                    "src": "3364:6:92",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 42105,
                  "initializationExpression": {
                    "assignments": [
                      42086
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 42086,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "3357:1:92",
                        "nodeType": "VariableDeclaration",
                        "scope": 42105,
                        "src": "3349:9:92",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 42085,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3349:7:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 42088,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 42087,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3361:1:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "3349:13:92"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 42093,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "3372:3:92",
                      "subExpression": {
                        "id": 42092,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42086,
                        "src": "3372:1:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 42094,
                    "nodeType": "ExpressionStatement",
                    "src": "3372:3:92"
                  },
                  "nodeType": "ForStatement",
                  "src": "3344:96:92"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 42111,
                            "name": "money",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 46040,
                            "src": "3483:5:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Money_$38786",
                              "typeString": "contract Money"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Money_$38786",
                              "typeString": "contract Money"
                            }
                          ],
                          "id": 42110,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3475:7:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 42109,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3475:7:92",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 42112,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3475:14:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "expression": {
                              "expression": {
                                "id": 42115,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 664,
                                "src": "3526:6:92",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$664_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 42116,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "3533:12:92",
                              "memberName": "transferFrom",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 663,
                              "src": "3526:19:92",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                                "typeString": "function IERC20.transferFrom(address,address,uint256) returns (bool)"
                              }
                            },
                            "id": 42117,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "3546:8:92",
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "src": "3526:28:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          {
                            "id": 42118,
                            "name": "signer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 46009,
                            "src": "3556:6:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 42119,
                            "name": "BORROWER",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 46022,
                            "src": "3564:8:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "expression": {
                              "baseExpression": {
                                "id": 42120,
                                "name": "offerArgs",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 42077,
                                "src": "3574:9:92",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_OfferArg_$36665_memory_ptr_$dyn_memory_ptr",
                                  "typeString": "struct OfferArg memory[] memory"
                                }
                              },
                              "id": 42122,
                              "indexExpression": {
                                "hexValue": "30",
                                "id": 42121,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3584:1:92",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3574:12:92",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_OfferArg_$36665_memory_ptr",
                                "typeString": "struct OfferArg memory"
                              }
                            },
                            "id": 42123,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3587:6:92",
                            "memberName": "amount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 36661,
                            "src": "3574:19:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 42113,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "3503:3:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 42114,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "3507:18:92",
                          "memberName": "encodeWithSelector",
                          "nodeType": "MemberAccess",
                          "src": "3503:22:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes4) pure returns (bytes memory)"
                          }
                        },
                        "id": 42124,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3503:91:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "74727565",
                            "id": 42127,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3619:4:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          ],
                          "expression": {
                            "id": 42125,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "3608:3:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 42126,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "3612:6:92",
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "3608:10:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 42128,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3608:16:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 42106,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7912,
                        "src": "3450:2:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$18138",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 42108,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3453:8:92",
                      "memberName": "mockCall",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17921,
                      "src": "3450:11:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,bytes memory,bytes memory) external"
                      }
                    },
                    "id": 42129,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3450:184:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 42130,
                  "nodeType": "ExpressionStatement",
                  "src": "3450:184:92"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 42134,
                        "name": "offerArgs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42077,
                        "src": "3671:9:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_OfferArg_$36665_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct OfferArg memory[] memory"
                        }
                      },
                      {
                        "id": 42135,
                        "name": "BORROWER",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46022,
                        "src": "3682:8:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 42136,
                          "name": "getNft",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 46418,
                          "src": "3692:6:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_struct$_NFToken_$36708_memory_ptr_$",
                            "typeString": "function () view returns (struct NFToken memory)"
                          }
                        },
                        "id": 42137,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3692:8:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_NFToken_$36708_memory_ptr",
                          "typeString": "struct NFToken memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_struct$_OfferArg_$36665_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct OfferArg memory[] memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_struct$_NFToken_$36708_memory_ptr",
                          "typeString": "struct NFToken memory"
                        }
                      ],
                      "expression": {
                        "id": 42131,
                        "name": "this",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -28,
                        "src": "3644:4:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestBorrowHandlers_$42237",
                          "typeString": "contract TestBorrowHandlers"
                        }
                      },
                      "id": 42133,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3649:21:92",
                      "memberName": "useCollateralExternal",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 44873,
                      "src": "3644:26:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_array$_t_struct$_OfferArg_$36665_memory_ptr_$dyn_memory_ptr_$_t_address_$_t_struct$_NFToken_$36708_memory_ptr_$returns$_t_struct$_Loan_$36780_memory_ptr_$",
                        "typeString": "function (struct OfferArg memory[] memory,address,struct NFToken memory) external returns (struct Loan memory)"
                      }
                    },
                    "id": 42138,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3644:57:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Loan_$36780_memory_ptr",
                      "typeString": "struct Loan memory"
                    }
                  },
                  "id": 42139,
                  "nodeType": "ExpressionStatement",
                  "src": "3644:57:92"
                }
              ]
            },
            "documentation": {
              "id": 42070,
              "nodeType": "StructuredDocumentation",
              "src": "3198:28:92",
              "text": "useCollateral tests ///"
            },
            "functionSelector": "fc6774fe",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testMultipleUseCollateral",
            "nameLocation": "3240:25:92",
            "parameters": {
              "id": 42071,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3265:2:92"
            },
            "returnParameters": {
              "id": 42072,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3275:0:92"
            },
            "scope": 42237,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 42182,
            "nodeType": "FunctionDefinition",
            "src": "3714:269:92",
            "nodes": [],
            "body": {
              "id": 42181,
              "nodeType": "Block",
              "src": "3756:227:92",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    42146
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 42146,
                      "mutability": "mutable",
                      "name": "loan",
                      "nameLocation": "3778:4:92",
                      "nodeType": "VariableDeclaration",
                      "scope": 42181,
                      "src": "3766:16:92",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Loan_$36780_memory_ptr",
                        "typeString": "struct Loan"
                      },
                      "typeName": {
                        "id": 42145,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 42144,
                          "name": "Loan",
                          "nameLocations": [
                            "3766:4:92"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 36780,
                          "src": "3766:4:92"
                        },
                        "referencedDeclaration": 36780,
                        "src": "3766:4:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Loan_$36780_storage_ptr",
                          "typeString": "struct Loan"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 42149,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 42147,
                      "name": "getLoan",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46491,
                      "src": "3785:7:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_struct$_Loan_$36780_memory_ptr_$",
                        "typeString": "function () view returns (struct Loan memory)"
                      }
                    },
                    "id": 42148,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3785:9:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Loan_$36780_memory_ptr",
                      "typeString": "struct Loan memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3766:28:92"
                },
                {
                  "expression": {
                    "id": 42157,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 42150,
                        "name": "loan",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42146,
                        "src": "3804:4:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Loan_$36780_memory_ptr",
                          "typeString": "struct Loan memory"
                        }
                      },
                      "id": 42152,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "3809:9:92",
                      "memberName": "shareLent",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 36757,
                      "src": "3804:14:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_userDefinedValueType$_Ray_$36644",
                        "typeString": "Ray"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "3130",
                          "id": 42155,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3829:2:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10_by_1",
                            "typeString": "int_const 10"
                          },
                          "value": "10"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_10_by_1",
                            "typeString": "int_const 10"
                          }
                        ],
                        "expression": {
                          "id": 42153,
                          "name": "ONE",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 36604,
                          "src": "3821:3:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_userDefinedValueType$_Ray_$36644",
                            "typeString": "Ray"
                          }
                        },
                        "id": 42154,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3825:3:92",
                        "memberName": "div",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 39842,
                        "src": "3821:7:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_userDefinedValueType$_Ray_$36644_$_t_uint256_$returns$_t_userDefinedValueType$_Ray_$36644_$attached_to$_t_userDefinedValueType$_Ray_$36644_$",
                          "typeString": "function (Ray,uint256) pure returns (Ray)"
                        }
                      },
                      "id": 42156,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3821:11:92",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_userDefinedValueType$_Ray_$36644",
                        "typeString": "Ray"
                      }
                    },
                    "src": "3804:28:92",
                    "typeDescriptions": {
                      "typeIdentifier": "t_userDefinedValueType$_Ray_$36644",
                      "typeString": "Ray"
                    }
                  },
                  "id": 42158,
                  "nodeType": "ExpressionStatement",
                  "src": "3804:28:92"
                },
                {
                  "expression": {
                    "id": 42164,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 42159,
                        "name": "loan",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42146,
                        "src": "3842:4:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Loan_$36780_memory_ptr",
                          "typeString": "struct Loan memory"
                        }
                      },
                      "id": 42161,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "3847:9:92",
                      "memberName": "startDate",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 36759,
                      "src": "3842:14:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 42162,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "3859:5:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 42163,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3865:9:92",
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "3859:15:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3842:32:92",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 42165,
                  "nodeType": "ExpressionStatement",
                  "src": "3842:32:92"
                },
                {
                  "expression": {
                    "id": 42173,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 42166,
                        "name": "loan",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42146,
                        "src": "3884:4:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Loan_$36780_memory_ptr",
                          "typeString": "struct Loan memory"
                        }
                      },
                      "id": 42168,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "3889:7:92",
                      "memberName": "endDate",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 36761,
                      "src": "3884:12:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 42172,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 42169,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "3899:5:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 42170,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3905:9:92",
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "3899:15:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "hexValue": "32",
                        "id": 42171,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3917:7:92",
                        "subdenomination": "weeks",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1209600_by_1",
                          "typeString": "int_const 1209600"
                        },
                        "value": "2"
                      },
                      "src": "3899:25:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3884:40:92",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 42174,
                  "nodeType": "ExpressionStatement",
                  "src": "3884:40:92"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 42176,
                          "name": "testUseCollateralNominal",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 41989,
                          "src": "3943:24:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_struct$_Loan_$36780_memory_ptr_$",
                            "typeString": "function () returns (struct Loan memory)"
                          }
                        },
                        "id": 42177,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3943:26:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Loan_$36780_memory_ptr",
                          "typeString": "struct Loan memory"
                        }
                      },
                      {
                        "id": 42178,
                        "name": "loan",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42146,
                        "src": "3971:4:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Loan_$36780_memory_ptr",
                          "typeString": "struct Loan memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Loan_$36780_memory_ptr",
                          "typeString": "struct Loan memory"
                        },
                        {
                          "typeIdentifier": "t_struct$_Loan_$36780_memory_ptr",
                          "typeString": "struct Loan memory"
                        }
                      ],
                      "id": 42175,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        46547,
                        46563,
                        46601,
                        46667,
                        8050,
                        8075,
                        8088,
                        8104,
                        8146,
                        8188,
                        8230,
                        8267,
                        8304,
                        8341,
                        5888,
                        5913,
                        5943,
                        5968,
                        6027,
                        6052,
                        6082,
                        6107,
                        7580,
                        7615
                      ],
                      "referencedDeclaration": 46563,
                      "src": "3934:8:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_Loan_$36780_memory_ptr_$_t_struct$_Loan_$36780_memory_ptr_$returns$__$",
                        "typeString": "function (struct Loan memory,struct Loan memory) view"
                      }
                    },
                    "id": 42179,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3934:42:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 42180,
                  "nodeType": "ExpressionStatement",
                  "src": "3934:42:92"
                }
              ]
            },
            "functionSelector": "f24c490c",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testUseCollateralReturn",
            "nameLocation": "3723:23:92",
            "parameters": {
              "id": 42142,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3746:2:92"
            },
            "returnParameters": {
              "id": 42143,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3756:0:92"
            },
            "scope": 42237,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 42236,
            "nodeType": "FunctionDefinition",
            "src": "3989:418:92",
            "nodes": [],
            "body": {
              "id": 42235,
              "nodeType": "Block",
              "src": "4035:372:92",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    42187
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 42187,
                      "mutability": "mutable",
                      "name": "collatState",
                      "nameLocation": "4068:11:92",
                      "nodeType": "VariableDeclaration",
                      "scope": 42235,
                      "src": "4045:34:92",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_CollateralState_$36687_memory_ptr",
                        "typeString": "struct CollateralState"
                      },
                      "typeName": {
                        "id": 42186,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 42185,
                          "name": "CollateralState",
                          "nameLocations": [
                            "4045:15:92"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 36687,
                          "src": "4045:15:92"
                        },
                        "referencedDeclaration": 36687,
                        "src": "4045:15:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_CollateralState_$36687_storage_ptr",
                          "typeString": "struct CollateralState"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 42190,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 42188,
                      "name": "getCollateralState",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46256,
                      "src": "4082:18:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_struct$_CollateralState_$36687_memory_ptr_$",
                        "typeString": "function () view returns (struct CollateralState memory)"
                      }
                    },
                    "id": 42189,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4082:20:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_CollateralState_$36687_memory_ptr",
                      "typeString": "struct CollateralState memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4045:57:92"
                },
                {
                  "assignments": [
                    42193
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 42193,
                      "mutability": "mutable",
                      "name": "offer",
                      "nameLocation": "4125:5:92",
                      "nodeType": "VariableDeclaration",
                      "scope": 42235,
                      "src": "4112:18:92",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Offer_$36702_memory_ptr",
                        "typeString": "struct Offer"
                      },
                      "typeName": {
                        "id": 42192,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 42191,
                          "name": "Offer",
                          "nameLocations": [
                            "4112:5:92"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 36702,
                          "src": "4112:5:92"
                        },
                        "referencedDeclaration": 36702,
                        "src": "4112:5:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Offer_$36702_storage_ptr",
                          "typeString": "struct Offer"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 42196,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 42194,
                      "name": "getOffer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46621,
                      "src": "4133:8:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_struct$_Offer_$36702_memory_ptr_$",
                        "typeString": "function () view returns (struct Offer memory)"
                      }
                    },
                    "id": 42195,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4133:10:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Offer_$36702_memory_ptr",
                      "typeString": "struct Offer memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4112:31:92"
                },
                {
                  "expression": {
                    "id": 42201,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 42197,
                        "name": "offer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42193,
                        "src": "4153:5:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Offer_$36702_memory_ptr",
                          "typeString": "struct Offer memory"
                        }
                      },
                      "id": 42199,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "4159:7:92",
                      "memberName": "tranche",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 36698,
                      "src": "4153:13:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 42200,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4169:1:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "4153:17:92",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 42202,
                  "nodeType": "ExpressionStatement",
                  "src": "4153:17:92"
                },
                {
                  "assignments": [
                    42205
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 42205,
                      "mutability": "mutable",
                      "name": "arg",
                      "nameLocation": "4196:3:92",
                      "nodeType": "VariableDeclaration",
                      "scope": 42235,
                      "src": "4180:19:92",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_OfferArg_$36665_memory_ptr",
                        "typeString": "struct OfferArg"
                      },
                      "typeName": {
                        "id": 42204,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 42203,
                          "name": "OfferArg",
                          "nameLocations": [
                            "4180:8:92"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 36665,
                          "src": "4180:8:92"
                        },
                        "referencedDeclaration": 36665,
                        "src": "4180:8:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_OfferArg_$36665_storage_ptr",
                          "typeString": "struct OfferArg"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 42209,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 42207,
                        "name": "offer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42193,
                        "src": "4214:5:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Offer_$36702_memory_ptr",
                          "typeString": "struct Offer memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Offer_$36702_memory_ptr",
                          "typeString": "struct Offer memory"
                        }
                      ],
                      "id": 42206,
                      "name": "getOfferArg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        46279,
                        46291
                      ],
                      "referencedDeclaration": 46279,
                      "src": "4202:11:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Offer_$36702_memory_ptr_$returns$_t_struct$_OfferArg_$36665_memory_ptr_$",
                        "typeString": "function (struct Offer memory) returns (struct OfferArg memory)"
                      }
                    },
                    "id": 42208,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4202:18:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_OfferArg_$36665_memory_ptr",
                      "typeString": "struct OfferArg memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4180:40:92"
                },
                {
                  "expression": {
                    "id": 42214,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 42210,
                          "name": "protocolStorage",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 36624,
                          "src": "4231:15:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_Protocol_$36749_storage_ptr_$",
                            "typeString": "function () pure returns (struct Protocol storage pointer)"
                          }
                        },
                        "id": 42211,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4231:17:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Protocol_$36749_storage_ptr",
                          "typeString": "struct Protocol storage pointer"
                        }
                      },
                      "id": 42212,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "4249:12:92",
                      "memberName": "nbOfTranches",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 36725,
                      "src": "4231:30:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "32",
                      "id": 42213,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4264:1:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "src": "4231:34:92",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 42215,
                  "nodeType": "ExpressionStatement",
                  "src": "4231:34:92"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 42221,
                              "name": "InconsistentTranches",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 36537,
                              "src": "4314:20:92",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$",
                                "typeString": "function (uint256,uint256) pure"
                              }
                            },
                            "id": 42222,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4335:8:92",
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "src": "4314:29:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          {
                            "hexValue": "30",
                            "id": 42223,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4345:1:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          {
                            "hexValue": "31",
                            "id": 42224,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4348:1:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            },
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            }
                          ],
                          "expression": {
                            "id": 42219,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "4291:3:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 42220,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "4295:18:92",
                          "memberName": "encodeWithSelector",
                          "nodeType": "MemberAccess",
                          "src": "4291:22:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes4) pure returns (bytes memory)"
                          }
                        },
                        "id": 42225,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4291:59:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 42216,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7912,
                        "src": "4275:2:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$18138",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 42218,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4278:12:92",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17872,
                      "src": "4275:15:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 42226,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4275:76:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 42227,
                  "nodeType": "ExpressionStatement",
                  "src": "4275:76:92"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 42231,
                        "name": "arg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42205,
                        "src": "4383:3:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_OfferArg_$36665_memory_ptr",
                          "typeString": "struct OfferArg memory"
                        }
                      },
                      {
                        "id": 42232,
                        "name": "collatState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42187,
                        "src": "4388:11:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_CollateralState_$36687_memory_ptr",
                          "typeString": "struct CollateralState memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_OfferArg_$36665_memory_ptr",
                          "typeString": "struct OfferArg memory"
                        },
                        {
                          "typeIdentifier": "t_struct$_CollateralState_$36687_memory_ptr",
                          "typeString": "struct CollateralState memory"
                        }
                      ],
                      "expression": {
                        "id": 42228,
                        "name": "this",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -28,
                        "src": "4361:4:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestBorrowHandlers_$42237",
                          "typeString": "contract TestBorrowHandlers"
                        }
                      },
                      "id": 42230,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4366:16:92",
                      "memberName": "useOfferExternal",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 44851,
                      "src": "4361:21:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_struct$_OfferArg_$36665_memory_ptr_$_t_struct$_CollateralState_$36687_memory_ptr_$returns$_t_struct$_CollateralState_$36687_memory_ptr_$",
                        "typeString": "function (struct OfferArg memory,struct CollateralState memory) external returns (struct CollateralState memory)"
                      }
                    },
                    "id": 42233,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4361:39:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_CollateralState_$36687_memory_ptr",
                      "typeString": "struct CollateralState memory"
                    }
                  },
                  "id": 42234,
                  "nodeType": "ExpressionStatement",
                  "src": "4361:39:92"
                }
              ]
            },
            "functionSelector": "73911a6d",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testConsistentOfferTranches",
            "nameLocation": "3998:27:92",
            "parameters": {
              "id": 42183,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4025:2:92"
            },
            "returnParameters": {
              "id": 42184,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4035:0:92"
            },
            "scope": 42237,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 41778,
              "name": "Internal",
              "nameLocations": [
                "750:8:92"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 45036,
              "src": "750:8:92"
            },
            "id": 41779,
            "nodeType": "InheritanceSpecifier",
            "src": "750:8:92"
          }
        ],
        "canonicalName": "TestBorrowHandlers",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          42237,
          45036,
          44067,
          37461,
          37782,
          37306,
          38736,
          37116,
          38722,
          36091,
          35057,
          35686,
          34938,
          38432,
          38349,
          1732,
          3267,
          38607,
          38588,
          35197,
          37405,
          3231,
          38562,
          1750,
          38576,
          38542,
          38749,
          38535,
          34657,
          38509,
          46681,
          45648,
          16818,
          7919,
          7916,
          16769,
          12568,
          12278,
          11599,
          10027,
          9333,
          7859
        ],
        "name": "TestBorrowHandlers",
        "nameLocation": "728:18:92",
        "scope": 42238,
        "usedErrors": [
          36445,
          36447,
          36449,
          36451,
          36453,
          36455,
          36457,
          36459,
          36461,
          36463,
          36465,
          36489,
          36498,
          36505,
          36514,
          36523,
          36531,
          36537,
          36541,
          36545,
          36549,
          36553,
          36557,
          36561,
          36567,
          36573,
          36577,
          37490,
          45983,
          45991,
          45993
        ]
      }
    ],
    "license": "UNLICENSED"
  },
  "id": 92
}